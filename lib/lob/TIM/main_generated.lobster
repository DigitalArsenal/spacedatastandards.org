// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

enum timeSystem:
    /// Greenwich Mean Sidereal Time
    timeSystem_GMST = 0
    /// Global Positioning System
    timeSystem_GPS = 1
    /// Mission Elapsed Time
    timeSystem_MET = 2
    /// Mission Relative Time
    timeSystem_MRT = 3
    /// Spacecraft Clock (receiver) (requires rules for interpretation in ICD)
    timeSystem_SCLK = 4
    /// International Atomic Time
    timeSystem_TAI = 5
    /// Barycentric Coordinate Time
    timeSystem_TCB = 6
    /// Barycentric Dynamical Time
    timeSystem_TDB = 7
    /// Geocentric Coordinate Time
    timeSystem_TCG = 8
    /// Terrestrial Time
    timeSystem_TT = 9
    /// Universal Time
    timeSystem_UT1 = 10
    /// Coordinated Universal Time
    timeSystem_UTC = 11

class TIM

class TIM : flatbuffers_handle
    def TIME_SYSTEM() -> timeSystem:
        return timeSystem(buf_.flatbuffers_field_int8(pos_, 4, 0))

def GetRootAsTIM(buf:string): return TIM { buf, buf.flatbuffers_indirect(0) }

struct TIMBuilder:
    b_:flatbuffers_builder
    def start():
        b_.StartObject(1)
        return this
    def add_TIME_SYSTEM(TIME_SYSTEM:timeSystem):
        b_.PrependInt8Slot(0, TIME_SYSTEM, 0)
        return this
    def end():
        return b_.EndObject()

