// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

enum meanElementTheory:
    /// Simplified General Perturbation Model 4
    meanElementTheory_SGP4 = 0
    /// Simplified General Perturbation Model 4 eXtended Perturbations (https://amostech.com/TechnicalPapers/2022/Astrodynamics/Payne_2.pdf)
    meanElementTheory_SGP4XP = 1
    /// Draper Semi-analytical Satellite Theory
    meanElementTheory_DSST = 2
    /// Universal Semianalytical Method
    meanElementTheory_USM = 3

class MET

class METCOLLECTION

/// Mean Element Theory
class MET : flatbuffers_handle
    def MEAN_ELEMENT_THEORY() -> meanElementTheory:
        return meanElementTheory(buf_.flatbuffers_field_int8(pos_, 4, 0))

def GetRootAsMET(buf:string): return MET { buf, buf.flatbuffers_indirect(0) }

struct METBuilder:
    b_:flatbuffers_builder
    def start():
        b_.StartObject(1)
        return this
    def add_MEAN_ELEMENT_THEORY(MEAN_ELEMENT_THEORY:meanElementTheory):
        b_.PrependInt8Slot(0, MEAN_ELEMENT_THEORY, 0)
        return this
    def end():
        return b_.EndObject()

class METCOLLECTION : flatbuffers_handle
    def RECORDS(i:int) -> MET:
        return MET { buf_, buf_.flatbuffers_indirect(buf_.flatbuffers_field_vector(pos_, 4) + i * 4) }
    def RECORDS_length() -> int:
        return buf_.flatbuffers_field_vector_len(pos_, 4)

def GetRootAsMETCOLLECTION(buf:string): return METCOLLECTION { buf, buf.flatbuffers_indirect(0) }

struct METCOLLECTIONBuilder:
    b_:flatbuffers_builder
    def start():
        b_.StartObject(1)
        return this
    def add_RECORDS(RECORDS:flatbuffers_offset):
        b_.PrependUOffsetTRelativeSlot(0, RECORDS)
        return this
    def end():
        return b_.EndObject()

def METCOLLECTIONStartRECORDSVector(b_:flatbuffers_builder, n_:int):
    b_.StartVector(4, n_, 4)
def METCOLLECTIONCreateRECORDSVector(b_:flatbuffers_builder, v_:[flatbuffers_offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

