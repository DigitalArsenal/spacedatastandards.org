// automatically generated by the FlatBuffers compiler, do not modify

/**
 * https://sanaregistry.org/r/orbit_relative_reference_frames/
 * Orbit-Relative Reference Frames (SANA registry 1.3.112.4.57.3)
 */
@Suppress("unused")
class OrbitFrame private constructor() {
    companion object {
        /**
         * OID: 1.3.112.4.57.3.1
         * Earth Equatorial Inertial frame aligned with J2000 epoch.
         */
        const val EQW_INERTIAL: Byte = 0
        /**
         * OID: 1.3.112.4.57.3.3
         * Local Vertical Local Horizontal inertial frame.
         */
        const val LVLH_INERTIAL: Byte = 1
        /**
         * OID: 1.3.112.4.57.3.2
         * Local Vertical Local Horizontal rotating frame.
         */
        const val LVLH_ROTATING: Byte = 2
        /**
         * OID: 1.3.112.4.57.3.5
         * Normal along-track cross-track inertial frame.
         */
        const val NSW_INERTIAL: Byte = 3
        /**
         * OID: 1.3.112.4.57.3.4
         * Normal along-track cross-track rotating frame.
         */
        const val NSW_ROTATING: Byte = 4
        /**
         * OID: 1.3.112.4.57.3.7
         * Orbit normal Tangential cross-track inertial frame.
         */
        const val NTW_INERTIAL: Byte = 5
        /**
         * OID: 1.3.112.4.57.3.6
         * Orbit normal Tangential cross-track rotating frame.
         */
        const val NTW_ROTATING: Byte = 6
        /**
         * OID: 1.3.112.4.57.3.8
         * Perifocal frame aligned with orbit's perigee.
         */
        const val PQW_INERTIAL: Byte = 7
        /**
         * OID: 1.3.112.4.57.3.10
         * Radial along-track cross-track inertial frame.
         */
        const val RSW_INERTIAL: Byte = 8
        /**
         * OID: 1.3.112.4.57.3.9
         * Radial along-track cross-track rotating frame.
         */
        const val RSW_ROTATING: Byte = 9
        /**
         * OID: 1.3.112.4.57.3.14
         * South-East-Zenith inertial (topocentric) frame.
         */
        const val SEZ_INERTIAL: Byte = 10
        /**
         * OID: 1.3.112.4.57.3.13
         * South-East-Zenith rotating (topocentric) frame.
         */
        const val SEZ_ROTATING: Byte = 11
        /**
         * OID: 1.3.112.4.57.3.12
         * Transverse normal cross-track inertial frame.
         */
        const val TNW_INERTIAL: Byte = 12
        /**
         * OID: 1.3.112.4.57.3.11
         * Transverse normal cross-track rotating frame.
         */
        const val TNW_ROTATING: Byte = 13
        /**
         * OID: 1.3.112.4.57.3.16
         * Velocity-normal co-normal inertial frame.
         */
        const val VNC_INERTIAL: Byte = 14
        /**
         * OID: 1.3.112.4.57.3.15
         * Velocity-normal co-normal rotating frame.
         */
        const val VNC_ROTATING: Byte = 15
    }
}
