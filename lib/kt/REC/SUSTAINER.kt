// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * Sustainer Details
 */
@Suppress("unused")
@kotlin.ExperimentalUnsignedTypes
class SUSTAINER : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : SUSTAINER {
        __init(_i, _bb)
        return this
    }
    /**
     * Name of the Sustainer
     */
    val SUSTAINER_NAME : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val SUSTAINER_NAMEAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun SUSTAINER_NAMEInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Thrust Produced by the Sustainer (in Newtons)
     */
    val THRUST : Double
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Duration of the Burn (in Seconds)
     */
    val BURN_DURATION : Double
        get() {
            val o = __offset(8)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_23_3_3()
        fun getRootAsSUSTAINER(_bb: ByteBuffer): SUSTAINER = getRootAsSUSTAINER(_bb, SUSTAINER())
        fun getRootAsSUSTAINER(_bb: ByteBuffer, obj: SUSTAINER): SUSTAINER {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createSUSTAINER(builder: FlatBufferBuilder, SUSTAINER_NAMEOffset: Int, THRUST: Double, BURN_DURATION: Double) : Int {
            builder.startTable(3)
            addBURN_DURATION(builder, BURN_DURATION)
            addTHRUST(builder, THRUST)
            addSUSTAINER_NAME(builder, SUSTAINER_NAMEOffset)
            return endSUSTAINER(builder)
        }
        fun startSUSTAINER(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addSUSTAINER_NAME(builder: FlatBufferBuilder, SUSTAINER_NAME: Int) = builder.addOffset(0, SUSTAINER_NAME, 0)
        fun addTHRUST(builder: FlatBufferBuilder, THRUST: Double) = builder.addDouble(1, THRUST, 0.0)
        fun addBURN_DURATION(builder: FlatBufferBuilder, BURN_DURATION: Double) = builder.addDouble(2, BURN_DURATION, 0.0)
        fun endSUSTAINER(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
