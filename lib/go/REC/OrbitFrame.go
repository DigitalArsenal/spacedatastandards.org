// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package REC

import "strconv"

/// https://sanaregistry.org/r/orbit_relative_reference_frames/
/// Orbit-Relative Reference Frames (SANA registry 1.3.112.4.57.3)
type OrbitFrame int8

const (
	/// OID: 1.3.112.4.57.3.1
	/// Earth Equatorial Inertial frame aligned with J2000 epoch.
	OrbitFrameEQW_INERTIAL  OrbitFrame = 0
	/// OID: 1.3.112.4.57.3.3
	/// Local Vertical Local Horizontal inertial frame.
	OrbitFrameLVLH_INERTIAL OrbitFrame = 1
	/// OID: 1.3.112.4.57.3.2
	/// Local Vertical Local Horizontal rotating frame.
	OrbitFrameLVLH_ROTATING OrbitFrame = 2
	/// OID: 1.3.112.4.57.3.5
	/// Normal along-track cross-track inertial frame.
	OrbitFrameNSW_INERTIAL  OrbitFrame = 3
	/// OID: 1.3.112.4.57.3.4
	/// Normal along-track cross-track rotating frame.
	OrbitFrameNSW_ROTATING  OrbitFrame = 4
	/// OID: 1.3.112.4.57.3.7
	/// Orbit normal Tangential cross-track inertial frame.
	OrbitFrameNTW_INERTIAL  OrbitFrame = 5
	/// OID: 1.3.112.4.57.3.6
	/// Orbit normal Tangential cross-track rotating frame.
	OrbitFrameNTW_ROTATING  OrbitFrame = 6
	/// OID: 1.3.112.4.57.3.8
	/// Perifocal frame aligned with orbit's perigee.
	OrbitFramePQW_INERTIAL  OrbitFrame = 7
	/// OID: 1.3.112.4.57.3.10
	/// Radial along-track cross-track inertial frame.
	OrbitFrameRSW_INERTIAL  OrbitFrame = 8
	/// OID: 1.3.112.4.57.3.9
	/// Radial along-track cross-track rotating frame.
	OrbitFrameRSW_ROTATING  OrbitFrame = 9
	/// OID: 1.3.112.4.57.3.14
	/// South-East-Zenith inertial (topocentric) frame.
	OrbitFrameSEZ_INERTIAL  OrbitFrame = 10
	/// OID: 1.3.112.4.57.3.13
	/// South-East-Zenith rotating (topocentric) frame.
	OrbitFrameSEZ_ROTATING  OrbitFrame = 11
	/// OID: 1.3.112.4.57.3.12
	/// Transverse normal cross-track inertial frame.
	OrbitFrameTNW_INERTIAL  OrbitFrame = 12
	/// OID: 1.3.112.4.57.3.11
	/// Transverse normal cross-track rotating frame.
	OrbitFrameTNW_ROTATING  OrbitFrame = 13
	/// OID: 1.3.112.4.57.3.16
	/// Velocity-normal co-normal inertial frame.
	OrbitFrameVNC_INERTIAL  OrbitFrame = 14
	/// OID: 1.3.112.4.57.3.15
	/// Velocity-normal co-normal rotating frame.
	OrbitFrameVNC_ROTATING  OrbitFrame = 15
)

var EnumNamesOrbitFrame = map[OrbitFrame]string{
	OrbitFrameEQW_INERTIAL:  "EQW_INERTIAL",
	OrbitFrameLVLH_INERTIAL: "LVLH_INERTIAL",
	OrbitFrameLVLH_ROTATING: "LVLH_ROTATING",
	OrbitFrameNSW_INERTIAL:  "NSW_INERTIAL",
	OrbitFrameNSW_ROTATING:  "NSW_ROTATING",
	OrbitFrameNTW_INERTIAL:  "NTW_INERTIAL",
	OrbitFrameNTW_ROTATING:  "NTW_ROTATING",
	OrbitFramePQW_INERTIAL:  "PQW_INERTIAL",
	OrbitFrameRSW_INERTIAL:  "RSW_INERTIAL",
	OrbitFrameRSW_ROTATING:  "RSW_ROTATING",
	OrbitFrameSEZ_INERTIAL:  "SEZ_INERTIAL",
	OrbitFrameSEZ_ROTATING:  "SEZ_ROTATING",
	OrbitFrameTNW_INERTIAL:  "TNW_INERTIAL",
	OrbitFrameTNW_ROTATING:  "TNW_ROTATING",
	OrbitFrameVNC_INERTIAL:  "VNC_INERTIAL",
	OrbitFrameVNC_ROTATING:  "VNC_ROTATING",
}

var EnumValuesOrbitFrame = map[string]OrbitFrame{
	"EQW_INERTIAL":  OrbitFrameEQW_INERTIAL,
	"LVLH_INERTIAL": OrbitFrameLVLH_INERTIAL,
	"LVLH_ROTATING": OrbitFrameLVLH_ROTATING,
	"NSW_INERTIAL":  OrbitFrameNSW_INERTIAL,
	"NSW_ROTATING":  OrbitFrameNSW_ROTATING,
	"NTW_INERTIAL":  OrbitFrameNTW_INERTIAL,
	"NTW_ROTATING":  OrbitFrameNTW_ROTATING,
	"PQW_INERTIAL":  OrbitFramePQW_INERTIAL,
	"RSW_INERTIAL":  OrbitFrameRSW_INERTIAL,
	"RSW_ROTATING":  OrbitFrameRSW_ROTATING,
	"SEZ_INERTIAL":  OrbitFrameSEZ_INERTIAL,
	"SEZ_ROTATING":  OrbitFrameSEZ_ROTATING,
	"TNW_INERTIAL":  OrbitFrameTNW_INERTIAL,
	"TNW_ROTATING":  OrbitFrameTNW_ROTATING,
	"VNC_INERTIAL":  OrbitFrameVNC_INERTIAL,
	"VNC_ROTATING":  OrbitFrameVNC_ROTATING,
}

func (v OrbitFrame) String() string {
	if s, ok := EnumNamesOrbitFrame[v]; ok {
		return s
	}
	return "OrbitFrame(" + strconv.FormatInt(int64(v), 10) + ")"
}
