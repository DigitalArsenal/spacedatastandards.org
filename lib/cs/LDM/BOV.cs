// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Burn Out Vector Message
public struct BOV : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static BOV GetRootAsBOV(ByteBuffer _bb) { return GetRootAsBOV(_bb, new BOV()); }
  public static BOV GetRootAsBOV(ByteBuffer _bb, BOV obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool BOVBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "$BOV"); }
  public static bool VerifyBOV(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("$BOV", false, BOVVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public BOV __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double E_COORDINATE { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double F_COORDINATE { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double G_COORDINATE { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double E_DOT { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double F_DOT { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double G_DOT { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public string EPOCH { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEPOCHBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetEPOCHBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetEPOCHArray() { return __p.__vector_as_array<byte>(16); }
  public double TIME_FROM_LAUNCH { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<BOV> CreateBOV(FlatBufferBuilder builder,
      double E_COORDINATE = 0.0,
      double F_COORDINATE = 0.0,
      double G_COORDINATE = 0.0,
      double E_DOT = 0.0,
      double F_DOT = 0.0,
      double G_DOT = 0.0,
      StringOffset EPOCHOffset = default(StringOffset),
      double TIME_FROM_LAUNCH = 0.0) {
    builder.StartTable(8);
    BOV.AddTIME_FROM_LAUNCH(builder, TIME_FROM_LAUNCH);
    BOV.AddG_DOT(builder, G_DOT);
    BOV.AddF_DOT(builder, F_DOT);
    BOV.AddE_DOT(builder, E_DOT);
    BOV.AddG_COORDINATE(builder, G_COORDINATE);
    BOV.AddF_COORDINATE(builder, F_COORDINATE);
    BOV.AddE_COORDINATE(builder, E_COORDINATE);
    BOV.AddEPOCH(builder, EPOCHOffset);
    return BOV.EndBOV(builder);
  }

  public static void StartBOV(FlatBufferBuilder builder) { builder.StartTable(8); }
  public static void AddE_COORDINATE(FlatBufferBuilder builder, double E_COORDINATE) { builder.AddDouble(0, E_COORDINATE, 0.0); }
  public static void AddF_COORDINATE(FlatBufferBuilder builder, double F_COORDINATE) { builder.AddDouble(1, F_COORDINATE, 0.0); }
  public static void AddG_COORDINATE(FlatBufferBuilder builder, double G_COORDINATE) { builder.AddDouble(2, G_COORDINATE, 0.0); }
  public static void AddE_DOT(FlatBufferBuilder builder, double E_DOT) { builder.AddDouble(3, E_DOT, 0.0); }
  public static void AddF_DOT(FlatBufferBuilder builder, double F_DOT) { builder.AddDouble(4, F_DOT, 0.0); }
  public static void AddG_DOT(FlatBufferBuilder builder, double G_DOT) { builder.AddDouble(5, G_DOT, 0.0); }
  public static void AddEPOCH(FlatBufferBuilder builder, StringOffset EPOCHOffset) { builder.AddOffset(6, EPOCHOffset.Value, 0); }
  public static void AddTIME_FROM_LAUNCH(FlatBufferBuilder builder, double TIME_FROM_LAUNCH) { builder.AddDouble(7, TIME_FROM_LAUNCH, 0.0); }
  public static Offset<BOV> EndBOV(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<BOV>(o);
  }
  public static void FinishBOVBuffer(FlatBufferBuilder builder, Offset<BOV> offset) { builder.Finish(offset.Value, "$BOV"); }
  public static void FinishSizePrefixedBOVBuffer(FlatBufferBuilder builder, Offset<BOV> offset) { builder.FinishSizePrefixed(offset.Value, "$BOV"); }
  public BOVT UnPack() {
    var _o = new BOVT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(BOVT _o) {
    _o.E_COORDINATE = this.E_COORDINATE;
    _o.F_COORDINATE = this.F_COORDINATE;
    _o.G_COORDINATE = this.G_COORDINATE;
    _o.E_DOT = this.E_DOT;
    _o.F_DOT = this.F_DOT;
    _o.G_DOT = this.G_DOT;
    _o.EPOCH = this.EPOCH;
    _o.TIME_FROM_LAUNCH = this.TIME_FROM_LAUNCH;
  }
  public static Offset<BOV> Pack(FlatBufferBuilder builder, BOVT _o) {
    if (_o == null) return default(Offset<BOV>);
    var _EPOCH = _o.EPOCH == null ? default(StringOffset) : builder.CreateString(_o.EPOCH);
    return CreateBOV(
      builder,
      _o.E_COORDINATE,
      _o.F_COORDINATE,
      _o.G_COORDINATE,
      _o.E_DOT,
      _o.F_DOT,
      _o.G_DOT,
      _EPOCH,
      _o.TIME_FROM_LAUNCH);
  }
}

public class BOVT
{
  public double E_COORDINATE { get; set; }
  public double F_COORDINATE { get; set; }
  public double G_COORDINATE { get; set; }
  public double E_DOT { get; set; }
  public double F_DOT { get; set; }
  public double G_DOT { get; set; }
  public string EPOCH { get; set; }
  public double TIME_FROM_LAUNCH { get; set; }

  public BOVT() {
    this.E_COORDINATE = 0.0;
    this.F_COORDINATE = 0.0;
    this.G_COORDINATE = 0.0;
    this.E_DOT = 0.0;
    this.F_DOT = 0.0;
    this.G_DOT = 0.0;
    this.EPOCH = null;
    this.TIME_FROM_LAUNCH = 0.0;
  }
  public static BOVT DeserializeFromBinary(byte[] fbBuffer) {
    return BOV.GetRootAsBOV(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    BOV.FinishBOVBuffer(fbb, BOV.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class BOVVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*E_COORDINATE*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*F_COORDINATE*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*G_COORDINATE*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*E_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*F_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*G_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 16 /*EPOCH*/, false)
      && verifier.VerifyField(tablePos, 18 /*TIME_FROM_LAUNCH*/, 8 /*double*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
