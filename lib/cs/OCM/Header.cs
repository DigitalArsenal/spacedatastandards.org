// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Header : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Header GetRootAsHeader(ByteBuffer _bb) { return GetRootAsHeader(_bb, new Header()); }
  public static Header GetRootAsHeader(ByteBuffer _bb, Header obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Header __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Format version in the form of 'x.y', where 'y' is incremented for minor changes, and 'x' for major changes.
  public string CCSDS_OCM_VERS { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCCSDS_OCM_VERSBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetCCSDS_OCM_VERSBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetCCSDS_OCM_VERSArray() { return __p.__vector_as_array<byte>(4); }
  /// Comments (a contiguous set of one or more comment lines may be provided immediately after the version number).
  public string COMMENT(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int COMMENTLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// User-defined free-text message classification/caveats of this OCM.
  public string CLASSIFICATION { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCLASSIFICATIONBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetCLASSIFICATIONBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetCLASSIFICATIONArray() { return __p.__vector_as_array<byte>(8); }
  /// File creation date/time in UTC.
  public string CREATION_DATE { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCREATION_DATEBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCREATION_DATEBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCREATION_DATEArray() { return __p.__vector_as_array<byte>(10); }
  /// Creating agency or operator.
  public string ORIGINATOR { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetORIGINATORBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetORIGINATORBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetORIGINATORArray() { return __p.__vector_as_array<byte>(12); }
  /// Free-text field containing an ID that uniquely identifies a message from this originator.
  public string MESSAGE_ID { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMESSAGE_IDBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetMESSAGE_IDBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetMESSAGE_IDArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<Header> CreateHeader(FlatBufferBuilder builder,
      StringOffset CCSDS_OCM_VERSOffset = default(StringOffset),
      VectorOffset COMMENTOffset = default(VectorOffset),
      StringOffset CLASSIFICATIONOffset = default(StringOffset),
      StringOffset CREATION_DATEOffset = default(StringOffset),
      StringOffset ORIGINATOROffset = default(StringOffset),
      StringOffset MESSAGE_IDOffset = default(StringOffset)) {
    builder.StartTable(6);
    Header.AddMESSAGE_ID(builder, MESSAGE_IDOffset);
    Header.AddORIGINATOR(builder, ORIGINATOROffset);
    Header.AddCREATION_DATE(builder, CREATION_DATEOffset);
    Header.AddCLASSIFICATION(builder, CLASSIFICATIONOffset);
    Header.AddCOMMENT(builder, COMMENTOffset);
    Header.AddCCSDS_OCM_VERS(builder, CCSDS_OCM_VERSOffset);
    return Header.EndHeader(builder);
  }

  public static void StartHeader(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddCCSDS_OCM_VERS(FlatBufferBuilder builder, StringOffset CCSDS_OCM_VERSOffset) { builder.AddOffset(0, CCSDS_OCM_VERSOffset.Value, 0); }
  public static void AddCOMMENT(FlatBufferBuilder builder, VectorOffset COMMENTOffset) { builder.AddOffset(1, COMMENTOffset.Value, 0); }
  public static VectorOffset CreateCOMMENTVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCOMMENTVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCOMMENTVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCOMMENTVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCOMMENTVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCLASSIFICATION(FlatBufferBuilder builder, StringOffset CLASSIFICATIONOffset) { builder.AddOffset(2, CLASSIFICATIONOffset.Value, 0); }
  public static void AddCREATION_DATE(FlatBufferBuilder builder, StringOffset CREATION_DATEOffset) { builder.AddOffset(3, CREATION_DATEOffset.Value, 0); }
  public static void AddORIGINATOR(FlatBufferBuilder builder, StringOffset ORIGINATOROffset) { builder.AddOffset(4, ORIGINATOROffset.Value, 0); }
  public static void AddMESSAGE_ID(FlatBufferBuilder builder, StringOffset MESSAGE_IDOffset) { builder.AddOffset(5, MESSAGE_IDOffset.Value, 0); }
  public static Offset<Header> EndHeader(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Header>(o);
  }
  public HeaderT UnPack() {
    var _o = new HeaderT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(HeaderT _o) {
    _o.CCSDS_OCM_VERS = this.CCSDS_OCM_VERS;
    _o.COMMENT = new List<string>();
    for (var _j = 0; _j < this.COMMENTLength; ++_j) {_o.COMMENT.Add(this.COMMENT(_j));}
    _o.CLASSIFICATION = this.CLASSIFICATION;
    _o.CREATION_DATE = this.CREATION_DATE;
    _o.ORIGINATOR = this.ORIGINATOR;
    _o.MESSAGE_ID = this.MESSAGE_ID;
  }
  public static Offset<Header> Pack(FlatBufferBuilder builder, HeaderT _o) {
    if (_o == null) return default(Offset<Header>);
    var _CCSDS_OCM_VERS = _o.CCSDS_OCM_VERS == null ? default(StringOffset) : builder.CreateString(_o.CCSDS_OCM_VERS);
    var _COMMENT = default(VectorOffset);
    if (_o.COMMENT != null) {
      var __COMMENT = new StringOffset[_o.COMMENT.Count];
      for (var _j = 0; _j < __COMMENT.Length; ++_j) { __COMMENT[_j] = builder.CreateString(_o.COMMENT[_j]); }
      _COMMENT = CreateCOMMENTVector(builder, __COMMENT);
    }
    var _CLASSIFICATION = _o.CLASSIFICATION == null ? default(StringOffset) : builder.CreateString(_o.CLASSIFICATION);
    var _CREATION_DATE = _o.CREATION_DATE == null ? default(StringOffset) : builder.CreateString(_o.CREATION_DATE);
    var _ORIGINATOR = _o.ORIGINATOR == null ? default(StringOffset) : builder.CreateString(_o.ORIGINATOR);
    var _MESSAGE_ID = _o.MESSAGE_ID == null ? default(StringOffset) : builder.CreateString(_o.MESSAGE_ID);
    return CreateHeader(
      builder,
      _CCSDS_OCM_VERS,
      _COMMENT,
      _CLASSIFICATION,
      _CREATION_DATE,
      _ORIGINATOR,
      _MESSAGE_ID);
  }
}

public class HeaderT
{
  public string CCSDS_OCM_VERS { get; set; }
  public List<string> COMMENT { get; set; }
  public string CLASSIFICATION { get; set; }
  public string CREATION_DATE { get; set; }
  public string ORIGINATOR { get; set; }
  public string MESSAGE_ID { get; set; }

  public HeaderT() {
    this.CCSDS_OCM_VERS = null;
    this.COMMENT = null;
    this.CLASSIFICATION = null;
    this.CREATION_DATE = null;
    this.ORIGINATOR = null;
    this.MESSAGE_ID = null;
  }
}


static public class HeaderVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*CCSDS_OCM_VERS*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 6 /*COMMENT*/, false)
      && verifier.VerifyString(tablePos, 8 /*CLASSIFICATION*/, false)
      && verifier.VerifyString(tablePos, 10 /*CREATION_DATE*/, false)
      && verifier.VerifyString(tablePos, 12 /*ORIGINATOR*/, false)
      && verifier.VerifyString(tablePos, 14 /*MESSAGE_ID*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
