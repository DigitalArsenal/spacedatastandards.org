// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Equinoctial Elements
public struct equinoctialElements : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static equinoctialElements GetRootAsequinoctialElements(ByteBuffer _bb) { return GetRootAsequinoctialElements(_bb, new equinoctialElements()); }
  public static equinoctialElements GetRootAsequinoctialElements(ByteBuffer _bb, equinoctialElements obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public equinoctialElements __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double AF { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double AG { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double L { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double N { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double CHI { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double PSI { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<equinoctialElements> CreateequinoctialElements(FlatBufferBuilder builder,
      double AF = 0.0,
      double AG = 0.0,
      double L = 0.0,
      double N = 0.0,
      double CHI = 0.0,
      double PSI = 0.0) {
    builder.StartTable(6);
    equinoctialElements.AddPSI(builder, PSI);
    equinoctialElements.AddCHI(builder, CHI);
    equinoctialElements.AddN(builder, N);
    equinoctialElements.AddL(builder, L);
    equinoctialElements.AddAG(builder, AG);
    equinoctialElements.AddAF(builder, AF);
    return equinoctialElements.EndequinoctialElements(builder);
  }

  public static void StartequinoctialElements(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddAF(FlatBufferBuilder builder, double AF) { builder.AddDouble(0, AF, 0.0); }
  public static void AddAG(FlatBufferBuilder builder, double AG) { builder.AddDouble(1, AG, 0.0); }
  public static void AddL(FlatBufferBuilder builder, double L) { builder.AddDouble(2, L, 0.0); }
  public static void AddN(FlatBufferBuilder builder, double N) { builder.AddDouble(3, N, 0.0); }
  public static void AddCHI(FlatBufferBuilder builder, double CHI) { builder.AddDouble(4, CHI, 0.0); }
  public static void AddPSI(FlatBufferBuilder builder, double PSI) { builder.AddDouble(5, PSI, 0.0); }
  public static Offset<equinoctialElements> EndequinoctialElements(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<equinoctialElements>(o);
  }
  public equinoctialElementsT UnPack() {
    var _o = new equinoctialElementsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(equinoctialElementsT _o) {
    _o.AF = this.AF;
    _o.AG = this.AG;
    _o.L = this.L;
    _o.N = this.N;
    _o.CHI = this.CHI;
    _o.PSI = this.PSI;
  }
  public static Offset<equinoctialElements> Pack(FlatBufferBuilder builder, equinoctialElementsT _o) {
    if (_o == null) return default(Offset<equinoctialElements>);
    return CreateequinoctialElements(
      builder,
      _o.AF,
      _o.AG,
      _o.L,
      _o.N,
      _o.CHI,
      _o.PSI);
  }
}

public class equinoctialElementsT
{
  public double AF { get; set; }
  public double AG { get; set; }
  public double L { get; set; }
  public double N { get; set; }
  public double CHI { get; set; }
  public double PSI { get; set; }

  public equinoctialElementsT() {
    this.AF = 0.0;
    this.AG = 0.0;
    this.L = 0.0;
    this.N = 0.0;
    this.CHI = 0.0;
    this.PSI = 0.0;
  }
}


static public class equinoctialElementsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*AF*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*AG*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*L*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*N*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*CHI*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*PSI*/, 8 /*double*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
