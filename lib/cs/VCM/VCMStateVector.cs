// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// VCM State Vector (position and velocity)
public struct VCMStateVector : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static VCMStateVector GetRootAsVCMStateVector(ByteBuffer _bb) { return GetRootAsVCMStateVector(_bb, new VCMStateVector()); }
  public static VCMStateVector GetRootAsVCMStateVector(ByteBuffer _bb, VCMStateVector obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public VCMStateVector __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string EPOCH { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEPOCHBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetEPOCHBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetEPOCHArray() { return __p.__vector_as_array<byte>(4); }
  public double X { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Y { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Z { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double X_DOT { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Y_DOT { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double Z_DOT { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<VCMStateVector> CreateVCMStateVector(FlatBufferBuilder builder,
      StringOffset EPOCHOffset = default(StringOffset),
      double X = 0.0,
      double Y = 0.0,
      double Z = 0.0,
      double X_DOT = 0.0,
      double Y_DOT = 0.0,
      double Z_DOT = 0.0) {
    builder.StartTable(7);
    VCMStateVector.AddZ_DOT(builder, Z_DOT);
    VCMStateVector.AddY_DOT(builder, Y_DOT);
    VCMStateVector.AddX_DOT(builder, X_DOT);
    VCMStateVector.AddZ(builder, Z);
    VCMStateVector.AddY(builder, Y);
    VCMStateVector.AddX(builder, X);
    VCMStateVector.AddEPOCH(builder, EPOCHOffset);
    return VCMStateVector.EndVCMStateVector(builder);
  }

  public static void StartVCMStateVector(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddEPOCH(FlatBufferBuilder builder, StringOffset EPOCHOffset) { builder.AddOffset(0, EPOCHOffset.Value, 0); }
  public static void AddX(FlatBufferBuilder builder, double X) { builder.AddDouble(1, X, 0.0); }
  public static void AddY(FlatBufferBuilder builder, double Y) { builder.AddDouble(2, Y, 0.0); }
  public static void AddZ(FlatBufferBuilder builder, double Z) { builder.AddDouble(3, Z, 0.0); }
  public static void AddX_DOT(FlatBufferBuilder builder, double X_DOT) { builder.AddDouble(4, X_DOT, 0.0); }
  public static void AddY_DOT(FlatBufferBuilder builder, double Y_DOT) { builder.AddDouble(5, Y_DOT, 0.0); }
  public static void AddZ_DOT(FlatBufferBuilder builder, double Z_DOT) { builder.AddDouble(6, Z_DOT, 0.0); }
  public static Offset<VCMStateVector> EndVCMStateVector(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<VCMStateVector>(o);
  }
  public VCMStateVectorT UnPack() {
    var _o = new VCMStateVectorT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(VCMStateVectorT _o) {
    _o.EPOCH = this.EPOCH;
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
    _o.X_DOT = this.X_DOT;
    _o.Y_DOT = this.Y_DOT;
    _o.Z_DOT = this.Z_DOT;
  }
  public static Offset<VCMStateVector> Pack(FlatBufferBuilder builder, VCMStateVectorT _o) {
    if (_o == null) return default(Offset<VCMStateVector>);
    var _EPOCH = _o.EPOCH == null ? default(StringOffset) : builder.CreateString(_o.EPOCH);
    return CreateVCMStateVector(
      builder,
      _EPOCH,
      _o.X,
      _o.Y,
      _o.Z,
      _o.X_DOT,
      _o.Y_DOT,
      _o.Z_DOT);
  }
}

public class VCMStateVectorT
{
  public string EPOCH { get; set; }
  public double X { get; set; }
  public double Y { get; set; }
  public double Z { get; set; }
  public double X_DOT { get; set; }
  public double Y_DOT { get; set; }
  public double Z_DOT { get; set; }

  public VCMStateVectorT() {
    this.EPOCH = null;
    this.X = 0.0;
    this.Y = 0.0;
    this.Z = 0.0;
    this.X_DOT = 0.0;
    this.Y_DOT = 0.0;
    this.Z_DOT = 0.0;
  }
}


static public class VCMStateVectorVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*EPOCH*/, false)
      && verifier.VerifyField(tablePos, 6 /*X*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*Y*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*Z*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*X_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*Y_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 16 /*Z_DOT*/, 8 /*double*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
