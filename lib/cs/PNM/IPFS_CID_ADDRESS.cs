// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// IPFS CID and Account Identifier
public struct IPFS_CID_ADDRESS : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static IPFS_CID_ADDRESS GetRootAsIPFS_CID_ADDRESS(ByteBuffer _bb) { return GetRootAsIPFS_CID_ADDRESS(_bb, new IPFS_CID_ADDRESS()); }
  public static IPFS_CID_ADDRESS GetRootAsIPFS_CID_ADDRESS(ByteBuffer _bb, IPFS_CID_ADDRESS obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IPFS_CID_ADDRESS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string IPFS_CID { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIPFS_CIDBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIPFS_CIDBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIPFS_CIDArray() { return __p.__vector_as_array<byte>(4); }
  public string KEY_ADDRESS { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetKEY_ADDRESSBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetKEY_ADDRESSBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetKEY_ADDRESSArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<IPFS_CID_ADDRESS> CreateIPFS_CID_ADDRESS(FlatBufferBuilder builder,
      StringOffset IPFS_CIDOffset = default(StringOffset),
      StringOffset KEY_ADDRESSOffset = default(StringOffset)) {
    builder.StartTable(2);
    IPFS_CID_ADDRESS.AddKEY_ADDRESS(builder, KEY_ADDRESSOffset);
    IPFS_CID_ADDRESS.AddIPFS_CID(builder, IPFS_CIDOffset);
    return IPFS_CID_ADDRESS.EndIPFS_CID_ADDRESS(builder);
  }

  public static void StartIPFS_CID_ADDRESS(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddIPFS_CID(FlatBufferBuilder builder, StringOffset IPFS_CIDOffset) { builder.AddOffset(0, IPFS_CIDOffset.Value, 0); }
  public static void AddKEY_ADDRESS(FlatBufferBuilder builder, StringOffset KEY_ADDRESSOffset) { builder.AddOffset(1, KEY_ADDRESSOffset.Value, 0); }
  public static Offset<IPFS_CID_ADDRESS> EndIPFS_CID_ADDRESS(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<IPFS_CID_ADDRESS>(o);
  }
  public IPFS_CID_ADDRESST UnPack() {
    var _o = new IPFS_CID_ADDRESST();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IPFS_CID_ADDRESST _o) {
    _o.IPFS_CID = this.IPFS_CID;
    _o.KEY_ADDRESS = this.KEY_ADDRESS;
  }
  public static Offset<IPFS_CID_ADDRESS> Pack(FlatBufferBuilder builder, IPFS_CID_ADDRESST _o) {
    if (_o == null) return default(Offset<IPFS_CID_ADDRESS>);
    var _IPFS_CID = _o.IPFS_CID == null ? default(StringOffset) : builder.CreateString(_o.IPFS_CID);
    var _KEY_ADDRESS = _o.KEY_ADDRESS == null ? default(StringOffset) : builder.CreateString(_o.KEY_ADDRESS);
    return CreateIPFS_CID_ADDRESS(
      builder,
      _IPFS_CID,
      _KEY_ADDRESS);
  }
}

public class IPFS_CID_ADDRESST
{
  public string IPFS_CID { get; set; }
  public string KEY_ADDRESS { get; set; }

  public IPFS_CID_ADDRESST() {
    this.IPFS_CID = null;
    this.KEY_ADDRESS = null;
  }
}

