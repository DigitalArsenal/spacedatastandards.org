// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Represents a component of a Distinguished Name (DN) in LDAP
public struct DNComponent : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static DNComponent GetRootAsDNComponent(ByteBuffer _bb) { return GetRootAsDNComponent(_bb, new DNComponent()); }
  public static DNComponent GetRootAsDNComponent(ByteBuffer _bb, DNComponent obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DNComponent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// The type of the DN component
  public LDIFAttributeType TYPE { get { int o = __p.__offset(4); return o != 0 ? (LDIFAttributeType)__p.bb.GetSbyte(o + __p.bb_pos) : LDIFAttributeType.CN; } }
  /// The value of the DN component
  public string VALUE { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetVALUEBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetVALUEBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetVALUEArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<DNComponent> CreateDNComponent(FlatBufferBuilder builder,
      LDIFAttributeType TYPE = LDIFAttributeType.CN,
      StringOffset VALUEOffset = default(StringOffset)) {
    builder.StartTable(2);
    DNComponent.AddVALUE(builder, VALUEOffset);
    DNComponent.AddTYPE(builder, TYPE);
    return DNComponent.EndDNComponent(builder);
  }

  public static void StartDNComponent(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddTYPE(FlatBufferBuilder builder, LDIFAttributeType TYPE) { builder.AddSbyte(0, (sbyte)TYPE, 0); }
  public static void AddVALUE(FlatBufferBuilder builder, StringOffset VALUEOffset) { builder.AddOffset(1, VALUEOffset.Value, 0); }
  public static Offset<DNComponent> EndDNComponent(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<DNComponent>(o);
  }
  public DNComponentT UnPack() {
    var _o = new DNComponentT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DNComponentT _o) {
    _o.TYPE = this.TYPE;
    _o.VALUE = this.VALUE;
  }
  public static Offset<DNComponent> Pack(FlatBufferBuilder builder, DNComponentT _o) {
    if (_o == null) return default(Offset<DNComponent>);
    var _VALUE = _o.VALUE == null ? default(StringOffset) : builder.CreateString(_o.VALUE);
    return CreateDNComponent(
      builder,
      _o.TYPE,
      _VALUE);
  }
}

public class DNComponentT
{
  public LDIFAttributeType TYPE { get; set; }
  public string VALUE { get; set; }

  public DNComponentT() {
    this.TYPE = LDIFAttributeType.CN;
    this.VALUE = null;
  }
}

