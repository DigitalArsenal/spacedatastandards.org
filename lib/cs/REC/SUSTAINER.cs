// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Sustainer Details
public struct SUSTAINER : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static SUSTAINER GetRootAsSUSTAINER(ByteBuffer _bb) { return GetRootAsSUSTAINER(_bb, new SUSTAINER()); }
  public static SUSTAINER GetRootAsSUSTAINER(ByteBuffer _bb, SUSTAINER obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SUSTAINER __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Name of the Sustainer
  public string SUSTAINER_NAME { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSUSTAINER_NAMEBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSUSTAINER_NAMEBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSUSTAINER_NAMEArray() { return __p.__vector_as_array<byte>(4); }
  /// Thrust Produced by the Sustainer (in Newtons)
  public double THRUST { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Duration of the Burn (in Seconds)
  public double BURN_DURATION { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<SUSTAINER> CreateSUSTAINER(FlatBufferBuilder builder,
      StringOffset SUSTAINER_NAMEOffset = default(StringOffset),
      double THRUST = 0.0,
      double BURN_DURATION = 0.0) {
    builder.StartTable(3);
    SUSTAINER.AddBURN_DURATION(builder, BURN_DURATION);
    SUSTAINER.AddTHRUST(builder, THRUST);
    SUSTAINER.AddSUSTAINER_NAME(builder, SUSTAINER_NAMEOffset);
    return SUSTAINER.EndSUSTAINER(builder);
  }

  public static void StartSUSTAINER(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSUSTAINER_NAME(FlatBufferBuilder builder, StringOffset SUSTAINER_NAMEOffset) { builder.AddOffset(0, SUSTAINER_NAMEOffset.Value, 0); }
  public static void AddTHRUST(FlatBufferBuilder builder, double THRUST) { builder.AddDouble(1, THRUST, 0.0); }
  public static void AddBURN_DURATION(FlatBufferBuilder builder, double BURN_DURATION) { builder.AddDouble(2, BURN_DURATION, 0.0); }
  public static Offset<SUSTAINER> EndSUSTAINER(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SUSTAINER>(o);
  }
  public SUSTAINERT UnPack() {
    var _o = new SUSTAINERT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SUSTAINERT _o) {
    _o.SUSTAINER_NAME = this.SUSTAINER_NAME;
    _o.THRUST = this.THRUST;
    _o.BURN_DURATION = this.BURN_DURATION;
  }
  public static Offset<SUSTAINER> Pack(FlatBufferBuilder builder, SUSTAINERT _o) {
    if (_o == null) return default(Offset<SUSTAINER>);
    var _SUSTAINER_NAME = _o.SUSTAINER_NAME == null ? default(StringOffset) : builder.CreateString(_o.SUSTAINER_NAME);
    return CreateSUSTAINER(
      builder,
      _SUSTAINER_NAME,
      _o.THRUST,
      _o.BURN_DURATION);
  }
}

public class SUSTAINERT
{
  public string SUSTAINER_NAME { get; set; }
  public double THRUST { get; set; }
  public double BURN_DURATION { get; set; }

  public SUSTAINERT() {
    this.SUSTAINER_NAME = null;
    this.THRUST = 0.0;
    this.BURN_DURATION = 0.0;
  }
}

