// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct CelestialFrameWrapper : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CelestialFrameWrapper GetRootAsCelestialFrameWrapper(ByteBuffer _bb) { return GetRootAsCelestialFrameWrapper(_bb, new CelestialFrameWrapper()); }
  public static CelestialFrameWrapper GetRootAsCelestialFrameWrapper(ByteBuffer _bb, CelestialFrameWrapper obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CelestialFrameWrapper __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public CelestialFrame Frame { get { int o = __p.__offset(4); return o != 0 ? (CelestialFrame)__p.bb.GetSbyte(o + __p.bb_pos) : CelestialFrame.GCRF; } }

  public static Offset<CelestialFrameWrapper> CreateCelestialFrameWrapper(FlatBufferBuilder builder,
      CelestialFrame frame = CelestialFrame.GCRF) {
    builder.StartTable(1);
    CelestialFrameWrapper.AddFrame(builder, frame);
    return CelestialFrameWrapper.EndCelestialFrameWrapper(builder);
  }

  public static void StartCelestialFrameWrapper(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddFrame(FlatBufferBuilder builder, CelestialFrame frame) { builder.AddSbyte(0, (sbyte)frame, 0); }
  public static Offset<CelestialFrameWrapper> EndCelestialFrameWrapper(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CelestialFrameWrapper>(o);
  }
  public CelestialFrameWrapperT UnPack() {
    var _o = new CelestialFrameWrapperT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CelestialFrameWrapperT _o) {
    _o.Frame = this.Frame;
  }
  public static Offset<CelestialFrameWrapper> Pack(FlatBufferBuilder builder, CelestialFrameWrapperT _o) {
    if (_o == null) return default(Offset<CelestialFrameWrapper>);
    return CreateCelestialFrameWrapper(
      builder,
      _o.Frame);
  }
}

public class CelestialFrameWrapperT
{
  public CelestialFrame Frame { get; set; }

  public CelestialFrameWrapperT() {
    this.Frame = CelestialFrame.GCRF;
  }
}


static public class CelestialFrameWrapperVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Frame*/, 1 /*CelestialFrame*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
