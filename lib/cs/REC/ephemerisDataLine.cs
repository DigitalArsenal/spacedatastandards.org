// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// A single ephemeris data line
public struct ephemerisDataLine : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static ephemerisDataLine GetRootAsephemerisDataLine(ByteBuffer _bb) { return GetRootAsephemerisDataLine(_bb, new ephemerisDataLine()); }
  public static ephemerisDataLine GetRootAsephemerisDataLine(ByteBuffer _bb, ephemerisDataLine obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ephemerisDataLine __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Epoch time, in ISO 8601 UTC format
  public string EPOCH { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEPOCHBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetEPOCHBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetEPOCHArray() { return __p.__vector_as_array<byte>(4); }
  /// Position vector X-component km
  public double X { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Position vector Y-component km
  public double Y { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Position vector Z-component km
  public double Z { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Velocity vector X-component km/s
  public double X_DOT { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Velocity vector Y-component km/s
  public double Y_DOT { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Velocity vector Z-component km/s
  public double Z_DOT { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Optional: Acceleration vector X-component km/s/s
  public double X_DDOT { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Optional: Acceleration vector Y-component km/s/s
  public double Y_DDOT { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Optional: Acceleration vector Z-component km/s/s
  public double Z_DDOT { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<ephemerisDataLine> CreateephemerisDataLine(FlatBufferBuilder builder,
      StringOffset EPOCHOffset = default(StringOffset),
      double X = 0.0,
      double Y = 0.0,
      double Z = 0.0,
      double X_DOT = 0.0,
      double Y_DOT = 0.0,
      double Z_DOT = 0.0,
      double X_DDOT = 0.0,
      double Y_DDOT = 0.0,
      double Z_DDOT = 0.0) {
    builder.StartTable(10);
    ephemerisDataLine.AddZ_DDOT(builder, Z_DDOT);
    ephemerisDataLine.AddY_DDOT(builder, Y_DDOT);
    ephemerisDataLine.AddX_DDOT(builder, X_DDOT);
    ephemerisDataLine.AddZ_DOT(builder, Z_DOT);
    ephemerisDataLine.AddY_DOT(builder, Y_DOT);
    ephemerisDataLine.AddX_DOT(builder, X_DOT);
    ephemerisDataLine.AddZ(builder, Z);
    ephemerisDataLine.AddY(builder, Y);
    ephemerisDataLine.AddX(builder, X);
    ephemerisDataLine.AddEPOCH(builder, EPOCHOffset);
    return ephemerisDataLine.EndephemerisDataLine(builder);
  }

  public static void StartephemerisDataLine(FlatBufferBuilder builder) { builder.StartTable(10); }
  public static void AddEPOCH(FlatBufferBuilder builder, StringOffset EPOCHOffset) { builder.AddOffset(0, EPOCHOffset.Value, 0); }
  public static void AddX(FlatBufferBuilder builder, double X) { builder.AddDouble(1, X, 0.0); }
  public static void AddY(FlatBufferBuilder builder, double Y) { builder.AddDouble(2, Y, 0.0); }
  public static void AddZ(FlatBufferBuilder builder, double Z) { builder.AddDouble(3, Z, 0.0); }
  public static void AddX_DOT(FlatBufferBuilder builder, double X_DOT) { builder.AddDouble(4, X_DOT, 0.0); }
  public static void AddY_DOT(FlatBufferBuilder builder, double Y_DOT) { builder.AddDouble(5, Y_DOT, 0.0); }
  public static void AddZ_DOT(FlatBufferBuilder builder, double Z_DOT) { builder.AddDouble(6, Z_DOT, 0.0); }
  public static void AddX_DDOT(FlatBufferBuilder builder, double X_DDOT) { builder.AddDouble(7, X_DDOT, 0.0); }
  public static void AddY_DDOT(FlatBufferBuilder builder, double Y_DDOT) { builder.AddDouble(8, Y_DDOT, 0.0); }
  public static void AddZ_DDOT(FlatBufferBuilder builder, double Z_DDOT) { builder.AddDouble(9, Z_DDOT, 0.0); }
  public static Offset<ephemerisDataLine> EndephemerisDataLine(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ephemerisDataLine>(o);
  }
  public ephemerisDataLineT UnPack() {
    var _o = new ephemerisDataLineT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ephemerisDataLineT _o) {
    _o.EPOCH = this.EPOCH;
    _o.X = this.X;
    _o.Y = this.Y;
    _o.Z = this.Z;
    _o.X_DOT = this.X_DOT;
    _o.Y_DOT = this.Y_DOT;
    _o.Z_DOT = this.Z_DOT;
    _o.X_DDOT = this.X_DDOT;
    _o.Y_DDOT = this.Y_DDOT;
    _o.Z_DDOT = this.Z_DDOT;
  }
  public static Offset<ephemerisDataLine> Pack(FlatBufferBuilder builder, ephemerisDataLineT _o) {
    if (_o == null) return default(Offset<ephemerisDataLine>);
    var _EPOCH = _o.EPOCH == null ? default(StringOffset) : builder.CreateString(_o.EPOCH);
    return CreateephemerisDataLine(
      builder,
      _EPOCH,
      _o.X,
      _o.Y,
      _o.Z,
      _o.X_DOT,
      _o.Y_DOT,
      _o.Z_DOT,
      _o.X_DDOT,
      _o.Y_DDOT,
      _o.Z_DDOT);
  }
}

public class ephemerisDataLineT
{
  public string EPOCH { get; set; }
  public double X { get; set; }
  public double Y { get; set; }
  public double Z { get; set; }
  public double X_DOT { get; set; }
  public double Y_DOT { get; set; }
  public double Z_DOT { get; set; }
  public double X_DDOT { get; set; }
  public double Y_DDOT { get; set; }
  public double Z_DDOT { get; set; }

  public ephemerisDataLineT() {
    this.EPOCH = null;
    this.X = 0.0;
    this.Y = 0.0;
    this.Z = 0.0;
    this.X_DOT = 0.0;
    this.Y_DOT = 0.0;
    this.Z_DOT = 0.0;
    this.X_DDOT = 0.0;
    this.Y_DDOT = 0.0;
    this.Z_DDOT = 0.0;
  }
}

