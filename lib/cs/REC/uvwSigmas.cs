// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// UVW Sigmas (Covariance matrix in UVW frame)
public struct uvwSigmas : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static uvwSigmas GetRootAsuvwSigmas(ByteBuffer _bb) { return GetRootAsuvwSigmas(_bb, new uvwSigmas()); }
  public static uvwSigmas GetRootAsuvwSigmas(ByteBuffer _bb, uvwSigmas obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public uvwSigmas __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double U_SIGMA { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double V_SIGMA { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double W_SIGMA { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double UD_SIGMA { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double VD_SIGMA { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  public double WD_SIGMA { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<uvwSigmas> CreateuvwSigmas(FlatBufferBuilder builder,
      double U_SIGMA = 0.0,
      double V_SIGMA = 0.0,
      double W_SIGMA = 0.0,
      double UD_SIGMA = 0.0,
      double VD_SIGMA = 0.0,
      double WD_SIGMA = 0.0) {
    builder.StartTable(6);
    uvwSigmas.AddWD_SIGMA(builder, WD_SIGMA);
    uvwSigmas.AddVD_SIGMA(builder, VD_SIGMA);
    uvwSigmas.AddUD_SIGMA(builder, UD_SIGMA);
    uvwSigmas.AddW_SIGMA(builder, W_SIGMA);
    uvwSigmas.AddV_SIGMA(builder, V_SIGMA);
    uvwSigmas.AddU_SIGMA(builder, U_SIGMA);
    return uvwSigmas.EnduvwSigmas(builder);
  }

  public static void StartuvwSigmas(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddU_SIGMA(FlatBufferBuilder builder, double U_SIGMA) { builder.AddDouble(0, U_SIGMA, 0.0); }
  public static void AddV_SIGMA(FlatBufferBuilder builder, double V_SIGMA) { builder.AddDouble(1, V_SIGMA, 0.0); }
  public static void AddW_SIGMA(FlatBufferBuilder builder, double W_SIGMA) { builder.AddDouble(2, W_SIGMA, 0.0); }
  public static void AddUD_SIGMA(FlatBufferBuilder builder, double UD_SIGMA) { builder.AddDouble(3, UD_SIGMA, 0.0); }
  public static void AddVD_SIGMA(FlatBufferBuilder builder, double VD_SIGMA) { builder.AddDouble(4, VD_SIGMA, 0.0); }
  public static void AddWD_SIGMA(FlatBufferBuilder builder, double WD_SIGMA) { builder.AddDouble(5, WD_SIGMA, 0.0); }
  public static Offset<uvwSigmas> EnduvwSigmas(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<uvwSigmas>(o);
  }
  public uvwSigmasT UnPack() {
    var _o = new uvwSigmasT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(uvwSigmasT _o) {
    _o.U_SIGMA = this.U_SIGMA;
    _o.V_SIGMA = this.V_SIGMA;
    _o.W_SIGMA = this.W_SIGMA;
    _o.UD_SIGMA = this.UD_SIGMA;
    _o.VD_SIGMA = this.VD_SIGMA;
    _o.WD_SIGMA = this.WD_SIGMA;
  }
  public static Offset<uvwSigmas> Pack(FlatBufferBuilder builder, uvwSigmasT _o) {
    if (_o == null) return default(Offset<uvwSigmas>);
    return CreateuvwSigmas(
      builder,
      _o.U_SIGMA,
      _o.V_SIGMA,
      _o.W_SIGMA,
      _o.UD_SIGMA,
      _o.VD_SIGMA,
      _o.WD_SIGMA);
  }
}

public class uvwSigmasT
{
  public double U_SIGMA { get; set; }
  public double V_SIGMA { get; set; }
  public double W_SIGMA { get; set; }
  public double UD_SIGMA { get; set; }
  public double VD_SIGMA { get; set; }
  public double WD_SIGMA { get; set; }

  public uvwSigmasT() {
    this.U_SIGMA = 0.0;
    this.V_SIGMA = 0.0;
    this.W_SIGMA = 0.0;
    this.UD_SIGMA = 0.0;
    this.VD_SIGMA = 0.0;
    this.WD_SIGMA = 0.0;
  }
}


static public class uvwSigmasVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*U_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 6 /*V_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*W_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*UD_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*VD_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*WD_SIGMA*/, 8 /*double*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
