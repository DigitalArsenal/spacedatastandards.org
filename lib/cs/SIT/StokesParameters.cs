// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// Stokes parameters, representing different aspects of polarization
public struct StokesParameters : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_3_3(); }
  public static StokesParameters GetRootAsStokesParameters(ByteBuffer _bb) { return GetRootAsStokesParameters(_bb, new StokesParameters()); }
  public static StokesParameters GetRootAsStokesParameters(ByteBuffer _bb, StokesParameters obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public StokesParameters __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Intensity
  public double I { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Linear polarization
  public double Q { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Another linear polarization, orthogonal to Q
  public double U { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Circular polarization
  public double V { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<StokesParameters> CreateStokesParameters(FlatBufferBuilder builder,
      double I = 0.0,
      double Q = 0.0,
      double U = 0.0,
      double V = 0.0) {
    builder.StartTable(4);
    StokesParameters.AddV(builder, V);
    StokesParameters.AddU(builder, U);
    StokesParameters.AddQ(builder, Q);
    StokesParameters.AddI(builder, I);
    return StokesParameters.EndStokesParameters(builder);
  }

  public static void StartStokesParameters(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddI(FlatBufferBuilder builder, double I) { builder.AddDouble(0, I, 0.0); }
  public static void AddQ(FlatBufferBuilder builder, double Q) { builder.AddDouble(1, Q, 0.0); }
  public static void AddU(FlatBufferBuilder builder, double U) { builder.AddDouble(2, U, 0.0); }
  public static void AddV(FlatBufferBuilder builder, double V) { builder.AddDouble(3, V, 0.0); }
  public static Offset<StokesParameters> EndStokesParameters(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<StokesParameters>(o);
  }
  public StokesParametersT UnPack() {
    var _o = new StokesParametersT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StokesParametersT _o) {
    _o.I = this.I;
    _o.Q = this.Q;
    _o.U = this.U;
    _o.V = this.V;
  }
  public static Offset<StokesParameters> Pack(FlatBufferBuilder builder, StokesParametersT _o) {
    if (_o == null) return default(Offset<StokesParameters>);
    return CreateStokesParameters(
      builder,
      _o.I,
      _o.Q,
      _o.U,
      _o.V);
  }
}

public class StokesParametersT
{
  public double I { get; set; }
  public double Q { get; set; }
  public double U { get; set; }
  public double V { get; set; }

  public StokesParametersT() {
    this.I = 0.0;
    this.Q = 0.0;
    this.U = 0.0;
    this.V = 0.0;
  }
}

