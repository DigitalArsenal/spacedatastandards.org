<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// OPM Atmospheric and Perturbation Model Data
class opmAtmosphericModelData extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return opmAtmosphericModelData
     */
    public static function getRootAsopmAtmosphericModelData(ByteBuffer $bb)
    {
        $obj = new opmAtmosphericModelData();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return opmAtmosphericModelData
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return sbyte
     */
    public function getATMOSPHERIC_MODEL()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \atmosphericModel::NONE;
    }

    /**
     * @return sbyte
     */
    public function getGEOPOTENTIAL_MODEL()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \geopotentialModel::NONE;
    }

    /**
     * @return sbyte
     */
    public function getLUNAR_SOLAR_PERTURBATION()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \perturbationStatus::OFF;
    }

    /**
     * @return sbyte
     */
    public function getLUNAR_PERTURBATION_MODEL()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \lunarPerturbationModel::NONE;
    }

    /**
     * @return sbyte
     */
    public function getSOLAR_PERTURBATION_MODEL()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \solarPerturbationModel::NONE;
    }

    /**
     * @return sbyte
     */
    public function getSOLAR_RADIATION_PRESSURE()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \perturbationStatus::OFF;
    }

    /**
     * @return sbyte
     */
    public function getSRP_MODEL()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \solarRadiationPressureModel::NONE;
    }

    /**
     * @return sbyte
     */
    public function getRESONANCE_MODEL()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \resonanceModel::NONE;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startopmAtmosphericModelData(FlatBufferBuilder $builder)
    {
        $builder->StartObject(8);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return opmAtmosphericModelData
     */
    public static function createopmAtmosphericModelData(FlatBufferBuilder $builder, $ATMOSPHERIC_MODEL, $GEOPOTENTIAL_MODEL, $LUNAR_SOLAR_PERTURBATION, $LUNAR_PERTURBATION_MODEL, $SOLAR_PERTURBATION_MODEL, $SOLAR_RADIATION_PRESSURE, $SRP_MODEL, $RESONANCE_MODEL)
    {
        $builder->startObject(8);
        self::addATMOSPHERIC_MODEL($builder, $ATMOSPHERIC_MODEL);
        self::addGEOPOTENTIAL_MODEL($builder, $GEOPOTENTIAL_MODEL);
        self::addLUNAR_SOLAR_PERTURBATION($builder, $LUNAR_SOLAR_PERTURBATION);
        self::addLUNAR_PERTURBATION_MODEL($builder, $LUNAR_PERTURBATION_MODEL);
        self::addSOLAR_PERTURBATION_MODEL($builder, $SOLAR_PERTURBATION_MODEL);
        self::addSOLAR_RADIATION_PRESSURE($builder, $SOLAR_RADIATION_PRESSURE);
        self::addSRP_MODEL($builder, $SRP_MODEL);
        self::addRESONANCE_MODEL($builder, $RESONANCE_MODEL);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addATMOSPHERIC_MODEL(FlatBufferBuilder $builder, $ATMOSPHERIC_MODEL)
    {
        $builder->addSbyteX(0, $ATMOSPHERIC_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addGEOPOTENTIAL_MODEL(FlatBufferBuilder $builder, $GEOPOTENTIAL_MODEL)
    {
        $builder->addSbyteX(1, $GEOPOTENTIAL_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addLUNAR_SOLAR_PERTURBATION(FlatBufferBuilder $builder, $LUNAR_SOLAR_PERTURBATION)
    {
        $builder->addSbyteX(2, $LUNAR_SOLAR_PERTURBATION, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addLUNAR_PERTURBATION_MODEL(FlatBufferBuilder $builder, $LUNAR_PERTURBATION_MODEL)
    {
        $builder->addSbyteX(3, $LUNAR_PERTURBATION_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addSOLAR_PERTURBATION_MODEL(FlatBufferBuilder $builder, $SOLAR_PERTURBATION_MODEL)
    {
        $builder->addSbyteX(4, $SOLAR_PERTURBATION_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addSOLAR_RADIATION_PRESSURE(FlatBufferBuilder $builder, $SOLAR_RADIATION_PRESSURE)
    {
        $builder->addSbyteX(5, $SOLAR_RADIATION_PRESSURE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addSRP_MODEL(FlatBufferBuilder $builder, $SRP_MODEL)
    {
        $builder->addSbyteX(6, $SRP_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addRESONANCE_MODEL(FlatBufferBuilder $builder, $RESONANCE_MODEL)
    {
        $builder->addSbyteX(7, $RESONANCE_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endopmAtmosphericModelData(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
