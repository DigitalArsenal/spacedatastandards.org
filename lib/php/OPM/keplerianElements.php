<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Keplerian Elements
class keplerianElements extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return keplerianElements
     */
    public static function getRootAskeplerianElements(ByteBuffer $bb)
    {
        $obj = new keplerianElements();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return keplerianElements
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return double
     */
    public function getSEMI_MAJOR_AXIS()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getECCENTRICITY()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getINCLINATION()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getRA_OF_ASC_NODE()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getARG_OF_PERICENTER()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return sbyte
     */
    public function getANOMALY_TYPE()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \anomalyType::TRUE_ANOMALY;
    }

    /**
     * @return double
     */
    public function getANOMALY()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startkeplerianElements(FlatBufferBuilder $builder)
    {
        $builder->StartObject(7);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return keplerianElements
     */
    public static function createkeplerianElements(FlatBufferBuilder $builder, $SEMI_MAJOR_AXIS, $ECCENTRICITY, $INCLINATION, $RA_OF_ASC_NODE, $ARG_OF_PERICENTER, $ANOMALY_TYPE, $ANOMALY)
    {
        $builder->startObject(7);
        self::addSEMI_MAJOR_AXIS($builder, $SEMI_MAJOR_AXIS);
        self::addECCENTRICITY($builder, $ECCENTRICITY);
        self::addINCLINATION($builder, $INCLINATION);
        self::addRA_OF_ASC_NODE($builder, $RA_OF_ASC_NODE);
        self::addARG_OF_PERICENTER($builder, $ARG_OF_PERICENTER);
        self::addANOMALY_TYPE($builder, $ANOMALY_TYPE);
        self::addANOMALY($builder, $ANOMALY);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addSEMI_MAJOR_AXIS(FlatBufferBuilder $builder, $SEMI_MAJOR_AXIS)
    {
        $builder->addDoubleX(0, $SEMI_MAJOR_AXIS, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addECCENTRICITY(FlatBufferBuilder $builder, $ECCENTRICITY)
    {
        $builder->addDoubleX(1, $ECCENTRICITY, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addINCLINATION(FlatBufferBuilder $builder, $INCLINATION)
    {
        $builder->addDoubleX(2, $INCLINATION, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addRA_OF_ASC_NODE(FlatBufferBuilder $builder, $RA_OF_ASC_NODE)
    {
        $builder->addDoubleX(3, $RA_OF_ASC_NODE, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addARG_OF_PERICENTER(FlatBufferBuilder $builder, $ARG_OF_PERICENTER)
    {
        $builder->addDoubleX(4, $ARG_OF_PERICENTER, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addANOMALY_TYPE(FlatBufferBuilder $builder, $ANOMALY_TYPE)
    {
        $builder->addSbyteX(5, $ANOMALY_TYPE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addANOMALY(FlatBufferBuilder $builder, $ANOMALY)
    {
        $builder->addDoubleX(6, $ANOMALY, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endkeplerianElements(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
