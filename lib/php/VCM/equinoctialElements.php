<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Equinoctial Elements
class equinoctialElements extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return equinoctialElements
     */
    public static function getRootAsequinoctialElements(ByteBuffer $bb)
    {
        $obj = new equinoctialElements();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return equinoctialElements
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /**
     * @return double
     */
    public function getAF()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getAG()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getL()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getN()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getCHI()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @return double
     */
    public function getPSI()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startequinoctialElements(FlatBufferBuilder $builder)
    {
        $builder->StartObject(6);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return equinoctialElements
     */
    public static function createequinoctialElements(FlatBufferBuilder $builder, $AF, $AG, $L, $N, $CHI, $PSI)
    {
        $builder->startObject(6);
        self::addAF($builder, $AF);
        self::addAG($builder, $AG);
        self::addL($builder, $L);
        self::addN($builder, $N);
        self::addCHI($builder, $CHI);
        self::addPSI($builder, $PSI);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addAF(FlatBufferBuilder $builder, $AF)
    {
        $builder->addDoubleX(0, $AF, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addAG(FlatBufferBuilder $builder, $AG)
    {
        $builder->addDoubleX(1, $AG, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addL(FlatBufferBuilder $builder, $L)
    {
        $builder->addDoubleX(2, $L, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addN(FlatBufferBuilder $builder, $N)
    {
        $builder->addDoubleX(3, $N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCHI(FlatBufferBuilder $builder, $CHI)
    {
        $builder->addDoubleX(4, $CHI, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addPSI(FlatBufferBuilder $builder, $PSI)
    {
        $builder->addDoubleX(5, $PSI, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endequinoctialElements(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
