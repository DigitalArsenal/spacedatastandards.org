<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Specific attributes for a Person
class PersonAttributes extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return PersonAttributes
     */
    public static function getRootAsPersonAttributes(ByteBuffer $bb)
    {
        $obj = new PersonAttributes();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function PersonAttributesIdentifier()
    {
        return "$EPM";
    }

    public static function PersonAttributesBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::PersonAttributesIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return PersonAttributes
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Family name or surname of the person
    public function getFAMILY_NAME()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Given name or first name of the person
    public function getGIVEN_NAME()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Additional name or middle name of the person
    public function getADDITIONAL_NAME()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Honorific prefix preceding the person's name (e.g., Mr., Dr.)
    public function getHONORIFIC_PREFIX()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Honorific suffix following the person's name (e.g., Jr., Sr.)
    public function getHONORIFIC_SUFFIX()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Job title of the person
    public function getJOB_TITLE()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Occupation of the person
    public function getOCCUPATION()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startPersonAttributes(FlatBufferBuilder $builder)
    {
        $builder->StartObject(7);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return PersonAttributes
     */
    public static function createPersonAttributes(FlatBufferBuilder $builder, $FAMILY_NAME, $GIVEN_NAME, $ADDITIONAL_NAME, $HONORIFIC_PREFIX, $HONORIFIC_SUFFIX, $JOB_TITLE, $OCCUPATION)
    {
        $builder->startObject(7);
        self::addFAMILY_NAME($builder, $FAMILY_NAME);
        self::addGIVEN_NAME($builder, $GIVEN_NAME);
        self::addADDITIONAL_NAME($builder, $ADDITIONAL_NAME);
        self::addHONORIFIC_PREFIX($builder, $HONORIFIC_PREFIX);
        self::addHONORIFIC_SUFFIX($builder, $HONORIFIC_SUFFIX);
        self::addJOB_TITLE($builder, $JOB_TITLE);
        self::addOCCUPATION($builder, $OCCUPATION);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addFAMILY_NAME(FlatBufferBuilder $builder, $FAMILY_NAME)
    {
        $builder->addOffsetX(0, $FAMILY_NAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addGIVEN_NAME(FlatBufferBuilder $builder, $GIVEN_NAME)
    {
        $builder->addOffsetX(1, $GIVEN_NAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addADDITIONAL_NAME(FlatBufferBuilder $builder, $ADDITIONAL_NAME)
    {
        $builder->addOffsetX(2, $ADDITIONAL_NAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addHONORIFIC_PREFIX(FlatBufferBuilder $builder, $HONORIFIC_PREFIX)
    {
        $builder->addOffsetX(3, $HONORIFIC_PREFIX, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addHONORIFIC_SUFFIX(FlatBufferBuilder $builder, $HONORIFIC_SUFFIX)
    {
        $builder->addOffsetX(4, $HONORIFIC_SUFFIX, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addJOB_TITLE(FlatBufferBuilder $builder, $JOB_TITLE)
    {
        $builder->addOffsetX(5, $JOB_TITLE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addOCCUPATION(FlatBufferBuilder $builder, $OCCUPATION)
    {
        $builder->addOffsetX(6, $OCCUPATION, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endPersonAttributes(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
