<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Represents a geographic address
class Address extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return Address
     */
    public static function getRootAsAddress(ByteBuffer $bb)
    {
        $obj = new Address();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function AddressIdentifier()
    {
        return "$EPM";
    }

    public static function AddressBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::AddressIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return Address
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Country of the address
    public function getCOUNTRY()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Region of the address (e.g., state or province)
    public function getREGION()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Locality of the address (e.g., city or town)
    public function getLOCALITY()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Postal code of the address
    public function getPOSTAL_CODE()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Street address
    public function getSTREET()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Post office box number
    public function getPOST_OFFICE_BOX_NUMBER()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startAddress(FlatBufferBuilder $builder)
    {
        $builder->StartObject(6);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return Address
     */
    public static function createAddress(FlatBufferBuilder $builder, $COUNTRY, $REGION, $LOCALITY, $POSTAL_CODE, $STREET, $POST_OFFICE_BOX_NUMBER)
    {
        $builder->startObject(6);
        self::addCOUNTRY($builder, $COUNTRY);
        self::addREGION($builder, $REGION);
        self::addLOCALITY($builder, $LOCALITY);
        self::addPOSTAL_CODE($builder, $POSTAL_CODE);
        self::addSTREET($builder, $STREET);
        self::addPOST_OFFICE_BOX_NUMBER($builder, $POST_OFFICE_BOX_NUMBER);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCOUNTRY(FlatBufferBuilder $builder, $COUNTRY)
    {
        $builder->addOffsetX(0, $COUNTRY, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addREGION(FlatBufferBuilder $builder, $REGION)
    {
        $builder->addOffsetX(1, $REGION, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLOCALITY(FlatBufferBuilder $builder, $LOCALITY)
    {
        $builder->addOffsetX(2, $LOCALITY, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addPOSTAL_CODE(FlatBufferBuilder $builder, $POSTAL_CODE)
    {
        $builder->addOffsetX(3, $POSTAL_CODE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addSTREET(FlatBufferBuilder $builder, $STREET)
    {
        $builder->addOffsetX(4, $STREET, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addPOST_OFFICE_BOX_NUMBER(FlatBufferBuilder $builder, $POST_OFFICE_BOX_NUMBER)
    {
        $builder->addOffsetX(5, $POST_OFFICE_BOX_NUMBER, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endAddress(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
