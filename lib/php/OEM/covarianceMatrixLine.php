<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Position/Velocity Covariance Matrix Line
class covarianceMatrixLine extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return covarianceMatrixLine
     */
    public static function getRootAscovarianceMatrixLine(ByteBuffer $bb)
    {
        $obj = new covarianceMatrixLine();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function covarianceMatrixLineIdentifier()
    {
        return "$OEM";
    }

    public static function covarianceMatrixLineBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::covarianceMatrixLineIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return covarianceMatrixLine
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Epoch
    public function getEPOCH()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Reference frame for the covariance matrix
    /**
     * @return sbyte
     */
    public function getCOV_REF_FRAME()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \manCovRefFrame::RSW;
    }

    /// Covariance matrix [1,1] km**2
    /**
     * @return double
     */
    public function getCX_X()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [2,1] km**2
    /**
     * @return double
     */
    public function getCY_X()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [2,2] km**2
    /**
     * @return double
     */
    public function getCY_Y()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [3,1] km**2
    /**
     * @return double
     */
    public function getCZ_X()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [3,2] km**2
    /**
     * @return double
     */
    public function getCZ_Y()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [3,3] km**2
    /**
     * @return double
     */
    public function getCZ_Z()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [4,1] km**2/s
    /**
     * @return double
     */
    public function getCX_DOT_X()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [4,2] km**2/s
    /**
     * @return double
     */
    public function getCX_DOT_Y()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [4,3] km**2/s
    /**
     * @return double
     */
    public function getCX_DOT_Z()
    {
        $o = $this->__offset(24);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [4,4] km**2/s**2
    /**
     * @return double
     */
    public function getCX_DOT_X_DOT()
    {
        $o = $this->__offset(26);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [5,1] km**2/s
    /**
     * @return double
     */
    public function getCY_DOT_X()
    {
        $o = $this->__offset(28);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [5,2] km**2/s
    /**
     * @return double
     */
    public function getCY_DOT_Y()
    {
        $o = $this->__offset(30);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [5,3] km**2/s
    /**
     * @return double
     */
    public function getCY_DOT_Z()
    {
        $o = $this->__offset(32);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [5,4] km**2/s**2
    /**
     * @return double
     */
    public function getCY_DOT_X_DOT()
    {
        $o = $this->__offset(34);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [5,5] km**2/s**2
    /**
     * @return double
     */
    public function getCY_DOT_Y_DOT()
    {
        $o = $this->__offset(36);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,1] km**2/s
    /**
     * @return double
     */
    public function getCZ_DOT_X()
    {
        $o = $this->__offset(38);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,2] km**2/s
    /**
     * @return double
     */
    public function getCZ_DOT_Y()
    {
        $o = $this->__offset(40);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,3] km**2/s
    /**
     * @return double
     */
    public function getCZ_DOT_Z()
    {
        $o = $this->__offset(42);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,4] km**2/s**2
    /**
     * @return double
     */
    public function getCZ_DOT_X_DOT()
    {
        $o = $this->__offset(44);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,5] km**2/s**2
    /**
     * @return double
     */
    public function getCZ_DOT_Y_DOT()
    {
        $o = $this->__offset(46);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance matrix [6,6] km**2/s**2
    /**
     * @return double
     */
    public function getCZ_DOT_Z_DOT()
    {
        $o = $this->__offset(48);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startcovarianceMatrixLine(FlatBufferBuilder $builder)
    {
        $builder->StartObject(23);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return covarianceMatrixLine
     */
    public static function createcovarianceMatrixLine(FlatBufferBuilder $builder, $EPOCH, $COV_REF_FRAME, $CX_X, $CY_X, $CY_Y, $CZ_X, $CZ_Y, $CZ_Z, $CX_DOT_X, $CX_DOT_Y, $CX_DOT_Z, $CX_DOT_X_DOT, $CY_DOT_X, $CY_DOT_Y, $CY_DOT_Z, $CY_DOT_X_DOT, $CY_DOT_Y_DOT, $CZ_DOT_X, $CZ_DOT_Y, $CZ_DOT_Z, $CZ_DOT_X_DOT, $CZ_DOT_Y_DOT, $CZ_DOT_Z_DOT)
    {
        $builder->startObject(23);
        self::addEPOCH($builder, $EPOCH);
        self::addCOV_REF_FRAME($builder, $COV_REF_FRAME);
        self::addCX_X($builder, $CX_X);
        self::addCY_X($builder, $CY_X);
        self::addCY_Y($builder, $CY_Y);
        self::addCZ_X($builder, $CZ_X);
        self::addCZ_Y($builder, $CZ_Y);
        self::addCZ_Z($builder, $CZ_Z);
        self::addCX_DOT_X($builder, $CX_DOT_X);
        self::addCX_DOT_Y($builder, $CX_DOT_Y);
        self::addCX_DOT_Z($builder, $CX_DOT_Z);
        self::addCX_DOT_X_DOT($builder, $CX_DOT_X_DOT);
        self::addCY_DOT_X($builder, $CY_DOT_X);
        self::addCY_DOT_Y($builder, $CY_DOT_Y);
        self::addCY_DOT_Z($builder, $CY_DOT_Z);
        self::addCY_DOT_X_DOT($builder, $CY_DOT_X_DOT);
        self::addCY_DOT_Y_DOT($builder, $CY_DOT_Y_DOT);
        self::addCZ_DOT_X($builder, $CZ_DOT_X);
        self::addCZ_DOT_Y($builder, $CZ_DOT_Y);
        self::addCZ_DOT_Z($builder, $CZ_DOT_Z);
        self::addCZ_DOT_X_DOT($builder, $CZ_DOT_X_DOT);
        self::addCZ_DOT_Y_DOT($builder, $CZ_DOT_Y_DOT);
        self::addCZ_DOT_Z_DOT($builder, $CZ_DOT_Z_DOT);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addEPOCH(FlatBufferBuilder $builder, $EPOCH)
    {
        $builder->addOffsetX(0, $EPOCH, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addCOV_REF_FRAME(FlatBufferBuilder $builder, $COV_REF_FRAME)
    {
        $builder->addSbyteX(1, $COV_REF_FRAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCX_X(FlatBufferBuilder $builder, $CX_X)
    {
        $builder->addDoubleX(2, $CX_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_X(FlatBufferBuilder $builder, $CY_X)
    {
        $builder->addDoubleX(3, $CY_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_Y(FlatBufferBuilder $builder, $CY_Y)
    {
        $builder->addDoubleX(4, $CY_Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_X(FlatBufferBuilder $builder, $CZ_X)
    {
        $builder->addDoubleX(5, $CZ_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_Y(FlatBufferBuilder $builder, $CZ_Y)
    {
        $builder->addDoubleX(6, $CZ_Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_Z(FlatBufferBuilder $builder, $CZ_Z)
    {
        $builder->addDoubleX(7, $CZ_Z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCX_DOT_X(FlatBufferBuilder $builder, $CX_DOT_X)
    {
        $builder->addDoubleX(8, $CX_DOT_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCX_DOT_Y(FlatBufferBuilder $builder, $CX_DOT_Y)
    {
        $builder->addDoubleX(9, $CX_DOT_Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCX_DOT_Z(FlatBufferBuilder $builder, $CX_DOT_Z)
    {
        $builder->addDoubleX(10, $CX_DOT_Z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCX_DOT_X_DOT(FlatBufferBuilder $builder, $CX_DOT_X_DOT)
    {
        $builder->addDoubleX(11, $CX_DOT_X_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_DOT_X(FlatBufferBuilder $builder, $CY_DOT_X)
    {
        $builder->addDoubleX(12, $CY_DOT_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_DOT_Y(FlatBufferBuilder $builder, $CY_DOT_Y)
    {
        $builder->addDoubleX(13, $CY_DOT_Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_DOT_Z(FlatBufferBuilder $builder, $CY_DOT_Z)
    {
        $builder->addDoubleX(14, $CY_DOT_Z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_DOT_X_DOT(FlatBufferBuilder $builder, $CY_DOT_X_DOT)
    {
        $builder->addDoubleX(15, $CY_DOT_X_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCY_DOT_Y_DOT(FlatBufferBuilder $builder, $CY_DOT_Y_DOT)
    {
        $builder->addDoubleX(16, $CY_DOT_Y_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_X(FlatBufferBuilder $builder, $CZ_DOT_X)
    {
        $builder->addDoubleX(17, $CZ_DOT_X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_Y(FlatBufferBuilder $builder, $CZ_DOT_Y)
    {
        $builder->addDoubleX(18, $CZ_DOT_Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_Z(FlatBufferBuilder $builder, $CZ_DOT_Z)
    {
        $builder->addDoubleX(19, $CZ_DOT_Z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_X_DOT(FlatBufferBuilder $builder, $CZ_DOT_X_DOT)
    {
        $builder->addDoubleX(20, $CZ_DOT_X_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_Y_DOT(FlatBufferBuilder $builder, $CZ_DOT_Y_DOT)
    {
        $builder->addDoubleX(21, $CZ_DOT_Y_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCZ_DOT_Z_DOT(FlatBufferBuilder $builder, $CZ_DOT_Z_DOT)
    {
        $builder->addDoubleX(22, $CZ_DOT_Z_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endcovarianceMatrixLine(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
