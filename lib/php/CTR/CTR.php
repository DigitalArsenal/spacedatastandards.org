<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// Country Identity Message
class CTR extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return CTR
     */
    public static function getRootAsCTR(ByteBuffer $bb)
    {
        $obj = new CTR();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function CTRIdentifier()
    {
        return "$CTR";
    }

    public static function CTRBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::CTRIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return CTR
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// ISO 3166 Numeric code
    public function getID()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Country name
    public function getNAME()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// GENC code
    public function getGENC_CODE()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// ISO 3166 Alpha-2 code
    public function getALPHA_2_CODE()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// ISO 3166 Alpha-3 code
    public function getALPHA_3_CODE()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Stanag code
    public function getSTANAG_CODE()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Internet country code top-level domain (ccTLD)
    public function getINTERNET_CCTLD()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Additional comments
    public function getCOMMENT()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCTR(FlatBufferBuilder $builder)
    {
        $builder->StartObject(8);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return CTR
     */
    public static function createCTR(FlatBufferBuilder $builder, $ID, $NAME, $GENC_CODE, $ALPHA_2_CODE, $ALPHA_3_CODE, $STANAG_CODE, $INTERNET_CCTLD, $COMMENT)
    {
        $builder->startObject(8);
        self::addID($builder, $ID);
        self::addNAME($builder, $NAME);
        self::addGENC_CODE($builder, $GENC_CODE);
        self::addALPHA_2_CODE($builder, $ALPHA_2_CODE);
        self::addALPHA_3_CODE($builder, $ALPHA_3_CODE);
        self::addSTANAG_CODE($builder, $STANAG_CODE);
        self::addINTERNET_CCTLD($builder, $INTERNET_CCTLD);
        self::addCOMMENT($builder, $COMMENT);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addID(FlatBufferBuilder $builder, $ID)
    {
        $builder->addOffsetX(0, $ID, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addNAME(FlatBufferBuilder $builder, $NAME)
    {
        $builder->addOffsetX(1, $NAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addGENC_CODE(FlatBufferBuilder $builder, $GENC_CODE)
    {
        $builder->addOffsetX(2, $GENC_CODE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addALPHA_2_CODE(FlatBufferBuilder $builder, $ALPHA_2_CODE)
    {
        $builder->addOffsetX(3, $ALPHA_2_CODE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addALPHA_3_CODE(FlatBufferBuilder $builder, $ALPHA_3_CODE)
    {
        $builder->addOffsetX(4, $ALPHA_3_CODE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addSTANAG_CODE(FlatBufferBuilder $builder, $STANAG_CODE)
    {
        $builder->addOffsetX(5, $STANAG_CODE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addINTERNET_CCTLD(FlatBufferBuilder $builder, $INTERNET_CCTLD)
    {
        $builder->addOffsetX(6, $INTERNET_CCTLD, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCOMMENT(FlatBufferBuilder $builder, $COMMENT)
    {
        $builder->addOffsetX(7, $COMMENT, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCTR(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
