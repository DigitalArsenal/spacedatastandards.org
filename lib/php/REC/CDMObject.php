<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

class CDMObject extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return CDMObject
     */
    public static function getRootAsCDMObject(ByteBuffer $bb)
    {
        $obj = new CDMObject();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function CDMObjectIdentifier()
    {
        return "$CDM";
    }

    public static function CDMObjectBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::CDMObjectIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return CDMObject
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// A comment
    public function getCOMMENT()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    public function getOBJECT()
    {
        $obj = new CAT();
        $o = $this->__offset(6);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /// Point of Contact
    public function getPOC()
    {
        $obj = new EPM();
        $o = $this->__offset(8);
        return $o != 0 ? $obj->init($this->__indirect($o + $this->bb_pos), $this->bb) : 0;
    }

    /// Operator contact position
    public function getOPERATOR_CONTACT_POSITION()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Operator organization
    public function getOPERATOR_ORGANIZATION()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Ephemeris name
    public function getEPHEMERIS_NAME()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Covariance method
    /**
     * @return sbyte
     */
    public function getCOVARIANCE_METHOD()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \covarianceMethod::CALCULATED;
    }

    /// Reference Frame in which the object position is defined
    /**
     * @return sbyte
     */
    public function getREFERENCE_FRAME()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->bb->getSbyte($o + $this->bb_pos) : \refFrame::ECEF;
    }

    /// Gravity model
    public function getGRAVITY_MODEL()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Atmospheric model
    public function getATMOSPHERIC_MODEL()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// N-body perturbations
    public function getN_BODY_PERTURBATIONS()
    {
        $o = $this->__offset(24);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Solar radiation pressure
    /**
     * @return bool
     */
    public function getSOLAR_RAD_PRESSURE()
    {
        $o = $this->__offset(26);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /// Earth tides
    /**
     * @return bool
     */
    public function getEARTH_TIDES()
    {
        $o = $this->__offset(28);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /// Intrack thrust
    /**
     * @return bool
     */
    public function getINTRACK_THRUST()
    {
        $o = $this->__offset(30);
        return $o != 0 ? $this->bb->getBool($o + $this->bb_pos) : false;
    }

    /// Time of last observation start
    public function getTIME_LASTOB_START()
    {
        $o = $this->__offset(32);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Time of last observation end
    public function getTIME_LASTOB_END()
    {
        $o = $this->__offset(34);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Recommended observation data span
    /**
     * @return double
     */
    public function getRECOMMENDED_OD_SPAN()
    {
        $o = $this->__offset(36);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Actual observation data span
    /**
     * @return double
     */
    public function getACTUAL_OD_SPAN()
    {
        $o = $this->__offset(38);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Number of observations available
    /**
     * @return uint
     */
    public function getOBS_AVAILABLE()
    {
        $o = $this->__offset(40);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /// Number of observations used
    /**
     * @return uint
     */
    public function getOBS_USED()
    {
        $o = $this->__offset(42);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /// Number of tracks available
    /**
     * @return uint
     */
    public function getTRACKS_AVAILABLE()
    {
        $o = $this->__offset(44);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /// Number of tracks used
    /**
     * @return uint
     */
    public function getTRACKS_USED()
    {
        $o = $this->__offset(46);
        return $o != 0 ? $this->bb->getUint($o + $this->bb_pos) : 0;
    }

    /// Residuals accepted
    /**
     * @return double
     */
    public function getRESIDUALS_ACCEPTED()
    {
        $o = $this->__offset(48);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Weighted root mean square
    /**
     * @return double
     */
    public function getWEIGHTED_RMS()
    {
        $o = $this->__offset(50);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Area of the object
    /**
     * @return double
     */
    public function getAREA_PC()
    {
        $o = $this->__offset(52);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Area of the object drag
    /**
     * @return double
     */
    public function getAREA_DRG()
    {
        $o = $this->__offset(54);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Area of the object solar radiation pressure
    /**
     * @return double
     */
    public function getAREA_SRP()
    {
        $o = $this->__offset(56);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Object's area-to-mass ratio
    /**
     * @return double
     */
    public function getCR_AREA_OVER_MASS()
    {
        $o = $this->__offset(58);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Object's thrust acceleration
    /**
     * @return double
     */
    public function getTHRUST_ACCELERATION()
    {
        $o = $this->__offset(60);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Object's solar flux
    /**
     * @return double
     */
    public function getSEDR()
    {
        $o = $this->__offset(62);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// X-coordinate of the object's position in RTN coordinates
    /**
     * @return double
     */
    public function getX()
    {
        $o = $this->__offset(64);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Y-coordinate of the object's position in RTN
    /**
     * @return double
     */
    public function getY()
    {
        $o = $this->__offset(66);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Z-coordinate of the object's position in RTN
    /**
     * @return double
     */
    public function getZ()
    {
        $o = $this->__offset(68);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// X-coordinate of the object's position in RTN coordinates
    /**
     * @return double
     */
    public function getX_DOT()
    {
        $o = $this->__offset(70);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Y-coordinate of the object's position in RTN
    /**
     * @return double
     */
    public function getY_DOT()
    {
        $o = $this->__offset(72);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Z-coordinate of the object's position in RTN
    /**
     * @return double
     */
    public function getZ_DOT()
    {
        $o = $this->__offset(74);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCR_R()
    {
        $o = $this->__offset(76);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCT_R()
    {
        $o = $this->__offset(78);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCT_T()
    {
        $o = $this->__offset(80);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCN_R()
    {
        $o = $this->__offset(82);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCN_T()
    {
        $o = $this->__offset(84);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCN_N()
    {
        $o = $this->__offset(86);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCRDOT_R()
    {
        $o = $this->__offset(88);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCRDOT_T()
    {
        $o = $this->__offset(90);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCRDOT_N()
    {
        $o = $this->__offset(92);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCRDOT_RDOT()
    {
        $o = $this->__offset(94);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTDOT_R()
    {
        $o = $this->__offset(96);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTDOT_T()
    {
        $o = $this->__offset(98);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTDOT_N()
    {
        $o = $this->__offset(100);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTDOT_RDOT()
    {
        $o = $this->__offset(102);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTDOT_TDOT()
    {
        $o = $this->__offset(104);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_R()
    {
        $o = $this->__offset(106);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_T()
    {
        $o = $this->__offset(108);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_N()
    {
        $o = $this->__offset(110);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_RDOT()
    {
        $o = $this->__offset(112);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_TDOT()
    {
        $o = $this->__offset(114);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCNDOT_NDOT()
    {
        $o = $this->__offset(116);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_R()
    {
        $o = $this->__offset(118);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_T()
    {
        $o = $this->__offset(120);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_N()
    {
        $o = $this->__offset(122);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_RDOT()
    {
        $o = $this->__offset(124);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_TDOT()
    {
        $o = $this->__offset(126);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_NDOT()
    {
        $o = $this->__offset(128);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCDRG_DRG()
    {
        $o = $this->__offset(130);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_R()
    {
        $o = $this->__offset(132);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_T()
    {
        $o = $this->__offset(134);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_N()
    {
        $o = $this->__offset(136);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_RDOT()
    {
        $o = $this->__offset(138);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_TDOT()
    {
        $o = $this->__offset(140);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_NDOT()
    {
        $o = $this->__offset(142);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_DRG()
    {
        $o = $this->__offset(144);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCSRP_SRP()
    {
        $o = $this->__offset(146);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_R()
    {
        $o = $this->__offset(148);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_T()
    {
        $o = $this->__offset(150);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_N()
    {
        $o = $this->__offset(152);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_RDOT()
    {
        $o = $this->__offset(154);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_TDOT()
    {
        $o = $this->__offset(156);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_NDOT()
    {
        $o = $this->__offset(158);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_DRG()
    {
        $o = $this->__offset(160);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_SRP()
    {
        $o = $this->__offset(162);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Covariance Matrix component
    /**
     * @return double
     */
    public function getCTHR_THR()
    {
        $o = $this->__offset(164);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCDMObject(FlatBufferBuilder $builder)
    {
        $builder->StartObject(81);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return CDMObject
     */
    public static function createCDMObject(FlatBufferBuilder $builder, $COMMENT, $OBJECT, $POC, $OPERATOR_CONTACT_POSITION, $OPERATOR_ORGANIZATION, $EPHEMERIS_NAME, $COVARIANCE_METHOD, $REFERENCE_FRAME, $GRAVITY_MODEL, $ATMOSPHERIC_MODEL, $N_BODY_PERTURBATIONS, $SOLAR_RAD_PRESSURE, $EARTH_TIDES, $INTRACK_THRUST, $TIME_LASTOB_START, $TIME_LASTOB_END, $RECOMMENDED_OD_SPAN, $ACTUAL_OD_SPAN, $OBS_AVAILABLE, $OBS_USED, $TRACKS_AVAILABLE, $TRACKS_USED, $RESIDUALS_ACCEPTED, $WEIGHTED_RMS, $AREA_PC, $AREA_DRG, $AREA_SRP, $CR_AREA_OVER_MASS, $THRUST_ACCELERATION, $SEDR, $X, $Y, $Z, $X_DOT, $Y_DOT, $Z_DOT, $CR_R, $CT_R, $CT_T, $CN_R, $CN_T, $CN_N, $CRDOT_R, $CRDOT_T, $CRDOT_N, $CRDOT_RDOT, $CTDOT_R, $CTDOT_T, $CTDOT_N, $CTDOT_RDOT, $CTDOT_TDOT, $CNDOT_R, $CNDOT_T, $CNDOT_N, $CNDOT_RDOT, $CNDOT_TDOT, $CNDOT_NDOT, $CDRG_R, $CDRG_T, $CDRG_N, $CDRG_RDOT, $CDRG_TDOT, $CDRG_NDOT, $CDRG_DRG, $CSRP_R, $CSRP_T, $CSRP_N, $CSRP_RDOT, $CSRP_TDOT, $CSRP_NDOT, $CSRP_DRG, $CSRP_SRP, $CTHR_R, $CTHR_T, $CTHR_N, $CTHR_RDOT, $CTHR_TDOT, $CTHR_NDOT, $CTHR_DRG, $CTHR_SRP, $CTHR_THR)
    {
        $builder->startObject(81);
        self::addCOMMENT($builder, $COMMENT);
        self::addOBJECT($builder, $OBJECT);
        self::addPOC($builder, $POC);
        self::addOPERATOR_CONTACT_POSITION($builder, $OPERATOR_CONTACT_POSITION);
        self::addOPERATOR_ORGANIZATION($builder, $OPERATOR_ORGANIZATION);
        self::addEPHEMERIS_NAME($builder, $EPHEMERIS_NAME);
        self::addCOVARIANCE_METHOD($builder, $COVARIANCE_METHOD);
        self::addREFERENCE_FRAME($builder, $REFERENCE_FRAME);
        self::addGRAVITY_MODEL($builder, $GRAVITY_MODEL);
        self::addATMOSPHERIC_MODEL($builder, $ATMOSPHERIC_MODEL);
        self::addN_BODY_PERTURBATIONS($builder, $N_BODY_PERTURBATIONS);
        self::addSOLAR_RAD_PRESSURE($builder, $SOLAR_RAD_PRESSURE);
        self::addEARTH_TIDES($builder, $EARTH_TIDES);
        self::addINTRACK_THRUST($builder, $INTRACK_THRUST);
        self::addTIME_LASTOB_START($builder, $TIME_LASTOB_START);
        self::addTIME_LASTOB_END($builder, $TIME_LASTOB_END);
        self::addRECOMMENDED_OD_SPAN($builder, $RECOMMENDED_OD_SPAN);
        self::addACTUAL_OD_SPAN($builder, $ACTUAL_OD_SPAN);
        self::addOBS_AVAILABLE($builder, $OBS_AVAILABLE);
        self::addOBS_USED($builder, $OBS_USED);
        self::addTRACKS_AVAILABLE($builder, $TRACKS_AVAILABLE);
        self::addTRACKS_USED($builder, $TRACKS_USED);
        self::addRESIDUALS_ACCEPTED($builder, $RESIDUALS_ACCEPTED);
        self::addWEIGHTED_RMS($builder, $WEIGHTED_RMS);
        self::addAREA_PC($builder, $AREA_PC);
        self::addAREA_DRG($builder, $AREA_DRG);
        self::addAREA_SRP($builder, $AREA_SRP);
        self::addCR_AREA_OVER_MASS($builder, $CR_AREA_OVER_MASS);
        self::addTHRUST_ACCELERATION($builder, $THRUST_ACCELERATION);
        self::addSEDR($builder, $SEDR);
        self::addX($builder, $X);
        self::addY($builder, $Y);
        self::addZ($builder, $Z);
        self::addX_DOT($builder, $X_DOT);
        self::addY_DOT($builder, $Y_DOT);
        self::addZ_DOT($builder, $Z_DOT);
        self::addCR_R($builder, $CR_R);
        self::addCT_R($builder, $CT_R);
        self::addCT_T($builder, $CT_T);
        self::addCN_R($builder, $CN_R);
        self::addCN_T($builder, $CN_T);
        self::addCN_N($builder, $CN_N);
        self::addCRDOT_R($builder, $CRDOT_R);
        self::addCRDOT_T($builder, $CRDOT_T);
        self::addCRDOT_N($builder, $CRDOT_N);
        self::addCRDOT_RDOT($builder, $CRDOT_RDOT);
        self::addCTDOT_R($builder, $CTDOT_R);
        self::addCTDOT_T($builder, $CTDOT_T);
        self::addCTDOT_N($builder, $CTDOT_N);
        self::addCTDOT_RDOT($builder, $CTDOT_RDOT);
        self::addCTDOT_TDOT($builder, $CTDOT_TDOT);
        self::addCNDOT_R($builder, $CNDOT_R);
        self::addCNDOT_T($builder, $CNDOT_T);
        self::addCNDOT_N($builder, $CNDOT_N);
        self::addCNDOT_RDOT($builder, $CNDOT_RDOT);
        self::addCNDOT_TDOT($builder, $CNDOT_TDOT);
        self::addCNDOT_NDOT($builder, $CNDOT_NDOT);
        self::addCDRG_R($builder, $CDRG_R);
        self::addCDRG_T($builder, $CDRG_T);
        self::addCDRG_N($builder, $CDRG_N);
        self::addCDRG_RDOT($builder, $CDRG_RDOT);
        self::addCDRG_TDOT($builder, $CDRG_TDOT);
        self::addCDRG_NDOT($builder, $CDRG_NDOT);
        self::addCDRG_DRG($builder, $CDRG_DRG);
        self::addCSRP_R($builder, $CSRP_R);
        self::addCSRP_T($builder, $CSRP_T);
        self::addCSRP_N($builder, $CSRP_N);
        self::addCSRP_RDOT($builder, $CSRP_RDOT);
        self::addCSRP_TDOT($builder, $CSRP_TDOT);
        self::addCSRP_NDOT($builder, $CSRP_NDOT);
        self::addCSRP_DRG($builder, $CSRP_DRG);
        self::addCSRP_SRP($builder, $CSRP_SRP);
        self::addCTHR_R($builder, $CTHR_R);
        self::addCTHR_T($builder, $CTHR_T);
        self::addCTHR_N($builder, $CTHR_N);
        self::addCTHR_RDOT($builder, $CTHR_RDOT);
        self::addCTHR_TDOT($builder, $CTHR_TDOT);
        self::addCTHR_NDOT($builder, $CTHR_NDOT);
        self::addCTHR_DRG($builder, $CTHR_DRG);
        self::addCTHR_SRP($builder, $CTHR_SRP);
        self::addCTHR_THR($builder, $CTHR_THR);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCOMMENT(FlatBufferBuilder $builder, $COMMENT)
    {
        $builder->addOffsetX(0, $COMMENT, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addOBJECT(FlatBufferBuilder $builder, $OBJECT)
    {
        $builder->addOffsetX(1, $OBJECT, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param VectorOffset
     * @return void
     */
    public static function addPOC(FlatBufferBuilder $builder, $POC)
    {
        $builder->addOffsetX(2, $POC, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addOPERATOR_CONTACT_POSITION(FlatBufferBuilder $builder, $OPERATOR_CONTACT_POSITION)
    {
        $builder->addOffsetX(3, $OPERATOR_CONTACT_POSITION, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addOPERATOR_ORGANIZATION(FlatBufferBuilder $builder, $OPERATOR_ORGANIZATION)
    {
        $builder->addOffsetX(4, $OPERATOR_ORGANIZATION, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addEPHEMERIS_NAME(FlatBufferBuilder $builder, $EPHEMERIS_NAME)
    {
        $builder->addOffsetX(5, $EPHEMERIS_NAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addCOVARIANCE_METHOD(FlatBufferBuilder $builder, $COVARIANCE_METHOD)
    {
        $builder->addSbyteX(6, $COVARIANCE_METHOD, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param sbyte
     * @return void
     */
    public static function addREFERENCE_FRAME(FlatBufferBuilder $builder, $REFERENCE_FRAME)
    {
        $builder->addSbyteX(7, $REFERENCE_FRAME, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addGRAVITY_MODEL(FlatBufferBuilder $builder, $GRAVITY_MODEL)
    {
        $builder->addOffsetX(8, $GRAVITY_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addATMOSPHERIC_MODEL(FlatBufferBuilder $builder, $ATMOSPHERIC_MODEL)
    {
        $builder->addOffsetX(9, $ATMOSPHERIC_MODEL, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addN_BODY_PERTURBATIONS(FlatBufferBuilder $builder, $N_BODY_PERTURBATIONS)
    {
        $builder->addOffsetX(10, $N_BODY_PERTURBATIONS, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addSOLAR_RAD_PRESSURE(FlatBufferBuilder $builder, $SOLAR_RAD_PRESSURE)
    {
        $builder->addBoolX(11, $SOLAR_RAD_PRESSURE, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addEARTH_TIDES(FlatBufferBuilder $builder, $EARTH_TIDES)
    {
        $builder->addBoolX(12, $EARTH_TIDES, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param bool
     * @return void
     */
    public static function addINTRACK_THRUST(FlatBufferBuilder $builder, $INTRACK_THRUST)
    {
        $builder->addBoolX(13, $INTRACK_THRUST, false);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addTIME_LASTOB_START(FlatBufferBuilder $builder, $TIME_LASTOB_START)
    {
        $builder->addOffsetX(14, $TIME_LASTOB_START, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addTIME_LASTOB_END(FlatBufferBuilder $builder, $TIME_LASTOB_END)
    {
        $builder->addOffsetX(15, $TIME_LASTOB_END, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addRECOMMENDED_OD_SPAN(FlatBufferBuilder $builder, $RECOMMENDED_OD_SPAN)
    {
        $builder->addDoubleX(16, $RECOMMENDED_OD_SPAN, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addACTUAL_OD_SPAN(FlatBufferBuilder $builder, $ACTUAL_OD_SPAN)
    {
        $builder->addDoubleX(17, $ACTUAL_OD_SPAN, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addOBS_AVAILABLE(FlatBufferBuilder $builder, $OBS_AVAILABLE)
    {
        $builder->addUintX(18, $OBS_AVAILABLE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addOBS_USED(FlatBufferBuilder $builder, $OBS_USED)
    {
        $builder->addUintX(19, $OBS_USED, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addTRACKS_AVAILABLE(FlatBufferBuilder $builder, $TRACKS_AVAILABLE)
    {
        $builder->addUintX(20, $TRACKS_AVAILABLE, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param uint
     * @return void
     */
    public static function addTRACKS_USED(FlatBufferBuilder $builder, $TRACKS_USED)
    {
        $builder->addUintX(21, $TRACKS_USED, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addRESIDUALS_ACCEPTED(FlatBufferBuilder $builder, $RESIDUALS_ACCEPTED)
    {
        $builder->addDoubleX(22, $RESIDUALS_ACCEPTED, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addWEIGHTED_RMS(FlatBufferBuilder $builder, $WEIGHTED_RMS)
    {
        $builder->addDoubleX(23, $WEIGHTED_RMS, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addAREA_PC(FlatBufferBuilder $builder, $AREA_PC)
    {
        $builder->addDoubleX(24, $AREA_PC, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addAREA_DRG(FlatBufferBuilder $builder, $AREA_DRG)
    {
        $builder->addDoubleX(25, $AREA_DRG, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addAREA_SRP(FlatBufferBuilder $builder, $AREA_SRP)
    {
        $builder->addDoubleX(26, $AREA_SRP, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCR_AREA_OVER_MASS(FlatBufferBuilder $builder, $CR_AREA_OVER_MASS)
    {
        $builder->addDoubleX(27, $CR_AREA_OVER_MASS, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addTHRUST_ACCELERATION(FlatBufferBuilder $builder, $THRUST_ACCELERATION)
    {
        $builder->addDoubleX(28, $THRUST_ACCELERATION, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addSEDR(FlatBufferBuilder $builder, $SEDR)
    {
        $builder->addDoubleX(29, $SEDR, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addX(FlatBufferBuilder $builder, $X)
    {
        $builder->addDoubleX(30, $X, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addY(FlatBufferBuilder $builder, $Y)
    {
        $builder->addDoubleX(31, $Y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addZ(FlatBufferBuilder $builder, $Z)
    {
        $builder->addDoubleX(32, $Z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addX_DOT(FlatBufferBuilder $builder, $X_DOT)
    {
        $builder->addDoubleX(33, $X_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addY_DOT(FlatBufferBuilder $builder, $Y_DOT)
    {
        $builder->addDoubleX(34, $Y_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addZ_DOT(FlatBufferBuilder $builder, $Z_DOT)
    {
        $builder->addDoubleX(35, $Z_DOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCR_R(FlatBufferBuilder $builder, $CR_R)
    {
        $builder->addDoubleX(36, $CR_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCT_R(FlatBufferBuilder $builder, $CT_R)
    {
        $builder->addDoubleX(37, $CT_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCT_T(FlatBufferBuilder $builder, $CT_T)
    {
        $builder->addDoubleX(38, $CT_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCN_R(FlatBufferBuilder $builder, $CN_R)
    {
        $builder->addDoubleX(39, $CN_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCN_T(FlatBufferBuilder $builder, $CN_T)
    {
        $builder->addDoubleX(40, $CN_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCN_N(FlatBufferBuilder $builder, $CN_N)
    {
        $builder->addDoubleX(41, $CN_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCRDOT_R(FlatBufferBuilder $builder, $CRDOT_R)
    {
        $builder->addDoubleX(42, $CRDOT_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCRDOT_T(FlatBufferBuilder $builder, $CRDOT_T)
    {
        $builder->addDoubleX(43, $CRDOT_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCRDOT_N(FlatBufferBuilder $builder, $CRDOT_N)
    {
        $builder->addDoubleX(44, $CRDOT_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCRDOT_RDOT(FlatBufferBuilder $builder, $CRDOT_RDOT)
    {
        $builder->addDoubleX(45, $CRDOT_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTDOT_R(FlatBufferBuilder $builder, $CTDOT_R)
    {
        $builder->addDoubleX(46, $CTDOT_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTDOT_T(FlatBufferBuilder $builder, $CTDOT_T)
    {
        $builder->addDoubleX(47, $CTDOT_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTDOT_N(FlatBufferBuilder $builder, $CTDOT_N)
    {
        $builder->addDoubleX(48, $CTDOT_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTDOT_RDOT(FlatBufferBuilder $builder, $CTDOT_RDOT)
    {
        $builder->addDoubleX(49, $CTDOT_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTDOT_TDOT(FlatBufferBuilder $builder, $CTDOT_TDOT)
    {
        $builder->addDoubleX(50, $CTDOT_TDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_R(FlatBufferBuilder $builder, $CNDOT_R)
    {
        $builder->addDoubleX(51, $CNDOT_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_T(FlatBufferBuilder $builder, $CNDOT_T)
    {
        $builder->addDoubleX(52, $CNDOT_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_N(FlatBufferBuilder $builder, $CNDOT_N)
    {
        $builder->addDoubleX(53, $CNDOT_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_RDOT(FlatBufferBuilder $builder, $CNDOT_RDOT)
    {
        $builder->addDoubleX(54, $CNDOT_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_TDOT(FlatBufferBuilder $builder, $CNDOT_TDOT)
    {
        $builder->addDoubleX(55, $CNDOT_TDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCNDOT_NDOT(FlatBufferBuilder $builder, $CNDOT_NDOT)
    {
        $builder->addDoubleX(56, $CNDOT_NDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_R(FlatBufferBuilder $builder, $CDRG_R)
    {
        $builder->addDoubleX(57, $CDRG_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_T(FlatBufferBuilder $builder, $CDRG_T)
    {
        $builder->addDoubleX(58, $CDRG_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_N(FlatBufferBuilder $builder, $CDRG_N)
    {
        $builder->addDoubleX(59, $CDRG_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_RDOT(FlatBufferBuilder $builder, $CDRG_RDOT)
    {
        $builder->addDoubleX(60, $CDRG_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_TDOT(FlatBufferBuilder $builder, $CDRG_TDOT)
    {
        $builder->addDoubleX(61, $CDRG_TDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_NDOT(FlatBufferBuilder $builder, $CDRG_NDOT)
    {
        $builder->addDoubleX(62, $CDRG_NDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCDRG_DRG(FlatBufferBuilder $builder, $CDRG_DRG)
    {
        $builder->addDoubleX(63, $CDRG_DRG, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_R(FlatBufferBuilder $builder, $CSRP_R)
    {
        $builder->addDoubleX(64, $CSRP_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_T(FlatBufferBuilder $builder, $CSRP_T)
    {
        $builder->addDoubleX(65, $CSRP_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_N(FlatBufferBuilder $builder, $CSRP_N)
    {
        $builder->addDoubleX(66, $CSRP_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_RDOT(FlatBufferBuilder $builder, $CSRP_RDOT)
    {
        $builder->addDoubleX(67, $CSRP_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_TDOT(FlatBufferBuilder $builder, $CSRP_TDOT)
    {
        $builder->addDoubleX(68, $CSRP_TDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_NDOT(FlatBufferBuilder $builder, $CSRP_NDOT)
    {
        $builder->addDoubleX(69, $CSRP_NDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_DRG(FlatBufferBuilder $builder, $CSRP_DRG)
    {
        $builder->addDoubleX(70, $CSRP_DRG, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCSRP_SRP(FlatBufferBuilder $builder, $CSRP_SRP)
    {
        $builder->addDoubleX(71, $CSRP_SRP, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_R(FlatBufferBuilder $builder, $CTHR_R)
    {
        $builder->addDoubleX(72, $CTHR_R, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_T(FlatBufferBuilder $builder, $CTHR_T)
    {
        $builder->addDoubleX(73, $CTHR_T, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_N(FlatBufferBuilder $builder, $CTHR_N)
    {
        $builder->addDoubleX(74, $CTHR_N, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_RDOT(FlatBufferBuilder $builder, $CTHR_RDOT)
    {
        $builder->addDoubleX(75, $CTHR_RDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_TDOT(FlatBufferBuilder $builder, $CTHR_TDOT)
    {
        $builder->addDoubleX(76, $CTHR_TDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_NDOT(FlatBufferBuilder $builder, $CTHR_NDOT)
    {
        $builder->addDoubleX(77, $CTHR_NDOT, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_DRG(FlatBufferBuilder $builder, $CTHR_DRG)
    {
        $builder->addDoubleX(78, $CTHR_DRG, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_SRP(FlatBufferBuilder $builder, $CTHR_SRP)
    {
        $builder->addDoubleX(79, $CTHR_SRP, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addCTHR_THR(FlatBufferBuilder $builder, $CTHR_THR)
    {
        $builder->addDoubleX(80, $CTHR_THR, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCDMObject(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }
}
