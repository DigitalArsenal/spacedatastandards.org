// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import { CelestialFrameWrapper } from './CelestialFrameWrapper.js';
import { CustomFrameWrapper } from './CustomFrameWrapper.js';
import { OrbitFrameWrapper } from './OrbitFrameWrapper.js';
import { SpacecraftFrameWrapper } from './SpacecraftFrameWrapper.js';
export var RFMUnion;
(function (RFMUnion) {
    RFMUnion[RFMUnion["NONE"] = 0] = "NONE";
    RFMUnion[RFMUnion["CelestialFrameWrapper"] = 1] = "CelestialFrameWrapper";
    RFMUnion[RFMUnion["SpacecraftFrameWrapper"] = 2] = "SpacecraftFrameWrapper";
    RFMUnion[RFMUnion["OrbitFrameWrapper"] = 3] = "OrbitFrameWrapper";
    RFMUnion[RFMUnion["CustomFrameWrapper"] = 4] = "CustomFrameWrapper";
})(RFMUnion || (RFMUnion = {}));
export function unionToRfmunion(type, accessor) {
    switch (RFMUnion[type]) {
        case 'NONE': return null;
        case 'CelestialFrameWrapper': return accessor(new CelestialFrameWrapper());
        case 'SpacecraftFrameWrapper': return accessor(new SpacecraftFrameWrapper());
        case 'OrbitFrameWrapper': return accessor(new OrbitFrameWrapper());
        case 'CustomFrameWrapper': return accessor(new CustomFrameWrapper());
        default: return null;
    }
}
export function unionListToRfmunion(type, accessor, index) {
    switch (RFMUnion[type]) {
        case 'NONE': return null;
        case 'CelestialFrameWrapper': return accessor(index, new CelestialFrameWrapper());
        case 'SpacecraftFrameWrapper': return accessor(index, new SpacecraftFrameWrapper());
        case 'OrbitFrameWrapper': return accessor(index, new OrbitFrameWrapper());
        case 'CustomFrameWrapper': return accessor(index, new CustomFrameWrapper());
        default: return null;
    }
}
