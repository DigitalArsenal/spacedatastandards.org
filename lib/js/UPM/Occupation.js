// automatically generated by the FlatBuffers compiler, do not modify
import * as flatbuffers from 'flatbuffers';
export class Occupation {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsOccupation(bb, obj) {
        return (obj || new Occupation()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsOccupation(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Occupation()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    NAME(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    static startOccupation(builder) {
        builder.startObject(1);
    }
    static addName(builder, NAMEOffset) {
        builder.addFieldOffset(0, NAMEOffset, 0);
    }
    static endOccupation(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createOccupation(builder, NAMEOffset) {
        Occupation.startOccupation(builder);
        Occupation.addName(builder, NAMEOffset);
        return Occupation.endOccupation(builder);
    }
    unpack() {
        return new OccupationT(this.NAME());
    }
    unpackTo(_o) {
        _o.NAME = this.NAME();
    }
}
export class OccupationT {
    constructor(NAME = null) {
        this.NAME = NAME;
    }
    pack(builder) {
        const NAME = (this.NAME !== null ? builder.createString(this.NAME) : 0);
        return Occupation.createOccupation(builder, NAME);
    }
}
