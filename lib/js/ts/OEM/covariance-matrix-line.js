// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from 'flatbuffers';
/**
 * Position/Velocity Covariance Matrix Line
 */
export class covarianceMatrixLine {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAscovarianceMatrixLine(bb, obj) {
        return (obj || new covarianceMatrixLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAscovarianceMatrixLine(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new covarianceMatrixLine()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    epoch(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    /**
     * Covariance matrix [1,1] km**2
     */
    cxX() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [2,1] km**2
     */
    cyX() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [2,2] km**2
     */
    cyY() {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [3,1] km**2
     */
    czX() {
        const offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [3,2] km**2
     */
    czY() {
        const offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [3,3] km**2
     */
    czZ() {
        const offset = this.bb.__offset(this.bb_pos, 16);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [4,1] km**2/s
     */
    cxDotX() {
        const offset = this.bb.__offset(this.bb_pos, 18);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [4,2] km**2/s
     */
    cxDotY() {
        const offset = this.bb.__offset(this.bb_pos, 20);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [4,3] km**2/s
     */
    cxDotZ() {
        const offset = this.bb.__offset(this.bb_pos, 22);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [4,4] km**2/s**2
     */
    cxDotXDot() {
        const offset = this.bb.__offset(this.bb_pos, 24);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [5,1] km**2/s
     */
    cyDotX() {
        const offset = this.bb.__offset(this.bb_pos, 26);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [5,2] km**2/s
     */
    cyDotY() {
        const offset = this.bb.__offset(this.bb_pos, 28);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [5,3] km**2/s
     */
    cyDotZ() {
        const offset = this.bb.__offset(this.bb_pos, 30);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [5,4] km**2/s**2
     */
    cyDotXDot() {
        const offset = this.bb.__offset(this.bb_pos, 32);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [5,5] km**2/s**2
     */
    cyDotYDot() {
        const offset = this.bb.__offset(this.bb_pos, 34);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,1] km**2/s
     */
    czDotX() {
        const offset = this.bb.__offset(this.bb_pos, 36);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,2] km**2/s
     */
    czDotY() {
        const offset = this.bb.__offset(this.bb_pos, 38);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,3] km**2/s
     */
    czDotZ() {
        const offset = this.bb.__offset(this.bb_pos, 40);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,4] km**2/s**2
     */
    czDotXDot() {
        const offset = this.bb.__offset(this.bb_pos, 42);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,5] km**2/s**2
     */
    czDotYDot() {
        const offset = this.bb.__offset(this.bb_pos, 44);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Covariance matrix [6,6] km**2/s**2
     */
    czDotZDot() {
        const offset = this.bb.__offset(this.bb_pos, 46);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    static startcovarianceMatrixLine(builder) {
        builder.startObject(22);
    }
    static addEpoch(builder, epochOffset) {
        builder.addFieldOffset(0, epochOffset, 0);
    }
    static addCxX(builder, cxX) {
        builder.addFieldFloat64(1, cxX, 0.0);
    }
    static addCyX(builder, cyX) {
        builder.addFieldFloat64(2, cyX, 0.0);
    }
    static addCyY(builder, cyY) {
        builder.addFieldFloat64(3, cyY, 0.0);
    }
    static addCzX(builder, czX) {
        builder.addFieldFloat64(4, czX, 0.0);
    }
    static addCzY(builder, czY) {
        builder.addFieldFloat64(5, czY, 0.0);
    }
    static addCzZ(builder, czZ) {
        builder.addFieldFloat64(6, czZ, 0.0);
    }
    static addCxDotX(builder, cxDotX) {
        builder.addFieldFloat64(7, cxDotX, 0.0);
    }
    static addCxDotY(builder, cxDotY) {
        builder.addFieldFloat64(8, cxDotY, 0.0);
    }
    static addCxDotZ(builder, cxDotZ) {
        builder.addFieldFloat64(9, cxDotZ, 0.0);
    }
    static addCxDotXDot(builder, cxDotXDot) {
        builder.addFieldFloat64(10, cxDotXDot, 0.0);
    }
    static addCyDotX(builder, cyDotX) {
        builder.addFieldFloat64(11, cyDotX, 0.0);
    }
    static addCyDotY(builder, cyDotY) {
        builder.addFieldFloat64(12, cyDotY, 0.0);
    }
    static addCyDotZ(builder, cyDotZ) {
        builder.addFieldFloat64(13, cyDotZ, 0.0);
    }
    static addCyDotXDot(builder, cyDotXDot) {
        builder.addFieldFloat64(14, cyDotXDot, 0.0);
    }
    static addCyDotYDot(builder, cyDotYDot) {
        builder.addFieldFloat64(15, cyDotYDot, 0.0);
    }
    static addCzDotX(builder, czDotX) {
        builder.addFieldFloat64(16, czDotX, 0.0);
    }
    static addCzDotY(builder, czDotY) {
        builder.addFieldFloat64(17, czDotY, 0.0);
    }
    static addCzDotZ(builder, czDotZ) {
        builder.addFieldFloat64(18, czDotZ, 0.0);
    }
    static addCzDotXDot(builder, czDotXDot) {
        builder.addFieldFloat64(19, czDotXDot, 0.0);
    }
    static addCzDotYDot(builder, czDotYDot) {
        builder.addFieldFloat64(20, czDotYDot, 0.0);
    }
    static addCzDotZDot(builder, czDotZDot) {
        builder.addFieldFloat64(21, czDotZDot, 0.0);
    }
    static endcovarianceMatrixLine(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createcovarianceMatrixLine(builder, epochOffset, cxX, cyX, cyY, czX, czY, czZ, cxDotX, cxDotY, cxDotZ, cxDotXDot, cyDotX, cyDotY, cyDotZ, cyDotXDot, cyDotYDot, czDotX, czDotY, czDotZ, czDotXDot, czDotYDot, czDotZDot) {
        covarianceMatrixLine.startcovarianceMatrixLine(builder);
        covarianceMatrixLine.addEpoch(builder, epochOffset);
        covarianceMatrixLine.addCxX(builder, cxX);
        covarianceMatrixLine.addCyX(builder, cyX);
        covarianceMatrixLine.addCyY(builder, cyY);
        covarianceMatrixLine.addCzX(builder, czX);
        covarianceMatrixLine.addCzY(builder, czY);
        covarianceMatrixLine.addCzZ(builder, czZ);
        covarianceMatrixLine.addCxDotX(builder, cxDotX);
        covarianceMatrixLine.addCxDotY(builder, cxDotY);
        covarianceMatrixLine.addCxDotZ(builder, cxDotZ);
        covarianceMatrixLine.addCxDotXDot(builder, cxDotXDot);
        covarianceMatrixLine.addCyDotX(builder, cyDotX);
        covarianceMatrixLine.addCyDotY(builder, cyDotY);
        covarianceMatrixLine.addCyDotZ(builder, cyDotZ);
        covarianceMatrixLine.addCyDotXDot(builder, cyDotXDot);
        covarianceMatrixLine.addCyDotYDot(builder, cyDotYDot);
        covarianceMatrixLine.addCzDotX(builder, czDotX);
        covarianceMatrixLine.addCzDotY(builder, czDotY);
        covarianceMatrixLine.addCzDotZ(builder, czDotZ);
        covarianceMatrixLine.addCzDotXDot(builder, czDotXDot);
        covarianceMatrixLine.addCzDotYDot(builder, czDotYDot);
        covarianceMatrixLine.addCzDotZDot(builder, czDotZDot);
        return covarianceMatrixLine.endcovarianceMatrixLine(builder);
    }
    unpack() {
        return new covarianceMatrixLineT(this.epoch(), this.cxX(), this.cyX(), this.cyY(), this.czX(), this.czY(), this.czZ(), this.cxDotX(), this.cxDotY(), this.cxDotZ(), this.cxDotXDot(), this.cyDotX(), this.cyDotY(), this.cyDotZ(), this.cyDotXDot(), this.cyDotYDot(), this.czDotX(), this.czDotY(), this.czDotZ(), this.czDotXDot(), this.czDotYDot(), this.czDotZDot());
    }
    unpackTo(_o) {
        _o.epoch = this.epoch();
        _o.cxX = this.cxX();
        _o.cyX = this.cyX();
        _o.cyY = this.cyY();
        _o.czX = this.czX();
        _o.czY = this.czY();
        _o.czZ = this.czZ();
        _o.cxDotX = this.cxDotX();
        _o.cxDotY = this.cxDotY();
        _o.cxDotZ = this.cxDotZ();
        _o.cxDotXDot = this.cxDotXDot();
        _o.cyDotX = this.cyDotX();
        _o.cyDotY = this.cyDotY();
        _o.cyDotZ = this.cyDotZ();
        _o.cyDotXDot = this.cyDotXDot();
        _o.cyDotYDot = this.cyDotYDot();
        _o.czDotX = this.czDotX();
        _o.czDotY = this.czDotY();
        _o.czDotZ = this.czDotZ();
        _o.czDotXDot = this.czDotXDot();
        _o.czDotYDot = this.czDotYDot();
        _o.czDotZDot = this.czDotZDot();
    }
}
export class covarianceMatrixLineT {
    constructor(epoch = null, cxX = 0.0, cyX = 0.0, cyY = 0.0, czX = 0.0, czY = 0.0, czZ = 0.0, cxDotX = 0.0, cxDotY = 0.0, cxDotZ = 0.0, cxDotXDot = 0.0, cyDotX = 0.0, cyDotY = 0.0, cyDotZ = 0.0, cyDotXDot = 0.0, cyDotYDot = 0.0, czDotX = 0.0, czDotY = 0.0, czDotZ = 0.0, czDotXDot = 0.0, czDotYDot = 0.0, czDotZDot = 0.0) {
        this.epoch = epoch;
        this.cxX = cxX;
        this.cyX = cyX;
        this.cyY = cyY;
        this.czX = czX;
        this.czY = czY;
        this.czZ = czZ;
        this.cxDotX = cxDotX;
        this.cxDotY = cxDotY;
        this.cxDotZ = cxDotZ;
        this.cxDotXDot = cxDotXDot;
        this.cyDotX = cyDotX;
        this.cyDotY = cyDotY;
        this.cyDotZ = cyDotZ;
        this.cyDotXDot = cyDotXDot;
        this.cyDotYDot = cyDotYDot;
        this.czDotX = czDotX;
        this.czDotY = czDotY;
        this.czDotZ = czDotZ;
        this.czDotXDot = czDotXDot;
        this.czDotYDot = czDotYDot;
        this.czDotZDot = czDotZDot;
    }
    pack(builder) {
        const epoch = (this.epoch !== null ? builder.createString(this.epoch) : 0);
        return covarianceMatrixLine.createcovarianceMatrixLine(builder, epoch, this.cxX, this.cyX, this.cyY, this.czX, this.czY, this.czZ, this.cxDotX, this.cxDotY, this.cxDotZ, this.cxDotXDot, this.cyDotX, this.cyDotY, this.cyDotZ, this.cyDotXDot, this.cyDotYDot, this.czDotX, this.czDotY, this.czDotZ, this.czDotXDot, this.czDotYDot, this.czDotZDot);
    }
}
