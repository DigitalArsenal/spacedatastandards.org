// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from 'flatbuffers';
/**
 * Stokes parameters, representing different aspects of polarization
 */
export class StokesParameters {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsStokesParameters(bb, obj) {
        return (obj || new StokesParameters()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsStokesParameters(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new StokesParameters()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    /**
     * Intensity
     */
    i() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Linear polarization
     */
    q() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Another linear polarization, orthogonal to Q
     */
    u() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    /**
     * Circular polarization
     */
    v() {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.readFloat64(this.bb_pos + offset) : 0.0;
    }
    static startStokesParameters(builder) {
        builder.startObject(4);
    }
    static addI(builder, i) {
        builder.addFieldFloat64(0, i, 0.0);
    }
    static addQ(builder, q) {
        builder.addFieldFloat64(1, q, 0.0);
    }
    static addU(builder, u) {
        builder.addFieldFloat64(2, u, 0.0);
    }
    static addV(builder, v) {
        builder.addFieldFloat64(3, v, 0.0);
    }
    static endStokesParameters(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createStokesParameters(builder, i, q, u, v) {
        StokesParameters.startStokesParameters(builder);
        StokesParameters.addI(builder, i);
        StokesParameters.addQ(builder, q);
        StokesParameters.addU(builder, u);
        StokesParameters.addV(builder, v);
        return StokesParameters.endStokesParameters(builder);
    }
    unpack() {
        return new StokesParametersT(this.i(), this.q(), this.u(), this.v());
    }
    unpackTo(_o) {
        _o.i = this.i();
        _o.q = this.q();
        _o.u = this.u();
        _o.v = this.v();
    }
}
export class StokesParametersT {
    constructor(i = 0.0, q = 0.0, u = 0.0, v = 0.0) {
        this.i = i;
        this.q = q;
        this.u = u;
        this.v = v;
    }
    pack(builder) {
        return StokesParameters.createStokesParameters(builder, this.i, this.q, this.u, this.v);
    }
}
