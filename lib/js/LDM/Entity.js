// automatically generated by the FlatBuffers compiler, do not modify
import { Organization } from './Organization.js';
import { Person } from './Person.js';
/**
 * Union type for Entity, which can be either a Person or an Organization
 */
export var Entity;
(function (Entity) {
    Entity[Entity["NONE"] = 0] = "NONE";
    Entity[Entity["Person"] = 1] = "Person";
    Entity[Entity["Organization"] = 2] = "Organization";
})(Entity || (Entity = {}));
export function unionToEntity(type, accessor) {
    switch (Entity[type]) {
        case 'NONE': return null;
        case 'Person': return accessor(new Person());
        case 'Organization': return accessor(new Organization());
        default: return null;
    }
}
export function unionListToEntity(type, accessor, index) {
    switch (Entity[type]) {
        case 'NONE': return null;
        case 'Person': return accessor(index, new Person());
        case 'Organization': return accessor(index, new Organization());
        default: return null;
    }
}
