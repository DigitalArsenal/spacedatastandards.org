// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * Equinoctial Elements
 */
export class equinoctialElements implements flatbuffers.IUnpackableObject<equinoctialElementsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):equinoctialElements {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsequinoctialElements(bb:flatbuffers.ByteBuffer, obj?:equinoctialElements):equinoctialElements {
  return (obj || new equinoctialElements()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsequinoctialElements(bb:flatbuffers.ByteBuffer, obj?:equinoctialElements):equinoctialElements {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new equinoctialElements()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

AF():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

AG():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

L():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

N():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

CHI():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

PSI():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startequinoctialElements(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addAf(builder:flatbuffers.Builder, AF:number) {
  builder.addFieldFloat64(0, AF, 0.0);
}

static addAg(builder:flatbuffers.Builder, AG:number) {
  builder.addFieldFloat64(1, AG, 0.0);
}

static addL(builder:flatbuffers.Builder, L:number) {
  builder.addFieldFloat64(2, L, 0.0);
}

static addN(builder:flatbuffers.Builder, N:number) {
  builder.addFieldFloat64(3, N, 0.0);
}

static addChi(builder:flatbuffers.Builder, CHI:number) {
  builder.addFieldFloat64(4, CHI, 0.0);
}

static addPsi(builder:flatbuffers.Builder, PSI:number) {
  builder.addFieldFloat64(5, PSI, 0.0);
}

static endequinoctialElements(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createequinoctialElements(builder:flatbuffers.Builder, AF:number, AG:number, L:number, N:number, CHI:number, PSI:number):flatbuffers.Offset {
  equinoctialElements.startequinoctialElements(builder);
  equinoctialElements.addAf(builder, AF);
  equinoctialElements.addAg(builder, AG);
  equinoctialElements.addL(builder, L);
  equinoctialElements.addN(builder, N);
  equinoctialElements.addChi(builder, CHI);
  equinoctialElements.addPsi(builder, PSI);
  return equinoctialElements.endequinoctialElements(builder);
}

unpack(): equinoctialElementsT {
  return new equinoctialElementsT(
    this.AF(),
    this.AG(),
    this.L(),
    this.N(),
    this.CHI(),
    this.PSI()
  );
}


unpackTo(_o: equinoctialElementsT): void {
  _o.AF = this.AF();
  _o.AG = this.AG();
  _o.L = this.L();
  _o.N = this.N();
  _o.CHI = this.CHI();
  _o.PSI = this.PSI();
}
}

export class equinoctialElementsT implements flatbuffers.IGeneratedObject {
constructor(
  public AF: number = 0.0,
  public AG: number = 0.0,
  public L: number = 0.0,
  public N: number = 0.0,
  public CHI: number = 0.0,
  public PSI: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return equinoctialElements.createequinoctialElements(builder,
    this.AF,
    this.AG,
    this.L,
    this.N,
    this.CHI,
    this.PSI
  );
}
}
