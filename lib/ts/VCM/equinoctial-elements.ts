// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * Equinoctial Elements
 */
export class equinoctialElements implements flatbuffers.IUnpackableObject<equinoctialElementsT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):equinoctialElements {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsequinoctialElements(bb:flatbuffers.ByteBuffer, obj?:equinoctialElements):equinoctialElements {
  return (obj || new equinoctialElements()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsequinoctialElements(bb:flatbuffers.ByteBuffer, obj?:equinoctialElements):equinoctialElements {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new equinoctialElements()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

af():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

ag():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

l():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

n():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

chi():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

psi():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startequinoctialElements(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addAf(builder:flatbuffers.Builder, af:number) {
  builder.addFieldFloat64(0, af, 0.0);
}

static addAg(builder:flatbuffers.Builder, ag:number) {
  builder.addFieldFloat64(1, ag, 0.0);
}

static addL(builder:flatbuffers.Builder, l:number) {
  builder.addFieldFloat64(2, l, 0.0);
}

static addN(builder:flatbuffers.Builder, n:number) {
  builder.addFieldFloat64(3, n, 0.0);
}

static addChi(builder:flatbuffers.Builder, chi:number) {
  builder.addFieldFloat64(4, chi, 0.0);
}

static addPsi(builder:flatbuffers.Builder, psi:number) {
  builder.addFieldFloat64(5, psi, 0.0);
}

static endequinoctialElements(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createequinoctialElements(builder:flatbuffers.Builder, af:number, ag:number, l:number, n:number, chi:number, psi:number):flatbuffers.Offset {
  equinoctialElements.startequinoctialElements(builder);
  equinoctialElements.addAf(builder, af);
  equinoctialElements.addAg(builder, ag);
  equinoctialElements.addL(builder, l);
  equinoctialElements.addN(builder, n);
  equinoctialElements.addChi(builder, chi);
  equinoctialElements.addPsi(builder, psi);
  return equinoctialElements.endequinoctialElements(builder);
}

unpack(): equinoctialElementsT {
  return new equinoctialElementsT(
    this.af(),
    this.ag(),
    this.l(),
    this.n(),
    this.chi(),
    this.psi()
  );
}


unpackTo(_o: equinoctialElementsT): void {
  _o.af = this.af();
  _o.ag = this.ag();
  _o.l = this.l();
  _o.n = this.n();
  _o.chi = this.chi();
  _o.psi = this.psi();
}
}

export class equinoctialElementsT implements flatbuffers.IGeneratedObject {
constructor(
  public af: number = 0.0,
  public ag: number = 0.0,
  public l: number = 0.0,
  public n: number = 0.0,
  public chi: number = 0.0,
  public psi: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return equinoctialElements.createequinoctialElements(builder,
    this.af,
    this.ag,
    this.l,
    this.n,
    this.chi,
    this.psi
  );
}
}
