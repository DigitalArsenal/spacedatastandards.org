// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Burn Out Vector Message
 */
export class BOV implements flatbuffers.IUnpackableObject<BOVT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BOV {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBOV(bb:flatbuffers.ByteBuffer, obj?:BOV):BOV {
  return (obj || new BOV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBOV(bb:flatbuffers.ByteBuffer, obj?:BOV):BOV {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BOV()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

E_COORDINATE():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

F_COORDINATE():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

G_COORDINATE():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

E_DOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

F_DOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

G_DOT():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

EPOCH_TIME():string|null
EPOCH_TIME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
EPOCH_TIME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

TIME_FROM_LAUNCH():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startBOV(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addECoordinate(builder:flatbuffers.Builder, E_COORDINATE:number) {
  builder.addFieldFloat64(0, E_COORDINATE, 0.0);
}

static addFCoordinate(builder:flatbuffers.Builder, F_COORDINATE:number) {
  builder.addFieldFloat64(1, F_COORDINATE, 0.0);
}

static addGCoordinate(builder:flatbuffers.Builder, G_COORDINATE:number) {
  builder.addFieldFloat64(2, G_COORDINATE, 0.0);
}

static addEDot(builder:flatbuffers.Builder, E_DOT:number) {
  builder.addFieldFloat64(3, E_DOT, 0.0);
}

static addFDot(builder:flatbuffers.Builder, F_DOT:number) {
  builder.addFieldFloat64(4, F_DOT, 0.0);
}

static addGDot(builder:flatbuffers.Builder, G_DOT:number) {
  builder.addFieldFloat64(5, G_DOT, 0.0);
}

static addEpochTime(builder:flatbuffers.Builder, EPOCH_TIMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, EPOCH_TIMEOffset, 0);
}

static addTimeFromLaunch(builder:flatbuffers.Builder, TIME_FROM_LAUNCH:number) {
  builder.addFieldFloat64(7, TIME_FROM_LAUNCH, 0.0);
}

static endBOV(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBOV(builder:flatbuffers.Builder, E_COORDINATE:number, F_COORDINATE:number, G_COORDINATE:number, E_DOT:number, F_DOT:number, G_DOT:number, EPOCH_TIMEOffset:flatbuffers.Offset, TIME_FROM_LAUNCH:number):flatbuffers.Offset {
  BOV.startBOV(builder);
  BOV.addECoordinate(builder, E_COORDINATE);
  BOV.addFCoordinate(builder, F_COORDINATE);
  BOV.addGCoordinate(builder, G_COORDINATE);
  BOV.addEDot(builder, E_DOT);
  BOV.addFDot(builder, F_DOT);
  BOV.addGDot(builder, G_DOT);
  BOV.addEpochTime(builder, EPOCH_TIMEOffset);
  BOV.addTimeFromLaunch(builder, TIME_FROM_LAUNCH);
  return BOV.endBOV(builder);
}

unpack(): BOVT {
  return new BOVT(
    this.E_COORDINATE(),
    this.F_COORDINATE(),
    this.G_COORDINATE(),
    this.E_DOT(),
    this.F_DOT(),
    this.G_DOT(),
    this.EPOCH_TIME(),
    this.TIME_FROM_LAUNCH()
  );
}


unpackTo(_o: BOVT): void {
  _o.E_COORDINATE = this.E_COORDINATE();
  _o.F_COORDINATE = this.F_COORDINATE();
  _o.G_COORDINATE = this.G_COORDINATE();
  _o.E_DOT = this.E_DOT();
  _o.F_DOT = this.F_DOT();
  _o.G_DOT = this.G_DOT();
  _o.EPOCH_TIME = this.EPOCH_TIME();
  _o.TIME_FROM_LAUNCH = this.TIME_FROM_LAUNCH();
}
}

export class BOVT implements flatbuffers.IGeneratedObject {
constructor(
  public E_COORDINATE: number = 0.0,
  public F_COORDINATE: number = 0.0,
  public G_COORDINATE: number = 0.0,
  public E_DOT: number = 0.0,
  public F_DOT: number = 0.0,
  public G_DOT: number = 0.0,
  public EPOCH_TIME: string|Uint8Array|null = null,
  public TIME_FROM_LAUNCH: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const EPOCH_TIME = (this.EPOCH_TIME !== null ? builder.createString(this.EPOCH_TIME!) : 0);

  return BOV.createBOV(builder,
    this.E_COORDINATE,
    this.F_COORDINATE,
    this.G_COORDINATE,
    this.E_DOT,
    this.F_DOT,
    this.G_DOT,
    EPOCH_TIME,
    this.TIME_FROM_LAUNCH
  );
}
}
