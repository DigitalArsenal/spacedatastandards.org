// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Detail, DetailT } from './Detail.js';


/**
 * Publish Notification Message
 */
export class PNM implements flatbuffers.IUnpackableObject<PNMT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):PNM {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPNM(bb:flatbuffers.ByteBuffer, obj?:PNM):PNM {
  return (obj || new PNM()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPNM(bb:flatbuffers.ByteBuffer, obj?:PNM):PNM {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new PNM()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * Unencrypted PNM Details
 * This field contains the details of the Publish Notification Message without encryption.
 */
FILE(obj?:Detail):Detail|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Detail()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

/**
 * Encrypted PNM Details
 * This field contains the details of the Publish Notification Message with encryption.
 */
FILE_ENCRYPTED(obj?:Detail):Detail|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Detail()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startPNM(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addFile(builder:flatbuffers.Builder, FILEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, FILEOffset, 0);
}

static addFileEncrypted(builder:flatbuffers.Builder, FILE_ENCRYPTEDOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, FILE_ENCRYPTEDOffset, 0);
}

static endPNM(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): PNMT {
  return new PNMT(
    (this.FILE() !== null ? this.FILE()!.unpack() : null),
    (this.FILE_ENCRYPTED() !== null ? this.FILE_ENCRYPTED()!.unpack() : null)
  );
}


unpackTo(_o: PNMT): void {
  _o.FILE = (this.FILE() !== null ? this.FILE()!.unpack() : null);
  _o.FILE_ENCRYPTED = (this.FILE_ENCRYPTED() !== null ? this.FILE_ENCRYPTED()!.unpack() : null);
}
}

export class PNMT implements flatbuffers.IGeneratedObject {
constructor(
  public FILE: DetailT|null = null,
  public FILE_ENCRYPTED: DetailT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const FILE = (this.FILE !== null ? this.FILE!.pack(builder) : 0);
  const FILE_ENCRYPTED = (this.FILE_ENCRYPTED !== null ? this.FILE_ENCRYPTED!.pack(builder) : 0);

  PNM.startPNM(builder);
  PNM.addFile(builder, FILE);
  PNM.addFileEncrypted(builder, FILE_ENCRYPTED);

  return PNM.endPNM(builder);
}
}
