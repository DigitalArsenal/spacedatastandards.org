// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



/**
 * Sustainer Details
 */
export class SUSTAINER implements flatbuffers.IUnpackableObject<SUSTAINERT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SUSTAINER {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSUSTAINER(bb:flatbuffers.ByteBuffer, obj?:SUSTAINER):SUSTAINER {
  return (obj || new SUSTAINER()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSUSTAINER(bb:flatbuffers.ByteBuffer, obj?:SUSTAINER):SUSTAINER {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SUSTAINER()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

/**
 * Name of the Sustainer
 */
SUSTAINER_NAME():string|null
SUSTAINER_NAME(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
SUSTAINER_NAME(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Thrust Produced by the Sustainer (in Newtons)
 */
THRUST():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Duration of the Burn (in Seconds)
 */
BURN_DURATION():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startSUSTAINER(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addSustainerName(builder:flatbuffers.Builder, SUSTAINER_NAMEOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, SUSTAINER_NAMEOffset, 0);
}

static addThrust(builder:flatbuffers.Builder, THRUST:number) {
  builder.addFieldFloat64(1, THRUST, 0.0);
}

static addBurnDuration(builder:flatbuffers.Builder, BURN_DURATION:number) {
  builder.addFieldFloat64(2, BURN_DURATION, 0.0);
}

static endSUSTAINER(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSUSTAINER(builder:flatbuffers.Builder, SUSTAINER_NAMEOffset:flatbuffers.Offset, THRUST:number, BURN_DURATION:number):flatbuffers.Offset {
  SUSTAINER.startSUSTAINER(builder);
  SUSTAINER.addSustainerName(builder, SUSTAINER_NAMEOffset);
  SUSTAINER.addThrust(builder, THRUST);
  SUSTAINER.addBurnDuration(builder, BURN_DURATION);
  return SUSTAINER.endSUSTAINER(builder);
}

unpack(): SUSTAINERT {
  return new SUSTAINERT(
    this.SUSTAINER_NAME(),
    this.THRUST(),
    this.BURN_DURATION()
  );
}


unpackTo(_o: SUSTAINERT): void {
  _o.SUSTAINER_NAME = this.SUSTAINER_NAME();
  _o.THRUST = this.THRUST();
  _o.BURN_DURATION = this.BURN_DURATION();
}
}

export class SUSTAINERT implements flatbuffers.IGeneratedObject {
constructor(
  public SUSTAINER_NAME: string|Uint8Array|null = null,
  public THRUST: number = 0.0,
  public BURN_DURATION: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const SUSTAINER_NAME = (this.SUSTAINER_NAME !== null ? builder.createString(this.SUSTAINER_NAME!) : 0);

  return SUSTAINER.createSUSTAINER(builder,
    SUSTAINER_NAME,
    this.THRUST,
    this.BURN_DURATION
  );
}
}
