// automatically generated by the FlatBuffers compiler, do not modify

import { OrganizationAttributes, OrganizationAttributesT } from './OrganizationAttributes.js';
import { PersonAttributes, PersonAttributesT } from './PersonAttributes.js';


/**
 * Union for specific attributes, distinguishing between Person and Organization
 */
export enum SpecificAttributes {
  NONE = 0,
  PersonAttributes = 1,
  OrganizationAttributes = 2
}

export function unionToSpecificAttributes(
  type: SpecificAttributes,
  accessor: (obj:OrganizationAttributes|PersonAttributes) => OrganizationAttributes|PersonAttributes|null
): OrganizationAttributes|PersonAttributes|null {
  switch(SpecificAttributes[type]) {
    case 'NONE': return null; 
    case 'PersonAttributes': return accessor(new PersonAttributes())! as PersonAttributes;
    case 'OrganizationAttributes': return accessor(new OrganizationAttributes())! as OrganizationAttributes;
    default: return null;
  }
}

export function unionListToSpecificAttributes(
  type: SpecificAttributes, 
  accessor: (index: number, obj:OrganizationAttributes|PersonAttributes) => OrganizationAttributes|PersonAttributes|null, 
  index: number
): OrganizationAttributes|PersonAttributes|null {
  switch(SpecificAttributes[type]) {
    case 'NONE': return null; 
    case 'PersonAttributes': return accessor(index, new PersonAttributes())! as PersonAttributes;
    case 'OrganizationAttributes': return accessor(index, new OrganizationAttributes())! as OrganizationAttributes;
    default: return null;
  }
}
