// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * IPFS CID and Account Identifier
 */
@SuppressWarnings("unused")
public final class IPFS_CID_ADDRESS extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static IPFS_CID_ADDRESS getRootAsIPFS_CID_ADDRESS(ByteBuffer _bb) { return getRootAsIPFS_CID_ADDRESS(_bb, new IPFS_CID_ADDRESS()); }
  public static IPFS_CID_ADDRESS getRootAsIPFS_CID_ADDRESS(ByteBuffer _bb, IPFS_CID_ADDRESS obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IPFS_CID_ADDRESS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String IPFS_CID() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer IPFS_CIDAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer IPFS_CIDInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String KEY_ADDRESS() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer KEY_ADDRESSAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer KEY_ADDRESSInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createIPFS_CID_ADDRESS(FlatBufferBuilder builder,
      int IPFS_CIDOffset,
      int KEY_ADDRESSOffset) {
    builder.startTable(2);
    IPFS_CID_ADDRESS.addKeyAddress(builder, KEY_ADDRESSOffset);
    IPFS_CID_ADDRESS.addIpfsCid(builder, IPFS_CIDOffset);
    return IPFS_CID_ADDRESS.endIPFS_CID_ADDRESS(builder);
  }

  public static void startIPFS_CID_ADDRESS(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addIpfsCid(FlatBufferBuilder builder, int IPFS_CIDOffset) { builder.addOffset(0, IPFS_CIDOffset, 0); }
  public static void addKeyAddress(FlatBufferBuilder builder, int KEY_ADDRESSOffset) { builder.addOffset(1, KEY_ADDRESSOffset, 0); }
  public static int endIPFS_CID_ADDRESS(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IPFS_CID_ADDRESS get(int j) { return get(new IPFS_CID_ADDRESS(), j); }
    public IPFS_CID_ADDRESS get(IPFS_CID_ADDRESS obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

