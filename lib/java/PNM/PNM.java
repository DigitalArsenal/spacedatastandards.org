// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Publish Notification Message
 */
@SuppressWarnings("unused")
public final class PNM extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static PNM getRootAsPNM(ByteBuffer _bb) { return getRootAsPNM(_bb, new PNM()); }
  public static PNM getRootAsPNM(ByteBuffer _bb, PNM obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PNM __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unencrypted PNM Details
   * This field contains the details of the Publish Notification Message without encryption.
   */
  public Detail FILE() { return FILE(new Detail()); }
  public Detail FILE(Detail obj) { int o = __offset(4); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  /**
   * Encrypted PNM Details
   * This field contains the details of the Publish Notification Message with encryption.
   */
  public Detail FILE_ENCRYPTED() { return FILE_ENCRYPTED(new Detail()); }
  public Detail FILE_ENCRYPTED(Detail obj) { int o = __offset(6); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }

  public static int createPNM(FlatBufferBuilder builder,
      int FILEOffset,
      int FILE_ENCRYPTEDOffset) {
    builder.startTable(2);
    PNM.addFileEncrypted(builder, FILE_ENCRYPTEDOffset);
    PNM.addFile(builder, FILEOffset);
    return PNM.endPNM(builder);
  }

  public static void startPNM(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addFile(FlatBufferBuilder builder, int FILEOffset) { builder.addOffset(0, FILEOffset, 0); }
  public static void addFileEncrypted(FlatBufferBuilder builder, int FILE_ENCRYPTEDOffset) { builder.addOffset(1, FILE_ENCRYPTEDOffset, 0); }
  public static int endPNM(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PNM get(int j) { return get(new PNM(), j); }
    public PNM get(PNM obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

