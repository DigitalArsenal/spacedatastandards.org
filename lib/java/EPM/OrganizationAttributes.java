// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Specific attributes for an Organization
 */
@SuppressWarnings("unused")
public final class OrganizationAttributes extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static OrganizationAttributes getRootAsOrganizationAttributes(ByteBuffer _bb) { return getRootAsOrganizationAttributes(_bb, new OrganizationAttributes()); }
  public static OrganizationAttributes getRootAsOrganizationAttributes(ByteBuffer _bb, OrganizationAttributes obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public OrganizationAttributes __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Legal name of the organization
   */
  public String LEGAL_NAME() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer LEGAL_NAMEAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer LEGAL_NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }

  public static int createOrganizationAttributes(FlatBufferBuilder builder,
      int LEGAL_NAMEOffset) {
    builder.startTable(1);
    OrganizationAttributes.addLegalName(builder, LEGAL_NAMEOffset);
    return OrganizationAttributes.endOrganizationAttributes(builder);
  }

  public static void startOrganizationAttributes(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addLegalName(FlatBufferBuilder builder, int LEGAL_NAMEOffset) { builder.addOffset(0, LEGAL_NAMEOffset, 0); }
  public static int endOrganizationAttributes(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public OrganizationAttributes get(int j) { return get(new OrganizationAttributes(), j); }
    public OrganizationAttributes get(OrganizationAttributes obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

