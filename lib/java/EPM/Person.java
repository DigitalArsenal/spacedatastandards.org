// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Information about a person
 */
@SuppressWarnings("unused")
public final class Person extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static Person getRootAsPerson(ByteBuffer _bb) { return getRootAsPerson(_bb, new Person()); }
  public static Person getRootAsPerson(ByteBuffer _bb, Person obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Person __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Family name or surname of the person
   */
  public String FAMILY_NAME() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer FAMILY_NAMEAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer FAMILY_NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Given name or first name of the person
   */
  public String GIVEN_NAME() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer GIVEN_NAMEAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer GIVEN_NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Additional name or middle name of the person
   */
  public String ADDITIONAL_NAME() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ADDITIONAL_NAMEAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer ADDITIONAL_NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Honorific prefix preceding the person's name
   */
  public String HONORIFIC_PREFIX() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer HONORIFIC_PREFIXAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer HONORIFIC_PREFIXInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Honorific suffix following the person's name
   */
  public String HONORIFIC_SUFFIX() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer HONORIFIC_SUFFIXAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer HONORIFIC_SUFFIXInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }

  public static int createPerson(FlatBufferBuilder builder,
      int FAMILY_NAMEOffset,
      int GIVEN_NAMEOffset,
      int ADDITIONAL_NAMEOffset,
      int HONORIFIC_PREFIXOffset,
      int HONORIFIC_SUFFIXOffset) {
    builder.startTable(5);
    Person.addHonorificSuffix(builder, HONORIFIC_SUFFIXOffset);
    Person.addHonorificPrefix(builder, HONORIFIC_PREFIXOffset);
    Person.addAdditionalName(builder, ADDITIONAL_NAMEOffset);
    Person.addGivenName(builder, GIVEN_NAMEOffset);
    Person.addFamilyName(builder, FAMILY_NAMEOffset);
    return Person.endPerson(builder);
  }

  public static void startPerson(FlatBufferBuilder builder) { builder.startTable(5); }
  public static void addFamilyName(FlatBufferBuilder builder, int FAMILY_NAMEOffset) { builder.addOffset(0, FAMILY_NAMEOffset, 0); }
  public static void addGivenName(FlatBufferBuilder builder, int GIVEN_NAMEOffset) { builder.addOffset(1, GIVEN_NAMEOffset, 0); }
  public static void addAdditionalName(FlatBufferBuilder builder, int ADDITIONAL_NAMEOffset) { builder.addOffset(2, ADDITIONAL_NAMEOffset, 0); }
  public static void addHonorificPrefix(FlatBufferBuilder builder, int HONORIFIC_PREFIXOffset) { builder.addOffset(3, HONORIFIC_PREFIXOffset, 0); }
  public static void addHonorificSuffix(FlatBufferBuilder builder, int HONORIFIC_SUFFIXOffset) { builder.addOffset(4, HONORIFIC_SUFFIXOffset, 0); }
  public static int endPerson(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Person get(int j) { return get(new Person(), j); }
    public Person get(Person obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

