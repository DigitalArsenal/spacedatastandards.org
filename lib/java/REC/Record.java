// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Record extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Record getRootAsRecord(ByteBuffer _bb) { return getRootAsRecord(_bb, new Record()); }
  public static Record getRootAsRecord(ByteBuffer _bb, Record obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Record __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte valueType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table value(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }
  public String standard() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer standardAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer standardInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createRecord(FlatBufferBuilder builder,
      byte valueType,
      int valueOffset,
      int standardOffset) {
    builder.startTable(3);
    Record.addStandard(builder, standardOffset);
    Record.addValue(builder, valueOffset);
    Record.addValueType(builder, valueType);
    return Record.endRecord(builder);
  }

  public static void startRecord(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addValueType(FlatBufferBuilder builder, byte valueType) { builder.addByte(0, valueType, 0); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(1, valueOffset, 0); }
  public static void addStandard(FlatBufferBuilder builder, int standardOffset) { builder.addOffset(2, standardOffset, 0); }
  public static int endRecord(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Record get(int j) { return get(new Record(), j); }
    public Record get(Record obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

