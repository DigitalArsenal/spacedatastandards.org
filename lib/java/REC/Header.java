// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Header extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Header getRootAsHeader(ByteBuffer _bb) { return getRootAsHeader(_bb, new Header()); }
  public static Header getRootAsHeader(ByteBuffer _bb, Header obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Header __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Format version in the form of 'x.y', where 'y' is incremented for minor changes, and 'x' for major changes.
   */
  public String CCSDS_OCM_VERS() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CCSDS_OCM_VERSAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer CCSDS_OCM_VERSInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Comments (a contiguous set of one or more comment lines may be provided immediately after the version number).
   */
  public String COMMENT(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int COMMENTLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector commentVector() { return commentVector(new StringVector()); }
  public StringVector commentVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * User-defined free-text message classification/caveats of this OCM.
   */
  public String CLASSIFICATION() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CLASSIFICATIONAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer CLASSIFICATIONInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * File creation date/time in UTC.
   */
  public String CREATION_DATE() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CREATION_DATEAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer CREATION_DATEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Creating agency or operator.
   */
  public String ORIGINATOR() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ORIGINATORAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer ORIGINATORInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Free-text field containing an ID that uniquely identifies a message from this originator.
   */
  public String MESSAGE_ID() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer MESSAGE_IDAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer MESSAGE_IDInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }

  public static int createHeader(FlatBufferBuilder builder,
      int CCSDS_OCM_VERSOffset,
      int COMMENTOffset,
      int CLASSIFICATIONOffset,
      int CREATION_DATEOffset,
      int ORIGINATOROffset,
      int MESSAGE_IDOffset) {
    builder.startTable(6);
    Header.addMessageId(builder, MESSAGE_IDOffset);
    Header.addOriginator(builder, ORIGINATOROffset);
    Header.addCreationDate(builder, CREATION_DATEOffset);
    Header.addClassification(builder, CLASSIFICATIONOffset);
    Header.addComment(builder, COMMENTOffset);
    Header.addCcsdsOcmVers(builder, CCSDS_OCM_VERSOffset);
    return Header.endHeader(builder);
  }

  public static void startHeader(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addCcsdsOcmVers(FlatBufferBuilder builder, int CCSDS_OCM_VERSOffset) { builder.addOffset(0, CCSDS_OCM_VERSOffset, 0); }
  public static void addComment(FlatBufferBuilder builder, int COMMENTOffset) { builder.addOffset(1, COMMENTOffset, 0); }
  public static int createCommentVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCommentVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addClassification(FlatBufferBuilder builder, int CLASSIFICATIONOffset) { builder.addOffset(2, CLASSIFICATIONOffset, 0); }
  public static void addCreationDate(FlatBufferBuilder builder, int CREATION_DATEOffset) { builder.addOffset(3, CREATION_DATEOffset, 0); }
  public static void addOriginator(FlatBufferBuilder builder, int ORIGINATOROffset) { builder.addOffset(4, ORIGINATOROffset, 0); }
  public static void addMessageId(FlatBufferBuilder builder, int MESSAGE_IDOffset) { builder.addOffset(5, MESSAGE_IDOffset, 0); }
  public static int endHeader(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Header get(int j) { return get(new Header(), j); }
    public Header get(Header obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

