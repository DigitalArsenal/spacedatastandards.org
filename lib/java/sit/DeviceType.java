// automatically generated by the FlatBuffers compiler, do not modify

@SuppressWarnings("unused")
public final class DeviceType {
  private DeviceType() { }
  /**
   * Basic or undefined sensor type
   */
  public static final byte UNKNOWN = 0;
  /**
   * General optical sensors
   */
  public static final byte OPTICAL = 1;
  /**
   * Detects infrared radiation
   */
  public static final byte INFRARED_SENSOR = 2;
  /**
   * Sensitive to ultraviolet light
   */
  public static final byte ULTRAVIOLET_SENSOR = 3;
  /**
   * For X-ray detection
   */
  public static final byte X_RAY_SENSOR = 4;
  /**
   * For gamma-ray detection
   */
  public static final byte GAMMA_RAY_SENSOR = 5;
  /**
   * Basic radar systems
   */
  public static final byte RADAR = 6;
  /**
   * Advanced radar with phased array technology
   */
  public static final byte PHASED_ARRAY_RADAR = 7;
  /**
   * For high-resolution imaging
   */
  public static final byte SYNTHETIC_APERTURE_RADAR = 8;
  /**
   * For astronomical observations using bistatic setup
   */
  public static final byte BISTATIC_RADIO_TELESCOPE = 9;
  /**
   * For radio astronomy
   */
  public static final byte RADIO_TELESCOPE = 10;
  /**
   * For atmospheric studies
   */
  public static final byte ATMOSPHERIC_SENSOR = 11;
  /**
   * For observing space weather phenomena
   */
  public static final byte SPACE_WEATHER_SENSOR = 12;
  /**
   * General environmental monitoring
   */
  public static final byte ENVIRONMENTAL_SENSOR = 13;
  /**
   * For measuring seismic activities
   */
  public static final byte SEISMIC_SENSOR = 14;
  /**
   * For gravity measurements
   */
  public static final byte GRAVIMETRIC_SENSOR = 15;
  /**
   * For magnetic field detection
   */
  public static final byte MAGNETIC_SENSOR = 16;
  /**
   * For electromagnetic field analysis
   */
  public static final byte ELECTROMAGNETIC_SENSOR = 17;
  /**
   * For temperature and heat detection
   */
  public static final byte THERMAL_SENSOR = 18;
  /**
   * For detecting chemicals and substances
   */
  public static final byte CHEMICAL_SENSOR = 19;
  /**
   * For biological research and detection
   */
  public static final byte BIOLOGICAL_SENSOR = 20;
  /**
   * For detecting ionizing radiation
   */
  public static final byte RADIATION_SENSOR = 21;
  /**
   * For detecting subatomic particles
   */
  public static final byte PARTICLE_DETECTOR = 22;
  /**
   * Light Detection and Ranging
   */
  public static final byte LIDAR = 23;
  /**
   * Sound Navigation and Ranging
   */
  public static final byte SONAR = 24;
  /**
   * General telescopes for astronomical observations
   */
  public static final byte TELESCOPE = 25;
  /**
   * For spectral analysis
   */
  public static final byte SPECTROSCOPIC_SENSOR = 26;
  /**
   * For measuring light intensity
   */
  public static final byte PHOTOMETRIC_SENSOR = 27;
  /**
   * For analyzing polarization of light
   */
  public static final byte POLARIMETRIC_SENSOR = 28;
  /**
   * For detailed imaging using interference
   */
  public static final byte INTERFEROMETRIC_SENSOR = 29;
  /**
   * Capturing image data at multiple wavelengths
   */
  public static final byte MULTISPECTRAL_SENSOR = 30;
  /**
   * Advanced imaging across many spectral bands
   */
  public static final byte HYPERSPECTRAL_SENSOR = 31;
  /**
   * For Global Positioning System reception
   */
  public static final byte GPS_RECEIVER = 32;
  /**
   * Standard radio communication device
   */
  public static final byte RADIO_COMMUNICATIONS = 33;
  /**
   * Advanced laser communication system
   */
  public static final byte LASER_COMMUNICATIONS = 34;
  /**
   * Satellite communication system
   */
  public static final byte SATELLITE_COMMUNICATIONS = 35;
  /**
   * Device for laser-based experiments and measurements
   */
  public static final byte LASER_INSTRUMENT = 36;
  /**
   * Radio frequency analysis and measurement device
   */
  public static final byte RF_ANALYZER = 37;
  /**
   * Device for ionospheric research
   */
  public static final byte IONOSPHERIC_SENSOR = 38;
  /**
   * Device for laser-based imaging
   */
  public static final byte LASER_IMAGING = 39;
  /**
   * Advanced optical telescope
   */
  public static final byte OPTICAL_TELESCOPE = 40;
  /**
   * Device for high-resolution optical observations
   */
  public static final byte HIGH_RESOLUTION_OPTICAL = 41;
  public static final byte RADIO = 42;
  /**
   * Microwave communication device
   */
  public static final byte MICROWAVE_TRANSMITTER = 43;
  /**
   * Device for radio frequency monitoring
   */
  public static final byte RF_MONITOR = 44;
  /**
   * High-frequency radio communication device
   */
  public static final byte HF_RADIO_COMMUNICATIONS = 45;

  public static final String[] names = { "UNKNOWN", "OPTICAL", "INFRARED_SENSOR", "ULTRAVIOLET_SENSOR", "X_RAY_SENSOR", "GAMMA_RAY_SENSOR", "RADAR", "PHASED_ARRAY_RADAR", "SYNTHETIC_APERTURE_RADAR", "BISTATIC_RADIO_TELESCOPE", "RADIO_TELESCOPE", "ATMOSPHERIC_SENSOR", "SPACE_WEATHER_SENSOR", "ENVIRONMENTAL_SENSOR", "SEISMIC_SENSOR", "GRAVIMETRIC_SENSOR", "MAGNETIC_SENSOR", "ELECTROMAGNETIC_SENSOR", "THERMAL_SENSOR", "CHEMICAL_SENSOR", "BIOLOGICAL_SENSOR", "RADIATION_SENSOR", "PARTICLE_DETECTOR", "LIDAR", "SONAR", "TELESCOPE", "SPECTROSCOPIC_SENSOR", "PHOTOMETRIC_SENSOR", "POLARIMETRIC_SENSOR", "INTERFEROMETRIC_SENSOR", "MULTISPECTRAL_SENSOR", "HYPERSPECTRAL_SENSOR", "GPS_RECEIVER", "RADIO_COMMUNICATIONS", "LASER_COMMUNICATIONS", "SATELLITE_COMMUNICATIONS", "LASER_INSTRUMENT", "RF_ANALYZER", "IONOSPHERIC_SENSOR", "LASER_IMAGING", "OPTICAL_TELESCOPE", "HIGH_RESOLUTION_OPTICAL", "RADIO", "MICROWAVE_TRANSMITTER", "RF_MONITOR", "HF_RADIO_COMMUNICATIONS", };

  public static String name(int e) { return names[e]; }
}

