// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Sustainer Details
 */
@SuppressWarnings("unused")
public final class SUSTAINER extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SUSTAINER getRootAsSUSTAINER(ByteBuffer _bb) { return getRootAsSUSTAINER(_bb, new SUSTAINER()); }
  public static SUSTAINER getRootAsSUSTAINER(ByteBuffer _bb, SUSTAINER obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SUSTAINER __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Name of the Sustainer
   */
  public String SUSTAINER_NAME() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer SUSTAINER_NAMEAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer SUSTAINER_NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Thrust Produced by the Sustainer (in Newtons)
   */
  public double THRUST() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Duration of the Burn (in Seconds)
   */
  public double BURN_DURATION() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createSUSTAINER(FlatBufferBuilder builder,
      int SUSTAINER_NAMEOffset,
      double THRUST,
      double BURN_DURATION) {
    builder.startTable(3);
    SUSTAINER.addBurnDuration(builder, BURN_DURATION);
    SUSTAINER.addThrust(builder, THRUST);
    SUSTAINER.addSustainerName(builder, SUSTAINER_NAMEOffset);
    return SUSTAINER.endSUSTAINER(builder);
  }

  public static void startSUSTAINER(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addSustainerName(FlatBufferBuilder builder, int SUSTAINER_NAMEOffset) { builder.addOffset(0, SUSTAINER_NAMEOffset, 0); }
  public static void addThrust(FlatBufferBuilder builder, double THRUST) { builder.addDouble(1, THRUST, 0.0); }
  public static void addBurnDuration(FlatBufferBuilder builder, double BURN_DURATION) { builder.addDouble(2, BURN_DURATION, 0.0); }
  public static int endSUSTAINER(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SUSTAINER get(int j) { return get(new SUSTAINER(), j); }
    public SUSTAINER get(SUSTAINER obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

