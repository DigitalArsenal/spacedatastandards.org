// automatically generated by the FlatBuffers compiler, do not modify

@SuppressWarnings("unused")
public final class refFrame {
  private refFrame() { }
  /**
   * Earth-Centered-Earth-Fixed: Rotates with Earth. X-axis at prime meridian, Y eastward, Z towards North Pole.
   */
  public static final byte ECEF = 0;
  /**
   * International Celestial Reference Frame: Fixed relative to distant stars. Used in astronomy.
   */
  public static final byte ICRF = 1;
  /**
   * True Equator Mean Equinox: Dynamic frame for SGP4 satellite tracking.
   */
  public static final byte TEME = 2;
  /**
   * East-North-Up: Local tangent plane for surface points. Suitable for stationary objects.
   */
  public static final byte ENU = 3;
  /**
   * North-East-Down: Aviation/navigation frame aligned with gravity.
   */
  public static final byte NED = 4;
  /**
   * North-East-Up: Similar to NED, with "Up" opposite gravity.
   */
  public static final byte NEU = 5;
  /**
   * Radial-Intrack-Cross-track: Spacecraft orientation aligned with orbit.
   */
  public static final byte RIC = 6;
  /**
   * Earth Mean Equator and Equinox of J2000: Fixed relative to stars, used for celestial mechanics.
   */
  public static final byte J2000 = 7;
  /**
   * Geocentric Celestial Reference Frame: Inertial Earth-centered frame.
   */
  public static final byte GCRF = 8;
  /**
   * Greenwich Rotating Coordinates: Rotates with Earth's true equator.
   */
  public static final byte GRC = 9;
  /**
   * International Terrestrial Reference Frame 2000: Rotating Earth-fixed frame.
   */
  public static final byte ITRF2000 = 10;
  /**
   * International Terrestrial Reference Frame 1993: Older ITRF realization.
   */
  public static final byte ITRF93 = 11;
  /**
   * International Terrestrial Reference Frame 1997: Intermediate ITRF realization.
   */
  public static final byte ITRF97 = 12;
  /**
   * True of Date, Rotating: Rotates with Earth's true equator.
   */
  public static final byte TDR = 13;
  /**
   * True of Date: Similar to TDR, without rotation.
   */
  public static final byte TOD = 14;
  /**
   * Radial, Transverse, Normal: Orbit frame for spacecraft dynamics.
   */
  public static final byte RTN = 15;
  /**
   * Transverse, Velocity, Normal: Alternative orbit frame.
   */
  public static final byte TVN = 16;
  /**
   * Vehicle-Body-Local-Horizontal: Orbit frame aligned with spacecraft.
   */
  public static final byte VVLH = 17;
  /**
   * Vehicle-Local-Vertical-Local-Horizontal: Used in surface or proximity ops.
   */
  public static final byte VLVH = 18;
  /**
   * Local Tangent Plane: Surface-fixed frame for terrestrial uses.
   */
  public static final byte LTP = 19;
  /**
   * Local Vertical-Local Horizontal: Orbit frame with Z towards Earth center.
   */
  public static final byte LVLH = 20;
  /**
   * Polar-North-East: Polar coordinate frame.
   */
  public static final byte PNE = 21;
  /**
   * Body-Fixed Reference Frame: Fixed to a spacecraft or celestial object.
   */
  public static final byte BRF = 22;
  /**
   * Radial, Down-track, Cross-track: Alternate name for RTN.
   */
  public static final byte RSW = 23;
  /**
   * Tangential, Normal, Cross-track: Local orbit frame.
   */
  public static final byte TNW = 24;
  /**
   * Radial, Along-track, Cross-track: Satellite motion frame.
   */
  public static final byte UVW = 25;
  /**
   * Equinoctial Inertial: Frame with axes aligned to orbital properties.
   */
  public static final byte EQW_INERTIAL = 26;
  /**
   * Inertial version of LVLH.
   */
  public static final byte LVLH_INERTIAL = 27;
  /**
   * Rotating LVLH frame.
   */
  public static final byte LVLH_ROTATING = 28;
  /**
   * Inertial Nadir-Sun-Normal frame.
   */
  public static final byte NSW_INERTIAL = 29;
  /**
   * Rotating Nadir-Sun-Normal frame.
   */
  public static final byte NSW_ROTATING = 30;
  /**
   * Inertial Transverse-Velocity-Normal frame.
   */
  public static final byte NTW_INERTIAL = 31;
  /**
   * Rotating Transverse-Velocity-Normal frame.
   */
  public static final byte NTW_ROTATING = 32;
  /**
   * Perifocal Coordinate System: Inertial frame aligned to periapsis.
   */
  public static final byte PQW_INERTIAL = 33;
  /**
   * Inertial Radial, Transverse, Normal frame.
   */
  public static final byte RSW_INERTIAL = 34;
  /**
   * Rotating RSW frame: Aligned with orbit angular momentum.
   */
  public static final byte RSW_ROTATING = 35;
  /**
   * South/East/Zenith inertial frame.
   */
  public static final byte SEZ_INERTIAL = 36;
  /**
   * Rotating South/East/Zenith frame.
   */
  public static final byte SEZ_ROTATING = 37;
  /**
   * Inertial Tangential, Normal, Cross-track frame.
   */
  public static final byte TNW_INERTIAL = 38;
  /**
   * Rotating Tangential, Normal, Cross-track frame.
   */
  public static final byte TNW_ROTATING = 39;
  /**
   * Velocity, Normal, Co-normal inertial frame.
   */
  public static final byte VNC_INERTIAL = 40;
  /**
   * Rotating Velocity, Normal, Co-normal frame.
   */
  public static final byte VNC_ROTATING = 41;
  /**
   * Central Body alignment inertial frame.
   */
  public static final byte ALIGN_CB = 42;
  /**
   * Earth alignment inertial frame.
   */
  public static final byte ALIGN_EARTH = 43;
  /**
   * Inertial realization of B1950 epoch.
   */
  public static final byte B1950 = 44;
  /**
   * Celestial Intermediate Reference System.
   */
  public static final byte CIRS = 45;
  /**
   * DTRF Inertial frame with corrections.
   */
  public static final byte DTRFyyyy = 46;
  /**
   * Earth-Fixed Greenwich rotating frame.
   */
  public static final byte EFG = 47;
  /**
   * Earth Mean Equator and Equinox of 2000 epoch.
   */
  public static final byte EME2000 = 48;
  /**
   * Central Body fixed rotating frame.
   */
  public static final byte FIXED_CB = 49;
  /**
   * Earth-fixed rotating frame.
   */
  public static final byte FIXED_EARTH = 50;
  /**
   * Geocentric Celestial Reference Frame with versioning.
   */
  public static final byte GCRFn = 51;
  /**
   * Greenwich True-of-Date rotating frame.
   */
  public static final byte GTOD = 52;
  /**
   * Mean of Date for all central bodies except Earth and Moon.
   */
  public static final byte MOD_CB = 53;
  /**
   * Mean of Date for Earth.
   */
  public static final byte MOD_EARTH = 54;
  /**
   * Mean of Date for Moon.
   */
  public static final byte MOD_MOON = 55;
  /**
   * Mean of Epoch for central bodies.
   */
  public static final byte MOE_CB = 56;
  /**
   * Mean of Epoch for Earth.
   */
  public static final byte MOE_EARTH = 57;
  /**
   * Lunar Moon Mean Earth reference frame.
   */
  public static final byte MOON_ME = 58;
  /**
   * Lunar Mean Equator and IAU Node reference frame.
   */
  public static final byte MOON_MEIAUE = 59;
  /**
   * Lunar Principal Axis rotating frame.
   */
  public static final byte MOON_PAxxx = 60;
  /**
   * True Equator Mean Equinox of Date.
   */
  public static final byte TEMEOFDATE = 61;
  /**
   * True Equator Mean Equinox of Epoch.
   */
  public static final byte TEMEOFEPOCH = 62;
  /**
   * Terrestrial Intermediate Reference System.
   */
  public static final byte TIRS = 63;
  /**
   * True of Date for central bodies.
   */
  public static final byte TOD_CB = 64;
  /**
   * True of Date for Earth.
   */
  public static final byte TOD_EARTH = 65;
  /**
   * True of Date for Moon.
   */
  public static final byte TOD_MOON = 66;
  /**
   * True of Epoch for central bodies.
   */
  public static final byte TOE_CB = 67;
  /**
   * True of Epoch for Earth.
   */
  public static final byte TOE_EARTH = 68;
  /**
   * True of Epoch for Moon.
   */
  public static final byte TOE_MOON = 69;
  /**
   * True Ecliptic reference frame.
   */
  public static final byte TRUE_ECLIPTIC = 70;
  /**
   * Launch go-inertial reference frame.
   */
  public static final byte UVW_GO_INERTIAL = 71;
  /**
   * WGS 84 Earth-fixed terrestrial system.
   */
  public static final byte WGS84 = 72;
  /**
   * Accelerometer reference frame.
   */
  public static final byte ACC_i = 73;
  /**
   * Actuator reference frame.
   */
  public static final byte ACTUATOR_i = 74;
  /**
   * Autonomous Star Tracker reference frame.
   */
  public static final byte AST_i = 75;
  /**
   * Coarse Sun Sensor reference frame.
   */
  public static final byte CSS_i = 76;
  /**
   * Digital Sun Sensor reference frame.
   */
  public static final byte DSS_i = 77;
  /**
   * Earth Sensor Assembly reference frame.
   */
  public static final byte ESA_i = 78;
  /**
   * Gyro reference frame.
   */
  public static final byte GYRO_FRAME_i = 79;
  /**
   * Inertial Measurement Unit reference frame.
   */
  public static final byte IMU_FRAME_i = 80;
  /**
   * Instrument reference frame.
   */
  public static final byte INSTRUMENT_i = 81;
  /**
   * Magnetic Torque Assembly reference frame.
   */
  public static final byte MTA_i = 82;
  /**
   * Reaction Wheel reference frame.
   */
  public static final byte RW_i = 83;
  /**
   * Solar Array reference frame.
   */
  public static final byte SA_i = 84;
  /**
   * Spacecraft Body reference frame.
   */
  public static final byte SC_BODY_i = 85;
  /**
   * Sensor reference frame.
   */
  public static final byte SENSOR_i = 86;
  /**
   * Star Tracker reference frame.
   */
  public static final byte STARTRACKER_i = 87;
  /**
   * Three Axis Magnetometer reference frame.
   */
  public static final byte TAM_i = 88;

  public static final String[] names = { "ECEF", "ICRF", "TEME", "ENU", "NED", "NEU", "RIC", "J2000", "GCRF", "GRC", "ITRF2000", "ITRF93", "ITRF97", "TDR", "TOD", "RTN", "TVN", "VVLH", "VLVH", "LTP", "LVLH", "PNE", "BRF", "RSW", "TNW", "UVW", "EQW_INERTIAL", "LVLH_INERTIAL", "LVLH_ROTATING", "NSW_INERTIAL", "NSW_ROTATING", "NTW_INERTIAL", "NTW_ROTATING", "PQW_INERTIAL", "RSW_INERTIAL", "RSW_ROTATING", "SEZ_INERTIAL", "SEZ_ROTATING", "TNW_INERTIAL", "TNW_ROTATING", "VNC_INERTIAL", "VNC_ROTATING", "ALIGN_CB", "ALIGN_EARTH", "B1950", "CIRS", "DTRFyyyy", "EFG", "EME2000", "FIXED_CB", "FIXED_EARTH", "GCRFn", "GTOD", "MOD_CB", "MOD_EARTH", "MOD_MOON", "MOE_CB", "MOE_EARTH", "MOON_ME", "MOON_MEIAUE", "MOON_PAxxx", "TEMEOFDATE", "TEMEOFEPOCH", "TIRS", "TOD_CB", "TOD_EARTH", "TOD_MOON", "TOE_CB", "TOE_EARTH", "TOE_MOON", "TRUE_ECLIPTIC", "UVW_GO_INERTIAL", "WGS84", "ACC_i", "ACTUATOR_i", "AST_i", "CSS_i", "DSS_i", "ESA_i", "GYRO_FRAME_i", "IMU_FRAME_i", "INSTRUMENT_i", "MTA_i", "RW_i", "SA_i", "SC_BODY_i", "SENSOR_i", "STARTRACKER_i", "TAM_i", };

  public static String name(int e) { return names[e]; }
}

