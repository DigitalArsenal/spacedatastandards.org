// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Site Information Message
 */
@SuppressWarnings("unused")
public final class SIT extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SIT getRootAsSIT(ByteBuffer _bb) { return getRootAsSIT(_bb, new SIT()); }
  public static SIT getRootAsSIT(ByteBuffer _bb, SIT obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean SITBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "$SIT"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SIT __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier for the site, BE_NUMBER
   */
  public String ID() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer IDAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer IDInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Name of the site
   */
  public String NAME() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer NAMEAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer NAMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Abbreviation
   */
  public String ABBREVIATION() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ABBREVIATIONAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer ABBREVIATIONInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Site type as defined in SiteType enum
   */
  public byte SITE_TYPE() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Site type CATCODE
   */
  public String CATCODE() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CATCODEAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer CATCODEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Network identifier
   */
  public String NETWORK() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer NETWORKAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer NETWORKInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Latitude of the site
   */
  public float LATITUDE() { int o = __offset(16); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  /**
   * Longitude of the site
   */
  public float LONGITUDE() { int o = __offset(18); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  /**
   * Altitude of the site
   */
  public float ALTITUDE() { int o = __offset(20); return o != 0 ? bb.getFloat(o + bb_pos) : 0.0f; }
  /**
   * Geometry of the site
   */
  public Geometry GEOMETRY() { return GEOMETRY(new Geometry()); }
  public Geometry GEOMETRY(Geometry obj) { int o = __offset(22); return o != 0 ? obj.__assign(__indirect(o + bb_pos), bb) : null; }
  /**
   * Center point geometry coordinates
   */
  public float CENTER_POINT_GEOMETRY(int j) { int o = __offset(24); return o != 0 ? bb.getFloat(__vector(o) + j * 4) : 0; }
  public int CENTER_POINT_GEOMETRYLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public FloatVector centerPointGeometryVector() { return centerPointGeometryVector(new FloatVector()); }
  public FloatVector centerPointGeometryVector(FloatVector obj) { int o = __offset(24); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer CENTER_POINT_GEOMETRYAsByteBuffer() { return __vector_as_bytebuffer(24, 4); }
  public ByteBuffer CENTER_POINT_GEOMETRYInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 4); }
  /**
   * Classification marking of the site
   */
  public String CLASSIFICATION() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CLASSIFICATIONAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer CLASSIFICATIONInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * CTR ISO 3166 Numeric code as string
   */
  public String CTR_ID() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CTR_IDAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer CTR_IDInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Identifier of the user who created the site data
   */
  public String CREATED_BY() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CREATED_BYAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer CREATED_BYInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Description of the site
   */
  public String DESCRIPTION() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer DESCRIPTIONAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer DESCRIPTIONInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * URL for the 3D model of the site
   */
  public String MODEL_URL() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer MODEL_URLAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer MODEL_URLInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Source of the site data
   */
  public String SOURCE() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer SOURCEAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer SOURCEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Indicates if the site is taskable
   */
  public boolean TASKABLE() { int o = __offset(38); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  /**
   * Operational status of the site (e.g., active, inactive, under construction)
   */
  public String OPERATIONAL_STATUS() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer OPERATIONAL_STATUSAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer OPERATIONAL_STATUSInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * Date of establishment
   */
  public String ESTABLISHMENT_DATE() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ESTABLISHMENT_DATEAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer ESTABLISHMENT_DATEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Contact information for the site
   */
  public String CONTACT_INFO() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer CONTACT_INFOAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer CONTACT_INFOInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * Environmental impact or considerations
   */
  public String ENVIRONMENTAL_IMPACT() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ENVIRONMENTAL_IMPACTAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer ENVIRONMENTAL_IMPACTInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * Accessibility and infrastructure details
   */
  public String ACCESSIBILITY_INFRA() { int o = __offset(48); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ACCESSIBILITY_INFRAAsByteBuffer() { return __vector_as_bytebuffer(48, 1); }
  public ByteBuffer ACCESSIBILITY_INFRAInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 48, 1); }
  /**
   * Vector of Integrated Devices (IDM)
   */
  public IDM INTEGRATED_DEVICES(int j) { return INTEGRATED_DEVICES(new IDM(), j); }
  public IDM INTEGRATED_DEVICES(IDM obj, int j) { int o = __offset(50); return o != 0 ? obj.__assign(__indirect(__vector(o) + j * 4), bb) : null; }
  public int INTEGRATED_DEVICESLength() { int o = __offset(50); return o != 0 ? __vector_len(o) : 0; }
  public IDM.Vector integratedDevicesVector() { return integratedDevicesVector(new IDM.Vector()); }
  public IDM.Vector integratedDevicesVector(IDM.Vector obj) { int o = __offset(50); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createSIT(FlatBufferBuilder builder,
      int IDOffset,
      int NAMEOffset,
      int ABBREVIATIONOffset,
      byte SITE_TYPE,
      int CATCODEOffset,
      int NETWORKOffset,
      float LATITUDE,
      float LONGITUDE,
      float ALTITUDE,
      int GEOMETRYOffset,
      int CENTER_POINT_GEOMETRYOffset,
      int CLASSIFICATIONOffset,
      int CTR_IDOffset,
      int CREATED_BYOffset,
      int DESCRIPTIONOffset,
      int MODEL_URLOffset,
      int SOURCEOffset,
      boolean TASKABLE,
      int OPERATIONAL_STATUSOffset,
      int ESTABLISHMENT_DATEOffset,
      int CONTACT_INFOOffset,
      int ENVIRONMENTAL_IMPACTOffset,
      int ACCESSIBILITY_INFRAOffset,
      int INTEGRATED_DEVICESOffset) {
    builder.startTable(24);
    SIT.addIntegratedDevices(builder, INTEGRATED_DEVICESOffset);
    SIT.addAccessibilityInfra(builder, ACCESSIBILITY_INFRAOffset);
    SIT.addEnvironmentalImpact(builder, ENVIRONMENTAL_IMPACTOffset);
    SIT.addContactInfo(builder, CONTACT_INFOOffset);
    SIT.addEstablishmentDate(builder, ESTABLISHMENT_DATEOffset);
    SIT.addOperationalStatus(builder, OPERATIONAL_STATUSOffset);
    SIT.addSource(builder, SOURCEOffset);
    SIT.addModelUrl(builder, MODEL_URLOffset);
    SIT.addDescription(builder, DESCRIPTIONOffset);
    SIT.addCreatedBy(builder, CREATED_BYOffset);
    SIT.addCtrId(builder, CTR_IDOffset);
    SIT.addClassification(builder, CLASSIFICATIONOffset);
    SIT.addCenterPointGeometry(builder, CENTER_POINT_GEOMETRYOffset);
    SIT.addGeometry(builder, GEOMETRYOffset);
    SIT.addAltitude(builder, ALTITUDE);
    SIT.addLongitude(builder, LONGITUDE);
    SIT.addLatitude(builder, LATITUDE);
    SIT.addNetwork(builder, NETWORKOffset);
    SIT.addCatcode(builder, CATCODEOffset);
    SIT.addAbbreviation(builder, ABBREVIATIONOffset);
    SIT.addName(builder, NAMEOffset);
    SIT.addId(builder, IDOffset);
    SIT.addTaskable(builder, TASKABLE);
    SIT.addSiteType(builder, SITE_TYPE);
    return SIT.endSIT(builder);
  }

  public static void startSIT(FlatBufferBuilder builder) { builder.startTable(24); }
  public static void addId(FlatBufferBuilder builder, int IDOffset) { builder.addOffset(0, IDOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int NAMEOffset) { builder.addOffset(1, NAMEOffset, 0); }
  public static void addAbbreviation(FlatBufferBuilder builder, int ABBREVIATIONOffset) { builder.addOffset(2, ABBREVIATIONOffset, 0); }
  public static void addSiteType(FlatBufferBuilder builder, byte SITE_TYPE) { builder.addByte(3, SITE_TYPE, 0); }
  public static void addCatcode(FlatBufferBuilder builder, int CATCODEOffset) { builder.addOffset(4, CATCODEOffset, 0); }
  public static void addNetwork(FlatBufferBuilder builder, int NETWORKOffset) { builder.addOffset(5, NETWORKOffset, 0); }
  public static void addLatitude(FlatBufferBuilder builder, float LATITUDE) { builder.addFloat(6, LATITUDE, 0.0f); }
  public static void addLongitude(FlatBufferBuilder builder, float LONGITUDE) { builder.addFloat(7, LONGITUDE, 0.0f); }
  public static void addAltitude(FlatBufferBuilder builder, float ALTITUDE) { builder.addFloat(8, ALTITUDE, 0.0f); }
  public static void addGeometry(FlatBufferBuilder builder, int GEOMETRYOffset) { builder.addOffset(9, GEOMETRYOffset, 0); }
  public static void addCenterPointGeometry(FlatBufferBuilder builder, int CENTER_POINT_GEOMETRYOffset) { builder.addOffset(10, CENTER_POINT_GEOMETRYOffset, 0); }
  public static int createCenterPointGeometryVector(FlatBufferBuilder builder, float[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addFloat(data[i]); return builder.endVector(); }
  public static void startCenterPointGeometryVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addClassification(FlatBufferBuilder builder, int CLASSIFICATIONOffset) { builder.addOffset(11, CLASSIFICATIONOffset, 0); }
  public static void addCtrId(FlatBufferBuilder builder, int CTR_IDOffset) { builder.addOffset(12, CTR_IDOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int CREATED_BYOffset) { builder.addOffset(13, CREATED_BYOffset, 0); }
  public static void addDescription(FlatBufferBuilder builder, int DESCRIPTIONOffset) { builder.addOffset(14, DESCRIPTIONOffset, 0); }
  public static void addModelUrl(FlatBufferBuilder builder, int MODEL_URLOffset) { builder.addOffset(15, MODEL_URLOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int SOURCEOffset) { builder.addOffset(16, SOURCEOffset, 0); }
  public static void addTaskable(FlatBufferBuilder builder, boolean TASKABLE) { builder.addBoolean(17, TASKABLE, false); }
  public static void addOperationalStatus(FlatBufferBuilder builder, int OPERATIONAL_STATUSOffset) { builder.addOffset(18, OPERATIONAL_STATUSOffset, 0); }
  public static void addEstablishmentDate(FlatBufferBuilder builder, int ESTABLISHMENT_DATEOffset) { builder.addOffset(19, ESTABLISHMENT_DATEOffset, 0); }
  public static void addContactInfo(FlatBufferBuilder builder, int CONTACT_INFOOffset) { builder.addOffset(20, CONTACT_INFOOffset, 0); }
  public static void addEnvironmentalImpact(FlatBufferBuilder builder, int ENVIRONMENTAL_IMPACTOffset) { builder.addOffset(21, ENVIRONMENTAL_IMPACTOffset, 0); }
  public static void addAccessibilityInfra(FlatBufferBuilder builder, int ACCESSIBILITY_INFRAOffset) { builder.addOffset(22, ACCESSIBILITY_INFRAOffset, 0); }
  public static void addIntegratedDevices(FlatBufferBuilder builder, int INTEGRATED_DEVICESOffset) { builder.addOffset(23, INTEGRATED_DEVICESOffset, 0); }
  public static int createIntegratedDevicesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startIntegratedDevicesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endSIT(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSITBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "$SIT"); }
  public static void finishSizePrefixedSITBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "$SIT"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SIT get(int j) { return get(new SIT(), j); }
    public SIT get(SIT obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

