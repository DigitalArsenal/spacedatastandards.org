// automatically generated by the FlatBuffers compiler, do not modify

/**
 * Non-registered or local use frames
 */
@SuppressWarnings("unused")
public final class CustomFrame {
  private CustomFrame() { }
  /**
   * Earth-Centered-Earth-Fixed: Rotates with Earth. X-axis at prime meridian, Y eastward, Z towards North Pole.
   */
  public static final byte ECEF = 0;
  /**
   * True Equator Mean Equinox of Date, same as TEMEOFDATE: Dynamic frame for SGP4 satellite tracking.
   */
  public static final byte TEME = 1;
  /**
   * True Equator Mean Equinox of Epoch: Static version of TEMEOFDATE at a given epoch.
   */
  public static final byte TEMEOFEPOCH = 2;
  /**
   * East-North-Up: Local tangent plane for surface points.
   */
  public static final byte ENU = 3;
  /**
   * North-East-Down: Aviation/navigation frame aligned with gravity.
   */
  public static final byte NED = 4;
  /**
   * North-East-Up: Local tangent plane variant with Up positive.
   */
  public static final byte NEU = 5;
  /**
   * Radial-Intrack-Cross-track: Spacecraft orientation aligned with orbit.
   */
  public static final byte RIC = 6;
  /**
   * Radial-Transverse-Normal: Orbit frame for spacecraft dynamics.
   */
  public static final byte RTN = 7;
  /**
   * Transverse-Velocity-Normal: Alternative orbit frame.
   */
  public static final byte TVN = 8;
  /**
   * Vehicle-Velocity-Local-Horizontal: Orbit frame aligned with velocity vector.
   */
  public static final byte VVLH = 9;
  /**
   * Radial-Tangential-Cross-track: Equivalent to LVLH/QSW.
   */
  public static final byte QSW = 10;
  /**
   * Local Tangent Plane: Surface-fixed frame centered on a point.
   */
  public static final byte LTP = 11;
  /**
   * Local Vertical-Local Horizontal: Z axis towards Earth center, X along velocity.
   */
  public static final byte LVLH = 12;
  /**
   * Polar-North-East: Surface coordinate frame.
   */
  public static final byte PNE = 13;
  /**
   * Body-Fixed Reference Frame: Fixed to a spacecraft or celestial object.
   */
  public static final byte BRF = 14;
  /**
   * Radial-Along-track-Cross-track: Same as RSW.
   */
  public static final byte RSW = 15;
  /**
   * Tangential-Normal-Cross-track: Same as TNW.
   */
  public static final byte TNW = 16;
  /**
   * Radial-UTF: Radial, Along-track, Cross-track variant.
   */
  public static final byte UVW = 17;

  public static final String[] names = { "ECEF", "TEME", "TEMEOFEPOCH", "ENU", "NED", "NEU", "RIC", "RTN", "TVN", "VVLH", "QSW", "LTP", "LVLH", "PNE", "BRF", "RSW", "TNW", "UVW", };

  public static String name(int e) { return names[e]; }
}

