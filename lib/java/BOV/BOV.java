// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Burn Out Vector Message
 */
@SuppressWarnings("unused")
public final class BOV extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static BOV getRootAsBOV(ByteBuffer _bb) { return getRootAsBOV(_bb, new BOV()); }
  public static BOV getRootAsBOV(ByteBuffer _bb, BOV obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean BOVBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "$BOV"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public BOV __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double E_COORDINATE() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double F_COORDINATE() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double G_COORDINATE() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double E_DOT() { int o = __offset(10); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double F_DOT() { int o = __offset(12); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public double G_DOT() { int o = __offset(14); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  public String EPOCH_TIME() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer EPOCH_TIMEAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer EPOCH_TIMEInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  public double TIME_FROM_LAUNCH() { int o = __offset(18); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createBOV(FlatBufferBuilder builder,
      double E_COORDINATE,
      double F_COORDINATE,
      double G_COORDINATE,
      double E_DOT,
      double F_DOT,
      double G_DOT,
      int EPOCH_TIMEOffset,
      double TIME_FROM_LAUNCH) {
    builder.startTable(8);
    BOV.addTimeFromLaunch(builder, TIME_FROM_LAUNCH);
    BOV.addGDot(builder, G_DOT);
    BOV.addFDot(builder, F_DOT);
    BOV.addEDot(builder, E_DOT);
    BOV.addGCoordinate(builder, G_COORDINATE);
    BOV.addFCoordinate(builder, F_COORDINATE);
    BOV.addECoordinate(builder, E_COORDINATE);
    BOV.addEpochTime(builder, EPOCH_TIMEOffset);
    return BOV.endBOV(builder);
  }

  public static void startBOV(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addECoordinate(FlatBufferBuilder builder, double E_COORDINATE) { builder.addDouble(0, E_COORDINATE, 0.0); }
  public static void addFCoordinate(FlatBufferBuilder builder, double F_COORDINATE) { builder.addDouble(1, F_COORDINATE, 0.0); }
  public static void addGCoordinate(FlatBufferBuilder builder, double G_COORDINATE) { builder.addDouble(2, G_COORDINATE, 0.0); }
  public static void addEDot(FlatBufferBuilder builder, double E_DOT) { builder.addDouble(3, E_DOT, 0.0); }
  public static void addFDot(FlatBufferBuilder builder, double F_DOT) { builder.addDouble(4, F_DOT, 0.0); }
  public static void addGDot(FlatBufferBuilder builder, double G_DOT) { builder.addDouble(5, G_DOT, 0.0); }
  public static void addEpochTime(FlatBufferBuilder builder, int EPOCH_TIMEOffset) { builder.addOffset(6, EPOCH_TIMEOffset, 0); }
  public static void addTimeFromLaunch(FlatBufferBuilder builder, double TIME_FROM_LAUNCH) { builder.addDouble(7, TIME_FROM_LAUNCH, 0.0); }
  public static int endBOV(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishBOVBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "$BOV"); }
  public static void finishSizePrefixedBOVBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "$BOV"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public BOV get(int j) { return get(new BOV(), j); }
    public BOV get(BOV obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

