// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.
public struct FlightPlanMessages_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static FlightPlanMessages_Full GetRootAsFlightPlanMessages_Full(ByteBuffer _bb) { return GetRootAsFlightPlanMessages_Full(_bb, new FlightPlanMessages_Full()); }
  public static FlightPlanMessages_Full GetRootAsFlightPlanMessages_Full(ByteBuffer _bb, FlightPlanMessages_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool FlightPlanMessages_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "FLIG"); }
  public static bool VerifyFlightPlanMessages_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("FLIG", false, FlightPlanMessages_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FlightPlanMessages_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// The severity of the message.
  /// Example: /// Example: SEVERE
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string Severity { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSeverityBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetSeverityBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetSeverityArray() { return __p.__vector_as_array<byte>(4); }
  /// The waypoint number for which the message was generated, or enter "PLAN" for a message impacting the entire route.
  /// Example: /// Example: 20
  /// Constraints: Minimum length = 0, Maximum length = 8
  public string WpNum { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetWpNumBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetWpNumBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetWpNumArray() { return __p.__vector_as_array<byte>(6); }
  /// The flight path that generated the message (PRIMARY, ALTERNATE, etc.).
  /// Example: /// Example: PRIMARY
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string RoutePath { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRoutePathBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetRoutePathBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetRoutePathArray() { return __p.__vector_as_array<byte>(8); }
  /// The text of the message.
  /// Example: /// Example: Message text
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string MsgText { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMsgTextBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetMsgTextBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetMsgTextArray() { return __p.__vector_as_array<byte>(10); }

  public static Offset<FlightPlanMessages_Full> CreateFlightPlanMessages_Full(FlatBufferBuilder builder,
      StringOffset severityOffset = default(StringOffset),
      StringOffset wpNumOffset = default(StringOffset),
      StringOffset routePathOffset = default(StringOffset),
      StringOffset msgTextOffset = default(StringOffset)) {
    builder.StartTable(4);
    FlightPlanMessages_Full.AddMsgText(builder, msgTextOffset);
    FlightPlanMessages_Full.AddRoutePath(builder, routePathOffset);
    FlightPlanMessages_Full.AddWpNum(builder, wpNumOffset);
    FlightPlanMessages_Full.AddSeverity(builder, severityOffset);
    return FlightPlanMessages_Full.EndFlightPlanMessages_Full(builder);
  }

  public static void StartFlightPlanMessages_Full(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddSeverity(FlatBufferBuilder builder, StringOffset severityOffset) { builder.AddOffset(0, severityOffset.Value, 0); }
  public static void AddWpNum(FlatBufferBuilder builder, StringOffset wpNumOffset) { builder.AddOffset(1, wpNumOffset.Value, 0); }
  public static void AddRoutePath(FlatBufferBuilder builder, StringOffset routePathOffset) { builder.AddOffset(2, routePathOffset.Value, 0); }
  public static void AddMsgText(FlatBufferBuilder builder, StringOffset msgTextOffset) { builder.AddOffset(3, msgTextOffset.Value, 0); }
  public static Offset<FlightPlanMessages_Full> EndFlightPlanMessages_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FlightPlanMessages_Full>(o);
  }
  public static void FinishFlightPlanMessages_FullBuffer(FlatBufferBuilder builder, Offset<FlightPlanMessages_Full> offset) { builder.Finish(offset.Value, "FLIG"); }
  public static void FinishSizePrefixedFlightPlanMessages_FullBuffer(FlatBufferBuilder builder, Offset<FlightPlanMessages_Full> offset) { builder.FinishSizePrefixed(offset.Value, "FLIG"); }
  public FlightPlanMessages_FullT UnPack() {
    var _o = new FlightPlanMessages_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(FlightPlanMessages_FullT _o) {
    _o.Severity = this.Severity;
    _o.WpNum = this.WpNum;
    _o.RoutePath = this.RoutePath;
    _o.MsgText = this.MsgText;
  }
  public static Offset<FlightPlanMessages_Full> Pack(FlatBufferBuilder builder, FlightPlanMessages_FullT _o) {
    if (_o == null) return default(Offset<FlightPlanMessages_Full>);
    var _severity = _o.Severity == null ? default(StringOffset) : builder.CreateString(_o.Severity);
    var _wpNum = _o.WpNum == null ? default(StringOffset) : builder.CreateString(_o.WpNum);
    var _routePath = _o.RoutePath == null ? default(StringOffset) : builder.CreateString(_o.RoutePath);
    var _msgText = _o.MsgText == null ? default(StringOffset) : builder.CreateString(_o.MsgText);
    return CreateFlightPlanMessages_Full(
      builder,
      _severity,
      _wpNum,
      _routePath,
      _msgText);
  }
}

public class FlightPlanMessages_FullT
{
  public string Severity { get; set; }
  public string WpNum { get; set; }
  public string RoutePath { get; set; }
  public string MsgText { get; set; }

  public FlightPlanMessages_FullT() {
    this.Severity = null;
    this.WpNum = null;
    this.RoutePath = null;
    this.MsgText = null;
  }
  public static FlightPlanMessages_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return FlightPlanMessages_Full.GetRootAsFlightPlanMessages_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    FlightPlanMessages_Full.FinishFlightPlanMessages_FullBuffer(fbb, FlightPlanMessages_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class FlightPlanMessages_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Severity*/, false)
      && verifier.VerifyString(tablePos, 6 /*WpNum*/, false)
      && verifier.VerifyString(tablePos, 8 /*RoutePath*/, false)
      && verifier.VerifyString(tablePos, 10 /*MsgText*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
