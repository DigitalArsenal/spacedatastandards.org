// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Comprehensive logistical details concerning the planned support of maintenance operations required by an aircraft, including transportation information, supplies coordination, and service personnel.
public struct LogisticsSupport_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static LogisticsSupport_Abridged GetRootAsLogisticsSupport_Abridged(ByteBuffer _bb) { return GetRootAsLogisticsSupport_Abridged(_bb, new LogisticsSupport_Abridged()); }
  public static LogisticsSupport_Abridged GetRootAsLogisticsSupport_Abridged(ByteBuffer _bb, LogisticsSupport_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool LogisticsSupport_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "LOGI"); }
  public static bool VerifyLogisticsSupport_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("LOGI", false, LogisticsSupport_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LogisticsSupport_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system if not provided on create operations.
  /// Example: /// Example: LOGISTICS-SUPPORT-DETAILS UUID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Optional system identifier from external systs. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
  /// Example: /// Example: GDSSBL012307131347070165
  /// Constraints: Minimum length = 0, Maximum length = 24
  public string ExtSystemId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExtSystemIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetExtSystemIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetExtSystemIdArray() { return __p.__vector_as_array<byte>(8); }
  /// The tail number of the aircraft that is the subject of this LogisticsSupportDetails record.
  /// Example: /// Example: 99290
  /// Constraints: Minimum length = 0, Maximum length = 7
  public string TailNumber { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTailNumberBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetTailNumberBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetTailNumberArray() { return __p.__vector_as_array<byte>(10); }
  /// The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.
  /// Example: /// Example: CO17A
  /// Constraints: Minimum length = 0, Maximum length = 8
  public string AircraftMDS { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAircraftMDSBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetAircraftMDSBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetAircraftMDSArray() { return __p.__vector_as_array<byte>(12); }
  /// The current ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.
  /// Example: /// Example: KCOS
  /// Constraints: Minimum length = 0, Maximum length = 4
  public string CurrICAO { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCurrICAOBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetCurrICAOBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetCurrICAOArray() { return __p.__vector_as_array<byte>(14); }
  /// The supplying ICAO of the aircraft that is the subject of this LogisticsSupportDetails record.
  /// Example: /// Example: KCOS
  /// Constraints: Minimum length = 0, Maximum length = 4
  public string SuppICAO { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSuppICAOBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetSuppICAOBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetSuppICAOArray() { return __p.__vector_as_array<byte>(16); }
  /// The time this report was created, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string RptCreatedTime { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRptCreatedTimeBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetRptCreatedTimeBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetRptCreatedTimeArray() { return __p.__vector_as_array<byte>(18); }
  /// The time this report was closed, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string RptClosedTime { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRptClosedTimeBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetRptClosedTimeBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetRptClosedTimeArray() { return __p.__vector_as_array<byte>(20); }
  /// The time indicating when a given aircraft breaks for a mission essential reason. This datetime should be in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string MeTime { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMeTimeBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetMeTimeBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetMeTimeArray() { return __p.__vector_as_array<byte>(22); }
  /// The time indicating when all mission essential problems with a given aircraft have been fixed and is mission capable. This datetime should be in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string McTime { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMcTimeBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetMcTimeBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetMcTimeArray() { return __p.__vector_as_array<byte>(24); }
  /// This field identifies the pacing event for bringing the aircraft to Mission Capable status.  It is used in calculating the Estimated Time Mission Capable (ETMC) value.  Acceptable values are WA (Will Advise), INW (In Work), P+hhh.h (where P=parts and hhh.h is the number of hours up to 999 plus tenths of hours), EQ+hhh.h (EQ=equipment), MRT+hhh.h (MRT=maintenance recovery team).
  /// Example: /// Example: WA
  /// Constraints: Minimum length = 0, Maximum length = 9
  public string LogisticAction { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogisticActionBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetLogisticActionBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetLogisticActionArray() { return __p.__vector_as_array<byte>(26); }
  /// The identifier that represents a Logistics Master Record.
  /// Example: /// Example: L62017
  /// Constraints: Minimum length = 0, Maximum length = 6
  public string LogisticsRecordId { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLogisticsRecordIdBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetLogisticsRecordIdBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetLogisticsRecordIdArray() { return __p.__vector_as_array<byte>(28); }
  /// The estimated time mission capable for the aircraft, in ISO 8601 UCT format with millisecond precision. This is the estimated time when the aircraft is mission ready.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string Etic { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEticBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetEticBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetEticArray() { return __p.__vector_as_array<byte>(30); }
  /// Logistics estimated time mission capable.
  /// Example: /// Example: 2023-07-13T13:47:00.123Z
  /// Constraints: No constraints specified.
  public string Etmc { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEtmcBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetEtmcBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetEtmcArray() { return __p.__vector_as_array<byte>(32); }
  /// The maintenance status code of the aircraft which may be based on pilot descriptions or evaluation codes. Contact the source provider for details.
  /// Example: /// Example: NMCMU
  /// Constraints: Minimum length = 0, Maximum length = 6
  public string MaintStatusCode { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMaintStatusCodeBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetMaintStatusCodeBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetMaintStatusCodeArray() { return __p.__vector_as_array<byte>(34); }
  /// This is used to indicate whether a closed master record has been reopened.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool ReopenFlag { get { int o = __p.__offset(36); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// The organization that owns this logistics record.
  /// Example: /// Example: EXAMPLE_OWNER
  /// Constraints: Minimum length = 0, Maximum length = 250
  public string Owner { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOwnerBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetOwnerBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetOwnerArray() { return __p.__vector_as_array<byte>(38); }
  /// Remarks associated with this LogisticsSupport record.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string LogisticsRemarks(int j) { int o = __p.__offset(40); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int LogisticsRemarksLength { get { int o = __p.__offset(40); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Discrepancy information associated with this LogisticsSupport record.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string LogisticsDiscrepancyInfos(int j) { int o = __p.__offset(42); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int LogisticsDiscrepancyInfosLength { get { int o = __p.__offset(42); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string LogisticsTransportationPlans(int j) { int o = __p.__offset(44); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int LogisticsTransportationPlansLength { get { int o = __p.__offset(44); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Support items associated with this LogisticsSupport record.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string LogisticsSupportItems(int j) { int o = __p.__offset(46); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int LogisticsSupportItemsLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(48); }
  /// Time the row was created in the database.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(50); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(50, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(50); }
  /// Application user who created the row in the database.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(52, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(52); }
  /// Time the row was updated in the database, auto-populated by the system.
  /// Example: /// Example: 2022-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string UpdatedAt { get { int o = __p.__offset(54); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedAtBytes() { return __p.__vector_as_span<byte>(54, 1); }
#else
  public ArraySegment<byte>? GetUpdatedAtBytes() { return __p.__vector_as_arraysegment(54); }
#endif
  public byte[] GetUpdatedAtArray() { return __p.__vector_as_array<byte>(54); }
  /// Application user who updated the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string UpdatedBy { get { int o = __p.__offset(56); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedByBytes() { return __p.__vector_as_span<byte>(56, 1); }
#else
  public ArraySegment<byte>? GetUpdatedByBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public byte[] GetUpdatedByArray() { return __p.__vector_as_array<byte>(56); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Source { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(58, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(58); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(58); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(60, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(60); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(60); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public LogisticsSupport_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(62); return o != 0 ? (LogisticsSupport_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : LogisticsSupport_Abridged_dataMode_Enum.REAL; } }

  public static Offset<LogisticsSupport_Abridged> CreateLogisticsSupport_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset extSystemIdOffset = default(StringOffset),
      StringOffset tailNumberOffset = default(StringOffset),
      StringOffset aircraftMDSOffset = default(StringOffset),
      StringOffset currICAOOffset = default(StringOffset),
      StringOffset suppICAOOffset = default(StringOffset),
      StringOffset rptCreatedTimeOffset = default(StringOffset),
      StringOffset rptClosedTimeOffset = default(StringOffset),
      StringOffset meTimeOffset = default(StringOffset),
      StringOffset mcTimeOffset = default(StringOffset),
      StringOffset logisticActionOffset = default(StringOffset),
      StringOffset logisticsRecordIdOffset = default(StringOffset),
      StringOffset eticOffset = default(StringOffset),
      StringOffset etmcOffset = default(StringOffset),
      StringOffset maintStatusCodeOffset = default(StringOffset),
      bool reopenFlag = false,
      StringOffset ownerOffset = default(StringOffset),
      VectorOffset logisticsRemarksOffset = default(VectorOffset),
      VectorOffset logisticsDiscrepancyInfosOffset = default(VectorOffset),
      VectorOffset logisticsTransportationPlansOffset = default(VectorOffset),
      VectorOffset logisticsSupportItemsOffset = default(VectorOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset updatedAtOffset = default(StringOffset),
      StringOffset updatedByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      LogisticsSupport_Abridged_dataMode_Enum dataMode = LogisticsSupport_Abridged_dataMode_Enum.REAL) {
    builder.StartTable(30);
    LogisticsSupport_Abridged.AddOrigin(builder, originOffset);
    LogisticsSupport_Abridged.AddSource(builder, sourceOffset);
    LogisticsSupport_Abridged.AddUpdatedBy(builder, updatedByOffset);
    LogisticsSupport_Abridged.AddUpdatedAt(builder, updatedAtOffset);
    LogisticsSupport_Abridged.AddCreatedBy(builder, createdByOffset);
    LogisticsSupport_Abridged.AddCreatedAt(builder, createdAtOffset);
    LogisticsSupport_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    LogisticsSupport_Abridged.AddLogisticsSupportItems(builder, logisticsSupportItemsOffset);
    LogisticsSupport_Abridged.AddLogisticsTransportationPlans(builder, logisticsTransportationPlansOffset);
    LogisticsSupport_Abridged.AddLogisticsDiscrepancyInfos(builder, logisticsDiscrepancyInfosOffset);
    LogisticsSupport_Abridged.AddLogisticsRemarks(builder, logisticsRemarksOffset);
    LogisticsSupport_Abridged.AddOwner(builder, ownerOffset);
    LogisticsSupport_Abridged.AddMaintStatusCode(builder, maintStatusCodeOffset);
    LogisticsSupport_Abridged.AddEtmc(builder, etmcOffset);
    LogisticsSupport_Abridged.AddEtic(builder, eticOffset);
    LogisticsSupport_Abridged.AddLogisticsRecordId(builder, logisticsRecordIdOffset);
    LogisticsSupport_Abridged.AddLogisticAction(builder, logisticActionOffset);
    LogisticsSupport_Abridged.AddMcTime(builder, mcTimeOffset);
    LogisticsSupport_Abridged.AddMeTime(builder, meTimeOffset);
    LogisticsSupport_Abridged.AddRptClosedTime(builder, rptClosedTimeOffset);
    LogisticsSupport_Abridged.AddRptCreatedTime(builder, rptCreatedTimeOffset);
    LogisticsSupport_Abridged.AddSuppICAO(builder, suppICAOOffset);
    LogisticsSupport_Abridged.AddCurrICAO(builder, currICAOOffset);
    LogisticsSupport_Abridged.AddAircraftMDS(builder, aircraftMDSOffset);
    LogisticsSupport_Abridged.AddTailNumber(builder, tailNumberOffset);
    LogisticsSupport_Abridged.AddExtSystemId(builder, extSystemIdOffset);
    LogisticsSupport_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    LogisticsSupport_Abridged.AddId(builder, idOffset);
    LogisticsSupport_Abridged.AddDataMode(builder, dataMode);
    LogisticsSupport_Abridged.AddReopenFlag(builder, reopenFlag);
    return LogisticsSupport_Abridged.EndLogisticsSupport_Abridged(builder);
  }

  public static void StartLogisticsSupport_Abridged(FlatBufferBuilder builder) { builder.StartTable(30); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddExtSystemId(FlatBufferBuilder builder, StringOffset extSystemIdOffset) { builder.AddOffset(2, extSystemIdOffset.Value, 0); }
  public static void AddTailNumber(FlatBufferBuilder builder, StringOffset tailNumberOffset) { builder.AddOffset(3, tailNumberOffset.Value, 0); }
  public static void AddAircraftMDS(FlatBufferBuilder builder, StringOffset aircraftMDSOffset) { builder.AddOffset(4, aircraftMDSOffset.Value, 0); }
  public static void AddCurrICAO(FlatBufferBuilder builder, StringOffset currICAOOffset) { builder.AddOffset(5, currICAOOffset.Value, 0); }
  public static void AddSuppICAO(FlatBufferBuilder builder, StringOffset suppICAOOffset) { builder.AddOffset(6, suppICAOOffset.Value, 0); }
  public static void AddRptCreatedTime(FlatBufferBuilder builder, StringOffset rptCreatedTimeOffset) { builder.AddOffset(7, rptCreatedTimeOffset.Value, 0); }
  public static void AddRptClosedTime(FlatBufferBuilder builder, StringOffset rptClosedTimeOffset) { builder.AddOffset(8, rptClosedTimeOffset.Value, 0); }
  public static void AddMeTime(FlatBufferBuilder builder, StringOffset meTimeOffset) { builder.AddOffset(9, meTimeOffset.Value, 0); }
  public static void AddMcTime(FlatBufferBuilder builder, StringOffset mcTimeOffset) { builder.AddOffset(10, mcTimeOffset.Value, 0); }
  public static void AddLogisticAction(FlatBufferBuilder builder, StringOffset logisticActionOffset) { builder.AddOffset(11, logisticActionOffset.Value, 0); }
  public static void AddLogisticsRecordId(FlatBufferBuilder builder, StringOffset logisticsRecordIdOffset) { builder.AddOffset(12, logisticsRecordIdOffset.Value, 0); }
  public static void AddEtic(FlatBufferBuilder builder, StringOffset eticOffset) { builder.AddOffset(13, eticOffset.Value, 0); }
  public static void AddEtmc(FlatBufferBuilder builder, StringOffset etmcOffset) { builder.AddOffset(14, etmcOffset.Value, 0); }
  public static void AddMaintStatusCode(FlatBufferBuilder builder, StringOffset maintStatusCodeOffset) { builder.AddOffset(15, maintStatusCodeOffset.Value, 0); }
  public static void AddReopenFlag(FlatBufferBuilder builder, bool reopenFlag) { builder.AddBool(16, reopenFlag, false); }
  public static void AddOwner(FlatBufferBuilder builder, StringOffset ownerOffset) { builder.AddOffset(17, ownerOffset.Value, 0); }
  public static void AddLogisticsRemarks(FlatBufferBuilder builder, VectorOffset logisticsRemarksOffset) { builder.AddOffset(18, logisticsRemarksOffset.Value, 0); }
  public static VectorOffset CreateLogisticsRemarksVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsRemarksVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsRemarksVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsRemarksVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLogisticsRemarksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLogisticsDiscrepancyInfos(FlatBufferBuilder builder, VectorOffset logisticsDiscrepancyInfosOffset) { builder.AddOffset(19, logisticsDiscrepancyInfosOffset.Value, 0); }
  public static VectorOffset CreateLogisticsDiscrepancyInfosVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsDiscrepancyInfosVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsDiscrepancyInfosVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsDiscrepancyInfosVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLogisticsDiscrepancyInfosVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLogisticsTransportationPlans(FlatBufferBuilder builder, VectorOffset logisticsTransportationPlansOffset) { builder.AddOffset(20, logisticsTransportationPlansOffset.Value, 0); }
  public static VectorOffset CreateLogisticsTransportationPlansVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsTransportationPlansVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsTransportationPlansVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsTransportationPlansVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLogisticsTransportationPlansVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLogisticsSupportItems(FlatBufferBuilder builder, VectorOffset logisticsSupportItemsOffset) { builder.AddOffset(21, logisticsSupportItemsOffset.Value, 0); }
  public static VectorOffset CreateLogisticsSupportItemsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsSupportItemsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsSupportItemsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateLogisticsSupportItemsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartLogisticsSupportItemsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(22, origNetworkOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(23, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(24, createdByOffset.Value, 0); }
  public static void AddUpdatedAt(FlatBufferBuilder builder, StringOffset updatedAtOffset) { builder.AddOffset(25, updatedAtOffset.Value, 0); }
  public static void AddUpdatedBy(FlatBufferBuilder builder, StringOffset updatedByOffset) { builder.AddOffset(26, updatedByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(27, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(28, originOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, LogisticsSupport_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(29, (sbyte)dataMode, 0); }
  public static Offset<LogisticsSupport_Abridged> EndLogisticsSupport_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<LogisticsSupport_Abridged>(o);
  }
  public static void FinishLogisticsSupport_AbridgedBuffer(FlatBufferBuilder builder, Offset<LogisticsSupport_Abridged> offset) { builder.Finish(offset.Value, "LOGI"); }
  public static void FinishSizePrefixedLogisticsSupport_AbridgedBuffer(FlatBufferBuilder builder, Offset<LogisticsSupport_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "LOGI"); }
  public LogisticsSupport_AbridgedT UnPack() {
    var _o = new LogisticsSupport_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LogisticsSupport_AbridgedT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.ExtSystemId = this.ExtSystemId;
    _o.TailNumber = this.TailNumber;
    _o.AircraftMDS = this.AircraftMDS;
    _o.CurrICAO = this.CurrICAO;
    _o.SuppICAO = this.SuppICAO;
    _o.RptCreatedTime = this.RptCreatedTime;
    _o.RptClosedTime = this.RptClosedTime;
    _o.MeTime = this.MeTime;
    _o.McTime = this.McTime;
    _o.LogisticAction = this.LogisticAction;
    _o.LogisticsRecordId = this.LogisticsRecordId;
    _o.Etic = this.Etic;
    _o.Etmc = this.Etmc;
    _o.MaintStatusCode = this.MaintStatusCode;
    _o.ReopenFlag = this.ReopenFlag;
    _o.Owner = this.Owner;
    _o.LogisticsRemarks = new List<string>();
    for (var _j = 0; _j < this.LogisticsRemarksLength; ++_j) {_o.LogisticsRemarks.Add(this.LogisticsRemarks(_j));}
    _o.LogisticsDiscrepancyInfos = new List<string>();
    for (var _j = 0; _j < this.LogisticsDiscrepancyInfosLength; ++_j) {_o.LogisticsDiscrepancyInfos.Add(this.LogisticsDiscrepancyInfos(_j));}
    _o.LogisticsTransportationPlans = new List<string>();
    for (var _j = 0; _j < this.LogisticsTransportationPlansLength; ++_j) {_o.LogisticsTransportationPlans.Add(this.LogisticsTransportationPlans(_j));}
    _o.LogisticsSupportItems = new List<string>();
    for (var _j = 0; _j < this.LogisticsSupportItemsLength; ++_j) {_o.LogisticsSupportItems.Add(this.LogisticsSupportItems(_j));}
    _o.OrigNetwork = this.OrigNetwork;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.UpdatedAt = this.UpdatedAt;
    _o.UpdatedBy = this.UpdatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.DataMode = this.DataMode;
  }
  public static Offset<LogisticsSupport_Abridged> Pack(FlatBufferBuilder builder, LogisticsSupport_AbridgedT _o) {
    if (_o == null) return default(Offset<LogisticsSupport_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _extSystemId = _o.ExtSystemId == null ? default(StringOffset) : builder.CreateString(_o.ExtSystemId);
    var _tailNumber = _o.TailNumber == null ? default(StringOffset) : builder.CreateString(_o.TailNumber);
    var _aircraftMDS = _o.AircraftMDS == null ? default(StringOffset) : builder.CreateString(_o.AircraftMDS);
    var _currICAO = _o.CurrICAO == null ? default(StringOffset) : builder.CreateString(_o.CurrICAO);
    var _suppICAO = _o.SuppICAO == null ? default(StringOffset) : builder.CreateString(_o.SuppICAO);
    var _rptCreatedTime = _o.RptCreatedTime == null ? default(StringOffset) : builder.CreateString(_o.RptCreatedTime);
    var _rptClosedTime = _o.RptClosedTime == null ? default(StringOffset) : builder.CreateString(_o.RptClosedTime);
    var _meTime = _o.MeTime == null ? default(StringOffset) : builder.CreateString(_o.MeTime);
    var _mcTime = _o.McTime == null ? default(StringOffset) : builder.CreateString(_o.McTime);
    var _logisticAction = _o.LogisticAction == null ? default(StringOffset) : builder.CreateString(_o.LogisticAction);
    var _logisticsRecordId = _o.LogisticsRecordId == null ? default(StringOffset) : builder.CreateString(_o.LogisticsRecordId);
    var _etic = _o.Etic == null ? default(StringOffset) : builder.CreateString(_o.Etic);
    var _etmc = _o.Etmc == null ? default(StringOffset) : builder.CreateString(_o.Etmc);
    var _maintStatusCode = _o.MaintStatusCode == null ? default(StringOffset) : builder.CreateString(_o.MaintStatusCode);
    var _owner = _o.Owner == null ? default(StringOffset) : builder.CreateString(_o.Owner);
    var _logisticsRemarks = default(VectorOffset);
    if (_o.LogisticsRemarks != null) {
      var __logisticsRemarks = new StringOffset[_o.LogisticsRemarks.Count];
      for (var _j = 0; _j < __logisticsRemarks.Length; ++_j) { __logisticsRemarks[_j] = builder.CreateString(_o.LogisticsRemarks[_j]); }
      _logisticsRemarks = CreateLogisticsRemarksVector(builder, __logisticsRemarks);
    }
    var _logisticsDiscrepancyInfos = default(VectorOffset);
    if (_o.LogisticsDiscrepancyInfos != null) {
      var __logisticsDiscrepancyInfos = new StringOffset[_o.LogisticsDiscrepancyInfos.Count];
      for (var _j = 0; _j < __logisticsDiscrepancyInfos.Length; ++_j) { __logisticsDiscrepancyInfos[_j] = builder.CreateString(_o.LogisticsDiscrepancyInfos[_j]); }
      _logisticsDiscrepancyInfos = CreateLogisticsDiscrepancyInfosVector(builder, __logisticsDiscrepancyInfos);
    }
    var _logisticsTransportationPlans = default(VectorOffset);
    if (_o.LogisticsTransportationPlans != null) {
      var __logisticsTransportationPlans = new StringOffset[_o.LogisticsTransportationPlans.Count];
      for (var _j = 0; _j < __logisticsTransportationPlans.Length; ++_j) { __logisticsTransportationPlans[_j] = builder.CreateString(_o.LogisticsTransportationPlans[_j]); }
      _logisticsTransportationPlans = CreateLogisticsTransportationPlansVector(builder, __logisticsTransportationPlans);
    }
    var _logisticsSupportItems = default(VectorOffset);
    if (_o.LogisticsSupportItems != null) {
      var __logisticsSupportItems = new StringOffset[_o.LogisticsSupportItems.Count];
      for (var _j = 0; _j < __logisticsSupportItems.Length; ++_j) { __logisticsSupportItems[_j] = builder.CreateString(_o.LogisticsSupportItems[_j]); }
      _logisticsSupportItems = CreateLogisticsSupportItemsVector(builder, __logisticsSupportItems);
    }
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _updatedAt = _o.UpdatedAt == null ? default(StringOffset) : builder.CreateString(_o.UpdatedAt);
    var _updatedBy = _o.UpdatedBy == null ? default(StringOffset) : builder.CreateString(_o.UpdatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    return CreateLogisticsSupport_Abridged(
      builder,
      _id,
      _classificationMarking,
      _extSystemId,
      _tailNumber,
      _aircraftMDS,
      _currICAO,
      _suppICAO,
      _rptCreatedTime,
      _rptClosedTime,
      _meTime,
      _mcTime,
      _logisticAction,
      _logisticsRecordId,
      _etic,
      _etmc,
      _maintStatusCode,
      _o.ReopenFlag,
      _owner,
      _logisticsRemarks,
      _logisticsDiscrepancyInfos,
      _logisticsTransportationPlans,
      _logisticsSupportItems,
      _origNetwork,
      _createdAt,
      _createdBy,
      _updatedAt,
      _updatedBy,
      _source,
      _origin,
      _o.DataMode);
  }
}

public class LogisticsSupport_AbridgedT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string ExtSystemId { get; set; }
  public string TailNumber { get; set; }
  public string AircraftMDS { get; set; }
  public string CurrICAO { get; set; }
  public string SuppICAO { get; set; }
  public string RptCreatedTime { get; set; }
  public string RptClosedTime { get; set; }
  public string MeTime { get; set; }
  public string McTime { get; set; }
  public string LogisticAction { get; set; }
  public string LogisticsRecordId { get; set; }
  public string Etic { get; set; }
  public string Etmc { get; set; }
  public string MaintStatusCode { get; set; }
  public bool ReopenFlag { get; set; }
  public string Owner { get; set; }
  public List<string> LogisticsRemarks { get; set; }
  public List<string> LogisticsDiscrepancyInfos { get; set; }
  public List<string> LogisticsTransportationPlans { get; set; }
  public List<string> LogisticsSupportItems { get; set; }
  public string OrigNetwork { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string UpdatedAt { get; set; }
  public string UpdatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public LogisticsSupport_Abridged_dataMode_Enum DataMode { get; set; }

  public LogisticsSupport_AbridgedT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.ExtSystemId = null;
    this.TailNumber = null;
    this.AircraftMDS = null;
    this.CurrICAO = null;
    this.SuppICAO = null;
    this.RptCreatedTime = null;
    this.RptClosedTime = null;
    this.MeTime = null;
    this.McTime = null;
    this.LogisticAction = null;
    this.LogisticsRecordId = null;
    this.Etic = null;
    this.Etmc = null;
    this.MaintStatusCode = null;
    this.ReopenFlag = false;
    this.Owner = null;
    this.LogisticsRemarks = null;
    this.LogisticsDiscrepancyInfos = null;
    this.LogisticsTransportationPlans = null;
    this.LogisticsSupportItems = null;
    this.OrigNetwork = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.UpdatedAt = null;
    this.UpdatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.DataMode = LogisticsSupport_Abridged_dataMode_Enum.REAL;
  }
  public static LogisticsSupport_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return LogisticsSupport_Abridged.GetRootAsLogisticsSupport_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    LogisticsSupport_Abridged.FinishLogisticsSupport_AbridgedBuffer(fbb, LogisticsSupport_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class LogisticsSupport_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*ExtSystemId*/, false)
      && verifier.VerifyString(tablePos, 10 /*TailNumber*/, false)
      && verifier.VerifyString(tablePos, 12 /*AircraftMDS*/, false)
      && verifier.VerifyString(tablePos, 14 /*CurrICAO*/, false)
      && verifier.VerifyString(tablePos, 16 /*SuppICAO*/, false)
      && verifier.VerifyString(tablePos, 18 /*RptCreatedTime*/, false)
      && verifier.VerifyString(tablePos, 20 /*RptClosedTime*/, false)
      && verifier.VerifyString(tablePos, 22 /*MeTime*/, false)
      && verifier.VerifyString(tablePos, 24 /*McTime*/, false)
      && verifier.VerifyString(tablePos, 26 /*LogisticAction*/, false)
      && verifier.VerifyString(tablePos, 28 /*LogisticsRecordId*/, false)
      && verifier.VerifyString(tablePos, 30 /*Etic*/, false)
      && verifier.VerifyString(tablePos, 32 /*Etmc*/, false)
      && verifier.VerifyString(tablePos, 34 /*MaintStatusCode*/, false)
      && verifier.VerifyField(tablePos, 36 /*ReopenFlag*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 38 /*Owner*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 40 /*LogisticsRemarks*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 42 /*LogisticsDiscrepancyInfos*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 44 /*LogisticsTransportationPlans*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 46 /*LogisticsSupportItems*/, false)
      && verifier.VerifyString(tablePos, 48 /*OrigNetwork*/, false)
      && verifier.VerifyString(tablePos, 50 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 52 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 54 /*UpdatedAt*/, false)
      && verifier.VerifyString(tablePos, 56 /*UpdatedBy*/, false)
      && verifier.VerifyString(tablePos, 58 /*Source*/, false)
      && verifier.VerifyString(tablePos, 60 /*Origin*/, false)
      && verifier.VerifyField(tablePos, 62 /*DataMode*/, 1 /*LogisticsSupport_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
