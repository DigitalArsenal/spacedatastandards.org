// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Details for an early warning payload from  Seradata.
public struct SeradataEarlyWarning_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SeradataEarlyWarning_Ingest GetRootAsSeradataEarlyWarning_Ingest(ByteBuffer _bb) { return GetRootAsSeradataEarlyWarning_Ingest(_bb, new SeradataEarlyWarning_Ingest()); }
  public static SeradataEarlyWarning_Ingest GetRootAsSeradataEarlyWarning_Ingest(ByteBuffer _bb, SeradataEarlyWarning_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool SeradataEarlyWarning_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "SERA"); }
  public static bool VerifySeradataEarlyWarning_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("SERA", false, SeradataEarlyWarning_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SeradataEarlyWarning_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: SERADATAEARLYWARNING-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// UUID of the parent IR record.
  /// Example: /// Example: idIR
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdIR { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdIRBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIdIRBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIdIRArray() { return __p.__vector_as_array<byte>(8); }
  /// Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
  /// Example: /// Example: spacecraftId
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string SpacecraftId { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpacecraftIdBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSpacecraftIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSpacecraftIdArray() { return __p.__vector_as_array<byte>(10); }
  /// Hosted for company/Organization Id.
  /// Example: /// Example: hostedForCompanyOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string HostedForCompanyOrgId { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetHostedForCompanyOrgIdArray() { return __p.__vector_as_array<byte>(12); }
  /// Manufacturer Organization Id.
  /// Example: /// Example: manufacturerOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ManufacturerOrgId { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(14); }
  /// Sensor name from Seradata, e.g. Infra red telescope, Schmidt Telescope, etc.
  /// Example: /// Example: Infra red telescope
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string Name { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(16); }
  /// Spectral Bands, e.g. Infra-Red.
  /// Example: /// Example: Infra-Red
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string SpectralBands { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpectralBandsBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetSpectralBandsBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetSpectralBandsArray() { return __p.__vector_as_array<byte>(18); }
  /// Frequency Limits for this IR.
  /// Example: /// Example: frequencyLimits
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string FrequencyLimits { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFrequencyLimitsBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetFrequencyLimitsBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetFrequencyLimitsArray() { return __p.__vector_as_array<byte>(20); }
  /// Best resolution for this IR in meters.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double BestResolution { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Ground Station info for this IR.
  /// Example: /// Example: groundStations
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string GroundStations { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroundStationsBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetGroundStationsBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetGroundStationsArray() { return __p.__vector_as_array<byte>(24); }
  /// Ground Station Locations for this IR.
  /// Example: /// Example: groundStationLocations
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string GroundStationLocations { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroundStationLocationsBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetGroundStationLocationsBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetGroundStationLocationsArray() { return __p.__vector_as_array<byte>(26); }
  /// Missile Launch Phase Detection Ability.
  /// Example: /// Example: missileLaunchPhaseDetectionAbility
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string MissileLaunchPhaseDetectionAbility { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMissileLaunchPhaseDetectionAbilityBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetMissileLaunchPhaseDetectionAbilityBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetMissileLaunchPhaseDetectionAbilityArray() { return __p.__vector_as_array<byte>(28); }
  /// Is the sensor Earth Pointing.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool EarthPointing { get { int o = __p.__offset(30); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
  /// Example: /// Example: partnerSpacecraftId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string PartnerSpacecraftId { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPartnerSpacecraftIdBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetPartnerSpacecraftIdBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetPartnerSpacecraftIdArray() { return __p.__vector_as_array<byte>(32); }
  /// Payload notes.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string PayloadNotes { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPayloadNotesBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetPayloadNotesBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetPayloadNotesArray() { return __p.__vector_as_array<byte>(34); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(36); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(38); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(40); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(42); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(44); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public SeradataEarlyWarning_Ingest_dataMode_Enum DataMode { get { int o = __p.__offset(46); return o != 0 ? (SeradataEarlyWarning_Ingest_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : SeradataEarlyWarning_Ingest_dataMode_Enum.REAL; } }

  public static Offset<SeradataEarlyWarning_Ingest> CreateSeradataEarlyWarning_Ingest(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idIROffset = default(StringOffset),
      StringOffset spacecraftIdOffset = default(StringOffset),
      StringOffset hostedForCompanyOrgIdOffset = default(StringOffset),
      StringOffset manufacturerOrgIdOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset spectralBandsOffset = default(StringOffset),
      StringOffset frequencyLimitsOffset = default(StringOffset),
      double bestResolution = 0.0,
      StringOffset groundStationsOffset = default(StringOffset),
      StringOffset groundStationLocationsOffset = default(StringOffset),
      StringOffset missileLaunchPhaseDetectionAbilityOffset = default(StringOffset),
      bool earthPointing = false,
      StringOffset partnerSpacecraftIdOffset = default(StringOffset),
      StringOffset payloadNotesOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      SeradataEarlyWarning_Ingest_dataMode_Enum dataMode = SeradataEarlyWarning_Ingest_dataMode_Enum.REAL) {
    builder.StartTable(22);
    SeradataEarlyWarning_Ingest.AddBestResolution(builder, bestResolution);
    SeradataEarlyWarning_Ingest.AddOrigNetwork(builder, origNetworkOffset);
    SeradataEarlyWarning_Ingest.AddOrigin(builder, originOffset);
    SeradataEarlyWarning_Ingest.AddSource(builder, sourceOffset);
    SeradataEarlyWarning_Ingest.AddCreatedBy(builder, createdByOffset);
    SeradataEarlyWarning_Ingest.AddCreatedAt(builder, createdAtOffset);
    SeradataEarlyWarning_Ingest.AddPayloadNotes(builder, payloadNotesOffset);
    SeradataEarlyWarning_Ingest.AddPartnerSpacecraftId(builder, partnerSpacecraftIdOffset);
    SeradataEarlyWarning_Ingest.AddMissileLaunchPhaseDetectionAbility(builder, missileLaunchPhaseDetectionAbilityOffset);
    SeradataEarlyWarning_Ingest.AddGroundStationLocations(builder, groundStationLocationsOffset);
    SeradataEarlyWarning_Ingest.AddGroundStations(builder, groundStationsOffset);
    SeradataEarlyWarning_Ingest.AddFrequencyLimits(builder, frequencyLimitsOffset);
    SeradataEarlyWarning_Ingest.AddSpectralBands(builder, spectralBandsOffset);
    SeradataEarlyWarning_Ingest.AddName(builder, nameOffset);
    SeradataEarlyWarning_Ingest.AddManufacturerOrgId(builder, manufacturerOrgIdOffset);
    SeradataEarlyWarning_Ingest.AddHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    SeradataEarlyWarning_Ingest.AddSpacecraftId(builder, spacecraftIdOffset);
    SeradataEarlyWarning_Ingest.AddIdIR(builder, idIROffset);
    SeradataEarlyWarning_Ingest.AddClassificationMarking(builder, classificationMarkingOffset);
    SeradataEarlyWarning_Ingest.AddId(builder, idOffset);
    SeradataEarlyWarning_Ingest.AddDataMode(builder, dataMode);
    SeradataEarlyWarning_Ingest.AddEarthPointing(builder, earthPointing);
    return SeradataEarlyWarning_Ingest.EndSeradataEarlyWarning_Ingest(builder);
  }

  public static void StartSeradataEarlyWarning_Ingest(FlatBufferBuilder builder) { builder.StartTable(22); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddIdIR(FlatBufferBuilder builder, StringOffset idIROffset) { builder.AddOffset(2, idIROffset.Value, 0); }
  public static void AddSpacecraftId(FlatBufferBuilder builder, StringOffset spacecraftIdOffset) { builder.AddOffset(3, spacecraftIdOffset.Value, 0); }
  public static void AddHostedForCompanyOrgId(FlatBufferBuilder builder, StringOffset hostedForCompanyOrgIdOffset) { builder.AddOffset(4, hostedForCompanyOrgIdOffset.Value, 0); }
  public static void AddManufacturerOrgId(FlatBufferBuilder builder, StringOffset manufacturerOrgIdOffset) { builder.AddOffset(5, manufacturerOrgIdOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(6, nameOffset.Value, 0); }
  public static void AddSpectralBands(FlatBufferBuilder builder, StringOffset spectralBandsOffset) { builder.AddOffset(7, spectralBandsOffset.Value, 0); }
  public static void AddFrequencyLimits(FlatBufferBuilder builder, StringOffset frequencyLimitsOffset) { builder.AddOffset(8, frequencyLimitsOffset.Value, 0); }
  public static void AddBestResolution(FlatBufferBuilder builder, double bestResolution) { builder.AddDouble(9, bestResolution, 0.0); }
  public static void AddGroundStations(FlatBufferBuilder builder, StringOffset groundStationsOffset) { builder.AddOffset(10, groundStationsOffset.Value, 0); }
  public static void AddGroundStationLocations(FlatBufferBuilder builder, StringOffset groundStationLocationsOffset) { builder.AddOffset(11, groundStationLocationsOffset.Value, 0); }
  public static void AddMissileLaunchPhaseDetectionAbility(FlatBufferBuilder builder, StringOffset missileLaunchPhaseDetectionAbilityOffset) { builder.AddOffset(12, missileLaunchPhaseDetectionAbilityOffset.Value, 0); }
  public static void AddEarthPointing(FlatBufferBuilder builder, bool earthPointing) { builder.AddBool(13, earthPointing, false); }
  public static void AddPartnerSpacecraftId(FlatBufferBuilder builder, StringOffset partnerSpacecraftIdOffset) { builder.AddOffset(14, partnerSpacecraftIdOffset.Value, 0); }
  public static void AddPayloadNotes(FlatBufferBuilder builder, StringOffset payloadNotesOffset) { builder.AddOffset(15, payloadNotesOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(16, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(17, createdByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(18, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(19, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(20, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, SeradataEarlyWarning_Ingest_dataMode_Enum dataMode) { builder.AddSbyte(21, (sbyte)dataMode, 0); }
  public static Offset<SeradataEarlyWarning_Ingest> EndSeradataEarlyWarning_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SeradataEarlyWarning_Ingest>(o);
  }
  public static void FinishSeradataEarlyWarning_IngestBuffer(FlatBufferBuilder builder, Offset<SeradataEarlyWarning_Ingest> offset) { builder.Finish(offset.Value, "SERA"); }
  public static void FinishSizePrefixedSeradataEarlyWarning_IngestBuffer(FlatBufferBuilder builder, Offset<SeradataEarlyWarning_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "SERA"); }
  public SeradataEarlyWarning_IngestT UnPack() {
    var _o = new SeradataEarlyWarning_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SeradataEarlyWarning_IngestT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdIR = this.IdIR;
    _o.SpacecraftId = this.SpacecraftId;
    _o.HostedForCompanyOrgId = this.HostedForCompanyOrgId;
    _o.ManufacturerOrgId = this.ManufacturerOrgId;
    _o.Name = this.Name;
    _o.SpectralBands = this.SpectralBands;
    _o.FrequencyLimits = this.FrequencyLimits;
    _o.BestResolution = this.BestResolution;
    _o.GroundStations = this.GroundStations;
    _o.GroundStationLocations = this.GroundStationLocations;
    _o.MissileLaunchPhaseDetectionAbility = this.MissileLaunchPhaseDetectionAbility;
    _o.EarthPointing = this.EarthPointing;
    _o.PartnerSpacecraftId = this.PartnerSpacecraftId;
    _o.PayloadNotes = this.PayloadNotes;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
  }
  public static Offset<SeradataEarlyWarning_Ingest> Pack(FlatBufferBuilder builder, SeradataEarlyWarning_IngestT _o) {
    if (_o == null) return default(Offset<SeradataEarlyWarning_Ingest>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idIR = _o.IdIR == null ? default(StringOffset) : builder.CreateString(_o.IdIR);
    var _spacecraftId = _o.SpacecraftId == null ? default(StringOffset) : builder.CreateString(_o.SpacecraftId);
    var _hostedForCompanyOrgId = _o.HostedForCompanyOrgId == null ? default(StringOffset) : builder.CreateString(_o.HostedForCompanyOrgId);
    var _manufacturerOrgId = _o.ManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.ManufacturerOrgId);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _spectralBands = _o.SpectralBands == null ? default(StringOffset) : builder.CreateString(_o.SpectralBands);
    var _frequencyLimits = _o.FrequencyLimits == null ? default(StringOffset) : builder.CreateString(_o.FrequencyLimits);
    var _groundStations = _o.GroundStations == null ? default(StringOffset) : builder.CreateString(_o.GroundStations);
    var _groundStationLocations = _o.GroundStationLocations == null ? default(StringOffset) : builder.CreateString(_o.GroundStationLocations);
    var _missileLaunchPhaseDetectionAbility = _o.MissileLaunchPhaseDetectionAbility == null ? default(StringOffset) : builder.CreateString(_o.MissileLaunchPhaseDetectionAbility);
    var _partnerSpacecraftId = _o.PartnerSpacecraftId == null ? default(StringOffset) : builder.CreateString(_o.PartnerSpacecraftId);
    var _payloadNotes = _o.PayloadNotes == null ? default(StringOffset) : builder.CreateString(_o.PayloadNotes);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateSeradataEarlyWarning_Ingest(
      builder,
      _id,
      _classificationMarking,
      _idIR,
      _spacecraftId,
      _hostedForCompanyOrgId,
      _manufacturerOrgId,
      _name,
      _spectralBands,
      _frequencyLimits,
      _o.BestResolution,
      _groundStations,
      _groundStationLocations,
      _missileLaunchPhaseDetectionAbility,
      _o.EarthPointing,
      _partnerSpacecraftId,
      _payloadNotes,
      _createdAt,
      _createdBy,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode);
  }
}

public class SeradataEarlyWarning_IngestT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdIR { get; set; }
  public string SpacecraftId { get; set; }
  public string HostedForCompanyOrgId { get; set; }
  public string ManufacturerOrgId { get; set; }
  public string Name { get; set; }
  public string SpectralBands { get; set; }
  public string FrequencyLimits { get; set; }
  public double BestResolution { get; set; }
  public string GroundStations { get; set; }
  public string GroundStationLocations { get; set; }
  public string MissileLaunchPhaseDetectionAbility { get; set; }
  public bool EarthPointing { get; set; }
  public string PartnerSpacecraftId { get; set; }
  public string PayloadNotes { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public SeradataEarlyWarning_Ingest_dataMode_Enum DataMode { get; set; }

  public SeradataEarlyWarning_IngestT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.IdIR = null;
    this.SpacecraftId = null;
    this.HostedForCompanyOrgId = null;
    this.ManufacturerOrgId = null;
    this.Name = null;
    this.SpectralBands = null;
    this.FrequencyLimits = null;
    this.BestResolution = 0.0;
    this.GroundStations = null;
    this.GroundStationLocations = null;
    this.MissileLaunchPhaseDetectionAbility = null;
    this.EarthPointing = false;
    this.PartnerSpacecraftId = null;
    this.PayloadNotes = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = SeradataEarlyWarning_Ingest_dataMode_Enum.REAL;
  }
  public static SeradataEarlyWarning_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return SeradataEarlyWarning_Ingest.GetRootAsSeradataEarlyWarning_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SeradataEarlyWarning_Ingest.FinishSeradataEarlyWarning_IngestBuffer(fbb, SeradataEarlyWarning_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class SeradataEarlyWarning_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*IdIR*/, false)
      && verifier.VerifyString(tablePos, 10 /*SpacecraftId*/, false)
      && verifier.VerifyString(tablePos, 12 /*HostedForCompanyOrgId*/, false)
      && verifier.VerifyString(tablePos, 14 /*ManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 16 /*Name*/, false)
      && verifier.VerifyString(tablePos, 18 /*SpectralBands*/, false)
      && verifier.VerifyString(tablePos, 20 /*FrequencyLimits*/, false)
      && verifier.VerifyField(tablePos, 22 /*BestResolution*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 24 /*GroundStations*/, false)
      && verifier.VerifyString(tablePos, 26 /*GroundStationLocations*/, false)
      && verifier.VerifyString(tablePos, 28 /*MissileLaunchPhaseDetectionAbility*/, false)
      && verifier.VerifyField(tablePos, 30 /*EarthPointing*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 32 /*PartnerSpacecraftId*/, false)
      && verifier.VerifyString(tablePos, 34 /*PayloadNotes*/, false)
      && verifier.VerifyString(tablePos, 36 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 38 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 40 /*Source*/, false)
      && verifier.VerifyString(tablePos, 42 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 44 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 46 /*DataMode*/, 1 /*SeradataEarlyWarning_Ingest_dataMode_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
