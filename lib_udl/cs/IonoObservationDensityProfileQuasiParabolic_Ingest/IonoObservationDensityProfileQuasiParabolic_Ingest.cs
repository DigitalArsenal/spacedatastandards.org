// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Coefficients to describe profile shape as quasi-parabolic segments.
public struct IonoObservationDensityProfileQuasiParabolic_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static IonoObservationDensityProfileQuasiParabolic_Ingest GetRootAsIonoObservationDensityProfileQuasiParabolic_Ingest(ByteBuffer _bb) { return GetRootAsIonoObservationDensityProfileQuasiParabolic_Ingest(_bb, new IonoObservationDensityProfileQuasiParabolic_Ingest()); }
  public static IonoObservationDensityProfileQuasiParabolic_Ingest GetRootAsIonoObservationDensityProfileQuasiParabolic_Ingest(ByteBuffer _bb, IonoObservationDensityProfileQuasiParabolic_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool IonoObservationDensityProfileQuasiParabolic_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "IONO"); }
  public static bool VerifyIonoObservationDensityProfileQuasiParabolic_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("IONO", false, IonoObservationDensityProfileQuasiParabolic_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IonoObservationDensityProfileQuasiParabolic_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// General description of the quasi-parabolic computation algorithm.
  /// Example: /// Example: Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C
  /// Constraints: No constraints specified.
  public string Description { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(4); }
  /// Value of the Earth's radius, in kilometers, used for computations.
  /// Example: /// Example: 6370.1
  /// Constraints: No constraints specified.
  public double EarthRadius { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Array of quasi-parabolic segments. Each segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C‚Äù. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string QuasiParabolicSegments(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int QuasiParabolicSegmentsLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<IonoObservationDensityProfileQuasiParabolic_Ingest> CreateIonoObservationDensityProfileQuasiParabolic_Ingest(FlatBufferBuilder builder,
      StringOffset descriptionOffset = default(StringOffset),
      double earthRadius = 0.0,
      VectorOffset quasiParabolicSegmentsOffset = default(VectorOffset)) {
    builder.StartTable(3);
    IonoObservationDensityProfileQuasiParabolic_Ingest.AddEarthRadius(builder, earthRadius);
    IonoObservationDensityProfileQuasiParabolic_Ingest.AddQuasiParabolicSegments(builder, quasiParabolicSegmentsOffset);
    IonoObservationDensityProfileQuasiParabolic_Ingest.AddDescription(builder, descriptionOffset);
    return IonoObservationDensityProfileQuasiParabolic_Ingest.EndIonoObservationDensityProfileQuasiParabolic_Ingest(builder);
  }

  public static void StartIonoObservationDensityProfileQuasiParabolic_Ingest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(0, descriptionOffset.Value, 0); }
  public static void AddEarthRadius(FlatBufferBuilder builder, double earthRadius) { builder.AddDouble(1, earthRadius, 0.0); }
  public static void AddQuasiParabolicSegments(FlatBufferBuilder builder, VectorOffset quasiParabolicSegmentsOffset) { builder.AddOffset(2, quasiParabolicSegmentsOffset.Value, 0); }
  public static VectorOffset CreateQuasiParabolicSegmentsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateQuasiParabolicSegmentsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQuasiParabolicSegmentsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateQuasiParabolicSegmentsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartQuasiParabolicSegmentsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<IonoObservationDensityProfileQuasiParabolic_Ingest> EndIonoObservationDensityProfileQuasiParabolic_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<IonoObservationDensityProfileQuasiParabolic_Ingest>(o);
  }
  public static void FinishIonoObservationDensityProfileQuasiParabolic_IngestBuffer(FlatBufferBuilder builder, Offset<IonoObservationDensityProfileQuasiParabolic_Ingest> offset) { builder.Finish(offset.Value, "IONO"); }
  public static void FinishSizePrefixedIonoObservationDensityProfileQuasiParabolic_IngestBuffer(FlatBufferBuilder builder, Offset<IonoObservationDensityProfileQuasiParabolic_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "IONO"); }
  public IonoObservationDensityProfileQuasiParabolic_IngestT UnPack() {
    var _o = new IonoObservationDensityProfileQuasiParabolic_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IonoObservationDensityProfileQuasiParabolic_IngestT _o) {
    _o.Description = this.Description;
    _o.EarthRadius = this.EarthRadius;
    _o.QuasiParabolicSegments = new List<string>();
    for (var _j = 0; _j < this.QuasiParabolicSegmentsLength; ++_j) {_o.QuasiParabolicSegments.Add(this.QuasiParabolicSegments(_j));}
  }
  public static Offset<IonoObservationDensityProfileQuasiParabolic_Ingest> Pack(FlatBufferBuilder builder, IonoObservationDensityProfileQuasiParabolic_IngestT _o) {
    if (_o == null) return default(Offset<IonoObservationDensityProfileQuasiParabolic_Ingest>);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _quasiParabolicSegments = default(VectorOffset);
    if (_o.QuasiParabolicSegments != null) {
      var __quasiParabolicSegments = new StringOffset[_o.QuasiParabolicSegments.Count];
      for (var _j = 0; _j < __quasiParabolicSegments.Length; ++_j) { __quasiParabolicSegments[_j] = builder.CreateString(_o.QuasiParabolicSegments[_j]); }
      _quasiParabolicSegments = CreateQuasiParabolicSegmentsVector(builder, __quasiParabolicSegments);
    }
    return CreateIonoObservationDensityProfileQuasiParabolic_Ingest(
      builder,
      _description,
      _o.EarthRadius,
      _quasiParabolicSegments);
  }
}

public class IonoObservationDensityProfileQuasiParabolic_IngestT
{
  public string Description { get; set; }
  public double EarthRadius { get; set; }
  public List<string> QuasiParabolicSegments { get; set; }

  public IonoObservationDensityProfileQuasiParabolic_IngestT() {
    this.Description = null;
    this.EarthRadius = 0.0;
    this.QuasiParabolicSegments = null;
  }
  public static IonoObservationDensityProfileQuasiParabolic_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return IonoObservationDensityProfileQuasiParabolic_Ingest.GetRootAsIonoObservationDensityProfileQuasiParabolic_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    IonoObservationDensityProfileQuasiParabolic_Ingest.FinishIonoObservationDensityProfileQuasiParabolic_IngestBuffer(fbb, IonoObservationDensityProfileQuasiParabolic_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class IonoObservationDensityProfileQuasiParabolic_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Description*/, false)
      && verifier.VerifyField(tablePos, 6 /*EarthRadius*/, 8 /*double*/, 8, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*QuasiParabolicSegments*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
