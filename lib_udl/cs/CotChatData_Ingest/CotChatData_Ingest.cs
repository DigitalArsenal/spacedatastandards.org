// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Schema for the CotChatData to post.
public struct CotChatData_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static CotChatData_Ingest GetRootAsCotChatData_Ingest(ByteBuffer _bb) { return GetRootAsCotChatData_Ingest(_bb, new CotChatData_Ingest()); }
  public static CotChatData_Ingest GetRootAsCotChatData_Ingest(ByteBuffer _bb, CotChatData_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool CotChatData_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "COTC"); }
  public static bool VerifyCotChatData_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("COTC", false, CotChatData_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public CotChatData_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Chat room name to send chat message to.
  /// Example: /// Example: All Chat Rooms
  /// Constraints: No constraints specified.
  public string ChatRoom { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChatRoomBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetChatRoomBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetChatRoomArray() { return __p.__vector_as_array<byte>(4); }
  /// Callsign of chat sender.
  /// Example: /// Example: Pebble
  /// Constraints: No constraints specified.
  public string ChatSenderCallSign { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChatSenderCallSignBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetChatSenderCallSignBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetChatSenderCallSignArray() { return __p.__vector_as_array<byte>(6); }
  /// Contents of a chat message.
  /// Example: /// Example: Mission is go
  /// Constraints: No constraints specified.
  public string ChatMsg { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetChatMsgBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetChatMsgBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetChatMsgArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<CotChatData_Ingest> CreateCotChatData_Ingest(FlatBufferBuilder builder,
      StringOffset chatRoomOffset = default(StringOffset),
      StringOffset chatSenderCallSignOffset = default(StringOffset),
      StringOffset chatMsgOffset = default(StringOffset)) {
    builder.StartTable(3);
    CotChatData_Ingest.AddChatMsg(builder, chatMsgOffset);
    CotChatData_Ingest.AddChatSenderCallSign(builder, chatSenderCallSignOffset);
    CotChatData_Ingest.AddChatRoom(builder, chatRoomOffset);
    return CotChatData_Ingest.EndCotChatData_Ingest(builder);
  }

  public static void StartCotChatData_Ingest(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddChatRoom(FlatBufferBuilder builder, StringOffset chatRoomOffset) { builder.AddOffset(0, chatRoomOffset.Value, 0); }
  public static void AddChatSenderCallSign(FlatBufferBuilder builder, StringOffset chatSenderCallSignOffset) { builder.AddOffset(1, chatSenderCallSignOffset.Value, 0); }
  public static void AddChatMsg(FlatBufferBuilder builder, StringOffset chatMsgOffset) { builder.AddOffset(2, chatMsgOffset.Value, 0); }
  public static Offset<CotChatData_Ingest> EndCotChatData_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<CotChatData_Ingest>(o);
  }
  public static void FinishCotChatData_IngestBuffer(FlatBufferBuilder builder, Offset<CotChatData_Ingest> offset) { builder.Finish(offset.Value, "COTC"); }
  public static void FinishSizePrefixedCotChatData_IngestBuffer(FlatBufferBuilder builder, Offset<CotChatData_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "COTC"); }
  public CotChatData_IngestT UnPack() {
    var _o = new CotChatData_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(CotChatData_IngestT _o) {
    _o.ChatRoom = this.ChatRoom;
    _o.ChatSenderCallSign = this.ChatSenderCallSign;
    _o.ChatMsg = this.ChatMsg;
  }
  public static Offset<CotChatData_Ingest> Pack(FlatBufferBuilder builder, CotChatData_IngestT _o) {
    if (_o == null) return default(Offset<CotChatData_Ingest>);
    var _chatRoom = _o.ChatRoom == null ? default(StringOffset) : builder.CreateString(_o.ChatRoom);
    var _chatSenderCallSign = _o.ChatSenderCallSign == null ? default(StringOffset) : builder.CreateString(_o.ChatSenderCallSign);
    var _chatMsg = _o.ChatMsg == null ? default(StringOffset) : builder.CreateString(_o.ChatMsg);
    return CreateCotChatData_Ingest(
      builder,
      _chatRoom,
      _chatSenderCallSign,
      _chatMsg);
  }
}

public class CotChatData_IngestT
{
  public string ChatRoom { get; set; }
  public string ChatSenderCallSign { get; set; }
  public string ChatMsg { get; set; }

  public CotChatData_IngestT() {
    this.ChatRoom = null;
    this.ChatSenderCallSign = null;
    this.ChatMsg = null;
  }
  public static CotChatData_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return CotChatData_Ingest.GetRootAsCotChatData_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    CotChatData_Ingest.FinishCotChatData_IngestBuffer(fbb, CotChatData_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class CotChatData_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*ChatRoom*/, false)
      && verifier.VerifyString(tablePos, 6 /*ChatSenderCallSign*/, false)
      && verifier.VerifyString(tablePos, 8 /*ChatMsg*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
