// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// The table captures metadata associated with the published videos in UDL.
public struct VideoStreams_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static VideoStreams_Abridged GetRootAsVideoStreams_Abridged(ByteBuffer _bb) { return GetRootAsVideoStreams_Abridged(_bb, new VideoStreams_Abridged()); }
  public static VideoStreams_Abridged GetRootAsVideoStreams_Abridged(ByteBuffer _bb, VideoStreams_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool VideoStreams_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "VIDE"); }
  public static bool VerifyVideoStreams_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("VIDE", false, VideoStreams_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public VideoStreams_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: VIDEOSTREAMS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Name of the video stream.
  /// Example: /// Example: name
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string Name { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(8); }
  /// Description/notes associated with the video stream.
  /// Example: /// Example: description
  /// Constraints: Minimum length = 1, Maximum length = 1024
  public string Description { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(10); }
  /// The timestamp when the stream is available from. The unit is ISO 8601 format.
  /// Example: /// Example: 2021-01-01T01:01:01.123456Z
  /// Constraints: No constraints specified.
  public string StartTime { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartTimeBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetStartTimeBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetStartTimeArray() { return __p.__vector_as_array<byte>(12); }
  /// The timestamp when the stream is available until. The unit is ISO 8601 format.
  /// Example: /// Example: 2021-01-01T01:01:01.123456Z
  /// Constraints: No constraints specified.
  public string StopTime { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStopTimeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetStopTimeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetStopTimeArray() { return __p.__vector_as_array<byte>(14); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Source { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(16); }
  /// Video Publisher Token.
  /// Example: /// Example: tokenValue
  /// Constraints: Minimum length = 1, Maximum length = 1024
  public string TokenValue { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTokenValueBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetTokenValueBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetTokenValueArray() { return __p.__vector_as_array<byte>(18); }
  /// Video Streaming Support URLs.
  /// Example: /// Example: ['videoUrls', 'videoUrls2']
  /// Constraints: No constraints specified.
  public string VideoUrls(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int VideoUrlsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public VideoStreams_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(22); return o != 0 ? (VideoStreams_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : VideoStreams_Abridged_dataMode_Enum.REAL; } }
  /// Time the row was created in the database.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(24); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(26); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: OPS1
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(28); }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string Origin { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(30); }

  public static Offset<VideoStreams_Abridged> CreateVideoStreams_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset descriptionOffset = default(StringOffset),
      StringOffset startTimeOffset = default(StringOffset),
      StringOffset stopTimeOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset tokenValueOffset = default(StringOffset),
      VectorOffset videoUrlsOffset = default(VectorOffset),
      VideoStreams_Abridged_dataMode_Enum dataMode = VideoStreams_Abridged_dataMode_Enum.REAL,
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset)) {
    builder.StartTable(14);
    VideoStreams_Abridged.AddOrigin(builder, originOffset);
    VideoStreams_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    VideoStreams_Abridged.AddCreatedBy(builder, createdByOffset);
    VideoStreams_Abridged.AddCreatedAt(builder, createdAtOffset);
    VideoStreams_Abridged.AddVideoUrls(builder, videoUrlsOffset);
    VideoStreams_Abridged.AddTokenValue(builder, tokenValueOffset);
    VideoStreams_Abridged.AddSource(builder, sourceOffset);
    VideoStreams_Abridged.AddStopTime(builder, stopTimeOffset);
    VideoStreams_Abridged.AddStartTime(builder, startTimeOffset);
    VideoStreams_Abridged.AddDescription(builder, descriptionOffset);
    VideoStreams_Abridged.AddName(builder, nameOffset);
    VideoStreams_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    VideoStreams_Abridged.AddId(builder, idOffset);
    VideoStreams_Abridged.AddDataMode(builder, dataMode);
    return VideoStreams_Abridged.EndVideoStreams_Abridged(builder);
  }

  public static void StartVideoStreams_Abridged(FlatBufferBuilder builder) { builder.StartTable(14); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(2, nameOffset.Value, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(3, descriptionOffset.Value, 0); }
  public static void AddStartTime(FlatBufferBuilder builder, StringOffset startTimeOffset) { builder.AddOffset(4, startTimeOffset.Value, 0); }
  public static void AddStopTime(FlatBufferBuilder builder, StringOffset stopTimeOffset) { builder.AddOffset(5, stopTimeOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(6, sourceOffset.Value, 0); }
  public static void AddTokenValue(FlatBufferBuilder builder, StringOffset tokenValueOffset) { builder.AddOffset(7, tokenValueOffset.Value, 0); }
  public static void AddVideoUrls(FlatBufferBuilder builder, VectorOffset videoUrlsOffset) { builder.AddOffset(8, videoUrlsOffset.Value, 0); }
  public static VectorOffset CreateVideoUrlsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateVideoUrlsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVideoUrlsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateVideoUrlsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartVideoUrlsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDataMode(FlatBufferBuilder builder, VideoStreams_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(9, (sbyte)dataMode, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(10, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(11, createdByOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(12, origNetworkOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(13, originOffset.Value, 0); }
  public static Offset<VideoStreams_Abridged> EndVideoStreams_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<VideoStreams_Abridged>(o);
  }
  public static void FinishVideoStreams_AbridgedBuffer(FlatBufferBuilder builder, Offset<VideoStreams_Abridged> offset) { builder.Finish(offset.Value, "VIDE"); }
  public static void FinishSizePrefixedVideoStreams_AbridgedBuffer(FlatBufferBuilder builder, Offset<VideoStreams_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "VIDE"); }
  public VideoStreams_AbridgedT UnPack() {
    var _o = new VideoStreams_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(VideoStreams_AbridgedT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.Name = this.Name;
    _o.Description = this.Description;
    _o.StartTime = this.StartTime;
    _o.StopTime = this.StopTime;
    _o.Source = this.Source;
    _o.TokenValue = this.TokenValue;
    _o.VideoUrls = new List<string>();
    for (var _j = 0; _j < this.VideoUrlsLength; ++_j) {_o.VideoUrls.Add(this.VideoUrls(_j));}
    _o.DataMode = this.DataMode;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.OrigNetwork = this.OrigNetwork;
    _o.Origin = this.Origin;
  }
  public static Offset<VideoStreams_Abridged> Pack(FlatBufferBuilder builder, VideoStreams_AbridgedT _o) {
    if (_o == null) return default(Offset<VideoStreams_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _startTime = _o.StartTime == null ? default(StringOffset) : builder.CreateString(_o.StartTime);
    var _stopTime = _o.StopTime == null ? default(StringOffset) : builder.CreateString(_o.StopTime);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _tokenValue = _o.TokenValue == null ? default(StringOffset) : builder.CreateString(_o.TokenValue);
    var _videoUrls = default(VectorOffset);
    if (_o.VideoUrls != null) {
      var __videoUrls = new StringOffset[_o.VideoUrls.Count];
      for (var _j = 0; _j < __videoUrls.Length; ++_j) { __videoUrls[_j] = builder.CreateString(_o.VideoUrls[_j]); }
      _videoUrls = CreateVideoUrlsVector(builder, __videoUrls);
    }
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    return CreateVideoStreams_Abridged(
      builder,
      _id,
      _classificationMarking,
      _name,
      _description,
      _startTime,
      _stopTime,
      _source,
      _tokenValue,
      _videoUrls,
      _o.DataMode,
      _createdAt,
      _createdBy,
      _origNetwork,
      _origin);
  }
}

public class VideoStreams_AbridgedT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string Name { get; set; }
  public string Description { get; set; }
  public string StartTime { get; set; }
  public string StopTime { get; set; }
  public string Source { get; set; }
  public string TokenValue { get; set; }
  public List<string> VideoUrls { get; set; }
  public VideoStreams_Abridged_dataMode_Enum DataMode { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string OrigNetwork { get; set; }
  public string Origin { get; set; }

  public VideoStreams_AbridgedT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.Name = null;
    this.Description = null;
    this.StartTime = null;
    this.StopTime = null;
    this.Source = null;
    this.TokenValue = null;
    this.VideoUrls = null;
    this.DataMode = VideoStreams_Abridged_dataMode_Enum.REAL;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.OrigNetwork = null;
    this.Origin = null;
  }
  public static VideoStreams_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return VideoStreams_Abridged.GetRootAsVideoStreams_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    VideoStreams_Abridged.FinishVideoStreams_AbridgedBuffer(fbb, VideoStreams_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class VideoStreams_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*Name*/, false)
      && verifier.VerifyString(tablePos, 10 /*Description*/, false)
      && verifier.VerifyString(tablePos, 12 /*StartTime*/, false)
      && verifier.VerifyString(tablePos, 14 /*StopTime*/, false)
      && verifier.VerifyString(tablePos, 16 /*Source*/, false)
      && verifier.VerifyString(tablePos, 18 /*TokenValue*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 20 /*VideoUrls*/, false)
      && verifier.VerifyField(tablePos, 22 /*DataMode*/, 1 /*VideoStreams_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 24 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 26 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 28 /*OrigNetwork*/, false)
      && verifier.VerifyString(tablePos, 30 /*Origin*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
