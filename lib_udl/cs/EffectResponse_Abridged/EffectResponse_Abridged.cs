// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// A response for various effects on a target.
public struct EffectResponse_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static EffectResponse_Abridged GetRootAsEffectResponse_Abridged(ByteBuffer _bb) { return GetRootAsEffectResponse_Abridged(_bb, new EffectResponse_Abridged()); }
  public static EffectResponse_Abridged GetRootAsEffectResponse_Abridged(ByteBuffer _bb, EffectResponse_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool EffectResponse_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "EFFE"); }
  public static bool VerifyEffectResponse_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("EFFE", false, EffectResponse_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public EffectResponse_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: EFFECTRESPONSE-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Unique identifier of the EffectRequest associated with this response.
  /// Example: /// Example: EFFECTREQUEST-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdEffectRequest { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdEffectRequestBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIdEffectRequestBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIdEffectRequestArray() { return __p.__vector_as_array<byte>(8); }
  /// The external system identifier of the associated effect request. A human readable unique id.
  /// Example: /// Example: EXTERNALREQUEST-ID
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ExternalRequestId { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExternalRequestIdBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetExternalRequestIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetExternalRequestIdArray() { return __p.__vector_as_array<byte>(10); }
  /// The type of response in this record (e.g. COA, SCORECARD, etc.).
  /// Example: /// Example: COA
  /// Constraints: Minimum length = 1, Maximum length = 24
  public string Type { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(12); }
  /// The source type of the asset/actor identifier (AIRCRAFT, LANDCRAFT, SEACRAFT, TRACK).
  /// Example: /// Example: AIRCRAFT
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ActorSrcType { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActorSrcTypeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetActorSrcTypeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetActorSrcTypeArray() { return __p.__vector_as_array<byte>(14); }
  /// The record ID, depending on the type identified in actorSrcType, of the requested asset.
  /// Example: /// Example: RC-ID
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ActorSrcId { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetActorSrcIdBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetActorSrcIdBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetActorSrcIdArray() { return __p.__vector_as_array<byte>(16); }
  /// The type of munition being fired.
  /// Example: /// Example: Dummy
  /// Constraints: Minimum length = 0, Maximum length = 1024
  public string MunitionType { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMunitionTypeBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetMunitionTypeBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMunitionTypeArray() { return __p.__vector_as_array<byte>(18); }
  /// Unique identifier of the munition.
  /// Example: /// Example: MUNITION-ID
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string MunitionId { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMunitionIdBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetMunitionIdBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetMunitionIdArray() { return __p.__vector_as_array<byte>(20); }
  /// The number of shots required to destroy target.
  /// Example: /// Example: 10
  /// Constraints: No constraints specified.
  public int ShotsRequired { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The probability of kill (0-1) of the target being destroyed.
  /// Example: /// Example: 0.7
  /// Constraints: No constraints specified.
  public double ProbabilityOfKill { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The collateral damage estimate (CDE) of the munition being fired.
  /// Example: /// Example: 0.5
  /// Constraints: No constraints specified.
  public double CollateralDamageEst { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// List of actions associated with this effect response.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string ActionsList(int j) { int o = __p.__offset(28); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ActionsListLength { get { int o = __p.__offset(28); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// List of external actions to be executed as part of this task.
  /// Example: /// Example: ['ACTION1', 'ACTION2']
  /// Constraints: No constraints specified.
  public string ExternalActions(int j) { int o = __p.__offset(30); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int ExternalActionsLength { get { int o = __p.__offset(30); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// List of COA metrics associated with this effect response.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string CoaMetrics(int j) { int o = __p.__offset(32); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CoaMetricsLength { get { int o = __p.__offset(32); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// The time to overhead for the red force to be over their target, in ISO8601 UTC format.
  /// Example: /// Example: 2021-01-01T00:00:00.123456Z
  /// Constraints: No constraints specified.
  public string RedTimeToOverhead { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRedTimeToOverheadBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetRedTimeToOverheadBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetRedTimeToOverheadArray() { return __p.__vector_as_array<byte>(34); }
  /// The deadline time to accept this COA before it's no longer valid, in ISO8601 UTC format.
  /// Example: /// Example: 2021-01-01T00:00:00.123456Z
  /// Constraints: No constraints specified.
  public string DecisionDeadline { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDecisionDeadlineBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetDecisionDeadlineBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetDecisionDeadlineArray() { return __p.__vector_as_array<byte>(36); }
  /// The source type of the targetId identifier (POI, SITE, TRACK).
  /// Example: /// Example: POI
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string RedTargetSrcType { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRedTargetSrcTypeBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetRedTargetSrcTypeBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetRedTargetSrcTypeArray() { return __p.__vector_as_array<byte>(38); }
  /// The record ID, depending on the type identified in redTargetSrcType, of the red force target.  If the redTargetSrcType is POI or TRACK, then this identifier corresponds to either poi.poiid or track.trkId from their respective schemas.
  /// Example: /// Example: REDTARGETSRC-ID
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string RedTargetSrcId { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRedTargetSrcIdBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetRedTargetSrcIdBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetRedTargetSrcIdArray() { return __p.__vector_as_array<byte>(40); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2021-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(42); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(44); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(46); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(48); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public EffectResponse_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(50); return o != 0 ? (EffectResponse_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : EffectResponse_Abridged_dataMode_Enum.REAL; } }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(52, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(52); }

  public static Offset<EffectResponse_Abridged> CreateEffectResponse_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idEffectRequestOffset = default(StringOffset),
      StringOffset externalRequestIdOffset = default(StringOffset),
      StringOffset typeOffset = default(StringOffset),
      StringOffset actorSrcTypeOffset = default(StringOffset),
      StringOffset actorSrcIdOffset = default(StringOffset),
      StringOffset munitionTypeOffset = default(StringOffset),
      StringOffset munitionIdOffset = default(StringOffset),
      int shotsRequired = 0,
      double probabilityOfKill = 0.0,
      double collateralDamageEst = 0.0,
      VectorOffset actionsListOffset = default(VectorOffset),
      VectorOffset externalActionsOffset = default(VectorOffset),
      VectorOffset coaMetricsOffset = default(VectorOffset),
      StringOffset redTimeToOverheadOffset = default(StringOffset),
      StringOffset decisionDeadlineOffset = default(StringOffset),
      StringOffset redTargetSrcTypeOffset = default(StringOffset),
      StringOffset redTargetSrcIdOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      EffectResponse_Abridged_dataMode_Enum dataMode = EffectResponse_Abridged_dataMode_Enum.REAL,
      StringOffset origNetworkOffset = default(StringOffset)) {
    builder.StartTable(25);
    EffectResponse_Abridged.AddCollateralDamageEst(builder, collateralDamageEst);
    EffectResponse_Abridged.AddProbabilityOfKill(builder, probabilityOfKill);
    EffectResponse_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    EffectResponse_Abridged.AddOrigin(builder, originOffset);
    EffectResponse_Abridged.AddSource(builder, sourceOffset);
    EffectResponse_Abridged.AddCreatedBy(builder, createdByOffset);
    EffectResponse_Abridged.AddCreatedAt(builder, createdAtOffset);
    EffectResponse_Abridged.AddRedTargetSrcId(builder, redTargetSrcIdOffset);
    EffectResponse_Abridged.AddRedTargetSrcType(builder, redTargetSrcTypeOffset);
    EffectResponse_Abridged.AddDecisionDeadline(builder, decisionDeadlineOffset);
    EffectResponse_Abridged.AddRedTimeToOverhead(builder, redTimeToOverheadOffset);
    EffectResponse_Abridged.AddCoaMetrics(builder, coaMetricsOffset);
    EffectResponse_Abridged.AddExternalActions(builder, externalActionsOffset);
    EffectResponse_Abridged.AddActionsList(builder, actionsListOffset);
    EffectResponse_Abridged.AddShotsRequired(builder, shotsRequired);
    EffectResponse_Abridged.AddMunitionId(builder, munitionIdOffset);
    EffectResponse_Abridged.AddMunitionType(builder, munitionTypeOffset);
    EffectResponse_Abridged.AddActorSrcId(builder, actorSrcIdOffset);
    EffectResponse_Abridged.AddActorSrcType(builder, actorSrcTypeOffset);
    EffectResponse_Abridged.AddType(builder, typeOffset);
    EffectResponse_Abridged.AddExternalRequestId(builder, externalRequestIdOffset);
    EffectResponse_Abridged.AddIdEffectRequest(builder, idEffectRequestOffset);
    EffectResponse_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    EffectResponse_Abridged.AddId(builder, idOffset);
    EffectResponse_Abridged.AddDataMode(builder, dataMode);
    return EffectResponse_Abridged.EndEffectResponse_Abridged(builder);
  }

  public static void StartEffectResponse_Abridged(FlatBufferBuilder builder) { builder.StartTable(25); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddIdEffectRequest(FlatBufferBuilder builder, StringOffset idEffectRequestOffset) { builder.AddOffset(2, idEffectRequestOffset.Value, 0); }
  public static void AddExternalRequestId(FlatBufferBuilder builder, StringOffset externalRequestIdOffset) { builder.AddOffset(3, externalRequestIdOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(4, typeOffset.Value, 0); }
  public static void AddActorSrcType(FlatBufferBuilder builder, StringOffset actorSrcTypeOffset) { builder.AddOffset(5, actorSrcTypeOffset.Value, 0); }
  public static void AddActorSrcId(FlatBufferBuilder builder, StringOffset actorSrcIdOffset) { builder.AddOffset(6, actorSrcIdOffset.Value, 0); }
  public static void AddMunitionType(FlatBufferBuilder builder, StringOffset munitionTypeOffset) { builder.AddOffset(7, munitionTypeOffset.Value, 0); }
  public static void AddMunitionId(FlatBufferBuilder builder, StringOffset munitionIdOffset) { builder.AddOffset(8, munitionIdOffset.Value, 0); }
  public static void AddShotsRequired(FlatBufferBuilder builder, int shotsRequired) { builder.AddInt(9, shotsRequired, 0); }
  public static void AddProbabilityOfKill(FlatBufferBuilder builder, double probabilityOfKill) { builder.AddDouble(10, probabilityOfKill, 0.0); }
  public static void AddCollateralDamageEst(FlatBufferBuilder builder, double collateralDamageEst) { builder.AddDouble(11, collateralDamageEst, 0.0); }
  public static void AddActionsList(FlatBufferBuilder builder, VectorOffset actionsListOffset) { builder.AddOffset(12, actionsListOffset.Value, 0); }
  public static VectorOffset CreateActionsListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateActionsListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActionsListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateActionsListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartActionsListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddExternalActions(FlatBufferBuilder builder, VectorOffset externalActionsOffset) { builder.AddOffset(13, externalActionsOffset.Value, 0); }
  public static VectorOffset CreateExternalActionsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateExternalActionsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExternalActionsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateExternalActionsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartExternalActionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCoaMetrics(FlatBufferBuilder builder, VectorOffset coaMetricsOffset) { builder.AddOffset(14, coaMetricsOffset.Value, 0); }
  public static VectorOffset CreateCoaMetricsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCoaMetricsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCoaMetricsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCoaMetricsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCoaMetricsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddRedTimeToOverhead(FlatBufferBuilder builder, StringOffset redTimeToOverheadOffset) { builder.AddOffset(15, redTimeToOverheadOffset.Value, 0); }
  public static void AddDecisionDeadline(FlatBufferBuilder builder, StringOffset decisionDeadlineOffset) { builder.AddOffset(16, decisionDeadlineOffset.Value, 0); }
  public static void AddRedTargetSrcType(FlatBufferBuilder builder, StringOffset redTargetSrcTypeOffset) { builder.AddOffset(17, redTargetSrcTypeOffset.Value, 0); }
  public static void AddRedTargetSrcId(FlatBufferBuilder builder, StringOffset redTargetSrcIdOffset) { builder.AddOffset(18, redTargetSrcIdOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(19, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(20, createdByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(21, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(22, originOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, EffectResponse_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(23, (sbyte)dataMode, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(24, origNetworkOffset.Value, 0); }
  public static Offset<EffectResponse_Abridged> EndEffectResponse_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<EffectResponse_Abridged>(o);
  }
  public static void FinishEffectResponse_AbridgedBuffer(FlatBufferBuilder builder, Offset<EffectResponse_Abridged> offset) { builder.Finish(offset.Value, "EFFE"); }
  public static void FinishSizePrefixedEffectResponse_AbridgedBuffer(FlatBufferBuilder builder, Offset<EffectResponse_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "EFFE"); }
  public EffectResponse_AbridgedT UnPack() {
    var _o = new EffectResponse_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(EffectResponse_AbridgedT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdEffectRequest = this.IdEffectRequest;
    _o.ExternalRequestId = this.ExternalRequestId;
    _o.Type = this.Type;
    _o.ActorSrcType = this.ActorSrcType;
    _o.ActorSrcId = this.ActorSrcId;
    _o.MunitionType = this.MunitionType;
    _o.MunitionId = this.MunitionId;
    _o.ShotsRequired = this.ShotsRequired;
    _o.ProbabilityOfKill = this.ProbabilityOfKill;
    _o.CollateralDamageEst = this.CollateralDamageEst;
    _o.ActionsList = new List<string>();
    for (var _j = 0; _j < this.ActionsListLength; ++_j) {_o.ActionsList.Add(this.ActionsList(_j));}
    _o.ExternalActions = new List<string>();
    for (var _j = 0; _j < this.ExternalActionsLength; ++_j) {_o.ExternalActions.Add(this.ExternalActions(_j));}
    _o.CoaMetrics = new List<string>();
    for (var _j = 0; _j < this.CoaMetricsLength; ++_j) {_o.CoaMetrics.Add(this.CoaMetrics(_j));}
    _o.RedTimeToOverhead = this.RedTimeToOverhead;
    _o.DecisionDeadline = this.DecisionDeadline;
    _o.RedTargetSrcType = this.RedTargetSrcType;
    _o.RedTargetSrcId = this.RedTargetSrcId;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.DataMode = this.DataMode;
    _o.OrigNetwork = this.OrigNetwork;
  }
  public static Offset<EffectResponse_Abridged> Pack(FlatBufferBuilder builder, EffectResponse_AbridgedT _o) {
    if (_o == null) return default(Offset<EffectResponse_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idEffectRequest = _o.IdEffectRequest == null ? default(StringOffset) : builder.CreateString(_o.IdEffectRequest);
    var _externalRequestId = _o.ExternalRequestId == null ? default(StringOffset) : builder.CreateString(_o.ExternalRequestId);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _actorSrcType = _o.ActorSrcType == null ? default(StringOffset) : builder.CreateString(_o.ActorSrcType);
    var _actorSrcId = _o.ActorSrcId == null ? default(StringOffset) : builder.CreateString(_o.ActorSrcId);
    var _munitionType = _o.MunitionType == null ? default(StringOffset) : builder.CreateString(_o.MunitionType);
    var _munitionId = _o.MunitionId == null ? default(StringOffset) : builder.CreateString(_o.MunitionId);
    var _actionsList = default(VectorOffset);
    if (_o.ActionsList != null) {
      var __actionsList = new StringOffset[_o.ActionsList.Count];
      for (var _j = 0; _j < __actionsList.Length; ++_j) { __actionsList[_j] = builder.CreateString(_o.ActionsList[_j]); }
      _actionsList = CreateActionsListVector(builder, __actionsList);
    }
    var _externalActions = default(VectorOffset);
    if (_o.ExternalActions != null) {
      var __externalActions = new StringOffset[_o.ExternalActions.Count];
      for (var _j = 0; _j < __externalActions.Length; ++_j) { __externalActions[_j] = builder.CreateString(_o.ExternalActions[_j]); }
      _externalActions = CreateExternalActionsVector(builder, __externalActions);
    }
    var _coaMetrics = default(VectorOffset);
    if (_o.CoaMetrics != null) {
      var __coaMetrics = new StringOffset[_o.CoaMetrics.Count];
      for (var _j = 0; _j < __coaMetrics.Length; ++_j) { __coaMetrics[_j] = builder.CreateString(_o.CoaMetrics[_j]); }
      _coaMetrics = CreateCoaMetricsVector(builder, __coaMetrics);
    }
    var _redTimeToOverhead = _o.RedTimeToOverhead == null ? default(StringOffset) : builder.CreateString(_o.RedTimeToOverhead);
    var _decisionDeadline = _o.DecisionDeadline == null ? default(StringOffset) : builder.CreateString(_o.DecisionDeadline);
    var _redTargetSrcType = _o.RedTargetSrcType == null ? default(StringOffset) : builder.CreateString(_o.RedTargetSrcType);
    var _redTargetSrcId = _o.RedTargetSrcId == null ? default(StringOffset) : builder.CreateString(_o.RedTargetSrcId);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateEffectResponse_Abridged(
      builder,
      _id,
      _classificationMarking,
      _idEffectRequest,
      _externalRequestId,
      _type,
      _actorSrcType,
      _actorSrcId,
      _munitionType,
      _munitionId,
      _o.ShotsRequired,
      _o.ProbabilityOfKill,
      _o.CollateralDamageEst,
      _actionsList,
      _externalActions,
      _coaMetrics,
      _redTimeToOverhead,
      _decisionDeadline,
      _redTargetSrcType,
      _redTargetSrcId,
      _createdAt,
      _createdBy,
      _source,
      _origin,
      _o.DataMode,
      _origNetwork);
  }
}

public class EffectResponse_AbridgedT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdEffectRequest { get; set; }
  public string ExternalRequestId { get; set; }
  public string Type { get; set; }
  public string ActorSrcType { get; set; }
  public string ActorSrcId { get; set; }
  public string MunitionType { get; set; }
  public string MunitionId { get; set; }
  public int ShotsRequired { get; set; }
  public double ProbabilityOfKill { get; set; }
  public double CollateralDamageEst { get; set; }
  public List<string> ActionsList { get; set; }
  public List<string> ExternalActions { get; set; }
  public List<string> CoaMetrics { get; set; }
  public string RedTimeToOverhead { get; set; }
  public string DecisionDeadline { get; set; }
  public string RedTargetSrcType { get; set; }
  public string RedTargetSrcId { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public EffectResponse_Abridged_dataMode_Enum DataMode { get; set; }
  public string OrigNetwork { get; set; }

  public EffectResponse_AbridgedT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.IdEffectRequest = null;
    this.ExternalRequestId = null;
    this.Type = null;
    this.ActorSrcType = null;
    this.ActorSrcId = null;
    this.MunitionType = null;
    this.MunitionId = null;
    this.ShotsRequired = 0;
    this.ProbabilityOfKill = 0.0;
    this.CollateralDamageEst = 0.0;
    this.ActionsList = null;
    this.ExternalActions = null;
    this.CoaMetrics = null;
    this.RedTimeToOverhead = null;
    this.DecisionDeadline = null;
    this.RedTargetSrcType = null;
    this.RedTargetSrcId = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.DataMode = EffectResponse_Abridged_dataMode_Enum.REAL;
    this.OrigNetwork = null;
  }
  public static EffectResponse_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return EffectResponse_Abridged.GetRootAsEffectResponse_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    EffectResponse_Abridged.FinishEffectResponse_AbridgedBuffer(fbb, EffectResponse_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class EffectResponse_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*IdEffectRequest*/, false)
      && verifier.VerifyString(tablePos, 10 /*ExternalRequestId*/, false)
      && verifier.VerifyString(tablePos, 12 /*Type*/, false)
      && verifier.VerifyString(tablePos, 14 /*ActorSrcType*/, false)
      && verifier.VerifyString(tablePos, 16 /*ActorSrcId*/, false)
      && verifier.VerifyString(tablePos, 18 /*MunitionType*/, false)
      && verifier.VerifyString(tablePos, 20 /*MunitionId*/, false)
      && verifier.VerifyField(tablePos, 22 /*ShotsRequired*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 24 /*ProbabilityOfKill*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 26 /*CollateralDamageEst*/, 8 /*double*/, 8, false)
      && verifier.VerifyVectorOfStrings(tablePos, 28 /*ActionsList*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 30 /*ExternalActions*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 32 /*CoaMetrics*/, false)
      && verifier.VerifyString(tablePos, 34 /*RedTimeToOverhead*/, false)
      && verifier.VerifyString(tablePos, 36 /*DecisionDeadline*/, false)
      && verifier.VerifyString(tablePos, 38 /*RedTargetSrcType*/, false)
      && verifier.VerifyString(tablePos, 40 /*RedTargetSrcId*/, false)
      && verifier.VerifyString(tablePos, 42 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 44 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 46 /*Source*/, false)
      && verifier.VerifyString(tablePos, 48 /*Origin*/, false)
      && verifier.VerifyField(tablePos, 50 /*DataMode*/, 1 /*EffectResponse_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 52 /*OrigNetwork*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
