// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Collection that identifies points of reference used in the establishment of the data links. There can be 1 to many DataLinkRefPoints collections within the datalink service.
public struct DataLinkRefPoints_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static DataLinkRefPoints_Full GetRootAsDataLinkRefPoints_Full(ByteBuffer _bb) { return GetRootAsDataLinkRefPoints_Full(_bb, new DataLinkRefPoints_Full()); }
  public static DataLinkRefPoints_Full GetRootAsDataLinkRefPoints_Full(ByteBuffer _bb, DataLinkRefPoints_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool DataLinkRefPoints_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "DATA"); }
  public static bool VerifyDataLinkRefPoints_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("DATA", false, DataLinkRefPoints_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DataLinkRefPoints_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Type of data link reference point or grid origin.
  /// Example: /// Example: DLRP
  /// Constraints: Minimum length = 0, Maximum length = 7
  public string RefPointType { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRefPointTypeBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetRefPointTypeBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetRefPointTypeArray() { return __p.__vector_as_array<byte>(4); }
  /// Identifier to designate a reference point.
  /// Example: /// Example: L5
  /// Constraints: Minimum length = 0, Maximum length = 20
  public string RefDes { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRefDesBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetRefDesBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetRefDesArray() { return __p.__vector_as_array<byte>(6); }
  /// The location name of the point of reference for this data link message.
  /// Example: /// Example: FORT BRAGG
  /// Constraints: Minimum length = 0, Maximum length = 20
  public string RefLocName { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRefLocNameBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetRefLocNameBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetRefLocNameArray() { return __p.__vector_as_array<byte>(8); }
  /// WGS84 latitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
  /// Example: /// Example: 45.23
  /// Constraints: No constraints specified.
  public double RefLat { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// WGS84 longitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
  /// Example: /// Example: 179.1
  /// Constraints: No constraints specified.
  public double RefLon { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Indicates when a particular event or nickname becomes effective or the old event or nickname is deleted, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2024-01-08T13:55:43.123Z
  /// Constraints: No constraints specified.
  public string EffEventTime { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEffEventTimeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetEffEventTimeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetEffEventTimeArray() { return __p.__vector_as_array<byte>(14); }

  public static Offset<DataLinkRefPoints_Full> CreateDataLinkRefPoints_Full(FlatBufferBuilder builder,
      StringOffset refPointTypeOffset = default(StringOffset),
      StringOffset refDesOffset = default(StringOffset),
      StringOffset refLocNameOffset = default(StringOffset),
      double refLat = 0.0,
      double refLon = 0.0,
      StringOffset effEventTimeOffset = default(StringOffset)) {
    builder.StartTable(6);
    DataLinkRefPoints_Full.AddRefLon(builder, refLon);
    DataLinkRefPoints_Full.AddRefLat(builder, refLat);
    DataLinkRefPoints_Full.AddEffEventTime(builder, effEventTimeOffset);
    DataLinkRefPoints_Full.AddRefLocName(builder, refLocNameOffset);
    DataLinkRefPoints_Full.AddRefDes(builder, refDesOffset);
    DataLinkRefPoints_Full.AddRefPointType(builder, refPointTypeOffset);
    return DataLinkRefPoints_Full.EndDataLinkRefPoints_Full(builder);
  }

  public static void StartDataLinkRefPoints_Full(FlatBufferBuilder builder) { builder.StartTable(6); }
  public static void AddRefPointType(FlatBufferBuilder builder, StringOffset refPointTypeOffset) { builder.AddOffset(0, refPointTypeOffset.Value, 0); }
  public static void AddRefDes(FlatBufferBuilder builder, StringOffset refDesOffset) { builder.AddOffset(1, refDesOffset.Value, 0); }
  public static void AddRefLocName(FlatBufferBuilder builder, StringOffset refLocNameOffset) { builder.AddOffset(2, refLocNameOffset.Value, 0); }
  public static void AddRefLat(FlatBufferBuilder builder, double refLat) { builder.AddDouble(3, refLat, 0.0); }
  public static void AddRefLon(FlatBufferBuilder builder, double refLon) { builder.AddDouble(4, refLon, 0.0); }
  public static void AddEffEventTime(FlatBufferBuilder builder, StringOffset effEventTimeOffset) { builder.AddOffset(5, effEventTimeOffset.Value, 0); }
  public static Offset<DataLinkRefPoints_Full> EndDataLinkRefPoints_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<DataLinkRefPoints_Full>(o);
  }
  public static void FinishDataLinkRefPoints_FullBuffer(FlatBufferBuilder builder, Offset<DataLinkRefPoints_Full> offset) { builder.Finish(offset.Value, "DATA"); }
  public static void FinishSizePrefixedDataLinkRefPoints_FullBuffer(FlatBufferBuilder builder, Offset<DataLinkRefPoints_Full> offset) { builder.FinishSizePrefixed(offset.Value, "DATA"); }
  public DataLinkRefPoints_FullT UnPack() {
    var _o = new DataLinkRefPoints_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DataLinkRefPoints_FullT _o) {
    _o.RefPointType = this.RefPointType;
    _o.RefDes = this.RefDes;
    _o.RefLocName = this.RefLocName;
    _o.RefLat = this.RefLat;
    _o.RefLon = this.RefLon;
    _o.EffEventTime = this.EffEventTime;
  }
  public static Offset<DataLinkRefPoints_Full> Pack(FlatBufferBuilder builder, DataLinkRefPoints_FullT _o) {
    if (_o == null) return default(Offset<DataLinkRefPoints_Full>);
    var _refPointType = _o.RefPointType == null ? default(StringOffset) : builder.CreateString(_o.RefPointType);
    var _refDes = _o.RefDes == null ? default(StringOffset) : builder.CreateString(_o.RefDes);
    var _refLocName = _o.RefLocName == null ? default(StringOffset) : builder.CreateString(_o.RefLocName);
    var _effEventTime = _o.EffEventTime == null ? default(StringOffset) : builder.CreateString(_o.EffEventTime);
    return CreateDataLinkRefPoints_Full(
      builder,
      _refPointType,
      _refDes,
      _refLocName,
      _o.RefLat,
      _o.RefLon,
      _effEventTime);
  }
}

public class DataLinkRefPoints_FullT
{
  public string RefPointType { get; set; }
  public string RefDes { get; set; }
  public string RefLocName { get; set; }
  public double RefLat { get; set; }
  public double RefLon { get; set; }
  public string EffEventTime { get; set; }

  public DataLinkRefPoints_FullT() {
    this.RefPointType = null;
    this.RefDes = null;
    this.RefLocName = null;
    this.RefLat = 0.0;
    this.RefLon = 0.0;
    this.EffEventTime = null;
  }
  public static DataLinkRefPoints_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return DataLinkRefPoints_Full.GetRootAsDataLinkRefPoints_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    DataLinkRefPoints_Full.FinishDataLinkRefPoints_FullBuffer(fbb, DataLinkRefPoints_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class DataLinkRefPoints_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*RefPointType*/, false)
      && verifier.VerifyString(tablePos, 6 /*RefDes*/, false)
      && verifier.VerifyString(tablePos, 8 /*RefLocName*/, false)
      && verifier.VerifyField(tablePos, 10 /*RefLat*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*RefLon*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 14 /*EffEventTime*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
