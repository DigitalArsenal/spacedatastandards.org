// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Seradata-compiled information on communications payloads.
public struct SeradataCommDetails_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SeradataCommDetails_Abridged GetRootAsSeradataCommDetails_Abridged(ByteBuffer _bb) { return GetRootAsSeradataCommDetails_Abridged(_bb, new SeradataCommDetails_Abridged()); }
  public static SeradataCommDetails_Abridged GetRootAsSeradataCommDetails_Abridged(ByteBuffer _bb, SeradataCommDetails_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool SeradataCommDetails_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "SERA"); }
  public static bool VerifySeradataCommDetails_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("SERA", false, SeradataCommDetails_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SeradataCommDetails_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: SERADATACOMMDETAILS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// UUID of the parent Comm record.
  /// Example: /// Example: idComm
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdComm { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdCommBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdCommBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdCommArray() { return __p.__vector_as_array<byte>(6); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(8); }
  /// Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
  /// Example: /// Example: spacecraftId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string SpacecraftId { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpacecraftIdBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetSpacecraftIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetSpacecraftIdArray() { return __p.__vector_as_array<byte>(10); }
  /// Name of the band of this RF range (e.g. X,K,Ku,Ka,L,S,C,UHF,VHF,EHF,SHF,UNK,VLF,HF,E,Q,V,W). See RFBandType for more details and descriptions of each band name.
  /// Example: /// Example: X
  /// Constraints: Minimum length = 0, Maximum length = 5
  public string Band { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBandBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetBandBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetBandArray() { return __p.__vector_as_array<byte>(12); }
  /// Solid state power amplifier, in Watts.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double SolidStatePowerAmp { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm travelingWaveTubeAmplifier in Watts.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double TravelingWaveTubeAmplifier { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm gatewayUplinkFrom in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double GatewayUplinkFrom { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm gatewayUplinkTo in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double GatewayUplinkTo { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm gatewayDownlinkFrom in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double GatewayDownlinkFrom { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm gatewayDownlinkTo in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double GatewayDownlinkTo { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm polarization.
  /// Example: /// Example: polarization
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Polarization { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPolarizationBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetPolarizationBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPolarizationArray() { return __p.__vector_as_array<byte>(26); }
  /// Effective isotropic radiated power in dB.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Eirp { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm bandwidth in Mhz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Bandwidth { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm numOperationalTransponders.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int NumOperationalTransponders { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Comm numSpareTransponders.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int NumSpareTransponders { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Comm hostedForCompanyOrgId.
  /// Example: /// Example: hostedForCompanyOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string HostedForCompanyOrgId { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetHostedForCompanyOrgIdArray() { return __p.__vector_as_array<byte>(36); }
  /// Comm manufacturerOrgId.
  /// Example: /// Example: manufacturerOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ManufacturerOrgId { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(38); }
  /// Comm tradeLeaseOrgId.
  /// Example: /// Example: tradeLeaseOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string TradeLeaseOrgId { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTradeLeaseOrgIdBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetTradeLeaseOrgIdBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetTradeLeaseOrgIdArray() { return __p.__vector_as_array<byte>(40); }
  /// Comm num36MhzEquivalentTransponders.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int Num36MhzEquivalentTransponders { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Comm htsNumUserSpotBeams.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int HtsNumUserSpotBeams { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Comm htsUserDownlinkBandwidthPerBeam in Mhz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double HtsUserDownlinkBandwidthPerBeam { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm htsUserUplinkBandwidthPerBeam in Mhz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double HtsUserUplinkBandwidthPerBeam { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm estimated HtsTotalUserDownlinkBandwidthPerBeam in Mhz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double EstHtsTotalUserDownlinkBandwidthPerBeam { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm estimated HtsTotalUserUplinkBandwidthPerBeam in Mhz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double EstHtsTotalUserUplinkBandwidthPerBeam { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm estimated HtsTotalCapacity in Gbps.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double EstHtsTotalCapacity { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm userDownlinkFrom in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double UserDownlinkFrom { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm userDownlinkTo in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double UserDownlinkTo { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm userUplinkFrom in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double UserUplinkFrom { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Comm userUplinkTo in Ghz.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double UserUplinkTo { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Payload notes.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string PayloadNotes { get { int o = __p.__offset(64); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPayloadNotesBytes() { return __p.__vector_as_span<byte>(64, 1); }
#else
  public ArraySegment<byte>? GetPayloadNotesBytes() { return __p.__vector_as_arraysegment(64); }
#endif
  public byte[] GetPayloadNotesArray() { return __p.__vector_as_array<byte>(64); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(66); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(66, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(66); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(66); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(68); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(68, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(68); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(68); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(70); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(70, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(70); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(70); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public SeradataCommDetails_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(72); return o != 0 ? (SeradataCommDetails_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : SeradataCommDetails_Abridged_dataMode_Enum.REAL; } }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(74); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(74, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(74); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(74); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(76); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(76, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(76); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(76); }

  public static Offset<SeradataCommDetails_Abridged> CreateSeradataCommDetails_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idCommOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset spacecraftIdOffset = default(StringOffset),
      StringOffset bandOffset = default(StringOffset),
      double solidStatePowerAmp = 0.0,
      double travelingWaveTubeAmplifier = 0.0,
      double gatewayUplinkFrom = 0.0,
      double gatewayUplinkTo = 0.0,
      double gatewayDownlinkFrom = 0.0,
      double gatewayDownlinkTo = 0.0,
      StringOffset polarizationOffset = default(StringOffset),
      double eirp = 0.0,
      double bandwidth = 0.0,
      int numOperationalTransponders = 0,
      int numSpareTransponders = 0,
      StringOffset hostedForCompanyOrgIdOffset = default(StringOffset),
      StringOffset manufacturerOrgIdOffset = default(StringOffset),
      StringOffset tradeLeaseOrgIdOffset = default(StringOffset),
      int num36MhzEquivalentTransponders = 0,
      int htsNumUserSpotBeams = 0,
      double htsUserDownlinkBandwidthPerBeam = 0.0,
      double htsUserUplinkBandwidthPerBeam = 0.0,
      double estHtsTotalUserDownlinkBandwidthPerBeam = 0.0,
      double estHtsTotalUserUplinkBandwidthPerBeam = 0.0,
      double estHtsTotalCapacity = 0.0,
      double userDownlinkFrom = 0.0,
      double userDownlinkTo = 0.0,
      double userUplinkFrom = 0.0,
      double userUplinkTo = 0.0,
      StringOffset payloadNotesOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      SeradataCommDetails_Abridged_dataMode_Enum dataMode = SeradataCommDetails_Abridged_dataMode_Enum.REAL,
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset)) {
    builder.StartTable(37);
    SeradataCommDetails_Abridged.AddUserUplinkTo(builder, userUplinkTo);
    SeradataCommDetails_Abridged.AddUserUplinkFrom(builder, userUplinkFrom);
    SeradataCommDetails_Abridged.AddUserDownlinkTo(builder, userDownlinkTo);
    SeradataCommDetails_Abridged.AddUserDownlinkFrom(builder, userDownlinkFrom);
    SeradataCommDetails_Abridged.AddEstHtsTotalCapacity(builder, estHtsTotalCapacity);
    SeradataCommDetails_Abridged.AddEstHtsTotalUserUplinkBandwidthPerBeam(builder, estHtsTotalUserUplinkBandwidthPerBeam);
    SeradataCommDetails_Abridged.AddEstHtsTotalUserDownlinkBandwidthPerBeam(builder, estHtsTotalUserDownlinkBandwidthPerBeam);
    SeradataCommDetails_Abridged.AddHtsUserUplinkBandwidthPerBeam(builder, htsUserUplinkBandwidthPerBeam);
    SeradataCommDetails_Abridged.AddHtsUserDownlinkBandwidthPerBeam(builder, htsUserDownlinkBandwidthPerBeam);
    SeradataCommDetails_Abridged.AddBandwidth(builder, bandwidth);
    SeradataCommDetails_Abridged.AddEirp(builder, eirp);
    SeradataCommDetails_Abridged.AddGatewayDownlinkTo(builder, gatewayDownlinkTo);
    SeradataCommDetails_Abridged.AddGatewayDownlinkFrom(builder, gatewayDownlinkFrom);
    SeradataCommDetails_Abridged.AddGatewayUplinkTo(builder, gatewayUplinkTo);
    SeradataCommDetails_Abridged.AddGatewayUplinkFrom(builder, gatewayUplinkFrom);
    SeradataCommDetails_Abridged.AddTravelingWaveTubeAmplifier(builder, travelingWaveTubeAmplifier);
    SeradataCommDetails_Abridged.AddSolidStatePowerAmp(builder, solidStatePowerAmp);
    SeradataCommDetails_Abridged.AddCreatedBy(builder, createdByOffset);
    SeradataCommDetails_Abridged.AddCreatedAt(builder, createdAtOffset);
    SeradataCommDetails_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    SeradataCommDetails_Abridged.AddOrigin(builder, originOffset);
    SeradataCommDetails_Abridged.AddSource(builder, sourceOffset);
    SeradataCommDetails_Abridged.AddPayloadNotes(builder, payloadNotesOffset);
    SeradataCommDetails_Abridged.AddHtsNumUserSpotBeams(builder, htsNumUserSpotBeams);
    SeradataCommDetails_Abridged.AddNum36MhzEquivalentTransponders(builder, num36MhzEquivalentTransponders);
    SeradataCommDetails_Abridged.AddTradeLeaseOrgId(builder, tradeLeaseOrgIdOffset);
    SeradataCommDetails_Abridged.AddManufacturerOrgId(builder, manufacturerOrgIdOffset);
    SeradataCommDetails_Abridged.AddHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    SeradataCommDetails_Abridged.AddNumSpareTransponders(builder, numSpareTransponders);
    SeradataCommDetails_Abridged.AddNumOperationalTransponders(builder, numOperationalTransponders);
    SeradataCommDetails_Abridged.AddPolarization(builder, polarizationOffset);
    SeradataCommDetails_Abridged.AddBand(builder, bandOffset);
    SeradataCommDetails_Abridged.AddSpacecraftId(builder, spacecraftIdOffset);
    SeradataCommDetails_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    SeradataCommDetails_Abridged.AddIdComm(builder, idCommOffset);
    SeradataCommDetails_Abridged.AddId(builder, idOffset);
    SeradataCommDetails_Abridged.AddDataMode(builder, dataMode);
    return SeradataCommDetails_Abridged.EndSeradataCommDetails_Abridged(builder);
  }

  public static void StartSeradataCommDetails_Abridged(FlatBufferBuilder builder) { builder.StartTable(37); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdComm(FlatBufferBuilder builder, StringOffset idCommOffset) { builder.AddOffset(1, idCommOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(2, classificationMarkingOffset.Value, 0); }
  public static void AddSpacecraftId(FlatBufferBuilder builder, StringOffset spacecraftIdOffset) { builder.AddOffset(3, spacecraftIdOffset.Value, 0); }
  public static void AddBand(FlatBufferBuilder builder, StringOffset bandOffset) { builder.AddOffset(4, bandOffset.Value, 0); }
  public static void AddSolidStatePowerAmp(FlatBufferBuilder builder, double solidStatePowerAmp) { builder.AddDouble(5, solidStatePowerAmp, 0.0); }
  public static void AddTravelingWaveTubeAmplifier(FlatBufferBuilder builder, double travelingWaveTubeAmplifier) { builder.AddDouble(6, travelingWaveTubeAmplifier, 0.0); }
  public static void AddGatewayUplinkFrom(FlatBufferBuilder builder, double gatewayUplinkFrom) { builder.AddDouble(7, gatewayUplinkFrom, 0.0); }
  public static void AddGatewayUplinkTo(FlatBufferBuilder builder, double gatewayUplinkTo) { builder.AddDouble(8, gatewayUplinkTo, 0.0); }
  public static void AddGatewayDownlinkFrom(FlatBufferBuilder builder, double gatewayDownlinkFrom) { builder.AddDouble(9, gatewayDownlinkFrom, 0.0); }
  public static void AddGatewayDownlinkTo(FlatBufferBuilder builder, double gatewayDownlinkTo) { builder.AddDouble(10, gatewayDownlinkTo, 0.0); }
  public static void AddPolarization(FlatBufferBuilder builder, StringOffset polarizationOffset) { builder.AddOffset(11, polarizationOffset.Value, 0); }
  public static void AddEirp(FlatBufferBuilder builder, double eirp) { builder.AddDouble(12, eirp, 0.0); }
  public static void AddBandwidth(FlatBufferBuilder builder, double bandwidth) { builder.AddDouble(13, bandwidth, 0.0); }
  public static void AddNumOperationalTransponders(FlatBufferBuilder builder, int numOperationalTransponders) { builder.AddInt(14, numOperationalTransponders, 0); }
  public static void AddNumSpareTransponders(FlatBufferBuilder builder, int numSpareTransponders) { builder.AddInt(15, numSpareTransponders, 0); }
  public static void AddHostedForCompanyOrgId(FlatBufferBuilder builder, StringOffset hostedForCompanyOrgIdOffset) { builder.AddOffset(16, hostedForCompanyOrgIdOffset.Value, 0); }
  public static void AddManufacturerOrgId(FlatBufferBuilder builder, StringOffset manufacturerOrgIdOffset) { builder.AddOffset(17, manufacturerOrgIdOffset.Value, 0); }
  public static void AddTradeLeaseOrgId(FlatBufferBuilder builder, StringOffset tradeLeaseOrgIdOffset) { builder.AddOffset(18, tradeLeaseOrgIdOffset.Value, 0); }
  public static void AddNum36MhzEquivalentTransponders(FlatBufferBuilder builder, int num36MhzEquivalentTransponders) { builder.AddInt(19, num36MhzEquivalentTransponders, 0); }
  public static void AddHtsNumUserSpotBeams(FlatBufferBuilder builder, int htsNumUserSpotBeams) { builder.AddInt(20, htsNumUserSpotBeams, 0); }
  public static void AddHtsUserDownlinkBandwidthPerBeam(FlatBufferBuilder builder, double htsUserDownlinkBandwidthPerBeam) { builder.AddDouble(21, htsUserDownlinkBandwidthPerBeam, 0.0); }
  public static void AddHtsUserUplinkBandwidthPerBeam(FlatBufferBuilder builder, double htsUserUplinkBandwidthPerBeam) { builder.AddDouble(22, htsUserUplinkBandwidthPerBeam, 0.0); }
  public static void AddEstHtsTotalUserDownlinkBandwidthPerBeam(FlatBufferBuilder builder, double estHtsTotalUserDownlinkBandwidthPerBeam) { builder.AddDouble(23, estHtsTotalUserDownlinkBandwidthPerBeam, 0.0); }
  public static void AddEstHtsTotalUserUplinkBandwidthPerBeam(FlatBufferBuilder builder, double estHtsTotalUserUplinkBandwidthPerBeam) { builder.AddDouble(24, estHtsTotalUserUplinkBandwidthPerBeam, 0.0); }
  public static void AddEstHtsTotalCapacity(FlatBufferBuilder builder, double estHtsTotalCapacity) { builder.AddDouble(25, estHtsTotalCapacity, 0.0); }
  public static void AddUserDownlinkFrom(FlatBufferBuilder builder, double userDownlinkFrom) { builder.AddDouble(26, userDownlinkFrom, 0.0); }
  public static void AddUserDownlinkTo(FlatBufferBuilder builder, double userDownlinkTo) { builder.AddDouble(27, userDownlinkTo, 0.0); }
  public static void AddUserUplinkFrom(FlatBufferBuilder builder, double userUplinkFrom) { builder.AddDouble(28, userUplinkFrom, 0.0); }
  public static void AddUserUplinkTo(FlatBufferBuilder builder, double userUplinkTo) { builder.AddDouble(29, userUplinkTo, 0.0); }
  public static void AddPayloadNotes(FlatBufferBuilder builder, StringOffset payloadNotesOffset) { builder.AddOffset(30, payloadNotesOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(31, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(32, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(33, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, SeradataCommDetails_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(34, (sbyte)dataMode, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(35, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(36, createdByOffset.Value, 0); }
  public static Offset<SeradataCommDetails_Abridged> EndSeradataCommDetails_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SeradataCommDetails_Abridged>(o);
  }
  public static void FinishSeradataCommDetails_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataCommDetails_Abridged> offset) { builder.Finish(offset.Value, "SERA"); }
  public static void FinishSizePrefixedSeradataCommDetails_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataCommDetails_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "SERA"); }
  public SeradataCommDetails_AbridgedT UnPack() {
    var _o = new SeradataCommDetails_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SeradataCommDetails_AbridgedT _o) {
    _o.Id = this.Id;
    _o.IdComm = this.IdComm;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.SpacecraftId = this.SpacecraftId;
    _o.Band = this.Band;
    _o.SolidStatePowerAmp = this.SolidStatePowerAmp;
    _o.TravelingWaveTubeAmplifier = this.TravelingWaveTubeAmplifier;
    _o.GatewayUplinkFrom = this.GatewayUplinkFrom;
    _o.GatewayUplinkTo = this.GatewayUplinkTo;
    _o.GatewayDownlinkFrom = this.GatewayDownlinkFrom;
    _o.GatewayDownlinkTo = this.GatewayDownlinkTo;
    _o.Polarization = this.Polarization;
    _o.Eirp = this.Eirp;
    _o.Bandwidth = this.Bandwidth;
    _o.NumOperationalTransponders = this.NumOperationalTransponders;
    _o.NumSpareTransponders = this.NumSpareTransponders;
    _o.HostedForCompanyOrgId = this.HostedForCompanyOrgId;
    _o.ManufacturerOrgId = this.ManufacturerOrgId;
    _o.TradeLeaseOrgId = this.TradeLeaseOrgId;
    _o.Num36MhzEquivalentTransponders = this.Num36MhzEquivalentTransponders;
    _o.HtsNumUserSpotBeams = this.HtsNumUserSpotBeams;
    _o.HtsUserDownlinkBandwidthPerBeam = this.HtsUserDownlinkBandwidthPerBeam;
    _o.HtsUserUplinkBandwidthPerBeam = this.HtsUserUplinkBandwidthPerBeam;
    _o.EstHtsTotalUserDownlinkBandwidthPerBeam = this.EstHtsTotalUserDownlinkBandwidthPerBeam;
    _o.EstHtsTotalUserUplinkBandwidthPerBeam = this.EstHtsTotalUserUplinkBandwidthPerBeam;
    _o.EstHtsTotalCapacity = this.EstHtsTotalCapacity;
    _o.UserDownlinkFrom = this.UserDownlinkFrom;
    _o.UserDownlinkTo = this.UserDownlinkTo;
    _o.UserUplinkFrom = this.UserUplinkFrom;
    _o.UserUplinkTo = this.UserUplinkTo;
    _o.PayloadNotes = this.PayloadNotes;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
  }
  public static Offset<SeradataCommDetails_Abridged> Pack(FlatBufferBuilder builder, SeradataCommDetails_AbridgedT _o) {
    if (_o == null) return default(Offset<SeradataCommDetails_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idComm = _o.IdComm == null ? default(StringOffset) : builder.CreateString(_o.IdComm);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _spacecraftId = _o.SpacecraftId == null ? default(StringOffset) : builder.CreateString(_o.SpacecraftId);
    var _band = _o.Band == null ? default(StringOffset) : builder.CreateString(_o.Band);
    var _polarization = _o.Polarization == null ? default(StringOffset) : builder.CreateString(_o.Polarization);
    var _hostedForCompanyOrgId = _o.HostedForCompanyOrgId == null ? default(StringOffset) : builder.CreateString(_o.HostedForCompanyOrgId);
    var _manufacturerOrgId = _o.ManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.ManufacturerOrgId);
    var _tradeLeaseOrgId = _o.TradeLeaseOrgId == null ? default(StringOffset) : builder.CreateString(_o.TradeLeaseOrgId);
    var _payloadNotes = _o.PayloadNotes == null ? default(StringOffset) : builder.CreateString(_o.PayloadNotes);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    return CreateSeradataCommDetails_Abridged(
      builder,
      _id,
      _idComm,
      _classificationMarking,
      _spacecraftId,
      _band,
      _o.SolidStatePowerAmp,
      _o.TravelingWaveTubeAmplifier,
      _o.GatewayUplinkFrom,
      _o.GatewayUplinkTo,
      _o.GatewayDownlinkFrom,
      _o.GatewayDownlinkTo,
      _polarization,
      _o.Eirp,
      _o.Bandwidth,
      _o.NumOperationalTransponders,
      _o.NumSpareTransponders,
      _hostedForCompanyOrgId,
      _manufacturerOrgId,
      _tradeLeaseOrgId,
      _o.Num36MhzEquivalentTransponders,
      _o.HtsNumUserSpotBeams,
      _o.HtsUserDownlinkBandwidthPerBeam,
      _o.HtsUserUplinkBandwidthPerBeam,
      _o.EstHtsTotalUserDownlinkBandwidthPerBeam,
      _o.EstHtsTotalUserUplinkBandwidthPerBeam,
      _o.EstHtsTotalCapacity,
      _o.UserDownlinkFrom,
      _o.UserDownlinkTo,
      _o.UserUplinkFrom,
      _o.UserUplinkTo,
      _payloadNotes,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode,
      _createdAt,
      _createdBy);
  }
}

public class SeradataCommDetails_AbridgedT
{
  public string Id { get; set; }
  public string IdComm { get; set; }
  public string ClassificationMarking { get; set; }
  public string SpacecraftId { get; set; }
  public string Band { get; set; }
  public double SolidStatePowerAmp { get; set; }
  public double TravelingWaveTubeAmplifier { get; set; }
  public double GatewayUplinkFrom { get; set; }
  public double GatewayUplinkTo { get; set; }
  public double GatewayDownlinkFrom { get; set; }
  public double GatewayDownlinkTo { get; set; }
  public string Polarization { get; set; }
  public double Eirp { get; set; }
  public double Bandwidth { get; set; }
  public int NumOperationalTransponders { get; set; }
  public int NumSpareTransponders { get; set; }
  public string HostedForCompanyOrgId { get; set; }
  public string ManufacturerOrgId { get; set; }
  public string TradeLeaseOrgId { get; set; }
  public int Num36MhzEquivalentTransponders { get; set; }
  public int HtsNumUserSpotBeams { get; set; }
  public double HtsUserDownlinkBandwidthPerBeam { get; set; }
  public double HtsUserUplinkBandwidthPerBeam { get; set; }
  public double EstHtsTotalUserDownlinkBandwidthPerBeam { get; set; }
  public double EstHtsTotalUserUplinkBandwidthPerBeam { get; set; }
  public double EstHtsTotalCapacity { get; set; }
  public double UserDownlinkFrom { get; set; }
  public double UserDownlinkTo { get; set; }
  public double UserUplinkFrom { get; set; }
  public double UserUplinkTo { get; set; }
  public string PayloadNotes { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public SeradataCommDetails_Abridged_dataMode_Enum DataMode { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }

  public SeradataCommDetails_AbridgedT() {
    this.Id = null;
    this.IdComm = null;
    this.ClassificationMarking = null;
    this.SpacecraftId = null;
    this.Band = null;
    this.SolidStatePowerAmp = 0.0;
    this.TravelingWaveTubeAmplifier = 0.0;
    this.GatewayUplinkFrom = 0.0;
    this.GatewayUplinkTo = 0.0;
    this.GatewayDownlinkFrom = 0.0;
    this.GatewayDownlinkTo = 0.0;
    this.Polarization = null;
    this.Eirp = 0.0;
    this.Bandwidth = 0.0;
    this.NumOperationalTransponders = 0;
    this.NumSpareTransponders = 0;
    this.HostedForCompanyOrgId = null;
    this.ManufacturerOrgId = null;
    this.TradeLeaseOrgId = null;
    this.Num36MhzEquivalentTransponders = 0;
    this.HtsNumUserSpotBeams = 0;
    this.HtsUserDownlinkBandwidthPerBeam = 0.0;
    this.HtsUserUplinkBandwidthPerBeam = 0.0;
    this.EstHtsTotalUserDownlinkBandwidthPerBeam = 0.0;
    this.EstHtsTotalUserUplinkBandwidthPerBeam = 0.0;
    this.EstHtsTotalCapacity = 0.0;
    this.UserDownlinkFrom = 0.0;
    this.UserDownlinkTo = 0.0;
    this.UserUplinkFrom = 0.0;
    this.UserUplinkTo = 0.0;
    this.PayloadNotes = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = SeradataCommDetails_Abridged_dataMode_Enum.REAL;
    this.CreatedAt = null;
    this.CreatedBy = null;
  }
  public static SeradataCommDetails_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return SeradataCommDetails_Abridged.GetRootAsSeradataCommDetails_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SeradataCommDetails_Abridged.FinishSeradataCommDetails_AbridgedBuffer(fbb, SeradataCommDetails_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class SeradataCommDetails_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdComm*/, false)
      && verifier.VerifyString(tablePos, 8 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 10 /*SpacecraftId*/, false)
      && verifier.VerifyString(tablePos, 12 /*Band*/, false)
      && verifier.VerifyField(tablePos, 14 /*SolidStatePowerAmp*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 16 /*TravelingWaveTubeAmplifier*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 18 /*GatewayUplinkFrom*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 20 /*GatewayUplinkTo*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 22 /*GatewayDownlinkFrom*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*GatewayDownlinkTo*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 26 /*Polarization*/, false)
      && verifier.VerifyField(tablePos, 28 /*Eirp*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 30 /*Bandwidth*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 32 /*NumOperationalTransponders*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*NumSpareTransponders*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 36 /*HostedForCompanyOrgId*/, false)
      && verifier.VerifyString(tablePos, 38 /*ManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 40 /*TradeLeaseOrgId*/, false)
      && verifier.VerifyField(tablePos, 42 /*Num36MhzEquivalentTransponders*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 44 /*HtsNumUserSpotBeams*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 46 /*HtsUserDownlinkBandwidthPerBeam*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 48 /*HtsUserUplinkBandwidthPerBeam*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 50 /*EstHtsTotalUserDownlinkBandwidthPerBeam*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 52 /*EstHtsTotalUserUplinkBandwidthPerBeam*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 54 /*EstHtsTotalCapacity*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 56 /*UserDownlinkFrom*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 58 /*UserDownlinkTo*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 60 /*UserUplinkFrom*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 62 /*UserUplinkTo*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 64 /*PayloadNotes*/, false)
      && verifier.VerifyString(tablePos, 66 /*Source*/, false)
      && verifier.VerifyString(tablePos, 68 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 70 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 72 /*DataMode*/, 1 /*SeradataCommDetails_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 74 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 76 /*CreatedBy*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
