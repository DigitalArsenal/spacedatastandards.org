// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Collection of information describing the establishment and detailed operation of tactical data links. There can be 0 to many DataLinkOps collections within the datalink service.
public struct DataLinkOps_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static DataLinkOps_Ingest GetRootAsDataLinkOps_Ingest(ByteBuffer _bb) { return GetRootAsDataLinkOps_Ingest(_bb, new DataLinkOps_Ingest()); }
  public static DataLinkOps_Ingest GetRootAsDataLinkOps_Ingest(ByteBuffer _bb, DataLinkOps_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool DataLinkOps_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "DATA"); }
  public static bool VerifyDataLinkOps_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("DATA", false, DataLinkOps_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DataLinkOps_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Name of the data link.
  /// Example: /// Example: Link-16
  /// Constraints: Minimum length = 0, Maximum length = 24
  public string LinkName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetLinkNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetLinkNameArray() { return __p.__vector_as_array<byte>(4); }
  /// The start of the effective time period of the data link, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2024-01-07T13:55:43.123Z
  /// Constraints: No constraints specified.
  public string LinkStartTime { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkStartTimeBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetLinkStartTimeBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetLinkStartTimeArray() { return __p.__vector_as_array<byte>(6); }
  /// The end of the effective time period of the data link, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2024-01-08T13:55:43.123Z
  /// Constraints: No constraints specified.
  public string LinkStopTime { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkStopTimeBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLinkStopTimeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLinkStopTimeArray() { return __p.__vector_as_array<byte>(8); }
  /// A qualifier for the end of the effective time period of this data link, such as AFTER, ASOF, NLT, etc. Used with field linkStopTimeMod to indicate a relative time.
  /// Example: /// Example: AFTER
  /// Constraints: Minimum length = 0, Maximum length = 8
  public string LinkStopTimeMod { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkStopTimeModBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetLinkStopTimeModBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetLinkStopTimeModArray() { return __p.__vector_as_array<byte>(10); }
  /// Detailed characteristics of the data link.
  /// Example: /// Example: Link details
  /// Constraints: Minimum length = 0, Maximum length = 3000
  public string LinkDetails { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLinkDetailsBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLinkDetailsBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLinkDetailsArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<DataLinkOps_Ingest> CreateDataLinkOps_Ingest(FlatBufferBuilder builder,
      StringOffset linkNameOffset = default(StringOffset),
      StringOffset linkStartTimeOffset = default(StringOffset),
      StringOffset linkStopTimeOffset = default(StringOffset),
      StringOffset linkStopTimeModOffset = default(StringOffset),
      StringOffset linkDetailsOffset = default(StringOffset)) {
    builder.StartTable(5);
    DataLinkOps_Ingest.AddLinkDetails(builder, linkDetailsOffset);
    DataLinkOps_Ingest.AddLinkStopTimeMod(builder, linkStopTimeModOffset);
    DataLinkOps_Ingest.AddLinkStopTime(builder, linkStopTimeOffset);
    DataLinkOps_Ingest.AddLinkStartTime(builder, linkStartTimeOffset);
    DataLinkOps_Ingest.AddLinkName(builder, linkNameOffset);
    return DataLinkOps_Ingest.EndDataLinkOps_Ingest(builder);
  }

  public static void StartDataLinkOps_Ingest(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddLinkName(FlatBufferBuilder builder, StringOffset linkNameOffset) { builder.AddOffset(0, linkNameOffset.Value, 0); }
  public static void AddLinkStartTime(FlatBufferBuilder builder, StringOffset linkStartTimeOffset) { builder.AddOffset(1, linkStartTimeOffset.Value, 0); }
  public static void AddLinkStopTime(FlatBufferBuilder builder, StringOffset linkStopTimeOffset) { builder.AddOffset(2, linkStopTimeOffset.Value, 0); }
  public static void AddLinkStopTimeMod(FlatBufferBuilder builder, StringOffset linkStopTimeModOffset) { builder.AddOffset(3, linkStopTimeModOffset.Value, 0); }
  public static void AddLinkDetails(FlatBufferBuilder builder, StringOffset linkDetailsOffset) { builder.AddOffset(4, linkDetailsOffset.Value, 0); }
  public static Offset<DataLinkOps_Ingest> EndDataLinkOps_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<DataLinkOps_Ingest>(o);
  }
  public static void FinishDataLinkOps_IngestBuffer(FlatBufferBuilder builder, Offset<DataLinkOps_Ingest> offset) { builder.Finish(offset.Value, "DATA"); }
  public static void FinishSizePrefixedDataLinkOps_IngestBuffer(FlatBufferBuilder builder, Offset<DataLinkOps_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "DATA"); }
  public DataLinkOps_IngestT UnPack() {
    var _o = new DataLinkOps_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DataLinkOps_IngestT _o) {
    _o.LinkName = this.LinkName;
    _o.LinkStartTime = this.LinkStartTime;
    _o.LinkStopTime = this.LinkStopTime;
    _o.LinkStopTimeMod = this.LinkStopTimeMod;
    _o.LinkDetails = this.LinkDetails;
  }
  public static Offset<DataLinkOps_Ingest> Pack(FlatBufferBuilder builder, DataLinkOps_IngestT _o) {
    if (_o == null) return default(Offset<DataLinkOps_Ingest>);
    var _linkName = _o.LinkName == null ? default(StringOffset) : builder.CreateString(_o.LinkName);
    var _linkStartTime = _o.LinkStartTime == null ? default(StringOffset) : builder.CreateString(_o.LinkStartTime);
    var _linkStopTime = _o.LinkStopTime == null ? default(StringOffset) : builder.CreateString(_o.LinkStopTime);
    var _linkStopTimeMod = _o.LinkStopTimeMod == null ? default(StringOffset) : builder.CreateString(_o.LinkStopTimeMod);
    var _linkDetails = _o.LinkDetails == null ? default(StringOffset) : builder.CreateString(_o.LinkDetails);
    return CreateDataLinkOps_Ingest(
      builder,
      _linkName,
      _linkStartTime,
      _linkStopTime,
      _linkStopTimeMod,
      _linkDetails);
  }
}

public class DataLinkOps_IngestT
{
  public string LinkName { get; set; }
  public string LinkStartTime { get; set; }
  public string LinkStopTime { get; set; }
  public string LinkStopTimeMod { get; set; }
  public string LinkDetails { get; set; }

  public DataLinkOps_IngestT() {
    this.LinkName = null;
    this.LinkStartTime = null;
    this.LinkStopTime = null;
    this.LinkStopTimeMod = null;
    this.LinkDetails = null;
  }
  public static DataLinkOps_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return DataLinkOps_Ingest.GetRootAsDataLinkOps_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    DataLinkOps_Ingest.FinishDataLinkOps_IngestBuffer(fbb, DataLinkOps_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class DataLinkOps_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*LinkName*/, false)
      && verifier.VerifyString(tablePos, 6 /*LinkStartTime*/, false)
      && verifier.VerifyString(tablePos, 8 /*LinkStopTime*/, false)
      && verifier.VerifyString(tablePos, 10 /*LinkStopTimeMod*/, false)
      && verifier.VerifyString(tablePos, 12 /*LinkDetails*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
