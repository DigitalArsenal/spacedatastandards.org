// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Multidimensional array of enums that identifies either classic/basic polarization discrimination “O” or “X” corresponding to ordinary or extraordinary polarizations, respectively. Exclude this enumeration if no classic/basic polarization discrimination is implemented. May accommodate other modes in addition to “O” and “X” with proper documentation in notes field.
public struct IonoObservationPolarization_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static IonoObservationPolarization_Abridged GetRootAsIonoObservationPolarization_Abridged(ByteBuffer _bb) { return GetRootAsIonoObservationPolarization_Abridged(_bb, new IonoObservationPolarization_Abridged()); }
  public static IonoObservationPolarization_Abridged GetRootAsIonoObservationPolarization_Abridged(ByteBuffer _bb, IonoObservationPolarization_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool IonoObservationPolarization_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "IONO"); }
  public static bool VerifyIonoObservationPolarization_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("IONO", false, IonoObservationPolarization_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IonoObservationPolarization_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Notes for the polarization data.
  /// Example: /// Example: NOTES
  /// Constraints: Minimum length = 0, Maximum length = 512
  public string Notes { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotesBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetNotesBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetNotesArray() { return __p.__vector_as_array<byte>(4); }
  /// Array of integers for polarization dimensions.
  /// Example: /// Example: [1, 2]
  /// Constraints: No constraints specified.
  public string Dimensions(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DimensionsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Array of names for dimensions.
  /// Example: /// Example: ['NAME1', 'NAME2']
  /// Constraints: No constraints specified.
  public string DimensionName(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DimensionNameLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Array of polarization data.
  /// Example: /// Example: [[[[[[['X', 'O']]]]]]]
  /// Constraints: No constraints specified.
  public IonoObservationPolarization_Abridged_data_Enum Data { get { int o = __p.__offset(10); return o != 0 ? (IonoObservationPolarization_Abridged_data_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : IonoObservationPolarization_Abridged_data_Enum.X; } }

  public static Offset<IonoObservationPolarization_Abridged> CreateIonoObservationPolarization_Abridged(FlatBufferBuilder builder,
      StringOffset notesOffset = default(StringOffset),
      VectorOffset dimensionsOffset = default(VectorOffset),
      VectorOffset dimensionNameOffset = default(VectorOffset),
      IonoObservationPolarization_Abridged_data_Enum data = IonoObservationPolarization_Abridged_data_Enum.X) {
    builder.StartTable(4);
    IonoObservationPolarization_Abridged.AddDimensionName(builder, dimensionNameOffset);
    IonoObservationPolarization_Abridged.AddDimensions(builder, dimensionsOffset);
    IonoObservationPolarization_Abridged.AddNotes(builder, notesOffset);
    IonoObservationPolarization_Abridged.AddData(builder, data);
    return IonoObservationPolarization_Abridged.EndIonoObservationPolarization_Abridged(builder);
  }

  public static void StartIonoObservationPolarization_Abridged(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddNotes(FlatBufferBuilder builder, StringOffset notesOffset) { builder.AddOffset(0, notesOffset.Value, 0); }
  public static void AddDimensions(FlatBufferBuilder builder, VectorOffset dimensionsOffset) { builder.AddOffset(1, dimensionsOffset.Value, 0); }
  public static VectorOffset CreateDimensionsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDimensionsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDimensionsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDimensionsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDimensionsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDimensionName(FlatBufferBuilder builder, VectorOffset dimensionNameOffset) { builder.AddOffset(2, dimensionNameOffset.Value, 0); }
  public static VectorOffset CreateDimensionNameVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDimensionNameVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDimensionNameVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDimensionNameVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDimensionNameVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddData(FlatBufferBuilder builder, IonoObservationPolarization_Abridged_data_Enum data) { builder.AddSbyte(3, (sbyte)data, 0); }
  public static Offset<IonoObservationPolarization_Abridged> EndIonoObservationPolarization_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<IonoObservationPolarization_Abridged>(o);
  }
  public static void FinishIonoObservationPolarization_AbridgedBuffer(FlatBufferBuilder builder, Offset<IonoObservationPolarization_Abridged> offset) { builder.Finish(offset.Value, "IONO"); }
  public static void FinishSizePrefixedIonoObservationPolarization_AbridgedBuffer(FlatBufferBuilder builder, Offset<IonoObservationPolarization_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "IONO"); }
  public IonoObservationPolarization_AbridgedT UnPack() {
    var _o = new IonoObservationPolarization_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IonoObservationPolarization_AbridgedT _o) {
    _o.Notes = this.Notes;
    _o.Dimensions = new List<string>();
    for (var _j = 0; _j < this.DimensionsLength; ++_j) {_o.Dimensions.Add(this.Dimensions(_j));}
    _o.DimensionName = new List<string>();
    for (var _j = 0; _j < this.DimensionNameLength; ++_j) {_o.DimensionName.Add(this.DimensionName(_j));}
    _o.Data = this.Data;
  }
  public static Offset<IonoObservationPolarization_Abridged> Pack(FlatBufferBuilder builder, IonoObservationPolarization_AbridgedT _o) {
    if (_o == null) return default(Offset<IonoObservationPolarization_Abridged>);
    var _notes = _o.Notes == null ? default(StringOffset) : builder.CreateString(_o.Notes);
    var _dimensions = default(VectorOffset);
    if (_o.Dimensions != null) {
      var __dimensions = new StringOffset[_o.Dimensions.Count];
      for (var _j = 0; _j < __dimensions.Length; ++_j) { __dimensions[_j] = builder.CreateString(_o.Dimensions[_j]); }
      _dimensions = CreateDimensionsVector(builder, __dimensions);
    }
    var _dimensionName = default(VectorOffset);
    if (_o.DimensionName != null) {
      var __dimensionName = new StringOffset[_o.DimensionName.Count];
      for (var _j = 0; _j < __dimensionName.Length; ++_j) { __dimensionName[_j] = builder.CreateString(_o.DimensionName[_j]); }
      _dimensionName = CreateDimensionNameVector(builder, __dimensionName);
    }
    return CreateIonoObservationPolarization_Abridged(
      builder,
      _notes,
      _dimensions,
      _dimensionName,
      _o.Data);
  }
}

public class IonoObservationPolarization_AbridgedT
{
  public string Notes { get; set; }
  public List<string> Dimensions { get; set; }
  public List<string> DimensionName { get; set; }
  public IonoObservationPolarization_Abridged_data_Enum Data { get; set; }

  public IonoObservationPolarization_AbridgedT() {
    this.Notes = null;
    this.Dimensions = null;
    this.DimensionName = null;
    this.Data = IonoObservationPolarization_Abridged_data_Enum.X;
  }
  public static IonoObservationPolarization_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return IonoObservationPolarization_Abridged.GetRootAsIonoObservationPolarization_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    IonoObservationPolarization_Abridged.FinishIonoObservationPolarization_AbridgedBuffer(fbb, IonoObservationPolarization_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class IonoObservationPolarization_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Notes*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 6 /*Dimensions*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*DimensionName*/, false)
      && verifier.VerifyField(tablePos, 10 /*Data*/, 1 /*IonoObservationPolarization_Abridged_data_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
