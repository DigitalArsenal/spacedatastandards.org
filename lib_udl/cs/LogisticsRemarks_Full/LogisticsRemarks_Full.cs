// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Remarks associated with this LogisticsSupport record.
public struct LogisticsRemarks_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static LogisticsRemarks_Full GetRootAsLogisticsRemarks_Full(ByteBuffer _bb) { return GetRootAsLogisticsRemarks_Full(_bb, new LogisticsRemarks_Full()); }
  public static LogisticsRemarks_Full GetRootAsLogisticsRemarks_Full(ByteBuffer _bb, LogisticsRemarks_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool LogisticsRemarks_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "LOGI"); }
  public static bool VerifyLogisticsRemarks_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("LOGI", false, LogisticsRemarks_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LogisticsRemarks_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// User who published the remark.
  /// Example: /// Example: JSMITH
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string Username { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUsernameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetUsernameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetUsernameArray() { return __p.__vector_as_array<byte>(4); }
  /// Text of the remark.
  /// Example: /// Example: EXAMPLE REMARK
  /// Constraints: Minimum length = 0, Maximum length = 4000
  public string Remark { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRemarkBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetRemarkBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetRemarkArray() { return __p.__vector_as_array<byte>(6); }
  /// Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.
  /// Example: /// Example: 2023-07-17T10:30:00.123Z
  /// Constraints: No constraints specified.
  public string LastChanged { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLastChangedBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetLastChangedBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetLastChangedArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<LogisticsRemarks_Full> CreateLogisticsRemarks_Full(FlatBufferBuilder builder,
      StringOffset usernameOffset = default(StringOffset),
      StringOffset remarkOffset = default(StringOffset),
      StringOffset lastChangedOffset = default(StringOffset)) {
    builder.StartTable(3);
    LogisticsRemarks_Full.AddLastChanged(builder, lastChangedOffset);
    LogisticsRemarks_Full.AddRemark(builder, remarkOffset);
    LogisticsRemarks_Full.AddUsername(builder, usernameOffset);
    return LogisticsRemarks_Full.EndLogisticsRemarks_Full(builder);
  }

  public static void StartLogisticsRemarks_Full(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddUsername(FlatBufferBuilder builder, StringOffset usernameOffset) { builder.AddOffset(0, usernameOffset.Value, 0); }
  public static void AddRemark(FlatBufferBuilder builder, StringOffset remarkOffset) { builder.AddOffset(1, remarkOffset.Value, 0); }
  public static void AddLastChanged(FlatBufferBuilder builder, StringOffset lastChangedOffset) { builder.AddOffset(2, lastChangedOffset.Value, 0); }
  public static Offset<LogisticsRemarks_Full> EndLogisticsRemarks_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<LogisticsRemarks_Full>(o);
  }
  public static void FinishLogisticsRemarks_FullBuffer(FlatBufferBuilder builder, Offset<LogisticsRemarks_Full> offset) { builder.Finish(offset.Value, "LOGI"); }
  public static void FinishSizePrefixedLogisticsRemarks_FullBuffer(FlatBufferBuilder builder, Offset<LogisticsRemarks_Full> offset) { builder.FinishSizePrefixed(offset.Value, "LOGI"); }
  public LogisticsRemarks_FullT UnPack() {
    var _o = new LogisticsRemarks_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LogisticsRemarks_FullT _o) {
    _o.Username = this.Username;
    _o.Remark = this.Remark;
    _o.LastChanged = this.LastChanged;
  }
  public static Offset<LogisticsRemarks_Full> Pack(FlatBufferBuilder builder, LogisticsRemarks_FullT _o) {
    if (_o == null) return default(Offset<LogisticsRemarks_Full>);
    var _username = _o.Username == null ? default(StringOffset) : builder.CreateString(_o.Username);
    var _remark = _o.Remark == null ? default(StringOffset) : builder.CreateString(_o.Remark);
    var _lastChanged = _o.LastChanged == null ? default(StringOffset) : builder.CreateString(_o.LastChanged);
    return CreateLogisticsRemarks_Full(
      builder,
      _username,
      _remark,
      _lastChanged);
  }
}

public class LogisticsRemarks_FullT
{
  public string Username { get; set; }
  public string Remark { get; set; }
  public string LastChanged { get; set; }

  public LogisticsRemarks_FullT() {
    this.Username = null;
    this.Remark = null;
    this.LastChanged = null;
  }
  public static LogisticsRemarks_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return LogisticsRemarks_Full.GetRootAsLogisticsRemarks_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    LogisticsRemarks_Full.FinishLogisticsRemarks_FullBuffer(fbb, LogisticsRemarks_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class LogisticsRemarks_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Username*/, false)
      && verifier.VerifyString(tablePos, 6 /*Remark*/, false)
      && verifier.VerifyString(tablePos, 8 /*LastChanged*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
