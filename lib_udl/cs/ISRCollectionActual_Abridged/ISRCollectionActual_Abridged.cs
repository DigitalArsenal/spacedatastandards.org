// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Actual start and stop for the collection.
public struct ISRCollectionActual_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ISRCollectionActual_Abridged GetRootAsISRCollectionActual_Abridged(ByteBuffer _bb) { return GetRootAsISRCollectionActual_Abridged(_bb, new ISRCollectionActual_Abridged()); }
  public static ISRCollectionActual_Abridged GetRootAsISRCollectionActual_Abridged(ByteBuffer _bb, ISRCollectionActual_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool ISRCollectionActual_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "ISRC"); }
  public static bool VerifyISRCollectionActual_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("ISRC", false, ISRCollectionActual_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ISRCollectionActual_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique Identifier of actual collection period for historical archive.
  /// Example: /// Example: ISRCOLLECTIONACTUAL-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Start time the collection actually occurred, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-19T01:01:15.001Z
  /// Constraints: No constraints specified.
  public string Start { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStartBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStartArray() { return __p.__vector_as_array<byte>(6); }
  /// Stop time the collection actually occurred, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-19T01:01:15.001Z
  /// Constraints: No constraints specified.
  public string Stop { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStopBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetStopBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetStopArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ISRCollectionActual_Abridged> CreateISRCollectionActual_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset startOffset = default(StringOffset),
      StringOffset stopOffset = default(StringOffset)) {
    builder.StartTable(3);
    ISRCollectionActual_Abridged.AddStop(builder, stopOffset);
    ISRCollectionActual_Abridged.AddStart(builder, startOffset);
    ISRCollectionActual_Abridged.AddId(builder, idOffset);
    return ISRCollectionActual_Abridged.EndISRCollectionActual_Abridged(builder);
  }

  public static void StartISRCollectionActual_Abridged(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddStart(FlatBufferBuilder builder, StringOffset startOffset) { builder.AddOffset(1, startOffset.Value, 0); }
  public static void AddStop(FlatBufferBuilder builder, StringOffset stopOffset) { builder.AddOffset(2, stopOffset.Value, 0); }
  public static Offset<ISRCollectionActual_Abridged> EndISRCollectionActual_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ISRCollectionActual_Abridged>(o);
  }
  public static void FinishISRCollectionActual_AbridgedBuffer(FlatBufferBuilder builder, Offset<ISRCollectionActual_Abridged> offset) { builder.Finish(offset.Value, "ISRC"); }
  public static void FinishSizePrefixedISRCollectionActual_AbridgedBuffer(FlatBufferBuilder builder, Offset<ISRCollectionActual_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "ISRC"); }
  public ISRCollectionActual_AbridgedT UnPack() {
    var _o = new ISRCollectionActual_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ISRCollectionActual_AbridgedT _o) {
    _o.Id = this.Id;
    _o.Start = this.Start;
    _o.Stop = this.Stop;
  }
  public static Offset<ISRCollectionActual_Abridged> Pack(FlatBufferBuilder builder, ISRCollectionActual_AbridgedT _o) {
    if (_o == null) return default(Offset<ISRCollectionActual_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _start = _o.Start == null ? default(StringOffset) : builder.CreateString(_o.Start);
    var _stop = _o.Stop == null ? default(StringOffset) : builder.CreateString(_o.Stop);
    return CreateISRCollectionActual_Abridged(
      builder,
      _id,
      _start,
      _stop);
  }
}

public class ISRCollectionActual_AbridgedT
{
  public string Id { get; set; }
  public string Start { get; set; }
  public string Stop { get; set; }

  public ISRCollectionActual_AbridgedT() {
    this.Id = null;
    this.Start = null;
    this.Stop = null;
  }
  public static ISRCollectionActual_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return ISRCollectionActual_Abridged.GetRootAsISRCollectionActual_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    ISRCollectionActual_Abridged.FinishISRCollectionActual_AbridgedBuffer(fbb, ISRCollectionActual_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class ISRCollectionActual_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Start*/, false)
      && verifier.VerifyString(tablePos, 8 /*Stop*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
