// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Information pertaining to UDL data owners.
public struct DataOwner_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static DataOwner_Abridged GetRootAsDataOwner_Abridged(ByteBuffer _bb) { return GetRootAsDataOwner_Abridged(_bb, new DataOwner_Abridged()); }
  public static DataOwner_Abridged GetRootAsDataOwner_Abridged(ByteBuffer _bb, DataOwner_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool DataOwner_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "DATA"); }
  public static bool VerifyDataOwner_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("DATA", false, DataOwner_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DataOwner_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// The name of the data owner.
  /// Example: /// Example: Data owner name
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string DoName { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDoNameBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDoNameBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDoNameArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Type of organization which this data owner belongs to (e.g. Commercial, Government, Academic, Consortium, etc.).
  /// Example: /// Example: Commercial
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OwnerType { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOwnerTypeBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetOwnerTypeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOwnerTypeArray() { return __p.__vector_as_array<byte>(8); }
  /// Type of data this data owner owns (e.g. EPHEMERIS, IMAGERY, MANEUVER, etc.).
  /// Example: /// Example: ELSET
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string DataType { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDataTypeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDataTypeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDataTypeArray() { return __p.__vector_as_array<byte>(10); }
  /// Organization name for the data provider.
  /// Example: /// Example: ACME
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Provider { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProviderBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetProviderBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetProviderArray() { return __p.__vector_as_array<byte>(12); }
  /// The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDLâ€™s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.
  /// Example: /// Example: US
  /// Constraints: Minimum length = 1, Maximum length = 4
  public string CountryCode { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCountryCodeBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetCountryCodeBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetCountryCodeArray() { return __p.__vector_as_array<byte>(14); }
  /// Unique identifier of the contact for this data owner.
  /// Example: /// Example: 026dd511-8ba5-47d3-9909-836149f87686
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdContact { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdContactBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetIdContactBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetIdContactArray() { return __p.__vector_as_array<byte>(16); }
  /// Description of this data owner.
  /// Example: /// Example: Description of this data owner.
  /// Constraints: No constraints specified.
  public string Description { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(18); }
  /// Optional control required to access this data type from this owner.
  /// Example: /// Example: PR-ACME-ELSETS
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string Control { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetControlBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetControlBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetControlArray() { return __p.__vector_as_array<byte>(20); }
  /// Boolean indicating if the data owner is enabled (if not enabled, they should not appear on the data products screen on the storefront).
  /// Example: /// Example: False
  /// Constraints: No constraints specified.
  public bool Enabled { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Boolean indicating if the data owner is coming soon or not yet available.
  /// Example: /// Example: False
  /// Constraints: No constraints specified.
  public bool ComingSoon { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Source of the data.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(26); }

  public static Offset<DataOwner_Abridged> CreateDataOwner_Abridged(FlatBufferBuilder builder,
      StringOffset doNameOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset ownerTypeOffset = default(StringOffset),
      StringOffset dataTypeOffset = default(StringOffset),
      StringOffset providerOffset = default(StringOffset),
      StringOffset countryCodeOffset = default(StringOffset),
      StringOffset idContactOffset = default(StringOffset),
      StringOffset descriptionOffset = default(StringOffset),
      StringOffset controlOffset = default(StringOffset),
      bool enabled = false,
      bool comingSoon = false,
      StringOffset sourceOffset = default(StringOffset)) {
    builder.StartTable(12);
    DataOwner_Abridged.AddSource(builder, sourceOffset);
    DataOwner_Abridged.AddControl(builder, controlOffset);
    DataOwner_Abridged.AddDescription(builder, descriptionOffset);
    DataOwner_Abridged.AddIdContact(builder, idContactOffset);
    DataOwner_Abridged.AddCountryCode(builder, countryCodeOffset);
    DataOwner_Abridged.AddProvider(builder, providerOffset);
    DataOwner_Abridged.AddDataType(builder, dataTypeOffset);
    DataOwner_Abridged.AddOwnerType(builder, ownerTypeOffset);
    DataOwner_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    DataOwner_Abridged.AddDoName(builder, doNameOffset);
    DataOwner_Abridged.AddComingSoon(builder, comingSoon);
    DataOwner_Abridged.AddEnabled(builder, enabled);
    return DataOwner_Abridged.EndDataOwner_Abridged(builder);
  }

  public static void StartDataOwner_Abridged(FlatBufferBuilder builder) { builder.StartTable(12); }
  public static void AddDoName(FlatBufferBuilder builder, StringOffset doNameOffset) { builder.AddOffset(0, doNameOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddOwnerType(FlatBufferBuilder builder, StringOffset ownerTypeOffset) { builder.AddOffset(2, ownerTypeOffset.Value, 0); }
  public static void AddDataType(FlatBufferBuilder builder, StringOffset dataTypeOffset) { builder.AddOffset(3, dataTypeOffset.Value, 0); }
  public static void AddProvider(FlatBufferBuilder builder, StringOffset providerOffset) { builder.AddOffset(4, providerOffset.Value, 0); }
  public static void AddCountryCode(FlatBufferBuilder builder, StringOffset countryCodeOffset) { builder.AddOffset(5, countryCodeOffset.Value, 0); }
  public static void AddIdContact(FlatBufferBuilder builder, StringOffset idContactOffset) { builder.AddOffset(6, idContactOffset.Value, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(7, descriptionOffset.Value, 0); }
  public static void AddControl(FlatBufferBuilder builder, StringOffset controlOffset) { builder.AddOffset(8, controlOffset.Value, 0); }
  public static void AddEnabled(FlatBufferBuilder builder, bool enabled) { builder.AddBool(9, enabled, false); }
  public static void AddComingSoon(FlatBufferBuilder builder, bool comingSoon) { builder.AddBool(10, comingSoon, false); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(11, sourceOffset.Value, 0); }
  public static Offset<DataOwner_Abridged> EndDataOwner_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<DataOwner_Abridged>(o);
  }
  public static void FinishDataOwner_AbridgedBuffer(FlatBufferBuilder builder, Offset<DataOwner_Abridged> offset) { builder.Finish(offset.Value, "DATA"); }
  public static void FinishSizePrefixedDataOwner_AbridgedBuffer(FlatBufferBuilder builder, Offset<DataOwner_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "DATA"); }
  public DataOwner_AbridgedT UnPack() {
    var _o = new DataOwner_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DataOwner_AbridgedT _o) {
    _o.DoName = this.DoName;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.OwnerType = this.OwnerType;
    _o.DataType = this.DataType;
    _o.Provider = this.Provider;
    _o.CountryCode = this.CountryCode;
    _o.IdContact = this.IdContact;
    _o.Description = this.Description;
    _o.Control = this.Control;
    _o.Enabled = this.Enabled;
    _o.ComingSoon = this.ComingSoon;
    _o.Source = this.Source;
  }
  public static Offset<DataOwner_Abridged> Pack(FlatBufferBuilder builder, DataOwner_AbridgedT _o) {
    if (_o == null) return default(Offset<DataOwner_Abridged>);
    var _doName = _o.DoName == null ? default(StringOffset) : builder.CreateString(_o.DoName);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _ownerType = _o.OwnerType == null ? default(StringOffset) : builder.CreateString(_o.OwnerType);
    var _dataType = _o.DataType == null ? default(StringOffset) : builder.CreateString(_o.DataType);
    var _provider = _o.Provider == null ? default(StringOffset) : builder.CreateString(_o.Provider);
    var _countryCode = _o.CountryCode == null ? default(StringOffset) : builder.CreateString(_o.CountryCode);
    var _idContact = _o.IdContact == null ? default(StringOffset) : builder.CreateString(_o.IdContact);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _control = _o.Control == null ? default(StringOffset) : builder.CreateString(_o.Control);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    return CreateDataOwner_Abridged(
      builder,
      _doName,
      _classificationMarking,
      _ownerType,
      _dataType,
      _provider,
      _countryCode,
      _idContact,
      _description,
      _control,
      _o.Enabled,
      _o.ComingSoon,
      _source);
  }
}

public class DataOwner_AbridgedT
{
  public string DoName { get; set; }
  public string ClassificationMarking { get; set; }
  public string OwnerType { get; set; }
  public string DataType { get; set; }
  public string Provider { get; set; }
  public string CountryCode { get; set; }
  public string IdContact { get; set; }
  public string Description { get; set; }
  public string Control { get; set; }
  public bool Enabled { get; set; }
  public bool ComingSoon { get; set; }
  public string Source { get; set; }

  public DataOwner_AbridgedT() {
    this.DoName = null;
    this.ClassificationMarking = null;
    this.OwnerType = null;
    this.DataType = null;
    this.Provider = null;
    this.CountryCode = null;
    this.IdContact = null;
    this.Description = null;
    this.Control = null;
    this.Enabled = false;
    this.ComingSoon = false;
    this.Source = null;
  }
  public static DataOwner_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return DataOwner_Abridged.GetRootAsDataOwner_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    DataOwner_Abridged.FinishDataOwner_AbridgedBuffer(fbb, DataOwner_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class DataOwner_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*DoName*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*OwnerType*/, false)
      && verifier.VerifyString(tablePos, 10 /*DataType*/, false)
      && verifier.VerifyString(tablePos, 12 /*Provider*/, false)
      && verifier.VerifyString(tablePos, 14 /*CountryCode*/, false)
      && verifier.VerifyString(tablePos, 16 /*IdContact*/, false)
      && verifier.VerifyString(tablePos, 18 /*Description*/, false)
      && verifier.VerifyString(tablePos, 20 /*Control*/, false)
      && verifier.VerifyField(tablePos, 22 /*Enabled*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*ComingSoon*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 26 /*Source*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
