// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// List of data sources related to this document.
public struct SofDataSourceRef_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SofDataSourceRef_Full GetRootAsSofDataSourceRef_Full(ByteBuffer _bb) { return GetRootAsSofDataSourceRef_Full(_bb, new SofDataSourceRef_Full()); }
  public static SofDataSourceRef_Full GetRootAsSofDataSourceRef_Full(ByteBuffer _bb, SofDataSourceRef_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool SofDataSourceRef_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "SOFD"); }
  public static bool VerifySofDataSourceRef_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("SOFD", false, SofDataSourceRef_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SofDataSourceRef_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Data source id.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string DataSourceId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDataSourceIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDataSourceIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDataSourceIdArray() { return __p.__vector_as_array<byte>(4); }
  /// start position.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string StartPosition { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartPositionBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStartPositionBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStartPositionArray() { return __p.__vector_as_array<byte>(6); }
  /// end position.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string EndPosition { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEndPositionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetEndPositionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetEndPositionArray() { return __p.__vector_as_array<byte>(8); }
  /// paragraph number.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string ParagraphNumber { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetParagraphNumberBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetParagraphNumberBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetParagraphNumberArray() { return __p.__vector_as_array<byte>(10); }
  /// sentence number.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string SentenceNumber { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSentenceNumberBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetSentenceNumberBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetSentenceNumberArray() { return __p.__vector_as_array<byte>(12); }

  public static Offset<SofDataSourceRef_Full> CreateSofDataSourceRef_Full(FlatBufferBuilder builder,
      StringOffset dataSourceIdOffset = default(StringOffset),
      StringOffset startPositionOffset = default(StringOffset),
      StringOffset endPositionOffset = default(StringOffset),
      StringOffset paragraphNumberOffset = default(StringOffset),
      StringOffset sentenceNumberOffset = default(StringOffset)) {
    builder.StartTable(5);
    SofDataSourceRef_Full.AddSentenceNumber(builder, sentenceNumberOffset);
    SofDataSourceRef_Full.AddParagraphNumber(builder, paragraphNumberOffset);
    SofDataSourceRef_Full.AddEndPosition(builder, endPositionOffset);
    SofDataSourceRef_Full.AddStartPosition(builder, startPositionOffset);
    SofDataSourceRef_Full.AddDataSourceId(builder, dataSourceIdOffset);
    return SofDataSourceRef_Full.EndSofDataSourceRef_Full(builder);
  }

  public static void StartSofDataSourceRef_Full(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddDataSourceId(FlatBufferBuilder builder, StringOffset dataSourceIdOffset) { builder.AddOffset(0, dataSourceIdOffset.Value, 0); }
  public static void AddStartPosition(FlatBufferBuilder builder, StringOffset startPositionOffset) { builder.AddOffset(1, startPositionOffset.Value, 0); }
  public static void AddEndPosition(FlatBufferBuilder builder, StringOffset endPositionOffset) { builder.AddOffset(2, endPositionOffset.Value, 0); }
  public static void AddParagraphNumber(FlatBufferBuilder builder, StringOffset paragraphNumberOffset) { builder.AddOffset(3, paragraphNumberOffset.Value, 0); }
  public static void AddSentenceNumber(FlatBufferBuilder builder, StringOffset sentenceNumberOffset) { builder.AddOffset(4, sentenceNumberOffset.Value, 0); }
  public static Offset<SofDataSourceRef_Full> EndSofDataSourceRef_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SofDataSourceRef_Full>(o);
  }
  public static void FinishSofDataSourceRef_FullBuffer(FlatBufferBuilder builder, Offset<SofDataSourceRef_Full> offset) { builder.Finish(offset.Value, "SOFD"); }
  public static void FinishSizePrefixedSofDataSourceRef_FullBuffer(FlatBufferBuilder builder, Offset<SofDataSourceRef_Full> offset) { builder.FinishSizePrefixed(offset.Value, "SOFD"); }
  public SofDataSourceRef_FullT UnPack() {
    var _o = new SofDataSourceRef_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SofDataSourceRef_FullT _o) {
    _o.DataSourceId = this.DataSourceId;
    _o.StartPosition = this.StartPosition;
    _o.EndPosition = this.EndPosition;
    _o.ParagraphNumber = this.ParagraphNumber;
    _o.SentenceNumber = this.SentenceNumber;
  }
  public static Offset<SofDataSourceRef_Full> Pack(FlatBufferBuilder builder, SofDataSourceRef_FullT _o) {
    if (_o == null) return default(Offset<SofDataSourceRef_Full>);
    var _dataSourceId = _o.DataSourceId == null ? default(StringOffset) : builder.CreateString(_o.DataSourceId);
    var _startPosition = _o.StartPosition == null ? default(StringOffset) : builder.CreateString(_o.StartPosition);
    var _endPosition = _o.EndPosition == null ? default(StringOffset) : builder.CreateString(_o.EndPosition);
    var _paragraphNumber = _o.ParagraphNumber == null ? default(StringOffset) : builder.CreateString(_o.ParagraphNumber);
    var _sentenceNumber = _o.SentenceNumber == null ? default(StringOffset) : builder.CreateString(_o.SentenceNumber);
    return CreateSofDataSourceRef_Full(
      builder,
      _dataSourceId,
      _startPosition,
      _endPosition,
      _paragraphNumber,
      _sentenceNumber);
  }
}

public class SofDataSourceRef_FullT
{
  public string DataSourceId { get; set; }
  public string StartPosition { get; set; }
  public string EndPosition { get; set; }
  public string ParagraphNumber { get; set; }
  public string SentenceNumber { get; set; }

  public SofDataSourceRef_FullT() {
    this.DataSourceId = null;
    this.StartPosition = null;
    this.EndPosition = null;
    this.ParagraphNumber = null;
    this.SentenceNumber = null;
  }
  public static SofDataSourceRef_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return SofDataSourceRef_Full.GetRootAsSofDataSourceRef_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SofDataSourceRef_Full.FinishSofDataSourceRef_FullBuffer(fbb, SofDataSourceRef_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class SofDataSourceRef_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*DataSourceId*/, false)
      && verifier.VerifyString(tablePos, 6 /*StartPosition*/, false)
      && verifier.VerifyString(tablePos, 8 /*EndPosition*/, false)
      && verifier.VerifyString(tablePos, 10 /*ParagraphNumber*/, false)
      && verifier.VerifyString(tablePos, 12 /*SentenceNumber*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
