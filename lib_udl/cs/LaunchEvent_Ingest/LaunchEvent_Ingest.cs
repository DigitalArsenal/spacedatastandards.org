// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Information on known launch events.
public struct LaunchEvent_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static LaunchEvent_Ingest GetRootAsLaunchEvent_Ingest(ByteBuffer _bb) { return GetRootAsLaunchEvent_Ingest(_bb, new LaunchEvent_Ingest()); }
  public static LaunchEvent_Ingest GetRootAsLaunchEvent_Ingest(ByteBuffer _bb, LaunchEvent_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool LaunchEvent_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "LAUN"); }
  public static bool VerifyLaunchEvent_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("LAUN", false, LaunchEvent_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LaunchEvent_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: LAUNCHEVENT-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Unique identifier of the target on-orbit object, if correlated.
  /// Example: /// Example: REF-ONORBIT-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdOnOrbit { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdOnOrbitBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdOnOrbitBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdOnOrbitArray() { return __p.__vector_as_array<byte>(6); }
  /// Optional target-id, if missing in UDL.
  /// Example: /// Example: ORIGOBJECT-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string OrigObjectId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigObjectIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetOrigObjectIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetOrigObjectIdArray() { return __p.__vector_as_array<byte>(8); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(10); }
  /// The sources or SCG references from which the classification of this data is derived.
  /// Example: /// Example: Example source
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string DerivedFrom { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDerivedFromBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDerivedFromBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDerivedFromArray() { return __p.__vector_as_array<byte>(12); }
  /// The declassification date of this data, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-01T01:02:02.123Z
  /// Constraints: No constraints specified.
  public string DeclassificationDate { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeclassificationDateBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetDeclassificationDateBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetDeclassificationDateArray() { return __p.__vector_as_array<byte>(14); }
  /// Declassification string of this data.
  /// Example: /// Example: Example Declassification
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string DeclassificationString { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeclassificationStringBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetDeclassificationStringBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDeclassificationStringArray() { return __p.__vector_as_array<byte>(16); }
  /// Timestamp of the originating message in ISO8601 UTC format.
  /// Example: /// Example: 2020-01-01T00:00:00.123Z
  /// Constraints: No constraints specified.
  public string MsgCreateDate { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMsgCreateDateBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetMsgCreateDateBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetMsgCreateDateArray() { return __p.__vector_as_array<byte>(18); }
  /// The DISOB launch Failure Code, if applicable.
  /// Example: /// Example: Example failure code
  /// Constraints: Minimum length = 0, Maximum length = 100
  public string LaunchFailureCode { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchFailureCodeBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetLaunchFailureCodeBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetLaunchFailureCodeArray() { return __p.__vector_as_array<byte>(20); }
  /// The launch date, in ISO8601 UTC format.
  /// Example: /// Example: 2020-01-01T00:00:00.123Z
  /// Constraints: No constraints specified.
  public string LaunchDate { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchDateBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetLaunchDateBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetLaunchDateArray() { return __p.__vector_as_array<byte>(22); }
  /// The Basic Encyclopedia Number, if applicable.
  /// Example: /// Example: ENC-123
  /// Constraints: Minimum length = 0, Maximum length = 10
  public string BeNumber { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBeNumberBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetBeNumberBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetBeNumberArray() { return __p.__vector_as_array<byte>(24); }
  /// The OSuffix, if applicable.
  /// Example: /// Example: oSuffix
  /// Constraints: Minimum length = 0, Maximum length = 10
  public string OSuffix { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOSuffixBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetOSuffixBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetOSuffixArray() { return __p.__vector_as_array<byte>(26); }
  /// The Launch facility name.
  /// Example: /// Example: Example launch facility name
  /// Constraints: Minimum length = 0, Maximum length = 100
  public string LaunchFacilityName { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchFacilityNameBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetLaunchFacilityNameBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetLaunchFacilityNameArray() { return __p.__vector_as_array<byte>(28); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(30); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(32); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(34); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(36); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public LaunchEvent_Ingest_dataMode_Enum DataMode { get { int o = __p.__offset(38); return o != 0 ? (LaunchEvent_Ingest_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : LaunchEvent_Ingest_dataMode_Enum.REAL; } }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(40); }
  /// Satellite/catalog number of the target on-orbit object.
  /// Example: /// Example: 12
  /// Constraints: No constraints specified.
  public int SatNo { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<LaunchEvent_Ingest> CreateLaunchEvent_Ingest(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idOnOrbitOffset = default(StringOffset),
      StringOffset origObjectIdOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset derivedFromOffset = default(StringOffset),
      StringOffset declassificationDateOffset = default(StringOffset),
      StringOffset declassificationStringOffset = default(StringOffset),
      StringOffset msgCreateDateOffset = default(StringOffset),
      StringOffset launchFailureCodeOffset = default(StringOffset),
      StringOffset launchDateOffset = default(StringOffset),
      StringOffset beNumberOffset = default(StringOffset),
      StringOffset oSuffixOffset = default(StringOffset),
      StringOffset launchFacilityNameOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      LaunchEvent_Ingest_dataMode_Enum dataMode = LaunchEvent_Ingest_dataMode_Enum.REAL,
      StringOffset origNetworkOffset = default(StringOffset),
      int satNo = 0) {
    builder.StartTable(20);
    LaunchEvent_Ingest.AddSatNo(builder, satNo);
    LaunchEvent_Ingest.AddOrigNetwork(builder, origNetworkOffset);
    LaunchEvent_Ingest.AddSource(builder, sourceOffset);
    LaunchEvent_Ingest.AddOrigin(builder, originOffset);
    LaunchEvent_Ingest.AddCreatedBy(builder, createdByOffset);
    LaunchEvent_Ingest.AddCreatedAt(builder, createdAtOffset);
    LaunchEvent_Ingest.AddLaunchFacilityName(builder, launchFacilityNameOffset);
    LaunchEvent_Ingest.AddOSuffix(builder, oSuffixOffset);
    LaunchEvent_Ingest.AddBeNumber(builder, beNumberOffset);
    LaunchEvent_Ingest.AddLaunchDate(builder, launchDateOffset);
    LaunchEvent_Ingest.AddLaunchFailureCode(builder, launchFailureCodeOffset);
    LaunchEvent_Ingest.AddMsgCreateDate(builder, msgCreateDateOffset);
    LaunchEvent_Ingest.AddDeclassificationString(builder, declassificationStringOffset);
    LaunchEvent_Ingest.AddDeclassificationDate(builder, declassificationDateOffset);
    LaunchEvent_Ingest.AddDerivedFrom(builder, derivedFromOffset);
    LaunchEvent_Ingest.AddClassificationMarking(builder, classificationMarkingOffset);
    LaunchEvent_Ingest.AddOrigObjectId(builder, origObjectIdOffset);
    LaunchEvent_Ingest.AddIdOnOrbit(builder, idOnOrbitOffset);
    LaunchEvent_Ingest.AddId(builder, idOffset);
    LaunchEvent_Ingest.AddDataMode(builder, dataMode);
    return LaunchEvent_Ingest.EndLaunchEvent_Ingest(builder);
  }

  public static void StartLaunchEvent_Ingest(FlatBufferBuilder builder) { builder.StartTable(20); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdOnOrbit(FlatBufferBuilder builder, StringOffset idOnOrbitOffset) { builder.AddOffset(1, idOnOrbitOffset.Value, 0); }
  public static void AddOrigObjectId(FlatBufferBuilder builder, StringOffset origObjectIdOffset) { builder.AddOffset(2, origObjectIdOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(3, classificationMarkingOffset.Value, 0); }
  public static void AddDerivedFrom(FlatBufferBuilder builder, StringOffset derivedFromOffset) { builder.AddOffset(4, derivedFromOffset.Value, 0); }
  public static void AddDeclassificationDate(FlatBufferBuilder builder, StringOffset declassificationDateOffset) { builder.AddOffset(5, declassificationDateOffset.Value, 0); }
  public static void AddDeclassificationString(FlatBufferBuilder builder, StringOffset declassificationStringOffset) { builder.AddOffset(6, declassificationStringOffset.Value, 0); }
  public static void AddMsgCreateDate(FlatBufferBuilder builder, StringOffset msgCreateDateOffset) { builder.AddOffset(7, msgCreateDateOffset.Value, 0); }
  public static void AddLaunchFailureCode(FlatBufferBuilder builder, StringOffset launchFailureCodeOffset) { builder.AddOffset(8, launchFailureCodeOffset.Value, 0); }
  public static void AddLaunchDate(FlatBufferBuilder builder, StringOffset launchDateOffset) { builder.AddOffset(9, launchDateOffset.Value, 0); }
  public static void AddBeNumber(FlatBufferBuilder builder, StringOffset beNumberOffset) { builder.AddOffset(10, beNumberOffset.Value, 0); }
  public static void AddOSuffix(FlatBufferBuilder builder, StringOffset oSuffixOffset) { builder.AddOffset(11, oSuffixOffset.Value, 0); }
  public static void AddLaunchFacilityName(FlatBufferBuilder builder, StringOffset launchFacilityNameOffset) { builder.AddOffset(12, launchFacilityNameOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(13, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(14, createdByOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(15, originOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(16, sourceOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, LaunchEvent_Ingest_dataMode_Enum dataMode) { builder.AddSbyte(17, (sbyte)dataMode, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(18, origNetworkOffset.Value, 0); }
  public static void AddSatNo(FlatBufferBuilder builder, int satNo) { builder.AddInt(19, satNo, 0); }
  public static Offset<LaunchEvent_Ingest> EndLaunchEvent_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<LaunchEvent_Ingest>(o);
  }
  public static void FinishLaunchEvent_IngestBuffer(FlatBufferBuilder builder, Offset<LaunchEvent_Ingest> offset) { builder.Finish(offset.Value, "LAUN"); }
  public static void FinishSizePrefixedLaunchEvent_IngestBuffer(FlatBufferBuilder builder, Offset<LaunchEvent_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "LAUN"); }
  public LaunchEvent_IngestT UnPack() {
    var _o = new LaunchEvent_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LaunchEvent_IngestT _o) {
    _o.Id = this.Id;
    _o.IdOnOrbit = this.IdOnOrbit;
    _o.OrigObjectId = this.OrigObjectId;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.DerivedFrom = this.DerivedFrom;
    _o.DeclassificationDate = this.DeclassificationDate;
    _o.DeclassificationString = this.DeclassificationString;
    _o.MsgCreateDate = this.MsgCreateDate;
    _o.LaunchFailureCode = this.LaunchFailureCode;
    _o.LaunchDate = this.LaunchDate;
    _o.BeNumber = this.BeNumber;
    _o.OSuffix = this.OSuffix;
    _o.LaunchFacilityName = this.LaunchFacilityName;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Origin = this.Origin;
    _o.Source = this.Source;
    _o.DataMode = this.DataMode;
    _o.OrigNetwork = this.OrigNetwork;
    _o.SatNo = this.SatNo;
  }
  public static Offset<LaunchEvent_Ingest> Pack(FlatBufferBuilder builder, LaunchEvent_IngestT _o) {
    if (_o == null) return default(Offset<LaunchEvent_Ingest>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idOnOrbit = _o.IdOnOrbit == null ? default(StringOffset) : builder.CreateString(_o.IdOnOrbit);
    var _origObjectId = _o.OrigObjectId == null ? default(StringOffset) : builder.CreateString(_o.OrigObjectId);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _derivedFrom = _o.DerivedFrom == null ? default(StringOffset) : builder.CreateString(_o.DerivedFrom);
    var _declassificationDate = _o.DeclassificationDate == null ? default(StringOffset) : builder.CreateString(_o.DeclassificationDate);
    var _declassificationString = _o.DeclassificationString == null ? default(StringOffset) : builder.CreateString(_o.DeclassificationString);
    var _msgCreateDate = _o.MsgCreateDate == null ? default(StringOffset) : builder.CreateString(_o.MsgCreateDate);
    var _launchFailureCode = _o.LaunchFailureCode == null ? default(StringOffset) : builder.CreateString(_o.LaunchFailureCode);
    var _launchDate = _o.LaunchDate == null ? default(StringOffset) : builder.CreateString(_o.LaunchDate);
    var _beNumber = _o.BeNumber == null ? default(StringOffset) : builder.CreateString(_o.BeNumber);
    var _oSuffix = _o.OSuffix == null ? default(StringOffset) : builder.CreateString(_o.OSuffix);
    var _launchFacilityName = _o.LaunchFacilityName == null ? default(StringOffset) : builder.CreateString(_o.LaunchFacilityName);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateLaunchEvent_Ingest(
      builder,
      _id,
      _idOnOrbit,
      _origObjectId,
      _classificationMarking,
      _derivedFrom,
      _declassificationDate,
      _declassificationString,
      _msgCreateDate,
      _launchFailureCode,
      _launchDate,
      _beNumber,
      _oSuffix,
      _launchFacilityName,
      _createdAt,
      _createdBy,
      _origin,
      _source,
      _o.DataMode,
      _origNetwork,
      _o.SatNo);
  }
}

public class LaunchEvent_IngestT
{
  public string Id { get; set; }
  public string IdOnOrbit { get; set; }
  public string OrigObjectId { get; set; }
  public string ClassificationMarking { get; set; }
  public string DerivedFrom { get; set; }
  public string DeclassificationDate { get; set; }
  public string DeclassificationString { get; set; }
  public string MsgCreateDate { get; set; }
  public string LaunchFailureCode { get; set; }
  public string LaunchDate { get; set; }
  public string BeNumber { get; set; }
  public string OSuffix { get; set; }
  public string LaunchFacilityName { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Origin { get; set; }
  public string Source { get; set; }
  public LaunchEvent_Ingest_dataMode_Enum DataMode { get; set; }
  public string OrigNetwork { get; set; }
  public int SatNo { get; set; }

  public LaunchEvent_IngestT() {
    this.Id = null;
    this.IdOnOrbit = null;
    this.OrigObjectId = null;
    this.ClassificationMarking = null;
    this.DerivedFrom = null;
    this.DeclassificationDate = null;
    this.DeclassificationString = null;
    this.MsgCreateDate = null;
    this.LaunchFailureCode = null;
    this.LaunchDate = null;
    this.BeNumber = null;
    this.OSuffix = null;
    this.LaunchFacilityName = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Origin = null;
    this.Source = null;
    this.DataMode = LaunchEvent_Ingest_dataMode_Enum.REAL;
    this.OrigNetwork = null;
    this.SatNo = 0;
  }
  public static LaunchEvent_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return LaunchEvent_Ingest.GetRootAsLaunchEvent_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    LaunchEvent_Ingest.FinishLaunchEvent_IngestBuffer(fbb, LaunchEvent_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class LaunchEvent_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdOnOrbit*/, false)
      && verifier.VerifyString(tablePos, 8 /*OrigObjectId*/, false)
      && verifier.VerifyString(tablePos, 10 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 12 /*DerivedFrom*/, false)
      && verifier.VerifyString(tablePos, 14 /*DeclassificationDate*/, false)
      && verifier.VerifyString(tablePos, 16 /*DeclassificationString*/, false)
      && verifier.VerifyString(tablePos, 18 /*MsgCreateDate*/, false)
      && verifier.VerifyString(tablePos, 20 /*LaunchFailureCode*/, false)
      && verifier.VerifyString(tablePos, 22 /*LaunchDate*/, false)
      && verifier.VerifyString(tablePos, 24 /*BeNumber*/, false)
      && verifier.VerifyString(tablePos, 26 /*OSuffix*/, false)
      && verifier.VerifyString(tablePos, 28 /*LaunchFacilityName*/, false)
      && verifier.VerifyString(tablePos, 30 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 32 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 34 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 36 /*Source*/, false)
      && verifier.VerifyField(tablePos, 38 /*DataMode*/, 1 /*LaunchEvent_Ingest_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 40 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 42 /*SatNo*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
