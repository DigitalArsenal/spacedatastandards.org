// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Status for a particular Entity. An entity may have multiple status records collected by various sources.
public struct Status : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Status GetRootAsStatus(ByteBuffer _bb) { return GetRootAsStatus(_bb, new Status()); }
  public static Status GetRootAsStatus(ByteBuffer _bb, Status obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool StatusBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "STAT"); }
  public static bool VerifyStatus(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("STAT", false, StatusVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Status __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: STATUS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// The sources or SCG references from which the classification of this data is derived.
  /// Example: /// Example: SOME_SOURCE
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string DerivedFrom { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDerivedFromBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetDerivedFromBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetDerivedFromArray() { return __p.__vector_as_array<byte>(8); }
  /// The declassification date of this data, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-01T01:02:02.123Z
  /// Constraints: No constraints specified.
  public string DeclassificationDate { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeclassificationDateBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDeclassificationDateBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDeclassificationDateArray() { return __p.__vector_as_array<byte>(10); }
  /// Declassification string of this data.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string DeclassificationString { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDeclassificationStringBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDeclassificationStringBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDeclassificationStringArray() { return __p.__vector_as_array<byte>(12); }
  /// Unique identifier of the parent entity.
  /// Example: /// Example: ENTITY-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdEntity { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdEntityBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetIdEntityBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetIdEntityArray() { return __p.__vector_as_array<byte>(14); }
  /// Overall state of the entity, if applicable (e.g. UNKNOWN, DEAD, ACTIVE, RF ACTIVE, STANDBY).
  /// Example: /// Example: ACTIVE
  /// Constraints: Minimum length = 0, Maximum length = 16
  public Status_state_Enum State { get { int o = __p.__offset(16); return o != 0 ? (Status_state_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Status_state_Enum.UNKNOWN; } }
  /// System capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).
  /// Example: /// Example: FMC
  /// Constraints: Minimum length = 0, Maximum length = 3
  public Status_sysCap_Enum SysCap { get { int o = __p.__offset(18); return o != 0 ? (Status_sysCap_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Status_sysCap_Enum.FMC; } }
  /// Operation capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).
  /// Example: /// Example: FMC
  /// Constraints: Minimum length = 0, Maximum length = 3
  public Status_opsCap_Enum OpsCap { get { int o = __p.__offset(20); return o != 0 ? (Status_opsCap_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Status_opsCap_Enum.FMC; } }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(22); }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string SubStatusCollection(int j) { int o = __p.__offset(24); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int SubStatusCollectionLength { get { int o = __p.__offset(24); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public Status_dataMode_Enum DataMode { get { int o = __p.__offset(26); return o != 0 ? (Status_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Status_dataMode_Enum.REAL; } }
  /// Comments describing the status creation and or updates to an entity.
  /// Example: /// Example: Example Notes
  /// Constraints: No constraints specified.
  public string Notes { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotesBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetNotesBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetNotesArray() { return __p.__vector_as_array<byte>(28); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(30); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(32); }
  /// Time the row was last updated in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string UpdatedAt { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedAtBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetUpdatedAtBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetUpdatedAtArray() { return __p.__vector_as_array<byte>(34); }
  /// Application user who updated the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string UpdatedBy { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedByBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetUpdatedByBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetUpdatedByArray() { return __p.__vector_as_array<byte>(36); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(38); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: TST1
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(40); }

  public static Offset<Status> CreateStatus(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset derivedFromOffset = default(StringOffset),
      StringOffset declassificationDateOffset = default(StringOffset),
      StringOffset declassificationStringOffset = default(StringOffset),
      StringOffset idEntityOffset = default(StringOffset),
      Status_state_Enum state = Status_state_Enum.UNKNOWN,
      Status_sysCap_Enum sysCap = Status_sysCap_Enum.FMC,
      Status_opsCap_Enum opsCap = Status_opsCap_Enum.FMC,
      StringOffset sourceOffset = default(StringOffset),
      VectorOffset subStatusCollectionOffset = default(VectorOffset),
      Status_dataMode_Enum dataMode = Status_dataMode_Enum.REAL,
      StringOffset notesOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset updatedAtOffset = default(StringOffset),
      StringOffset updatedByOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset)) {
    builder.StartTable(19);
    Status.AddOrigNetwork(builder, origNetworkOffset);
    Status.AddOrigin(builder, originOffset);
    Status.AddUpdatedBy(builder, updatedByOffset);
    Status.AddUpdatedAt(builder, updatedAtOffset);
    Status.AddCreatedBy(builder, createdByOffset);
    Status.AddCreatedAt(builder, createdAtOffset);
    Status.AddNotes(builder, notesOffset);
    Status.AddSubStatusCollection(builder, subStatusCollectionOffset);
    Status.AddSource(builder, sourceOffset);
    Status.AddIdEntity(builder, idEntityOffset);
    Status.AddDeclassificationString(builder, declassificationStringOffset);
    Status.AddDeclassificationDate(builder, declassificationDateOffset);
    Status.AddDerivedFrom(builder, derivedFromOffset);
    Status.AddClassificationMarking(builder, classificationMarkingOffset);
    Status.AddId(builder, idOffset);
    Status.AddDataMode(builder, dataMode);
    Status.AddOpsCap(builder, opsCap);
    Status.AddSysCap(builder, sysCap);
    Status.AddState(builder, state);
    return Status.EndStatus(builder);
  }

  public static void StartStatus(FlatBufferBuilder builder) { builder.StartTable(19); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddDerivedFrom(FlatBufferBuilder builder, StringOffset derivedFromOffset) { builder.AddOffset(2, derivedFromOffset.Value, 0); }
  public static void AddDeclassificationDate(FlatBufferBuilder builder, StringOffset declassificationDateOffset) { builder.AddOffset(3, declassificationDateOffset.Value, 0); }
  public static void AddDeclassificationString(FlatBufferBuilder builder, StringOffset declassificationStringOffset) { builder.AddOffset(4, declassificationStringOffset.Value, 0); }
  public static void AddIdEntity(FlatBufferBuilder builder, StringOffset idEntityOffset) { builder.AddOffset(5, idEntityOffset.Value, 0); }
  public static void AddState(FlatBufferBuilder builder, Status_state_Enum state) { builder.AddSbyte(6, (sbyte)state, 0); }
  public static void AddSysCap(FlatBufferBuilder builder, Status_sysCap_Enum sysCap) { builder.AddSbyte(7, (sbyte)sysCap, 0); }
  public static void AddOpsCap(FlatBufferBuilder builder, Status_opsCap_Enum opsCap) { builder.AddSbyte(8, (sbyte)opsCap, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(9, sourceOffset.Value, 0); }
  public static void AddSubStatusCollection(FlatBufferBuilder builder, VectorOffset subStatusCollectionOffset) { builder.AddOffset(10, subStatusCollectionOffset.Value, 0); }
  public static VectorOffset CreateSubStatusCollectionVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateSubStatusCollectionVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubStatusCollectionVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateSubStatusCollectionVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartSubStatusCollectionVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDataMode(FlatBufferBuilder builder, Status_dataMode_Enum dataMode) { builder.AddSbyte(11, (sbyte)dataMode, 0); }
  public static void AddNotes(FlatBufferBuilder builder, StringOffset notesOffset) { builder.AddOffset(12, notesOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(13, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(14, createdByOffset.Value, 0); }
  public static void AddUpdatedAt(FlatBufferBuilder builder, StringOffset updatedAtOffset) { builder.AddOffset(15, updatedAtOffset.Value, 0); }
  public static void AddUpdatedBy(FlatBufferBuilder builder, StringOffset updatedByOffset) { builder.AddOffset(16, updatedByOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(17, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(18, origNetworkOffset.Value, 0); }
  public static Offset<Status> EndStatus(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Status>(o);
  }
  public static void FinishStatusBuffer(FlatBufferBuilder builder, Offset<Status> offset) { builder.Finish(offset.Value, "STAT"); }
  public static void FinishSizePrefixedStatusBuffer(FlatBufferBuilder builder, Offset<Status> offset) { builder.FinishSizePrefixed(offset.Value, "STAT"); }
  public StatusT UnPack() {
    var _o = new StatusT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(StatusT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.DerivedFrom = this.DerivedFrom;
    _o.DeclassificationDate = this.DeclassificationDate;
    _o.DeclassificationString = this.DeclassificationString;
    _o.IdEntity = this.IdEntity;
    _o.State = this.State;
    _o.SysCap = this.SysCap;
    _o.OpsCap = this.OpsCap;
    _o.Source = this.Source;
    _o.SubStatusCollection = new List<string>();
    for (var _j = 0; _j < this.SubStatusCollectionLength; ++_j) {_o.SubStatusCollection.Add(this.SubStatusCollection(_j));}
    _o.DataMode = this.DataMode;
    _o.Notes = this.Notes;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.UpdatedAt = this.UpdatedAt;
    _o.UpdatedBy = this.UpdatedBy;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
  }
  public static Offset<Status> Pack(FlatBufferBuilder builder, StatusT _o) {
    if (_o == null) return default(Offset<Status>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _derivedFrom = _o.DerivedFrom == null ? default(StringOffset) : builder.CreateString(_o.DerivedFrom);
    var _declassificationDate = _o.DeclassificationDate == null ? default(StringOffset) : builder.CreateString(_o.DeclassificationDate);
    var _declassificationString = _o.DeclassificationString == null ? default(StringOffset) : builder.CreateString(_o.DeclassificationString);
    var _idEntity = _o.IdEntity == null ? default(StringOffset) : builder.CreateString(_o.IdEntity);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _subStatusCollection = default(VectorOffset);
    if (_o.SubStatusCollection != null) {
      var __subStatusCollection = new StringOffset[_o.SubStatusCollection.Count];
      for (var _j = 0; _j < __subStatusCollection.Length; ++_j) { __subStatusCollection[_j] = builder.CreateString(_o.SubStatusCollection[_j]); }
      _subStatusCollection = CreateSubStatusCollectionVector(builder, __subStatusCollection);
    }
    var _notes = _o.Notes == null ? default(StringOffset) : builder.CreateString(_o.Notes);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _updatedAt = _o.UpdatedAt == null ? default(StringOffset) : builder.CreateString(_o.UpdatedAt);
    var _updatedBy = _o.UpdatedBy == null ? default(StringOffset) : builder.CreateString(_o.UpdatedBy);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateStatus(
      builder,
      _id,
      _classificationMarking,
      _derivedFrom,
      _declassificationDate,
      _declassificationString,
      _idEntity,
      _o.State,
      _o.SysCap,
      _o.OpsCap,
      _source,
      _subStatusCollection,
      _o.DataMode,
      _notes,
      _createdAt,
      _createdBy,
      _updatedAt,
      _updatedBy,
      _origin,
      _origNetwork);
  }
}

public class StatusT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string DerivedFrom { get; set; }
  public string DeclassificationDate { get; set; }
  public string DeclassificationString { get; set; }
  public string IdEntity { get; set; }
  public Status_state_Enum State { get; set; }
  public Status_sysCap_Enum SysCap { get; set; }
  public Status_opsCap_Enum OpsCap { get; set; }
  public string Source { get; set; }
  public List<string> SubStatusCollection { get; set; }
  public Status_dataMode_Enum DataMode { get; set; }
  public string Notes { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string UpdatedAt { get; set; }
  public string UpdatedBy { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }

  public StatusT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.DerivedFrom = null;
    this.DeclassificationDate = null;
    this.DeclassificationString = null;
    this.IdEntity = null;
    this.State = Status_state_Enum.UNKNOWN;
    this.SysCap = Status_sysCap_Enum.FMC;
    this.OpsCap = Status_opsCap_Enum.FMC;
    this.Source = null;
    this.SubStatusCollection = null;
    this.DataMode = Status_dataMode_Enum.REAL;
    this.Notes = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.UpdatedAt = null;
    this.UpdatedBy = null;
    this.Origin = null;
    this.OrigNetwork = null;
  }
  public static StatusT DeserializeFromBinary(byte[] fbBuffer) {
    return Status.GetRootAsStatus(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Status.FinishStatusBuffer(fbb, Status.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class StatusVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*DerivedFrom*/, false)
      && verifier.VerifyString(tablePos, 10 /*DeclassificationDate*/, false)
      && verifier.VerifyString(tablePos, 12 /*DeclassificationString*/, false)
      && verifier.VerifyString(tablePos, 14 /*IdEntity*/, false)
      && verifier.VerifyField(tablePos, 16 /*State*/, 1 /*Status_state_Enum*/, 1, false)
      && verifier.VerifyField(tablePos, 18 /*SysCap*/, 1 /*Status_sysCap_Enum*/, 1, false)
      && verifier.VerifyField(tablePos, 20 /*OpsCap*/, 1 /*Status_opsCap_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 22 /*Source*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 24 /*SubStatusCollection*/, false)
      && verifier.VerifyField(tablePos, 26 /*DataMode*/, 1 /*Status_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 28 /*Notes*/, false)
      && verifier.VerifyString(tablePos, 30 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 32 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 34 /*UpdatedAt*/, false)
      && verifier.VerifyString(tablePos, 36 /*UpdatedBy*/, false)
      && verifier.VerifyString(tablePos, 38 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 40 /*OrigNetwork*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
