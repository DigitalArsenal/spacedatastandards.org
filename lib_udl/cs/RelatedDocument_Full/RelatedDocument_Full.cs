// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Related document ids.
public struct RelatedDocument_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static RelatedDocument_Full GetRootAsRelatedDocument_Full(ByteBuffer _bb) { return GetRootAsRelatedDocument_Full(_bb, new RelatedDocument_Full()); }
  public static RelatedDocument_Full GetRootAsRelatedDocument_Full(ByteBuffer _bb, RelatedDocument_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool RelatedDocument_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "RELA"); }
  public static bool VerifyRelatedDocument_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("RELA", false, RelatedDocument_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public RelatedDocument_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// The document id of the related document.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string DocumentId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDocumentIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDocumentIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDocumentIdArray() { return __p.__vector_as_array<byte>(4); }
  /// List of data sources related to this document.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string DataSourceRefs(int j) { int o = __p.__offset(6); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DataSourceRefsLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<RelatedDocument_Full> CreateRelatedDocument_Full(FlatBufferBuilder builder,
      StringOffset documentIdOffset = default(StringOffset),
      VectorOffset dataSourceRefsOffset = default(VectorOffset)) {
    builder.StartTable(2);
    RelatedDocument_Full.AddDataSourceRefs(builder, dataSourceRefsOffset);
    RelatedDocument_Full.AddDocumentId(builder, documentIdOffset);
    return RelatedDocument_Full.EndRelatedDocument_Full(builder);
  }

  public static void StartRelatedDocument_Full(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddDocumentId(FlatBufferBuilder builder, StringOffset documentIdOffset) { builder.AddOffset(0, documentIdOffset.Value, 0); }
  public static void AddDataSourceRefs(FlatBufferBuilder builder, VectorOffset dataSourceRefsOffset) { builder.AddOffset(1, dataSourceRefsOffset.Value, 0); }
  public static VectorOffset CreateDataSourceRefsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDataSourceRefsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDataSourceRefsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDataSourceRefsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDataSourceRefsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<RelatedDocument_Full> EndRelatedDocument_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<RelatedDocument_Full>(o);
  }
  public static void FinishRelatedDocument_FullBuffer(FlatBufferBuilder builder, Offset<RelatedDocument_Full> offset) { builder.Finish(offset.Value, "RELA"); }
  public static void FinishSizePrefixedRelatedDocument_FullBuffer(FlatBufferBuilder builder, Offset<RelatedDocument_Full> offset) { builder.FinishSizePrefixed(offset.Value, "RELA"); }
  public RelatedDocument_FullT UnPack() {
    var _o = new RelatedDocument_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RelatedDocument_FullT _o) {
    _o.DocumentId = this.DocumentId;
    _o.DataSourceRefs = new List<string>();
    for (var _j = 0; _j < this.DataSourceRefsLength; ++_j) {_o.DataSourceRefs.Add(this.DataSourceRefs(_j));}
  }
  public static Offset<RelatedDocument_Full> Pack(FlatBufferBuilder builder, RelatedDocument_FullT _o) {
    if (_o == null) return default(Offset<RelatedDocument_Full>);
    var _documentId = _o.DocumentId == null ? default(StringOffset) : builder.CreateString(_o.DocumentId);
    var _dataSourceRefs = default(VectorOffset);
    if (_o.DataSourceRefs != null) {
      var __dataSourceRefs = new StringOffset[_o.DataSourceRefs.Count];
      for (var _j = 0; _j < __dataSourceRefs.Length; ++_j) { __dataSourceRefs[_j] = builder.CreateString(_o.DataSourceRefs[_j]); }
      _dataSourceRefs = CreateDataSourceRefsVector(builder, __dataSourceRefs);
    }
    return CreateRelatedDocument_Full(
      builder,
      _documentId,
      _dataSourceRefs);
  }
}

public class RelatedDocument_FullT
{
  public string DocumentId { get; set; }
  public List<string> DataSourceRefs { get; set; }

  public RelatedDocument_FullT() {
    this.DocumentId = null;
    this.DataSourceRefs = null;
  }
  public static RelatedDocument_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return RelatedDocument_Full.GetRootAsRelatedDocument_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    RelatedDocument_Full.FinishRelatedDocument_FullBuffer(fbb, RelatedDocument_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class RelatedDocument_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*DocumentId*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 6 /*DataSourceRefs*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
