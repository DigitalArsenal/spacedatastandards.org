// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// A diplomatic clearance is an authorization for an aircraft to traverse or land within a specified country.
public struct DiplomaticClearance_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static DiplomaticClearance_Full GetRootAsDiplomaticClearance_Full(ByteBuffer _bb) { return GetRootAsDiplomaticClearance_Full(_bb, new DiplomaticClearance_Full()); }
  public static DiplomaticClearance_Full GetRootAsDiplomaticClearance_Full(ByteBuffer _bb, DiplomaticClearance_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool DiplomaticClearance_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "DIPL"); }
  public static bool VerifyDiplomaticClearance_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("DIPL", false, DiplomaticClearance_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public DiplomaticClearance_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system if not provided on create operations.
  /// Example: /// Example: 25059135-4afc-45c2-b78b-d6e843dbd96d
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Unique identifier of the Mission associated with this diplomatic clearance record.
  /// Example: /// Example: 0dba1363-2d09-49fa-a784-4bb4cbb1674a
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdMission { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdMissionBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIdMissionBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIdMissionArray() { return __p.__vector_as_array<byte>(8); }
  /// Optional diplomatic clearance worksheet ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
  /// Example: /// Example: 990ae849089e3d6cad69655324176bb6
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ExternalWorksheetId { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExternalWorksheetIdBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetExternalWorksheetIdBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetExternalWorksheetIdArray() { return __p.__vector_as_array<byte>(10); }
  /// Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.
  /// Example: /// Example: G2-939911-AC
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string DipWorksheetName { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDipWorksheetNameBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDipWorksheetNameBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDipWorksheetNameArray() { return __p.__vector_as_array<byte>(12); }
  /// The First Departure Date (FDD) the mission is scheduled for departure, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2024-01-01T01:01:01.123Z
  /// Constraints: No constraints specified.
  public string FirstDepDate { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFirstDepDateBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetFirstDepDateBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetFirstDepDateArray() { return __p.__vector_as_array<byte>(14); }
  /// Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2024-01-01T01:01:01.123Z
  /// Constraints: No constraints specified.
  public string DocDeadline { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDocDeadlineBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetDocDeadlineBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDocDeadlineArray() { return __p.__vector_as_array<byte>(16); }
  /// The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve this clearance request.
  /// Example: /// Example: 1083034
  /// Constraints: Minimum length = 0, Maximum length = 40
  public string ApacsId { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetApacsIdBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetApacsIdBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetApacsIdArray() { return __p.__vector_as_array<byte>(18); }
  /// Collection of diplomatic clearance details.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string DiplomaticClearanceDetails(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DiplomaticClearanceDetailsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Collection of diplomatic clearance remarks.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string DiplomaticClearanceRemarks(int j) { int o = __p.__offset(22); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int DiplomaticClearanceRemarksLength { get { int o = __p.__offset(22); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(24); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(26); }
  /// Time the row was updated in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string UpdatedAt { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedAtBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetUpdatedAtBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetUpdatedAtArray() { return __p.__vector_as_array<byte>(28); }
  /// Application user who updated the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string UpdatedBy { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedByBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetUpdatedByBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetUpdatedByArray() { return __p.__vector_as_array<byte>(30); }
  /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
  /// Example: /// Example: AXE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string SourceDL { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceDLBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetSourceDLBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetSourceDLArray() { return __p.__vector_as_array<byte>(32); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(34); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(36); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(38); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public DiplomaticClearance_Full_dataMode_Enum DataMode { get { int o = __p.__offset(40); return o != 0 ? (DiplomaticClearance_Full_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : DiplomaticClearance_Full_dataMode_Enum.REAL; } }

  public static Offset<DiplomaticClearance_Full> CreateDiplomaticClearance_Full(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idMissionOffset = default(StringOffset),
      StringOffset externalWorksheetIdOffset = default(StringOffset),
      StringOffset dipWorksheetNameOffset = default(StringOffset),
      StringOffset firstDepDateOffset = default(StringOffset),
      StringOffset docDeadlineOffset = default(StringOffset),
      StringOffset apacsIdOffset = default(StringOffset),
      VectorOffset diplomaticClearanceDetailsOffset = default(VectorOffset),
      VectorOffset diplomaticClearanceRemarksOffset = default(VectorOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset updatedAtOffset = default(StringOffset),
      StringOffset updatedByOffset = default(StringOffset),
      StringOffset sourceDLOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      DiplomaticClearance_Full_dataMode_Enum dataMode = DiplomaticClearance_Full_dataMode_Enum.REAL) {
    builder.StartTable(19);
    DiplomaticClearance_Full.AddOrigNetwork(builder, origNetworkOffset);
    DiplomaticClearance_Full.AddOrigin(builder, originOffset);
    DiplomaticClearance_Full.AddSource(builder, sourceOffset);
    DiplomaticClearance_Full.AddSourceDL(builder, sourceDLOffset);
    DiplomaticClearance_Full.AddUpdatedBy(builder, updatedByOffset);
    DiplomaticClearance_Full.AddUpdatedAt(builder, updatedAtOffset);
    DiplomaticClearance_Full.AddCreatedBy(builder, createdByOffset);
    DiplomaticClearance_Full.AddCreatedAt(builder, createdAtOffset);
    DiplomaticClearance_Full.AddDiplomaticClearanceRemarks(builder, diplomaticClearanceRemarksOffset);
    DiplomaticClearance_Full.AddDiplomaticClearanceDetails(builder, diplomaticClearanceDetailsOffset);
    DiplomaticClearance_Full.AddApacsId(builder, apacsIdOffset);
    DiplomaticClearance_Full.AddDocDeadline(builder, docDeadlineOffset);
    DiplomaticClearance_Full.AddFirstDepDate(builder, firstDepDateOffset);
    DiplomaticClearance_Full.AddDipWorksheetName(builder, dipWorksheetNameOffset);
    DiplomaticClearance_Full.AddExternalWorksheetId(builder, externalWorksheetIdOffset);
    DiplomaticClearance_Full.AddIdMission(builder, idMissionOffset);
    DiplomaticClearance_Full.AddClassificationMarking(builder, classificationMarkingOffset);
    DiplomaticClearance_Full.AddId(builder, idOffset);
    DiplomaticClearance_Full.AddDataMode(builder, dataMode);
    return DiplomaticClearance_Full.EndDiplomaticClearance_Full(builder);
  }

  public static void StartDiplomaticClearance_Full(FlatBufferBuilder builder) { builder.StartTable(19); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddIdMission(FlatBufferBuilder builder, StringOffset idMissionOffset) { builder.AddOffset(2, idMissionOffset.Value, 0); }
  public static void AddExternalWorksheetId(FlatBufferBuilder builder, StringOffset externalWorksheetIdOffset) { builder.AddOffset(3, externalWorksheetIdOffset.Value, 0); }
  public static void AddDipWorksheetName(FlatBufferBuilder builder, StringOffset dipWorksheetNameOffset) { builder.AddOffset(4, dipWorksheetNameOffset.Value, 0); }
  public static void AddFirstDepDate(FlatBufferBuilder builder, StringOffset firstDepDateOffset) { builder.AddOffset(5, firstDepDateOffset.Value, 0); }
  public static void AddDocDeadline(FlatBufferBuilder builder, StringOffset docDeadlineOffset) { builder.AddOffset(6, docDeadlineOffset.Value, 0); }
  public static void AddApacsId(FlatBufferBuilder builder, StringOffset apacsIdOffset) { builder.AddOffset(7, apacsIdOffset.Value, 0); }
  public static void AddDiplomaticClearanceDetails(FlatBufferBuilder builder, VectorOffset diplomaticClearanceDetailsOffset) { builder.AddOffset(8, diplomaticClearanceDetailsOffset.Value, 0); }
  public static VectorOffset CreateDiplomaticClearanceDetailsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceDetailsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceDetailsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceDetailsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDiplomaticClearanceDetailsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDiplomaticClearanceRemarks(FlatBufferBuilder builder, VectorOffset diplomaticClearanceRemarksOffset) { builder.AddOffset(9, diplomaticClearanceRemarksOffset.Value, 0); }
  public static VectorOffset CreateDiplomaticClearanceRemarksVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceRemarksVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceRemarksVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDiplomaticClearanceRemarksVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDiplomaticClearanceRemarksVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(10, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(11, createdByOffset.Value, 0); }
  public static void AddUpdatedAt(FlatBufferBuilder builder, StringOffset updatedAtOffset) { builder.AddOffset(12, updatedAtOffset.Value, 0); }
  public static void AddUpdatedBy(FlatBufferBuilder builder, StringOffset updatedByOffset) { builder.AddOffset(13, updatedByOffset.Value, 0); }
  public static void AddSourceDL(FlatBufferBuilder builder, StringOffset sourceDLOffset) { builder.AddOffset(14, sourceDLOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(15, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(16, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(17, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, DiplomaticClearance_Full_dataMode_Enum dataMode) { builder.AddSbyte(18, (sbyte)dataMode, 0); }
  public static Offset<DiplomaticClearance_Full> EndDiplomaticClearance_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<DiplomaticClearance_Full>(o);
  }
  public static void FinishDiplomaticClearance_FullBuffer(FlatBufferBuilder builder, Offset<DiplomaticClearance_Full> offset) { builder.Finish(offset.Value, "DIPL"); }
  public static void FinishSizePrefixedDiplomaticClearance_FullBuffer(FlatBufferBuilder builder, Offset<DiplomaticClearance_Full> offset) { builder.FinishSizePrefixed(offset.Value, "DIPL"); }
  public DiplomaticClearance_FullT UnPack() {
    var _o = new DiplomaticClearance_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(DiplomaticClearance_FullT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdMission = this.IdMission;
    _o.ExternalWorksheetId = this.ExternalWorksheetId;
    _o.DipWorksheetName = this.DipWorksheetName;
    _o.FirstDepDate = this.FirstDepDate;
    _o.DocDeadline = this.DocDeadline;
    _o.ApacsId = this.ApacsId;
    _o.DiplomaticClearanceDetails = new List<string>();
    for (var _j = 0; _j < this.DiplomaticClearanceDetailsLength; ++_j) {_o.DiplomaticClearanceDetails.Add(this.DiplomaticClearanceDetails(_j));}
    _o.DiplomaticClearanceRemarks = new List<string>();
    for (var _j = 0; _j < this.DiplomaticClearanceRemarksLength; ++_j) {_o.DiplomaticClearanceRemarks.Add(this.DiplomaticClearanceRemarks(_j));}
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.UpdatedAt = this.UpdatedAt;
    _o.UpdatedBy = this.UpdatedBy;
    _o.SourceDL = this.SourceDL;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
  }
  public static Offset<DiplomaticClearance_Full> Pack(FlatBufferBuilder builder, DiplomaticClearance_FullT _o) {
    if (_o == null) return default(Offset<DiplomaticClearance_Full>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idMission = _o.IdMission == null ? default(StringOffset) : builder.CreateString(_o.IdMission);
    var _externalWorksheetId = _o.ExternalWorksheetId == null ? default(StringOffset) : builder.CreateString(_o.ExternalWorksheetId);
    var _dipWorksheetName = _o.DipWorksheetName == null ? default(StringOffset) : builder.CreateString(_o.DipWorksheetName);
    var _firstDepDate = _o.FirstDepDate == null ? default(StringOffset) : builder.CreateString(_o.FirstDepDate);
    var _docDeadline = _o.DocDeadline == null ? default(StringOffset) : builder.CreateString(_o.DocDeadline);
    var _apacsId = _o.ApacsId == null ? default(StringOffset) : builder.CreateString(_o.ApacsId);
    var _diplomaticClearanceDetails = default(VectorOffset);
    if (_o.DiplomaticClearanceDetails != null) {
      var __diplomaticClearanceDetails = new StringOffset[_o.DiplomaticClearanceDetails.Count];
      for (var _j = 0; _j < __diplomaticClearanceDetails.Length; ++_j) { __diplomaticClearanceDetails[_j] = builder.CreateString(_o.DiplomaticClearanceDetails[_j]); }
      _diplomaticClearanceDetails = CreateDiplomaticClearanceDetailsVector(builder, __diplomaticClearanceDetails);
    }
    var _diplomaticClearanceRemarks = default(VectorOffset);
    if (_o.DiplomaticClearanceRemarks != null) {
      var __diplomaticClearanceRemarks = new StringOffset[_o.DiplomaticClearanceRemarks.Count];
      for (var _j = 0; _j < __diplomaticClearanceRemarks.Length; ++_j) { __diplomaticClearanceRemarks[_j] = builder.CreateString(_o.DiplomaticClearanceRemarks[_j]); }
      _diplomaticClearanceRemarks = CreateDiplomaticClearanceRemarksVector(builder, __diplomaticClearanceRemarks);
    }
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _updatedAt = _o.UpdatedAt == null ? default(StringOffset) : builder.CreateString(_o.UpdatedAt);
    var _updatedBy = _o.UpdatedBy == null ? default(StringOffset) : builder.CreateString(_o.UpdatedBy);
    var _sourceDL = _o.SourceDL == null ? default(StringOffset) : builder.CreateString(_o.SourceDL);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateDiplomaticClearance_Full(
      builder,
      _id,
      _classificationMarking,
      _idMission,
      _externalWorksheetId,
      _dipWorksheetName,
      _firstDepDate,
      _docDeadline,
      _apacsId,
      _diplomaticClearanceDetails,
      _diplomaticClearanceRemarks,
      _createdAt,
      _createdBy,
      _updatedAt,
      _updatedBy,
      _sourceDL,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode);
  }
}

public class DiplomaticClearance_FullT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdMission { get; set; }
  public string ExternalWorksheetId { get; set; }
  public string DipWorksheetName { get; set; }
  public string FirstDepDate { get; set; }
  public string DocDeadline { get; set; }
  public string ApacsId { get; set; }
  public List<string> DiplomaticClearanceDetails { get; set; }
  public List<string> DiplomaticClearanceRemarks { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string UpdatedAt { get; set; }
  public string UpdatedBy { get; set; }
  public string SourceDL { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public DiplomaticClearance_Full_dataMode_Enum DataMode { get; set; }

  public DiplomaticClearance_FullT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.IdMission = null;
    this.ExternalWorksheetId = null;
    this.DipWorksheetName = null;
    this.FirstDepDate = null;
    this.DocDeadline = null;
    this.ApacsId = null;
    this.DiplomaticClearanceDetails = null;
    this.DiplomaticClearanceRemarks = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.UpdatedAt = null;
    this.UpdatedBy = null;
    this.SourceDL = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = DiplomaticClearance_Full_dataMode_Enum.REAL;
  }
  public static DiplomaticClearance_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return DiplomaticClearance_Full.GetRootAsDiplomaticClearance_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    DiplomaticClearance_Full.FinishDiplomaticClearance_FullBuffer(fbb, DiplomaticClearance_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class DiplomaticClearance_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*IdMission*/, false)
      && verifier.VerifyString(tablePos, 10 /*ExternalWorksheetId*/, false)
      && verifier.VerifyString(tablePos, 12 /*DipWorksheetName*/, false)
      && verifier.VerifyString(tablePos, 14 /*FirstDepDate*/, false)
      && verifier.VerifyString(tablePos, 16 /*DocDeadline*/, false)
      && verifier.VerifyString(tablePos, 18 /*ApacsId*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 20 /*DiplomaticClearanceDetails*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 22 /*DiplomaticClearanceRemarks*/, false)
      && verifier.VerifyString(tablePos, 24 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 26 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 28 /*UpdatedAt*/, false)
      && verifier.VerifyString(tablePos, 30 /*UpdatedBy*/, false)
      && verifier.VerifyString(tablePos, 32 /*SourceDL*/, false)
      && verifier.VerifyString(tablePos, 34 /*Source*/, false)
      && verifier.VerifyString(tablePos, 36 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 38 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 40 /*DataMode*/, 1 /*DiplomaticClearance_Full_dataMode_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
