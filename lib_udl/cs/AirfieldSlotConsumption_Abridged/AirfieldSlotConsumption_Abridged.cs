// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Airfield slot use data. Contains the dynamic data associated with the status and use of specific airfield slots.
public struct AirfieldSlotConsumption_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static AirfieldSlotConsumption_Abridged GetRootAsAirfieldSlotConsumption_Abridged(ByteBuffer _bb) { return GetRootAsAirfieldSlotConsumption_Abridged(_bb, new AirfieldSlotConsumption_Abridged()); }
  public static AirfieldSlotConsumption_Abridged GetRootAsAirfieldSlotConsumption_Abridged(ByteBuffer _bb, AirfieldSlotConsumption_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool AirfieldSlotConsumption_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "AIRF"); }
  public static bool VerifyAirfieldSlotConsumption_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("AIRF", false, AirfieldSlotConsumption_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public AirfieldSlotConsumption_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: be831d39-1822-da9f-7ace-6cc5643397dc
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Unique identifier of the airfield slot for which this slot consumption record is referencing.
  /// Example: /// Example: 3136498f-2969-3535-1432-e984b2e2e686
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdAirfieldSlot { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdAirfieldSlotBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIdAirfieldSlotBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIdAirfieldSlotArray() { return __p.__vector_as_array<byte>(8); }
  /// Current status of this slot (REQUESTED / APPROVED / DENIED / BLOCKED / OTHER).
  /// Example: /// Example: APPROVED
  /// Constraints: Minimum length = 0, Maximum length = 9
  public AirfieldSlotConsumption_Abridged_status_Enum Status { get { int o = __p.__offset(10); return o != 0 ? (AirfieldSlotConsumption_Abridged_status_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : AirfieldSlotConsumption_Abridged_status_Enum.REQUESTED; } }
  /// Flag indicating if the slot is occupied.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool Occupied { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Identifying name of the aircraft using this slot. Names are often Prior Permission Required (PPR) numbers or other similar human-readable identifiers.
  /// Example: /// Example: APRON1-230401001
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Consumer { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConsumerBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetConsumerBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetConsumerArray() { return __p.__vector_as_array<byte>(14); }
  /// The aircraft Model Design Series designation of the aircraft occupying this slot.
  /// Example: /// Example: C017A
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string OccAircraftMDS { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOccAircraftMDSBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetOccAircraftMDSBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetOccAircraftMDSArray() { return __p.__vector_as_array<byte>(16); }
  /// The tail number of the aircraft occupying this slot.
  /// Example: /// Example: N702JG
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string OccTailNumber { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOccTailNumberBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetOccTailNumberBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetOccTailNumberArray() { return __p.__vector_as_array<byte>(18); }
  /// Array of call signs of the aircraft using this slot.
  /// Example: /// Example: ['RCH123', 'ABC123', 'LLS442']
  /// Constraints: No constraints specified.
  public string CallSigns(int j) { int o = __p.__offset(20); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int CallSignsLength { get { int o = __p.__offset(20); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Mission identifier using this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.
  /// Example: /// Example: AJM123456123
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string MissionId { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMissionIdBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetMissionIdBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetMissionIdArray() { return __p.__vector_as_array<byte>(22); }
  /// Number of aircraft using this slot for this time.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int NumAircraft { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Time the aircraft began occupying this slot, in ISO 8601 UTC format with millisecond precision.
  /// Example: /// Example: 2023-01-01T01:01:03.123Z
  /// Constraints: No constraints specified.
  public string OccStartTime { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOccStartTimeBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetOccStartTimeBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetOccStartTimeArray() { return __p.__vector_as_array<byte>(26); }
  /// The aircraft Model Design Series designation of the aircraft this slot is reserved for.
  /// Example: /// Example: C017A
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ResAircraftMDS { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResAircraftMDSBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetResAircraftMDSBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetResAircraftMDSArray() { return __p.__vector_as_array<byte>(28); }
  /// The tail number of the aircraft this slot is reserved for.
  /// Example: /// Example: N702JG
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string ResTailNumber { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResTailNumberBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetResTailNumberBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetResTailNumberArray() { return __p.__vector_as_array<byte>(30); }
  /// Indicates the type of reservation (e.g. M for Mission, A for Aircraft, O for Other).
  /// Example: /// Example: M
  /// Constraints: Minimum length = 0, Maximum length = 2
  public string ResType { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResTypeBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetResTypeBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetResTypeArray() { return __p.__vector_as_array<byte>(32); }
  /// The reason the slot reservation was made.
  /// Example: /// Example: Maintenance needed
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string ResReason { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResReasonBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetResReasonBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetResReasonArray() { return __p.__vector_as_array<byte>(34); }
  /// Mission identifier reserving this slot according to Mobility Air Forces (MAF) Encode/Decode procedures.
  /// Example: /// Example: AJM123456123
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ResMissionId { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetResMissionIdBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetResMissionIdBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetResMissionIdArray() { return __p.__vector_as_array<byte>(36); }
  /// The start of the slot window, in ISO 8601 UTC format.
  /// Example: /// Example: 2023-01-01T01:01:01.123Z
  /// Constraints: No constraints specified.
  public string StartTime { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartTimeBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetStartTimeBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetStartTimeArray() { return __p.__vector_as_array<byte>(38); }
  /// The end of the slot window, in ISO 8601 UTC format.
  /// Example: /// Example: 2023-01-01T01:01:01.123Z
  /// Constraints: No constraints specified.
  public string EndTime { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEndTimeBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetEndTimeBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetEndTimeArray() { return __p.__vector_as_array<byte>(40); }
  /// The desired time for aircraft action such as landing, take off, parking, etc., in ISO 8601 UTC format.
  /// Example: /// Example: 2023-01-01T01:01:01.123Z
  /// Constraints: No constraints specified.
  public string TargetTime { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTargetTimeBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetTargetTimeBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetTargetTimeArray() { return __p.__vector_as_array<byte>(42); }
  /// Unique identifier of the sortie arriving at the slot start time.
  /// Example: /// Example: be831d39-1822-da9f-7ace-6cc5643397dc
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdArrSortie { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdArrSortieBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetIdArrSortieBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetIdArrSortieArray() { return __p.__vector_as_array<byte>(44); }
  /// Unique identifier of the sortie departing at the slot end time.
  /// Example: /// Example: 1e6edeec-72e9-aaec-d33c-51147cb5ffdd
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdDepSortie { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdDepSortieBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetIdDepSortieBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetIdDepSortieArray() { return __p.__vector_as_array<byte>(46); }
  /// Alternate identifier of the sortie arriving at the slot start time provided by the source.
  /// Example: /// Example: ALT-SORTIE-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string AltArrSortieId { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAltArrSortieIdBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetAltArrSortieIdBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetAltArrSortieIdArray() { return __p.__vector_as_array<byte>(48); }
  /// Alternate identifier of the sortie departing at the slot end time provided by the source.
  /// Example: /// Example: ALT-SORTIE-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string AltDepSortieId { get { int o = __p.__offset(50); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAltDepSortieIdBytes() { return __p.__vector_as_span<byte>(50, 1); }
#else
  public ArraySegment<byte>? GetAltDepSortieIdBytes() { return __p.__vector_as_arraysegment(50); }
#endif
  public byte[] GetAltDepSortieIdArray() { return __p.__vector_as_array<byte>(50); }
  /// Comments from the requester.
  /// Example: /// Example: Sorry for the late notice.
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string ReqComment { get { int o = __p.__offset(52); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReqCommentBytes() { return __p.__vector_as_span<byte>(52, 1); }
#else
  public ArraySegment<byte>? GetReqCommentBytes() { return __p.__vector_as_arraysegment(52); }
#endif
  public byte[] GetReqCommentArray() { return __p.__vector_as_array<byte>(52); }
  /// Comments from the approver.
  /// Example: /// Example: The request was denied due to inoperable fuel pumps.
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string AppComment { get { int o = __p.__offset(54); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAppCommentBytes() { return __p.__vector_as_span<byte>(54, 1); }
#else
  public ArraySegment<byte>? GetAppCommentBytes() { return __p.__vector_as_arraysegment(54); }
#endif
  public byte[] GetAppCommentArray() { return __p.__vector_as_array<byte>(54); }
  /// Short name of the organization requesting use of this slot.
  /// Example: /// Example: TACC
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string ReqOrg { get { int o = __p.__offset(56); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReqOrgBytes() { return __p.__vector_as_span<byte>(56, 1); }
#else
  public ArraySegment<byte>? GetReqOrgBytes() { return __p.__vector_as_arraysegment(56); }
#endif
  public byte[] GetReqOrgArray() { return __p.__vector_as_array<byte>(56); }
  /// Initials of the person requesting the use of this slot. Use SYSTEM if this request is auto-generated by an auto-planning system.
  /// Example: /// Example: CB
  /// Constraints: Minimum length = 0, Maximum length = 8
  public string ReqInitials { get { int o = __p.__offset(58); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReqInitialsBytes() { return __p.__vector_as_span<byte>(58, 1); }
#else
  public ArraySegment<byte>? GetReqInitialsBytes() { return __p.__vector_as_arraysegment(58); }
#endif
  public byte[] GetReqInitialsArray() { return __p.__vector_as_array<byte>(58); }
  /// Short name of the organization approving the use of this slot.
  /// Example: /// Example: KCHS/BOPS
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string AppOrg { get { int o = __p.__offset(60); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAppOrgBytes() { return __p.__vector_as_span<byte>(60, 1); }
#else
  public ArraySegment<byte>? GetAppOrgBytes() { return __p.__vector_as_arraysegment(60); }
#endif
  public byte[] GetAppOrgArray() { return __p.__vector_as_array<byte>(60); }
  /// Initials of the person approving the use of this slot. Use SYSTEM if auto-approved without human involvement.
  /// Example: /// Example: CB
  /// Constraints: Minimum length = 0, Maximum length = 8
  public string AppInitials { get { int o = __p.__offset(62); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAppInitialsBytes() { return __p.__vector_as_span<byte>(62, 1); }
#else
  public ArraySegment<byte>? GetAppInitialsBytes() { return __p.__vector_as_arraysegment(62); }
#endif
  public byte[] GetAppInitialsArray() { return __p.__vector_as_array<byte>(62); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(64); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(64, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(64); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(64); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(66); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(66, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(66); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(66); }
  /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
  /// Example: /// Example: AXE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string SourceDL { get { int o = __p.__offset(68); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceDLBytes() { return __p.__vector_as_span<byte>(68, 1); }
#else
  public ArraySegment<byte>? GetSourceDLBytes() { return __p.__vector_as_arraysegment(68); }
#endif
  public byte[] GetSourceDLArray() { return __p.__vector_as_array<byte>(68); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(70); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(70, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(70); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(70); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(72); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(72, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(72); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(72); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(74); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(74, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(74); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(74); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public AirfieldSlotConsumption_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(76); return o != 0 ? (AirfieldSlotConsumption_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : AirfieldSlotConsumption_Abridged_dataMode_Enum.REAL; } }

  public static Offset<AirfieldSlotConsumption_Abridged> CreateAirfieldSlotConsumption_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idAirfieldSlotOffset = default(StringOffset),
      AirfieldSlotConsumption_Abridged_status_Enum status = AirfieldSlotConsumption_Abridged_status_Enum.REQUESTED,
      bool occupied = false,
      StringOffset consumerOffset = default(StringOffset),
      StringOffset occAircraftMDSOffset = default(StringOffset),
      StringOffset occTailNumberOffset = default(StringOffset),
      VectorOffset callSignsOffset = default(VectorOffset),
      StringOffset missionIdOffset = default(StringOffset),
      int numAircraft = 0,
      StringOffset occStartTimeOffset = default(StringOffset),
      StringOffset resAircraftMDSOffset = default(StringOffset),
      StringOffset resTailNumberOffset = default(StringOffset),
      StringOffset resTypeOffset = default(StringOffset),
      StringOffset resReasonOffset = default(StringOffset),
      StringOffset resMissionIdOffset = default(StringOffset),
      StringOffset startTimeOffset = default(StringOffset),
      StringOffset endTimeOffset = default(StringOffset),
      StringOffset targetTimeOffset = default(StringOffset),
      StringOffset idArrSortieOffset = default(StringOffset),
      StringOffset idDepSortieOffset = default(StringOffset),
      StringOffset altArrSortieIdOffset = default(StringOffset),
      StringOffset altDepSortieIdOffset = default(StringOffset),
      StringOffset reqCommentOffset = default(StringOffset),
      StringOffset appCommentOffset = default(StringOffset),
      StringOffset reqOrgOffset = default(StringOffset),
      StringOffset reqInitialsOffset = default(StringOffset),
      StringOffset appOrgOffset = default(StringOffset),
      StringOffset appInitialsOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceDLOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      AirfieldSlotConsumption_Abridged_dataMode_Enum dataMode = AirfieldSlotConsumption_Abridged_dataMode_Enum.REAL) {
    builder.StartTable(37);
    AirfieldSlotConsumption_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    AirfieldSlotConsumption_Abridged.AddOrigin(builder, originOffset);
    AirfieldSlotConsumption_Abridged.AddSource(builder, sourceOffset);
    AirfieldSlotConsumption_Abridged.AddSourceDL(builder, sourceDLOffset);
    AirfieldSlotConsumption_Abridged.AddCreatedBy(builder, createdByOffset);
    AirfieldSlotConsumption_Abridged.AddCreatedAt(builder, createdAtOffset);
    AirfieldSlotConsumption_Abridged.AddAppInitials(builder, appInitialsOffset);
    AirfieldSlotConsumption_Abridged.AddAppOrg(builder, appOrgOffset);
    AirfieldSlotConsumption_Abridged.AddReqInitials(builder, reqInitialsOffset);
    AirfieldSlotConsumption_Abridged.AddReqOrg(builder, reqOrgOffset);
    AirfieldSlotConsumption_Abridged.AddAppComment(builder, appCommentOffset);
    AirfieldSlotConsumption_Abridged.AddReqComment(builder, reqCommentOffset);
    AirfieldSlotConsumption_Abridged.AddAltDepSortieId(builder, altDepSortieIdOffset);
    AirfieldSlotConsumption_Abridged.AddAltArrSortieId(builder, altArrSortieIdOffset);
    AirfieldSlotConsumption_Abridged.AddIdDepSortie(builder, idDepSortieOffset);
    AirfieldSlotConsumption_Abridged.AddIdArrSortie(builder, idArrSortieOffset);
    AirfieldSlotConsumption_Abridged.AddTargetTime(builder, targetTimeOffset);
    AirfieldSlotConsumption_Abridged.AddEndTime(builder, endTimeOffset);
    AirfieldSlotConsumption_Abridged.AddStartTime(builder, startTimeOffset);
    AirfieldSlotConsumption_Abridged.AddResMissionId(builder, resMissionIdOffset);
    AirfieldSlotConsumption_Abridged.AddResReason(builder, resReasonOffset);
    AirfieldSlotConsumption_Abridged.AddResType(builder, resTypeOffset);
    AirfieldSlotConsumption_Abridged.AddResTailNumber(builder, resTailNumberOffset);
    AirfieldSlotConsumption_Abridged.AddResAircraftMDS(builder, resAircraftMDSOffset);
    AirfieldSlotConsumption_Abridged.AddOccStartTime(builder, occStartTimeOffset);
    AirfieldSlotConsumption_Abridged.AddNumAircraft(builder, numAircraft);
    AirfieldSlotConsumption_Abridged.AddMissionId(builder, missionIdOffset);
    AirfieldSlotConsumption_Abridged.AddCallSigns(builder, callSignsOffset);
    AirfieldSlotConsumption_Abridged.AddOccTailNumber(builder, occTailNumberOffset);
    AirfieldSlotConsumption_Abridged.AddOccAircraftMDS(builder, occAircraftMDSOffset);
    AirfieldSlotConsumption_Abridged.AddConsumer(builder, consumerOffset);
    AirfieldSlotConsumption_Abridged.AddIdAirfieldSlot(builder, idAirfieldSlotOffset);
    AirfieldSlotConsumption_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    AirfieldSlotConsumption_Abridged.AddId(builder, idOffset);
    AirfieldSlotConsumption_Abridged.AddDataMode(builder, dataMode);
    AirfieldSlotConsumption_Abridged.AddOccupied(builder, occupied);
    AirfieldSlotConsumption_Abridged.AddStatus(builder, status);
    return AirfieldSlotConsumption_Abridged.EndAirfieldSlotConsumption_Abridged(builder);
  }

  public static void StartAirfieldSlotConsumption_Abridged(FlatBufferBuilder builder) { builder.StartTable(37); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddIdAirfieldSlot(FlatBufferBuilder builder, StringOffset idAirfieldSlotOffset) { builder.AddOffset(2, idAirfieldSlotOffset.Value, 0); }
  public static void AddStatus(FlatBufferBuilder builder, AirfieldSlotConsumption_Abridged_status_Enum status) { builder.AddSbyte(3, (sbyte)status, 0); }
  public static void AddOccupied(FlatBufferBuilder builder, bool occupied) { builder.AddBool(4, occupied, false); }
  public static void AddConsumer(FlatBufferBuilder builder, StringOffset consumerOffset) { builder.AddOffset(5, consumerOffset.Value, 0); }
  public static void AddOccAircraftMDS(FlatBufferBuilder builder, StringOffset occAircraftMDSOffset) { builder.AddOffset(6, occAircraftMDSOffset.Value, 0); }
  public static void AddOccTailNumber(FlatBufferBuilder builder, StringOffset occTailNumberOffset) { builder.AddOffset(7, occTailNumberOffset.Value, 0); }
  public static void AddCallSigns(FlatBufferBuilder builder, VectorOffset callSignsOffset) { builder.AddOffset(8, callSignsOffset.Value, 0); }
  public static VectorOffset CreateCallSignsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateCallSignsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCallSignsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateCallSignsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartCallSignsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddMissionId(FlatBufferBuilder builder, StringOffset missionIdOffset) { builder.AddOffset(9, missionIdOffset.Value, 0); }
  public static void AddNumAircraft(FlatBufferBuilder builder, int numAircraft) { builder.AddInt(10, numAircraft, 0); }
  public static void AddOccStartTime(FlatBufferBuilder builder, StringOffset occStartTimeOffset) { builder.AddOffset(11, occStartTimeOffset.Value, 0); }
  public static void AddResAircraftMDS(FlatBufferBuilder builder, StringOffset resAircraftMDSOffset) { builder.AddOffset(12, resAircraftMDSOffset.Value, 0); }
  public static void AddResTailNumber(FlatBufferBuilder builder, StringOffset resTailNumberOffset) { builder.AddOffset(13, resTailNumberOffset.Value, 0); }
  public static void AddResType(FlatBufferBuilder builder, StringOffset resTypeOffset) { builder.AddOffset(14, resTypeOffset.Value, 0); }
  public static void AddResReason(FlatBufferBuilder builder, StringOffset resReasonOffset) { builder.AddOffset(15, resReasonOffset.Value, 0); }
  public static void AddResMissionId(FlatBufferBuilder builder, StringOffset resMissionIdOffset) { builder.AddOffset(16, resMissionIdOffset.Value, 0); }
  public static void AddStartTime(FlatBufferBuilder builder, StringOffset startTimeOffset) { builder.AddOffset(17, startTimeOffset.Value, 0); }
  public static void AddEndTime(FlatBufferBuilder builder, StringOffset endTimeOffset) { builder.AddOffset(18, endTimeOffset.Value, 0); }
  public static void AddTargetTime(FlatBufferBuilder builder, StringOffset targetTimeOffset) { builder.AddOffset(19, targetTimeOffset.Value, 0); }
  public static void AddIdArrSortie(FlatBufferBuilder builder, StringOffset idArrSortieOffset) { builder.AddOffset(20, idArrSortieOffset.Value, 0); }
  public static void AddIdDepSortie(FlatBufferBuilder builder, StringOffset idDepSortieOffset) { builder.AddOffset(21, idDepSortieOffset.Value, 0); }
  public static void AddAltArrSortieId(FlatBufferBuilder builder, StringOffset altArrSortieIdOffset) { builder.AddOffset(22, altArrSortieIdOffset.Value, 0); }
  public static void AddAltDepSortieId(FlatBufferBuilder builder, StringOffset altDepSortieIdOffset) { builder.AddOffset(23, altDepSortieIdOffset.Value, 0); }
  public static void AddReqComment(FlatBufferBuilder builder, StringOffset reqCommentOffset) { builder.AddOffset(24, reqCommentOffset.Value, 0); }
  public static void AddAppComment(FlatBufferBuilder builder, StringOffset appCommentOffset) { builder.AddOffset(25, appCommentOffset.Value, 0); }
  public static void AddReqOrg(FlatBufferBuilder builder, StringOffset reqOrgOffset) { builder.AddOffset(26, reqOrgOffset.Value, 0); }
  public static void AddReqInitials(FlatBufferBuilder builder, StringOffset reqInitialsOffset) { builder.AddOffset(27, reqInitialsOffset.Value, 0); }
  public static void AddAppOrg(FlatBufferBuilder builder, StringOffset appOrgOffset) { builder.AddOffset(28, appOrgOffset.Value, 0); }
  public static void AddAppInitials(FlatBufferBuilder builder, StringOffset appInitialsOffset) { builder.AddOffset(29, appInitialsOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(30, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(31, createdByOffset.Value, 0); }
  public static void AddSourceDL(FlatBufferBuilder builder, StringOffset sourceDLOffset) { builder.AddOffset(32, sourceDLOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(33, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(34, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(35, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, AirfieldSlotConsumption_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(36, (sbyte)dataMode, 0); }
  public static Offset<AirfieldSlotConsumption_Abridged> EndAirfieldSlotConsumption_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<AirfieldSlotConsumption_Abridged>(o);
  }
  public static void FinishAirfieldSlotConsumption_AbridgedBuffer(FlatBufferBuilder builder, Offset<AirfieldSlotConsumption_Abridged> offset) { builder.Finish(offset.Value, "AIRF"); }
  public static void FinishSizePrefixedAirfieldSlotConsumption_AbridgedBuffer(FlatBufferBuilder builder, Offset<AirfieldSlotConsumption_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "AIRF"); }
  public AirfieldSlotConsumption_AbridgedT UnPack() {
    var _o = new AirfieldSlotConsumption_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(AirfieldSlotConsumption_AbridgedT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdAirfieldSlot = this.IdAirfieldSlot;
    _o.Status = this.Status;
    _o.Occupied = this.Occupied;
    _o.Consumer = this.Consumer;
    _o.OccAircraftMDS = this.OccAircraftMDS;
    _o.OccTailNumber = this.OccTailNumber;
    _o.CallSigns = new List<string>();
    for (var _j = 0; _j < this.CallSignsLength; ++_j) {_o.CallSigns.Add(this.CallSigns(_j));}
    _o.MissionId = this.MissionId;
    _o.NumAircraft = this.NumAircraft;
    _o.OccStartTime = this.OccStartTime;
    _o.ResAircraftMDS = this.ResAircraftMDS;
    _o.ResTailNumber = this.ResTailNumber;
    _o.ResType = this.ResType;
    _o.ResReason = this.ResReason;
    _o.ResMissionId = this.ResMissionId;
    _o.StartTime = this.StartTime;
    _o.EndTime = this.EndTime;
    _o.TargetTime = this.TargetTime;
    _o.IdArrSortie = this.IdArrSortie;
    _o.IdDepSortie = this.IdDepSortie;
    _o.AltArrSortieId = this.AltArrSortieId;
    _o.AltDepSortieId = this.AltDepSortieId;
    _o.ReqComment = this.ReqComment;
    _o.AppComment = this.AppComment;
    _o.ReqOrg = this.ReqOrg;
    _o.ReqInitials = this.ReqInitials;
    _o.AppOrg = this.AppOrg;
    _o.AppInitials = this.AppInitials;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.SourceDL = this.SourceDL;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
  }
  public static Offset<AirfieldSlotConsumption_Abridged> Pack(FlatBufferBuilder builder, AirfieldSlotConsumption_AbridgedT _o) {
    if (_o == null) return default(Offset<AirfieldSlotConsumption_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idAirfieldSlot = _o.IdAirfieldSlot == null ? default(StringOffset) : builder.CreateString(_o.IdAirfieldSlot);
    var _consumer = _o.Consumer == null ? default(StringOffset) : builder.CreateString(_o.Consumer);
    var _occAircraftMDS = _o.OccAircraftMDS == null ? default(StringOffset) : builder.CreateString(_o.OccAircraftMDS);
    var _occTailNumber = _o.OccTailNumber == null ? default(StringOffset) : builder.CreateString(_o.OccTailNumber);
    var _callSigns = default(VectorOffset);
    if (_o.CallSigns != null) {
      var __callSigns = new StringOffset[_o.CallSigns.Count];
      for (var _j = 0; _j < __callSigns.Length; ++_j) { __callSigns[_j] = builder.CreateString(_o.CallSigns[_j]); }
      _callSigns = CreateCallSignsVector(builder, __callSigns);
    }
    var _missionId = _o.MissionId == null ? default(StringOffset) : builder.CreateString(_o.MissionId);
    var _occStartTime = _o.OccStartTime == null ? default(StringOffset) : builder.CreateString(_o.OccStartTime);
    var _resAircraftMDS = _o.ResAircraftMDS == null ? default(StringOffset) : builder.CreateString(_o.ResAircraftMDS);
    var _resTailNumber = _o.ResTailNumber == null ? default(StringOffset) : builder.CreateString(_o.ResTailNumber);
    var _resType = _o.ResType == null ? default(StringOffset) : builder.CreateString(_o.ResType);
    var _resReason = _o.ResReason == null ? default(StringOffset) : builder.CreateString(_o.ResReason);
    var _resMissionId = _o.ResMissionId == null ? default(StringOffset) : builder.CreateString(_o.ResMissionId);
    var _startTime = _o.StartTime == null ? default(StringOffset) : builder.CreateString(_o.StartTime);
    var _endTime = _o.EndTime == null ? default(StringOffset) : builder.CreateString(_o.EndTime);
    var _targetTime = _o.TargetTime == null ? default(StringOffset) : builder.CreateString(_o.TargetTime);
    var _idArrSortie = _o.IdArrSortie == null ? default(StringOffset) : builder.CreateString(_o.IdArrSortie);
    var _idDepSortie = _o.IdDepSortie == null ? default(StringOffset) : builder.CreateString(_o.IdDepSortie);
    var _altArrSortieId = _o.AltArrSortieId == null ? default(StringOffset) : builder.CreateString(_o.AltArrSortieId);
    var _altDepSortieId = _o.AltDepSortieId == null ? default(StringOffset) : builder.CreateString(_o.AltDepSortieId);
    var _reqComment = _o.ReqComment == null ? default(StringOffset) : builder.CreateString(_o.ReqComment);
    var _appComment = _o.AppComment == null ? default(StringOffset) : builder.CreateString(_o.AppComment);
    var _reqOrg = _o.ReqOrg == null ? default(StringOffset) : builder.CreateString(_o.ReqOrg);
    var _reqInitials = _o.ReqInitials == null ? default(StringOffset) : builder.CreateString(_o.ReqInitials);
    var _appOrg = _o.AppOrg == null ? default(StringOffset) : builder.CreateString(_o.AppOrg);
    var _appInitials = _o.AppInitials == null ? default(StringOffset) : builder.CreateString(_o.AppInitials);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _sourceDL = _o.SourceDL == null ? default(StringOffset) : builder.CreateString(_o.SourceDL);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateAirfieldSlotConsumption_Abridged(
      builder,
      _id,
      _classificationMarking,
      _idAirfieldSlot,
      _o.Status,
      _o.Occupied,
      _consumer,
      _occAircraftMDS,
      _occTailNumber,
      _callSigns,
      _missionId,
      _o.NumAircraft,
      _occStartTime,
      _resAircraftMDS,
      _resTailNumber,
      _resType,
      _resReason,
      _resMissionId,
      _startTime,
      _endTime,
      _targetTime,
      _idArrSortie,
      _idDepSortie,
      _altArrSortieId,
      _altDepSortieId,
      _reqComment,
      _appComment,
      _reqOrg,
      _reqInitials,
      _appOrg,
      _appInitials,
      _createdAt,
      _createdBy,
      _sourceDL,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode);
  }
}

public class AirfieldSlotConsumption_AbridgedT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdAirfieldSlot { get; set; }
  public AirfieldSlotConsumption_Abridged_status_Enum Status { get; set; }
  public bool Occupied { get; set; }
  public string Consumer { get; set; }
  public string OccAircraftMDS { get; set; }
  public string OccTailNumber { get; set; }
  public List<string> CallSigns { get; set; }
  public string MissionId { get; set; }
  public int NumAircraft { get; set; }
  public string OccStartTime { get; set; }
  public string ResAircraftMDS { get; set; }
  public string ResTailNumber { get; set; }
  public string ResType { get; set; }
  public string ResReason { get; set; }
  public string ResMissionId { get; set; }
  public string StartTime { get; set; }
  public string EndTime { get; set; }
  public string TargetTime { get; set; }
  public string IdArrSortie { get; set; }
  public string IdDepSortie { get; set; }
  public string AltArrSortieId { get; set; }
  public string AltDepSortieId { get; set; }
  public string ReqComment { get; set; }
  public string AppComment { get; set; }
  public string ReqOrg { get; set; }
  public string ReqInitials { get; set; }
  public string AppOrg { get; set; }
  public string AppInitials { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string SourceDL { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public AirfieldSlotConsumption_Abridged_dataMode_Enum DataMode { get; set; }

  public AirfieldSlotConsumption_AbridgedT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.IdAirfieldSlot = null;
    this.Status = AirfieldSlotConsumption_Abridged_status_Enum.REQUESTED;
    this.Occupied = false;
    this.Consumer = null;
    this.OccAircraftMDS = null;
    this.OccTailNumber = null;
    this.CallSigns = null;
    this.MissionId = null;
    this.NumAircraft = 0;
    this.OccStartTime = null;
    this.ResAircraftMDS = null;
    this.ResTailNumber = null;
    this.ResType = null;
    this.ResReason = null;
    this.ResMissionId = null;
    this.StartTime = null;
    this.EndTime = null;
    this.TargetTime = null;
    this.IdArrSortie = null;
    this.IdDepSortie = null;
    this.AltArrSortieId = null;
    this.AltDepSortieId = null;
    this.ReqComment = null;
    this.AppComment = null;
    this.ReqOrg = null;
    this.ReqInitials = null;
    this.AppOrg = null;
    this.AppInitials = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.SourceDL = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = AirfieldSlotConsumption_Abridged_dataMode_Enum.REAL;
  }
  public static AirfieldSlotConsumption_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return AirfieldSlotConsumption_Abridged.GetRootAsAirfieldSlotConsumption_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    AirfieldSlotConsumption_Abridged.FinishAirfieldSlotConsumption_AbridgedBuffer(fbb, AirfieldSlotConsumption_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class AirfieldSlotConsumption_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*IdAirfieldSlot*/, false)
      && verifier.VerifyField(tablePos, 10 /*Status*/, 1 /*AirfieldSlotConsumption_Abridged_status_Enum*/, 1, false)
      && verifier.VerifyField(tablePos, 12 /*Occupied*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 14 /*Consumer*/, false)
      && verifier.VerifyString(tablePos, 16 /*OccAircraftMDS*/, false)
      && verifier.VerifyString(tablePos, 18 /*OccTailNumber*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 20 /*CallSigns*/, false)
      && verifier.VerifyString(tablePos, 22 /*MissionId*/, false)
      && verifier.VerifyField(tablePos, 24 /*NumAircraft*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 26 /*OccStartTime*/, false)
      && verifier.VerifyString(tablePos, 28 /*ResAircraftMDS*/, false)
      && verifier.VerifyString(tablePos, 30 /*ResTailNumber*/, false)
      && verifier.VerifyString(tablePos, 32 /*ResType*/, false)
      && verifier.VerifyString(tablePos, 34 /*ResReason*/, false)
      && verifier.VerifyString(tablePos, 36 /*ResMissionId*/, false)
      && verifier.VerifyString(tablePos, 38 /*StartTime*/, false)
      && verifier.VerifyString(tablePos, 40 /*EndTime*/, false)
      && verifier.VerifyString(tablePos, 42 /*TargetTime*/, false)
      && verifier.VerifyString(tablePos, 44 /*IdArrSortie*/, false)
      && verifier.VerifyString(tablePos, 46 /*IdDepSortie*/, false)
      && verifier.VerifyString(tablePos, 48 /*AltArrSortieId*/, false)
      && verifier.VerifyString(tablePos, 50 /*AltDepSortieId*/, false)
      && verifier.VerifyString(tablePos, 52 /*ReqComment*/, false)
      && verifier.VerifyString(tablePos, 54 /*AppComment*/, false)
      && verifier.VerifyString(tablePos, 56 /*ReqOrg*/, false)
      && verifier.VerifyString(tablePos, 58 /*ReqInitials*/, false)
      && verifier.VerifyString(tablePos, 60 /*AppOrg*/, false)
      && verifier.VerifyString(tablePos, 62 /*AppInitials*/, false)
      && verifier.VerifyString(tablePos, 64 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 66 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 68 /*SourceDL*/, false)
      && verifier.VerifyString(tablePos, 70 /*Source*/, false)
      && verifier.VerifyString(tablePos, 72 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 74 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 76 /*DataMode*/, 1 /*AirfieldSlotConsumption_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
