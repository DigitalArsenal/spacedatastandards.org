// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// A grouping of zero or more target reports for which the sensor provides a single time, sensor position, reference position on the ground with simple estimates for the observed area at the reported time, and other pertinent data.
public struct MtiTargetReport_Ingest : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static MtiTargetReport_Ingest GetRootAsMtiTargetReport_Ingest(ByteBuffer _bb) { return GetRootAsMtiTargetReport_Ingest(_bb, new MtiTargetReport_Ingest()); }
  public static MtiTargetReport_Ingest GetRootAsMtiTargetReport_Ingest(ByteBuffer _bb, MtiTargetReport_Ingest obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool MtiTargetReport_IngestBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "MTIT"); }
  public static bool VerifyMtiTargetReport_Ingest(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("MTIT", false, MtiTargetReport_IngestVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public MtiTargetReport_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Sequential count of this MTI report within the dwell.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D321 { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The North-South position of the reported detection, expressed as degrees North (positive) or South (negative) of the Equator.
  /// Example: /// Example: 20.23
  /// Constraints: No constraints specified.
  public double D322 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The East-West position of the reported detection, expressed as degrees East (positive) from the Prime Meridian.
  /// Example: /// Example: 20.23
  /// Constraints: No constraints specified.
  public double D323 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The North-South position of the reported detection, expressed as degrees North (positive) or South (negative) from the Dwell Area Center Latitude.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D324 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The East-West position of the reported detection, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian from the Dwell Area Center Longitude.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D325 { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Height of the reported detection, referenced to its position above the WGS 84 ellipsoid, in meters.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D326 { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The component of velocity for the reported detection, expressed in centimeters per second, corrected for platform motion, along the line of sight between the sensor and the reported detection, where the positive direction is away from the sensor.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D327 { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The target wrap velocity permits trackers to un-wrap velocities for targets with line-of-sight components large enough to exceed the first velocity period.  Expressed in centimeters/sec.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D328 { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Estimated signal-to-noise ratio (SNR) of the target return, in decibels.
  /// Example: /// Example: 17
  /// Constraints: No constraints specified.
  public int D329 { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The classification of the target (i.e. vehicle, aircraft, â€¦).
  /// Example: /// Example: vehicle
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string D3210 { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetD3210Bytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetD3210Bytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetD3210Array() { return __p.__vector_as_array<byte>(22); }
  /// Estimated probability that the target classification field is correctly classified.
  /// Example: /// Example: 90
  /// Constraints: No constraints specified.
  public int D3211 { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Standard deviation of the estimated slant range of the reported detection, in centimeters.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D3212 { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Standard deviation of the position estimate, in the cross-range direction, of the reported detection, in decimeters.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D3213 { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Standard deviation of the estimated geodetic height, in meters.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D3214 { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Standard deviation of the measured line-of-sight velocity component, in centimeters per second.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D3215 { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The Truth Tag- Application is the Application Field truncated to 8 bits, from the Entity State Protocol Data Unit (PDU) used to generate the MTI Target.
  /// Example: /// Example: 2
  /// Constraints: No constraints specified.
  public int D3216 { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// The Truth Tag - Entity is the Entity Field from the Entity State PDU used to generate the MTI Target.
  /// Example: /// Example: 1234567890
  /// Constraints: No constraints specified.
  public long D3217 { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetLong(o + __p.bb_pos) : (long)0; } }
  /// Estimated radar cross section of the target return, in half-decibels.
  /// Example: /// Example: 98
  /// Constraints: No constraints specified.
  public int D3218 { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }

  public static Offset<MtiTargetReport_Ingest> CreateMtiTargetReport_Ingest(FlatBufferBuilder builder,
      int d32_1 = 0,
      double d32_2 = 0.0,
      double d32_3 = 0.0,
      int d32_4 = 0,
      int d32_5 = 0,
      int d32_6 = 0,
      int d32_7 = 0,
      int d32_8 = 0,
      int d32_9 = 0,
      StringOffset d32_10Offset = default(StringOffset),
      int d32_11 = 0,
      int d32_12 = 0,
      int d32_13 = 0,
      int d32_14 = 0,
      int d32_15 = 0,
      int d32_16 = 0,
      long d32_17 = 0,
      int d32_18 = 0) {
    builder.StartTable(18);
    MtiTargetReport_Ingest.AddD3217(builder, d32_17);
    MtiTargetReport_Ingest.AddD323(builder, d32_3);
    MtiTargetReport_Ingest.AddD322(builder, d32_2);
    MtiTargetReport_Ingest.AddD3218(builder, d32_18);
    MtiTargetReport_Ingest.AddD3216(builder, d32_16);
    MtiTargetReport_Ingest.AddD3215(builder, d32_15);
    MtiTargetReport_Ingest.AddD3214(builder, d32_14);
    MtiTargetReport_Ingest.AddD3213(builder, d32_13);
    MtiTargetReport_Ingest.AddD3212(builder, d32_12);
    MtiTargetReport_Ingest.AddD3211(builder, d32_11);
    MtiTargetReport_Ingest.AddD3210(builder, d32_10Offset);
    MtiTargetReport_Ingest.AddD329(builder, d32_9);
    MtiTargetReport_Ingest.AddD328(builder, d32_8);
    MtiTargetReport_Ingest.AddD327(builder, d32_7);
    MtiTargetReport_Ingest.AddD326(builder, d32_6);
    MtiTargetReport_Ingest.AddD325(builder, d32_5);
    MtiTargetReport_Ingest.AddD324(builder, d32_4);
    MtiTargetReport_Ingest.AddD321(builder, d32_1);
    return MtiTargetReport_Ingest.EndMtiTargetReport_Ingest(builder);
  }

  public static void StartMtiTargetReport_Ingest(FlatBufferBuilder builder) { builder.StartTable(18); }
  public static void AddD321(FlatBufferBuilder builder, int d321) { builder.AddInt(0, d321, 0); }
  public static void AddD322(FlatBufferBuilder builder, double d322) { builder.AddDouble(1, d322, 0.0); }
  public static void AddD323(FlatBufferBuilder builder, double d323) { builder.AddDouble(2, d323, 0.0); }
  public static void AddD324(FlatBufferBuilder builder, int d324) { builder.AddInt(3, d324, 0); }
  public static void AddD325(FlatBufferBuilder builder, int d325) { builder.AddInt(4, d325, 0); }
  public static void AddD326(FlatBufferBuilder builder, int d326) { builder.AddInt(5, d326, 0); }
  public static void AddD327(FlatBufferBuilder builder, int d327) { builder.AddInt(6, d327, 0); }
  public static void AddD328(FlatBufferBuilder builder, int d328) { builder.AddInt(7, d328, 0); }
  public static void AddD329(FlatBufferBuilder builder, int d329) { builder.AddInt(8, d329, 0); }
  public static void AddD3210(FlatBufferBuilder builder, StringOffset d3210Offset) { builder.AddOffset(9, d3210Offset.Value, 0); }
  public static void AddD3211(FlatBufferBuilder builder, int d3211) { builder.AddInt(10, d3211, 0); }
  public static void AddD3212(FlatBufferBuilder builder, int d3212) { builder.AddInt(11, d3212, 0); }
  public static void AddD3213(FlatBufferBuilder builder, int d3213) { builder.AddInt(12, d3213, 0); }
  public static void AddD3214(FlatBufferBuilder builder, int d3214) { builder.AddInt(13, d3214, 0); }
  public static void AddD3215(FlatBufferBuilder builder, int d3215) { builder.AddInt(14, d3215, 0); }
  public static void AddD3216(FlatBufferBuilder builder, int d3216) { builder.AddInt(15, d3216, 0); }
  public static void AddD3217(FlatBufferBuilder builder, long d3217) { builder.AddLong(16, d3217, 0); }
  public static void AddD3218(FlatBufferBuilder builder, int d3218) { builder.AddInt(17, d3218, 0); }
  public static Offset<MtiTargetReport_Ingest> EndMtiTargetReport_Ingest(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<MtiTargetReport_Ingest>(o);
  }
  public static void FinishMtiTargetReport_IngestBuffer(FlatBufferBuilder builder, Offset<MtiTargetReport_Ingest> offset) { builder.Finish(offset.Value, "MTIT"); }
  public static void FinishSizePrefixedMtiTargetReport_IngestBuffer(FlatBufferBuilder builder, Offset<MtiTargetReport_Ingest> offset) { builder.FinishSizePrefixed(offset.Value, "MTIT"); }
  public MtiTargetReport_IngestT UnPack() {
    var _o = new MtiTargetReport_IngestT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(MtiTargetReport_IngestT _o) {
    _o.D321 = this.D321;
    _o.D322 = this.D322;
    _o.D323 = this.D323;
    _o.D324 = this.D324;
    _o.D325 = this.D325;
    _o.D326 = this.D326;
    _o.D327 = this.D327;
    _o.D328 = this.D328;
    _o.D329 = this.D329;
    _o.D3210 = this.D3210;
    _o.D3211 = this.D3211;
    _o.D3212 = this.D3212;
    _o.D3213 = this.D3213;
    _o.D3214 = this.D3214;
    _o.D3215 = this.D3215;
    _o.D3216 = this.D3216;
    _o.D3217 = this.D3217;
    _o.D3218 = this.D3218;
  }
  public static Offset<MtiTargetReport_Ingest> Pack(FlatBufferBuilder builder, MtiTargetReport_IngestT _o) {
    if (_o == null) return default(Offset<MtiTargetReport_Ingest>);
    var _d32_10 = _o.D3210 == null ? default(StringOffset) : builder.CreateString(_o.D3210);
    return CreateMtiTargetReport_Ingest(
      builder,
      _o.D321,
      _o.D322,
      _o.D323,
      _o.D324,
      _o.D325,
      _o.D326,
      _o.D327,
      _o.D328,
      _o.D329,
      _d32_10,
      _o.D3211,
      _o.D3212,
      _o.D3213,
      _o.D3214,
      _o.D3215,
      _o.D3216,
      _o.D3217,
      _o.D3218);
  }
}

public class MtiTargetReport_IngestT
{
  public int D321 { get; set; }
  public double D322 { get; set; }
  public double D323 { get; set; }
  public int D324 { get; set; }
  public int D325 { get; set; }
  public int D326 { get; set; }
  public int D327 { get; set; }
  public int D328 { get; set; }
  public int D329 { get; set; }
  public string D3210 { get; set; }
  public int D3211 { get; set; }
  public int D3212 { get; set; }
  public int D3213 { get; set; }
  public int D3214 { get; set; }
  public int D3215 { get; set; }
  public int D3216 { get; set; }
  public long D3217 { get; set; }
  public int D3218 { get; set; }

  public MtiTargetReport_IngestT() {
    this.D321 = 0;
    this.D322 = 0.0;
    this.D323 = 0.0;
    this.D324 = 0;
    this.D325 = 0;
    this.D326 = 0;
    this.D327 = 0;
    this.D328 = 0;
    this.D329 = 0;
    this.D3210 = null;
    this.D3211 = 0;
    this.D3212 = 0;
    this.D3213 = 0;
    this.D3214 = 0;
    this.D3215 = 0;
    this.D3216 = 0;
    this.D3217 = 0;
    this.D3218 = 0;
  }
  public static MtiTargetReport_IngestT DeserializeFromBinary(byte[] fbBuffer) {
    return MtiTargetReport_Ingest.GetRootAsMtiTargetReport_Ingest(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    MtiTargetReport_Ingest.FinishMtiTargetReport_IngestBuffer(fbb, MtiTargetReport_Ingest.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class MtiTargetReport_IngestVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*D321*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 6 /*D322*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*D323*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*D324*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 12 /*D325*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 14 /*D326*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 16 /*D327*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 18 /*D328*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 20 /*D329*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 22 /*D3210*/, false)
      && verifier.VerifyField(tablePos, 24 /*D3211*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 26 /*D3212*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 28 /*D3213*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 30 /*D3214*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*D3215*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*D3216*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 36 /*D3217*/, 8 /*long*/, 8, false)
      && verifier.VerifyField(tablePos, 38 /*D3218*/, 4 /*int*/, 4, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
