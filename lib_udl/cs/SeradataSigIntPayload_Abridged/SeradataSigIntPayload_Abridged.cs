// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Details for an sigint payload from  Seradata.
public struct SeradataSigIntPayload_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SeradataSigIntPayload_Abridged GetRootAsSeradataSigIntPayload_Abridged(ByteBuffer _bb) { return GetRootAsSeradataSigIntPayload_Abridged(_bb, new SeradataSigIntPayload_Abridged()); }
  public static SeradataSigIntPayload_Abridged GetRootAsSeradataSigIntPayload_Abridged(ByteBuffer _bb, SeradataSigIntPayload_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool SeradataSigIntPayload_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "SERA"); }
  public static bool VerifySeradataSigIntPayload_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("SERA", false, SeradataSigIntPayload_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SeradataSigIntPayload_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: SERADATASIGINTPAYLOAD-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(6); }
  /// Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
  /// Example: /// Example: spacecraftId
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string SpacecraftId { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpacecraftIdBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetSpacecraftIdBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetSpacecraftIdArray() { return __p.__vector_as_array<byte>(8); }
  /// UUID of the Sensor record.
  /// Example: /// Example: 0c5ec9c0-10cd-1d35-c46b-3764c4d76e13
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdSensor { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdSensorBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetIdSensorBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIdSensorArray() { return __p.__vector_as_array<byte>(10); }
  /// Hosted for company/Organization Id.
  /// Example: /// Example: hostedForCompanyOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string HostedForCompanyOrgId { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetHostedForCompanyOrgIdBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetHostedForCompanyOrgIdArray() { return __p.__vector_as_array<byte>(12); }
  /// Manufacturer Organization Id.
  /// Example: /// Example: manufacturerOrgId
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ManufacturerOrgId { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(14); }
  /// SIGINT Payload type, e.g. Comint, Elint, etc.
  /// Example: /// Example: Comint
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string Type { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(16); }
  /// Swath Width in kilometers.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double SwathWidth { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Ground Station info for this payload.
  /// Example: /// Example: groundStations
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string GroundStations { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroundStationsBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetGroundStationsBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetGroundStationsArray() { return __p.__vector_as_array<byte>(20); }
  /// Ground Station Locations for this payload.
  /// Example: /// Example: groundStationLocations
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string GroundStationLocations { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetGroundStationLocationsBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetGroundStationLocationsBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetGroundStationLocationsArray() { return __p.__vector_as_array<byte>(22); }
  /// Frequency coverage for this payload.
  /// Example: /// Example: 1.1 to 3.3
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string FrequencyCoverage { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetFrequencyCoverageBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetFrequencyCoverageBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetFrequencyCoverageArray() { return __p.__vector_as_array<byte>(24); }
  /// Positional Accuracy for this payload.
  /// Example: /// Example: positionalAccuracy
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string PositionalAccuracy { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPositionalAccuracyBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetPositionalAccuracyBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPositionalAccuracyArray() { return __p.__vector_as_array<byte>(26); }
  /// Intercept parameters.
  /// Example: /// Example: interceptParameters
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string InterceptParameters { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInterceptParametersBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetInterceptParametersBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetInterceptParametersArray() { return __p.__vector_as_array<byte>(28); }
  /// Sensor name from Seradata.
  /// Example: /// Example: Sensor Name
  /// Constraints: Minimum length = 0, Maximum length = 50
  public string Name { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(30); }
  /// Payload notes.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string Notes { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotesBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetNotesBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetNotesArray() { return __p.__vector_as_array<byte>(32); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(34); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(36); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(38); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(40); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(42); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public SeradataSigIntPayload_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(44); return o != 0 ? (SeradataSigIntPayload_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : SeradataSigIntPayload_Abridged_dataMode_Enum.REAL; } }

  public static Offset<SeradataSigIntPayload_Abridged> CreateSeradataSigIntPayload_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset spacecraftIdOffset = default(StringOffset),
      StringOffset idSensorOffset = default(StringOffset),
      StringOffset hostedForCompanyOrgIdOffset = default(StringOffset),
      StringOffset manufacturerOrgIdOffset = default(StringOffset),
      StringOffset typeOffset = default(StringOffset),
      double swathWidth = 0.0,
      StringOffset groundStationsOffset = default(StringOffset),
      StringOffset groundStationLocationsOffset = default(StringOffset),
      StringOffset frequencyCoverageOffset = default(StringOffset),
      StringOffset positionalAccuracyOffset = default(StringOffset),
      StringOffset interceptParametersOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset notesOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      SeradataSigIntPayload_Abridged_dataMode_Enum dataMode = SeradataSigIntPayload_Abridged_dataMode_Enum.REAL) {
    builder.StartTable(21);
    SeradataSigIntPayload_Abridged.AddSwathWidth(builder, swathWidth);
    SeradataSigIntPayload_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    SeradataSigIntPayload_Abridged.AddOrigin(builder, originOffset);
    SeradataSigIntPayload_Abridged.AddSource(builder, sourceOffset);
    SeradataSigIntPayload_Abridged.AddCreatedBy(builder, createdByOffset);
    SeradataSigIntPayload_Abridged.AddCreatedAt(builder, createdAtOffset);
    SeradataSigIntPayload_Abridged.AddNotes(builder, notesOffset);
    SeradataSigIntPayload_Abridged.AddName(builder, nameOffset);
    SeradataSigIntPayload_Abridged.AddInterceptParameters(builder, interceptParametersOffset);
    SeradataSigIntPayload_Abridged.AddPositionalAccuracy(builder, positionalAccuracyOffset);
    SeradataSigIntPayload_Abridged.AddFrequencyCoverage(builder, frequencyCoverageOffset);
    SeradataSigIntPayload_Abridged.AddGroundStationLocations(builder, groundStationLocationsOffset);
    SeradataSigIntPayload_Abridged.AddGroundStations(builder, groundStationsOffset);
    SeradataSigIntPayload_Abridged.AddType(builder, typeOffset);
    SeradataSigIntPayload_Abridged.AddManufacturerOrgId(builder, manufacturerOrgIdOffset);
    SeradataSigIntPayload_Abridged.AddHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    SeradataSigIntPayload_Abridged.AddIdSensor(builder, idSensorOffset);
    SeradataSigIntPayload_Abridged.AddSpacecraftId(builder, spacecraftIdOffset);
    SeradataSigIntPayload_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    SeradataSigIntPayload_Abridged.AddId(builder, idOffset);
    SeradataSigIntPayload_Abridged.AddDataMode(builder, dataMode);
    return SeradataSigIntPayload_Abridged.EndSeradataSigIntPayload_Abridged(builder);
  }

  public static void StartSeradataSigIntPayload_Abridged(FlatBufferBuilder builder) { builder.StartTable(21); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(1, classificationMarkingOffset.Value, 0); }
  public static void AddSpacecraftId(FlatBufferBuilder builder, StringOffset spacecraftIdOffset) { builder.AddOffset(2, spacecraftIdOffset.Value, 0); }
  public static void AddIdSensor(FlatBufferBuilder builder, StringOffset idSensorOffset) { builder.AddOffset(3, idSensorOffset.Value, 0); }
  public static void AddHostedForCompanyOrgId(FlatBufferBuilder builder, StringOffset hostedForCompanyOrgIdOffset) { builder.AddOffset(4, hostedForCompanyOrgIdOffset.Value, 0); }
  public static void AddManufacturerOrgId(FlatBufferBuilder builder, StringOffset manufacturerOrgIdOffset) { builder.AddOffset(5, manufacturerOrgIdOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(6, typeOffset.Value, 0); }
  public static void AddSwathWidth(FlatBufferBuilder builder, double swathWidth) { builder.AddDouble(7, swathWidth, 0.0); }
  public static void AddGroundStations(FlatBufferBuilder builder, StringOffset groundStationsOffset) { builder.AddOffset(8, groundStationsOffset.Value, 0); }
  public static void AddGroundStationLocations(FlatBufferBuilder builder, StringOffset groundStationLocationsOffset) { builder.AddOffset(9, groundStationLocationsOffset.Value, 0); }
  public static void AddFrequencyCoverage(FlatBufferBuilder builder, StringOffset frequencyCoverageOffset) { builder.AddOffset(10, frequencyCoverageOffset.Value, 0); }
  public static void AddPositionalAccuracy(FlatBufferBuilder builder, StringOffset positionalAccuracyOffset) { builder.AddOffset(11, positionalAccuracyOffset.Value, 0); }
  public static void AddInterceptParameters(FlatBufferBuilder builder, StringOffset interceptParametersOffset) { builder.AddOffset(12, interceptParametersOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(13, nameOffset.Value, 0); }
  public static void AddNotes(FlatBufferBuilder builder, StringOffset notesOffset) { builder.AddOffset(14, notesOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(15, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(16, createdByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(17, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(18, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(19, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, SeradataSigIntPayload_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(20, (sbyte)dataMode, 0); }
  public static Offset<SeradataSigIntPayload_Abridged> EndSeradataSigIntPayload_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SeradataSigIntPayload_Abridged>(o);
  }
  public static void FinishSeradataSigIntPayload_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataSigIntPayload_Abridged> offset) { builder.Finish(offset.Value, "SERA"); }
  public static void FinishSizePrefixedSeradataSigIntPayload_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataSigIntPayload_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "SERA"); }
  public SeradataSigIntPayload_AbridgedT UnPack() {
    var _o = new SeradataSigIntPayload_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SeradataSigIntPayload_AbridgedT _o) {
    _o.Id = this.Id;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.SpacecraftId = this.SpacecraftId;
    _o.IdSensor = this.IdSensor;
    _o.HostedForCompanyOrgId = this.HostedForCompanyOrgId;
    _o.ManufacturerOrgId = this.ManufacturerOrgId;
    _o.Type = this.Type;
    _o.SwathWidth = this.SwathWidth;
    _o.GroundStations = this.GroundStations;
    _o.GroundStationLocations = this.GroundStationLocations;
    _o.FrequencyCoverage = this.FrequencyCoverage;
    _o.PositionalAccuracy = this.PositionalAccuracy;
    _o.InterceptParameters = this.InterceptParameters;
    _o.Name = this.Name;
    _o.Notes = this.Notes;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
  }
  public static Offset<SeradataSigIntPayload_Abridged> Pack(FlatBufferBuilder builder, SeradataSigIntPayload_AbridgedT _o) {
    if (_o == null) return default(Offset<SeradataSigIntPayload_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _spacecraftId = _o.SpacecraftId == null ? default(StringOffset) : builder.CreateString(_o.SpacecraftId);
    var _idSensor = _o.IdSensor == null ? default(StringOffset) : builder.CreateString(_o.IdSensor);
    var _hostedForCompanyOrgId = _o.HostedForCompanyOrgId == null ? default(StringOffset) : builder.CreateString(_o.HostedForCompanyOrgId);
    var _manufacturerOrgId = _o.ManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.ManufacturerOrgId);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _groundStations = _o.GroundStations == null ? default(StringOffset) : builder.CreateString(_o.GroundStations);
    var _groundStationLocations = _o.GroundStationLocations == null ? default(StringOffset) : builder.CreateString(_o.GroundStationLocations);
    var _frequencyCoverage = _o.FrequencyCoverage == null ? default(StringOffset) : builder.CreateString(_o.FrequencyCoverage);
    var _positionalAccuracy = _o.PositionalAccuracy == null ? default(StringOffset) : builder.CreateString(_o.PositionalAccuracy);
    var _interceptParameters = _o.InterceptParameters == null ? default(StringOffset) : builder.CreateString(_o.InterceptParameters);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _notes = _o.Notes == null ? default(StringOffset) : builder.CreateString(_o.Notes);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateSeradataSigIntPayload_Abridged(
      builder,
      _id,
      _classificationMarking,
      _spacecraftId,
      _idSensor,
      _hostedForCompanyOrgId,
      _manufacturerOrgId,
      _type,
      _o.SwathWidth,
      _groundStations,
      _groundStationLocations,
      _frequencyCoverage,
      _positionalAccuracy,
      _interceptParameters,
      _name,
      _notes,
      _createdAt,
      _createdBy,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode);
  }
}

public class SeradataSigIntPayload_AbridgedT
{
  public string Id { get; set; }
  public string ClassificationMarking { get; set; }
  public string SpacecraftId { get; set; }
  public string IdSensor { get; set; }
  public string HostedForCompanyOrgId { get; set; }
  public string ManufacturerOrgId { get; set; }
  public string Type { get; set; }
  public double SwathWidth { get; set; }
  public string GroundStations { get; set; }
  public string GroundStationLocations { get; set; }
  public string FrequencyCoverage { get; set; }
  public string PositionalAccuracy { get; set; }
  public string InterceptParameters { get; set; }
  public string Name { get; set; }
  public string Notes { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public SeradataSigIntPayload_Abridged_dataMode_Enum DataMode { get; set; }

  public SeradataSigIntPayload_AbridgedT() {
    this.Id = null;
    this.ClassificationMarking = null;
    this.SpacecraftId = null;
    this.IdSensor = null;
    this.HostedForCompanyOrgId = null;
    this.ManufacturerOrgId = null;
    this.Type = null;
    this.SwathWidth = 0.0;
    this.GroundStations = null;
    this.GroundStationLocations = null;
    this.FrequencyCoverage = null;
    this.PositionalAccuracy = null;
    this.InterceptParameters = null;
    this.Name = null;
    this.Notes = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = SeradataSigIntPayload_Abridged_dataMode_Enum.REAL;
  }
  public static SeradataSigIntPayload_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return SeradataSigIntPayload_Abridged.GetRootAsSeradataSigIntPayload_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SeradataSigIntPayload_Abridged.FinishSeradataSigIntPayload_AbridgedBuffer(fbb, SeradataSigIntPayload_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class SeradataSigIntPayload_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 8 /*SpacecraftId*/, false)
      && verifier.VerifyString(tablePos, 10 /*IdSensor*/, false)
      && verifier.VerifyString(tablePos, 12 /*HostedForCompanyOrgId*/, false)
      && verifier.VerifyString(tablePos, 14 /*ManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 16 /*Type*/, false)
      && verifier.VerifyField(tablePos, 18 /*SwathWidth*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 20 /*GroundStations*/, false)
      && verifier.VerifyString(tablePos, 22 /*GroundStationLocations*/, false)
      && verifier.VerifyString(tablePos, 24 /*FrequencyCoverage*/, false)
      && verifier.VerifyString(tablePos, 26 /*PositionalAccuracy*/, false)
      && verifier.VerifyString(tablePos, 28 /*InterceptParameters*/, false)
      && verifier.VerifyString(tablePos, 30 /*Name*/, false)
      && verifier.VerifyString(tablePos, 32 /*Notes*/, false)
      && verifier.VerifyString(tablePos, 34 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 36 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 38 /*Source*/, false)
      && verifier.VerifyString(tablePos, 40 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 42 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 44 /*DataMode*/, 1 /*SeradataSigIntPayload_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
