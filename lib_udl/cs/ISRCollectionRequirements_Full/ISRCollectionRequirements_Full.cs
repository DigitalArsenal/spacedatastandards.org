// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Tasking desired collection requirements.
public struct ISRCollectionRequirements_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ISRCollectionRequirements_Full GetRootAsISRCollectionRequirements_Full(ByteBuffer _bb) { return GetRootAsISRCollectionRequirements_Full(_bb, new ISRCollectionRequirements_Full()); }
  public static ISRCollectionRequirements_Full GetRootAsISRCollectionRequirements_Full(ByteBuffer _bb, ISRCollectionRequirements_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool ISRCollectionRequirements_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "ISRC"); }
  public static bool VerifyISRCollectionRequirements_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("ISRC", false, ISRCollectionRequirements_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ISRCollectionRequirements_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Collection Requirement Unique Identifier.
  /// Example: /// Example: ISCRCOLLECTIONREQUIREMENTS
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Encryption hashing algorithm.
  /// Example: /// Example: HASH
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Hash { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetHashBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetHashBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetHashArray() { return __p.__vector_as_array<byte>(6); }
  /// Type collection this requirement applies to.
  /// Example: /// Example: COLLECTION_TYPE
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Type { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(8); }
  /// Collection Requirement Unique Identifier.
  /// Example: /// Example: CRID
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string CridNumbers { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCridNumbersBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetCridNumbersBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetCridNumbersArray() { return __p.__vector_as_array<byte>(10); }
  /// 1-n priority for this collection requirement.
  /// Example: /// Example: 20.23
  /// Constraints: No constraints specified.
  public double Priority { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Record id.
  /// Example: /// Example: RECORD-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string RecordId { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRecordIdBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetRecordIdBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetRecordIdArray() { return __p.__vector_as_array<byte>(14); }
  /// Reconnaissance Survey information the operator needs.
  /// Example: /// Example: SURVEY_INFO
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string ReconSurvey { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReconSurveyBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetReconSurveyBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetReconSurveyArray() { return __p.__vector_as_array<byte>(16); }
  /// Primary type of intelligence to be collected for this requirement.
  /// Example: /// Example: Sig
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string IntelDiscipline { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntelDisciplineBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetIntelDisciplineBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetIntelDisciplineArray() { return __p.__vector_as_array<byte>(18); }
  /// Sub category of primary intelligence to be collected for this requirement.
  /// Example: /// Example: False
  /// Constraints: No constraints specified.
  public bool Secondary { get { int o = __p.__offset(20); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Is this collection requirement an emphasized/critical requirement.
  /// Example: /// Example: False
  /// Constraints: No constraints specified.
  public bool Emphasized { get { int o = __p.__offset(22); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Is this collection request for the Prism system?.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool IsPrismCr { get { int o = __p.__offset(24); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Start time for this requirement, should be within the mission time window.
  /// Example: /// Example: 2021-01-19T01:01:15.001Z
  /// Constraints: No constraints specified.
  public string Start { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetStartBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetStartArray() { return __p.__vector_as_array<byte>(26); }
  /// Stop time for this requirement, should be within the mission time window.
  /// Example: /// Example: 2021-01-19T01:20:01.001Z
  /// Constraints: No constraints specified.
  public string Stop { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStopBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetStopBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetStopArray() { return __p.__vector_as_array<byte>(28); }
  /// Human readable name for this operation.
  /// Example: /// Example: NAME
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string Operation { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOperationBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetOperationBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetOperationArray() { return __p.__vector_as_array<byte>(30); }
  /// The name of the military unit that this assigned collection requirement will support.
  /// Example: /// Example: UNIT
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string SupportedUnit { get { int o = __p.__offset(32); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSupportedUnitBytes() { return __p.__vector_as_span<byte>(32, 1); }
#else
  public ArraySegment<byte>? GetSupportedUnitBytes() { return __p.__vector_as_arraysegment(32); }
#endif
  public byte[] GetSupportedUnitArray() { return __p.__vector_as_array<byte>(32); }
  /// Country code of the collection requirement. A Country may represent countries, multi-national consortiums, and international organizations.
  /// Example: /// Example: COUNTRY_CODE
  /// Constraints: Minimum length = 0, Maximum length = 4
  public string Country { get { int o = __p.__offset(34); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCountryBytes() { return __p.__vector_as_span<byte>(34, 1); }
#else
  public ArraySegment<byte>? GetCountryBytes() { return __p.__vector_as_arraysegment(34); }
#endif
  public byte[] GetCountryArray() { return __p.__vector_as_array<byte>(34); }
  /// Region of the collection requirement.
  /// Example: /// Example: REGION
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string Region { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRegionBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetRegionBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetRegionArray() { return __p.__vector_as_array<byte>(36); }
  /// Subregion of the collection requirement.
  /// Example: /// Example: SUBREGION
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string Subregion { get { int o = __p.__offset(38); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSubregionBytes() { return __p.__vector_as_span<byte>(38, 1); }
#else
  public ArraySegment<byte>? GetSubregionBytes() { return __p.__vector_as_arraysegment(38); }
#endif
  public byte[] GetSubregionArray() { return __p.__vector_as_array<byte>(38); }
  /// Free text field for the user to specify special instructions needed for this collection.
  /// Example: /// Example: TEXT
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string SpecialComGuidance { get { int o = __p.__offset(40); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSpecialComGuidanceBytes() { return __p.__vector_as_span<byte>(40, 1); }
#else
  public ArraySegment<byte>? GetSpecialComGuidanceBytes() { return __p.__vector_as_arraysegment(40); }
#endif
  public byte[] GetSpecialComGuidanceArray() { return __p.__vector_as_array<byte>(40); }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string CriticalTimes { get { int o = __p.__offset(42); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCriticalTimesBytes() { return __p.__vector_as_span<byte>(42, 1); }
#else
  public ArraySegment<byte>? GetCriticalTimesBytes() { return __p.__vector_as_arraysegment(42); }
#endif
  public byte[] GetCriticalTimesArray() { return __p.__vector_as_array<byte>(42); }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string ExploitationRequirement { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetExploitationRequirementBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetExploitationRequirementBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetExploitationRequirementArray() { return __p.__vector_as_array<byte>(44); }
  /// Array of POI Id's for the targets being tasked.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string TargetList(int j) { int o = __p.__offset(46); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TargetListLength { get { int o = __p.__offset(46); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ISRCollectionRequirements_Full> CreateISRCollectionRequirements_Full(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset hashOffset = default(StringOffset),
      StringOffset typeOffset = default(StringOffset),
      StringOffset cridNumbersOffset = default(StringOffset),
      double priority = 0.0,
      StringOffset recordIdOffset = default(StringOffset),
      StringOffset reconSurveyOffset = default(StringOffset),
      StringOffset intelDisciplineOffset = default(StringOffset),
      bool secondary = false,
      bool emphasized = false,
      bool isPrismCr = false,
      StringOffset startOffset = default(StringOffset),
      StringOffset stopOffset = default(StringOffset),
      StringOffset operationOffset = default(StringOffset),
      StringOffset supportedUnitOffset = default(StringOffset),
      StringOffset countryOffset = default(StringOffset),
      StringOffset regionOffset = default(StringOffset),
      StringOffset subregionOffset = default(StringOffset),
      StringOffset specialComGuidanceOffset = default(StringOffset),
      StringOffset criticalTimesOffset = default(StringOffset),
      StringOffset exploitationRequirementOffset = default(StringOffset),
      VectorOffset targetListOffset = default(VectorOffset)) {
    builder.StartTable(22);
    ISRCollectionRequirements_Full.AddPriority(builder, priority);
    ISRCollectionRequirements_Full.AddTargetList(builder, targetListOffset);
    ISRCollectionRequirements_Full.AddExploitationRequirement(builder, exploitationRequirementOffset);
    ISRCollectionRequirements_Full.AddCriticalTimes(builder, criticalTimesOffset);
    ISRCollectionRequirements_Full.AddSpecialComGuidance(builder, specialComGuidanceOffset);
    ISRCollectionRequirements_Full.AddSubregion(builder, subregionOffset);
    ISRCollectionRequirements_Full.AddRegion(builder, regionOffset);
    ISRCollectionRequirements_Full.AddCountry(builder, countryOffset);
    ISRCollectionRequirements_Full.AddSupportedUnit(builder, supportedUnitOffset);
    ISRCollectionRequirements_Full.AddOperation(builder, operationOffset);
    ISRCollectionRequirements_Full.AddStop(builder, stopOffset);
    ISRCollectionRequirements_Full.AddStart(builder, startOffset);
    ISRCollectionRequirements_Full.AddIntelDiscipline(builder, intelDisciplineOffset);
    ISRCollectionRequirements_Full.AddReconSurvey(builder, reconSurveyOffset);
    ISRCollectionRequirements_Full.AddRecordId(builder, recordIdOffset);
    ISRCollectionRequirements_Full.AddCridNumbers(builder, cridNumbersOffset);
    ISRCollectionRequirements_Full.AddType(builder, typeOffset);
    ISRCollectionRequirements_Full.AddHash(builder, hashOffset);
    ISRCollectionRequirements_Full.AddId(builder, idOffset);
    ISRCollectionRequirements_Full.AddIsPrismCr(builder, isPrismCr);
    ISRCollectionRequirements_Full.AddEmphasized(builder, emphasized);
    ISRCollectionRequirements_Full.AddSecondary(builder, secondary);
    return ISRCollectionRequirements_Full.EndISRCollectionRequirements_Full(builder);
  }

  public static void StartISRCollectionRequirements_Full(FlatBufferBuilder builder) { builder.StartTable(22); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddHash(FlatBufferBuilder builder, StringOffset hashOffset) { builder.AddOffset(1, hashOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(2, typeOffset.Value, 0); }
  public static void AddCridNumbers(FlatBufferBuilder builder, StringOffset cridNumbersOffset) { builder.AddOffset(3, cridNumbersOffset.Value, 0); }
  public static void AddPriority(FlatBufferBuilder builder, double priority) { builder.AddDouble(4, priority, 0.0); }
  public static void AddRecordId(FlatBufferBuilder builder, StringOffset recordIdOffset) { builder.AddOffset(5, recordIdOffset.Value, 0); }
  public static void AddReconSurvey(FlatBufferBuilder builder, StringOffset reconSurveyOffset) { builder.AddOffset(6, reconSurveyOffset.Value, 0); }
  public static void AddIntelDiscipline(FlatBufferBuilder builder, StringOffset intelDisciplineOffset) { builder.AddOffset(7, intelDisciplineOffset.Value, 0); }
  public static void AddSecondary(FlatBufferBuilder builder, bool secondary) { builder.AddBool(8, secondary, false); }
  public static void AddEmphasized(FlatBufferBuilder builder, bool emphasized) { builder.AddBool(9, emphasized, false); }
  public static void AddIsPrismCr(FlatBufferBuilder builder, bool isPrismCr) { builder.AddBool(10, isPrismCr, false); }
  public static void AddStart(FlatBufferBuilder builder, StringOffset startOffset) { builder.AddOffset(11, startOffset.Value, 0); }
  public static void AddStop(FlatBufferBuilder builder, StringOffset stopOffset) { builder.AddOffset(12, stopOffset.Value, 0); }
  public static void AddOperation(FlatBufferBuilder builder, StringOffset operationOffset) { builder.AddOffset(13, operationOffset.Value, 0); }
  public static void AddSupportedUnit(FlatBufferBuilder builder, StringOffset supportedUnitOffset) { builder.AddOffset(14, supportedUnitOffset.Value, 0); }
  public static void AddCountry(FlatBufferBuilder builder, StringOffset countryOffset) { builder.AddOffset(15, countryOffset.Value, 0); }
  public static void AddRegion(FlatBufferBuilder builder, StringOffset regionOffset) { builder.AddOffset(16, regionOffset.Value, 0); }
  public static void AddSubregion(FlatBufferBuilder builder, StringOffset subregionOffset) { builder.AddOffset(17, subregionOffset.Value, 0); }
  public static void AddSpecialComGuidance(FlatBufferBuilder builder, StringOffset specialComGuidanceOffset) { builder.AddOffset(18, specialComGuidanceOffset.Value, 0); }
  public static void AddCriticalTimes(FlatBufferBuilder builder, StringOffset criticalTimesOffset) { builder.AddOffset(19, criticalTimesOffset.Value, 0); }
  public static void AddExploitationRequirement(FlatBufferBuilder builder, StringOffset exploitationRequirementOffset) { builder.AddOffset(20, exploitationRequirementOffset.Value, 0); }
  public static void AddTargetList(FlatBufferBuilder builder, VectorOffset targetListOffset) { builder.AddOffset(21, targetListOffset.Value, 0); }
  public static VectorOffset CreateTargetListVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTargetListVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTargetListVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTargetListVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTargetListVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ISRCollectionRequirements_Full> EndISRCollectionRequirements_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ISRCollectionRequirements_Full>(o);
  }
  public static void FinishISRCollectionRequirements_FullBuffer(FlatBufferBuilder builder, Offset<ISRCollectionRequirements_Full> offset) { builder.Finish(offset.Value, "ISRC"); }
  public static void FinishSizePrefixedISRCollectionRequirements_FullBuffer(FlatBufferBuilder builder, Offset<ISRCollectionRequirements_Full> offset) { builder.FinishSizePrefixed(offset.Value, "ISRC"); }
  public ISRCollectionRequirements_FullT UnPack() {
    var _o = new ISRCollectionRequirements_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ISRCollectionRequirements_FullT _o) {
    _o.Id = this.Id;
    _o.Hash = this.Hash;
    _o.Type = this.Type;
    _o.CridNumbers = this.CridNumbers;
    _o.Priority = this.Priority;
    _o.RecordId = this.RecordId;
    _o.ReconSurvey = this.ReconSurvey;
    _o.IntelDiscipline = this.IntelDiscipline;
    _o.Secondary = this.Secondary;
    _o.Emphasized = this.Emphasized;
    _o.IsPrismCr = this.IsPrismCr;
    _o.Start = this.Start;
    _o.Stop = this.Stop;
    _o.Operation = this.Operation;
    _o.SupportedUnit = this.SupportedUnit;
    _o.Country = this.Country;
    _o.Region = this.Region;
    _o.Subregion = this.Subregion;
    _o.SpecialComGuidance = this.SpecialComGuidance;
    _o.CriticalTimes = this.CriticalTimes;
    _o.ExploitationRequirement = this.ExploitationRequirement;
    _o.TargetList = new List<string>();
    for (var _j = 0; _j < this.TargetListLength; ++_j) {_o.TargetList.Add(this.TargetList(_j));}
  }
  public static Offset<ISRCollectionRequirements_Full> Pack(FlatBufferBuilder builder, ISRCollectionRequirements_FullT _o) {
    if (_o == null) return default(Offset<ISRCollectionRequirements_Full>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _hash = _o.Hash == null ? default(StringOffset) : builder.CreateString(_o.Hash);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _cridNumbers = _o.CridNumbers == null ? default(StringOffset) : builder.CreateString(_o.CridNumbers);
    var _recordId = _o.RecordId == null ? default(StringOffset) : builder.CreateString(_o.RecordId);
    var _reconSurvey = _o.ReconSurvey == null ? default(StringOffset) : builder.CreateString(_o.ReconSurvey);
    var _intelDiscipline = _o.IntelDiscipline == null ? default(StringOffset) : builder.CreateString(_o.IntelDiscipline);
    var _start = _o.Start == null ? default(StringOffset) : builder.CreateString(_o.Start);
    var _stop = _o.Stop == null ? default(StringOffset) : builder.CreateString(_o.Stop);
    var _operation = _o.Operation == null ? default(StringOffset) : builder.CreateString(_o.Operation);
    var _supportedUnit = _o.SupportedUnit == null ? default(StringOffset) : builder.CreateString(_o.SupportedUnit);
    var _country = _o.Country == null ? default(StringOffset) : builder.CreateString(_o.Country);
    var _region = _o.Region == null ? default(StringOffset) : builder.CreateString(_o.Region);
    var _subregion = _o.Subregion == null ? default(StringOffset) : builder.CreateString(_o.Subregion);
    var _specialComGuidance = _o.SpecialComGuidance == null ? default(StringOffset) : builder.CreateString(_o.SpecialComGuidance);
    var _criticalTimes = _o.CriticalTimes == null ? default(StringOffset) : builder.CreateString(_o.CriticalTimes);
    var _exploitationRequirement = _o.ExploitationRequirement == null ? default(StringOffset) : builder.CreateString(_o.ExploitationRequirement);
    var _targetList = default(VectorOffset);
    if (_o.TargetList != null) {
      var __targetList = new StringOffset[_o.TargetList.Count];
      for (var _j = 0; _j < __targetList.Length; ++_j) { __targetList[_j] = builder.CreateString(_o.TargetList[_j]); }
      _targetList = CreateTargetListVector(builder, __targetList);
    }
    return CreateISRCollectionRequirements_Full(
      builder,
      _id,
      _hash,
      _type,
      _cridNumbers,
      _o.Priority,
      _recordId,
      _reconSurvey,
      _intelDiscipline,
      _o.Secondary,
      _o.Emphasized,
      _o.IsPrismCr,
      _start,
      _stop,
      _operation,
      _supportedUnit,
      _country,
      _region,
      _subregion,
      _specialComGuidance,
      _criticalTimes,
      _exploitationRequirement,
      _targetList);
  }
}

public class ISRCollectionRequirements_FullT
{
  public string Id { get; set; }
  public string Hash { get; set; }
  public string Type { get; set; }
  public string CridNumbers { get; set; }
  public double Priority { get; set; }
  public string RecordId { get; set; }
  public string ReconSurvey { get; set; }
  public string IntelDiscipline { get; set; }
  public bool Secondary { get; set; }
  public bool Emphasized { get; set; }
  public bool IsPrismCr { get; set; }
  public string Start { get; set; }
  public string Stop { get; set; }
  public string Operation { get; set; }
  public string SupportedUnit { get; set; }
  public string Country { get; set; }
  public string Region { get; set; }
  public string Subregion { get; set; }
  public string SpecialComGuidance { get; set; }
  public string CriticalTimes { get; set; }
  public string ExploitationRequirement { get; set; }
  public List<string> TargetList { get; set; }

  public ISRCollectionRequirements_FullT() {
    this.Id = null;
    this.Hash = null;
    this.Type = null;
    this.CridNumbers = null;
    this.Priority = 0.0;
    this.RecordId = null;
    this.ReconSurvey = null;
    this.IntelDiscipline = null;
    this.Secondary = false;
    this.Emphasized = false;
    this.IsPrismCr = false;
    this.Start = null;
    this.Stop = null;
    this.Operation = null;
    this.SupportedUnit = null;
    this.Country = null;
    this.Region = null;
    this.Subregion = null;
    this.SpecialComGuidance = null;
    this.CriticalTimes = null;
    this.ExploitationRequirement = null;
    this.TargetList = null;
  }
  public static ISRCollectionRequirements_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return ISRCollectionRequirements_Full.GetRootAsISRCollectionRequirements_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    ISRCollectionRequirements_Full.FinishISRCollectionRequirements_FullBuffer(fbb, ISRCollectionRequirements_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class ISRCollectionRequirements_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Hash*/, false)
      && verifier.VerifyString(tablePos, 8 /*Type*/, false)
      && verifier.VerifyString(tablePos, 10 /*CridNumbers*/, false)
      && verifier.VerifyField(tablePos, 12 /*Priority*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 14 /*RecordId*/, false)
      && verifier.VerifyString(tablePos, 16 /*ReconSurvey*/, false)
      && verifier.VerifyString(tablePos, 18 /*IntelDiscipline*/, false)
      && verifier.VerifyField(tablePos, 20 /*Secondary*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 22 /*Emphasized*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 24 /*IsPrismCr*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 26 /*Start*/, false)
      && verifier.VerifyString(tablePos, 28 /*Stop*/, false)
      && verifier.VerifyString(tablePos, 30 /*Operation*/, false)
      && verifier.VerifyString(tablePos, 32 /*SupportedUnit*/, false)
      && verifier.VerifyString(tablePos, 34 /*Country*/, false)
      && verifier.VerifyString(tablePos, 36 /*Region*/, false)
      && verifier.VerifyString(tablePos, 38 /*Subregion*/, false)
      && verifier.VerifyString(tablePos, 40 /*SpecialComGuidance*/, false)
      && verifier.VerifyString(tablePos, 42 /*CriticalTimes*/, false)
      && verifier.VerifyString(tablePos, 44 /*ExploitationRequirement*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 46 /*TargetList*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
