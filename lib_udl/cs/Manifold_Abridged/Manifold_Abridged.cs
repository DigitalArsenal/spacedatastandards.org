// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// A manifold represents a set of possible/theoretical orbits for an object of interest based on a delta V and delta T.
public struct Manifold_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Manifold_Abridged GetRootAsManifold_Abridged(ByteBuffer _bb) { return GetRootAsManifold_Abridged(_bb, new Manifold_Abridged()); }
  public static Manifold_Abridged GetRootAsManifold_Abridged(ByteBuffer _bb, Manifold_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool Manifold_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "MANI"); }
  public static bool VerifyManifold_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("MANI", false, Manifold_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Manifold_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: MANIFOLD-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// ID of the parent object of interest.
  /// Example: /// Example: OBJECTOFINTEREST-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdObjectOfInterest { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdObjectOfInterestBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdObjectOfInterestBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdObjectOfInterestArray() { return __p.__vector_as_array<byte>(6); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(8); }
  /// Status of the manifold and its associated ManifoldElsets (e.g. PENDING, COMPLETE). PENDING status means element set generation is in progress and COMPLETE indicates all ManifoldElsets have been generated.
  /// Example: /// Example: PENDING
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Status { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStatusBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetStatusBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetStatusArray() { return __p.__vector_as_array<byte>(10); }
  /// Weight or probability of this manifold for prioritization purposes, between 0 and 1.
  /// Example: /// Example: 0.3
  /// Constraints: No constraints specified.
  public double Weight { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Applied delta V for this manifold's calculations, in km/sec.
  /// Example: /// Example: 10.23
  /// Constraints: No constraints specified.
  public double DeltaV { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Applied delta V duration for this manifold's calculations in seconds.
  /// Example: /// Example: 10.23
  /// Constraints: No constraints specified.
  public double DeltaT { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(18); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(20); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(22); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(24); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public Manifold_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(26); return o != 0 ? (Manifold_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Manifold_Abridged_dataMode_Enum.REAL; } }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(28); }

  public static Offset<Manifold_Abridged> CreateManifold_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idObjectOfInterestOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset statusOffset = default(StringOffset),
      double weight = 0.0,
      double deltaV = 0.0,
      double deltaT = 0.0,
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      Manifold_Abridged_dataMode_Enum dataMode = Manifold_Abridged_dataMode_Enum.REAL,
      StringOffset origNetworkOffset = default(StringOffset)) {
    builder.StartTable(13);
    Manifold_Abridged.AddDeltaT(builder, deltaT);
    Manifold_Abridged.AddDeltaV(builder, deltaV);
    Manifold_Abridged.AddWeight(builder, weight);
    Manifold_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    Manifold_Abridged.AddOrigin(builder, originOffset);
    Manifold_Abridged.AddSource(builder, sourceOffset);
    Manifold_Abridged.AddCreatedBy(builder, createdByOffset);
    Manifold_Abridged.AddCreatedAt(builder, createdAtOffset);
    Manifold_Abridged.AddStatus(builder, statusOffset);
    Manifold_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    Manifold_Abridged.AddIdObjectOfInterest(builder, idObjectOfInterestOffset);
    Manifold_Abridged.AddId(builder, idOffset);
    Manifold_Abridged.AddDataMode(builder, dataMode);
    return Manifold_Abridged.EndManifold_Abridged(builder);
  }

  public static void StartManifold_Abridged(FlatBufferBuilder builder) { builder.StartTable(13); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdObjectOfInterest(FlatBufferBuilder builder, StringOffset idObjectOfInterestOffset) { builder.AddOffset(1, idObjectOfInterestOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(2, classificationMarkingOffset.Value, 0); }
  public static void AddStatus(FlatBufferBuilder builder, StringOffset statusOffset) { builder.AddOffset(3, statusOffset.Value, 0); }
  public static void AddWeight(FlatBufferBuilder builder, double weight) { builder.AddDouble(4, weight, 0.0); }
  public static void AddDeltaV(FlatBufferBuilder builder, double deltaV) { builder.AddDouble(5, deltaV, 0.0); }
  public static void AddDeltaT(FlatBufferBuilder builder, double deltaT) { builder.AddDouble(6, deltaT, 0.0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(7, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(8, createdByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(9, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(10, originOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, Manifold_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(11, (sbyte)dataMode, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(12, origNetworkOffset.Value, 0); }
  public static Offset<Manifold_Abridged> EndManifold_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Manifold_Abridged>(o);
  }
  public static void FinishManifold_AbridgedBuffer(FlatBufferBuilder builder, Offset<Manifold_Abridged> offset) { builder.Finish(offset.Value, "MANI"); }
  public static void FinishSizePrefixedManifold_AbridgedBuffer(FlatBufferBuilder builder, Offset<Manifold_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "MANI"); }
  public Manifold_AbridgedT UnPack() {
    var _o = new Manifold_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Manifold_AbridgedT _o) {
    _o.Id = this.Id;
    _o.IdObjectOfInterest = this.IdObjectOfInterest;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.Status = this.Status;
    _o.Weight = this.Weight;
    _o.DeltaV = this.DeltaV;
    _o.DeltaT = this.DeltaT;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.DataMode = this.DataMode;
    _o.OrigNetwork = this.OrigNetwork;
  }
  public static Offset<Manifold_Abridged> Pack(FlatBufferBuilder builder, Manifold_AbridgedT _o) {
    if (_o == null) return default(Offset<Manifold_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idObjectOfInterest = _o.IdObjectOfInterest == null ? default(StringOffset) : builder.CreateString(_o.IdObjectOfInterest);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _status = _o.Status == null ? default(StringOffset) : builder.CreateString(_o.Status);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateManifold_Abridged(
      builder,
      _id,
      _idObjectOfInterest,
      _classificationMarking,
      _status,
      _o.Weight,
      _o.DeltaV,
      _o.DeltaT,
      _createdAt,
      _createdBy,
      _source,
      _origin,
      _o.DataMode,
      _origNetwork);
  }
}

public class Manifold_AbridgedT
{
  public string Id { get; set; }
  public string IdObjectOfInterest { get; set; }
  public string ClassificationMarking { get; set; }
  public string Status { get; set; }
  public double Weight { get; set; }
  public double DeltaV { get; set; }
  public double DeltaT { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public Manifold_Abridged_dataMode_Enum DataMode { get; set; }
  public string OrigNetwork { get; set; }

  public Manifold_AbridgedT() {
    this.Id = null;
    this.IdObjectOfInterest = null;
    this.ClassificationMarking = null;
    this.Status = null;
    this.Weight = 0.0;
    this.DeltaV = 0.0;
    this.DeltaT = 0.0;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.DataMode = Manifold_Abridged_dataMode_Enum.REAL;
    this.OrigNetwork = null;
  }
  public static Manifold_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return Manifold_Abridged.GetRootAsManifold_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Manifold_Abridged.FinishManifold_AbridgedBuffer(fbb, Manifold_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class Manifold_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdObjectOfInterest*/, false)
      && verifier.VerifyString(tablePos, 8 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 10 /*Status*/, false)
      && verifier.VerifyField(tablePos, 12 /*Weight*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 14 /*DeltaV*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 16 /*DeltaT*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 18 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 20 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 22 /*Source*/, false)
      && verifier.VerifyString(tablePos, 24 /*Origin*/, false)
      && verifier.VerifyField(tablePos, 26 /*DataMode*/, 1 /*Manifold_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 28 /*OrigNetwork*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
