// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// No description available.
public struct OnorbitAntenna_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static OnorbitAntenna_Abridged GetRootAsOnorbitAntenna_Abridged(ByteBuffer _bb) { return GetRootAsOnorbitAntenna_Abridged(_bb, new OnorbitAntenna_Abridged()); }
  public static OnorbitAntenna_Abridged GetRootAsOnorbitAntenna_Abridged(ByteBuffer _bb, OnorbitAntenna_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool OnorbitAntenna_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "ONOR"); }
  public static bool VerifyOnorbitAntenna_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("ONOR", false, OnorbitAntenna_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OnorbitAntenna_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: ONORBITANTENNA-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// ID of the on-orbit object.
  /// Example: /// Example: ONORBIT-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdOnOrbit { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdOnOrbitBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdOnOrbitBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdOnOrbitArray() { return __p.__vector_as_array<byte>(6); }
  /// ID of the antenna.
  /// Example: /// Example: ANTENNA-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdAntenna { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdAntennaBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetIdAntennaBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetIdAntennaArray() { return __p.__vector_as_array<byte>(8); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(10); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(12); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(14); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(16); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(18); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public OnorbitAntenna_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(20); return o != 0 ? (OnorbitAntenna_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : OnorbitAntenna_Abridged_dataMode_Enum.REAL; } }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string Antenna { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAntennaBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetAntennaBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetAntennaArray() { return __p.__vector_as_array<byte>(22); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: OPS1
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(24); }

  public static Offset<OnorbitAntenna_Abridged> CreateOnorbitAntenna_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idOnOrbitOffset = default(StringOffset),
      StringOffset idAntennaOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      OnorbitAntenna_Abridged_dataMode_Enum dataMode = OnorbitAntenna_Abridged_dataMode_Enum.REAL,
      StringOffset antennaOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset)) {
    builder.StartTable(11);
    OnorbitAntenna_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    OnorbitAntenna_Abridged.AddAntenna(builder, antennaOffset);
    OnorbitAntenna_Abridged.AddOrigin(builder, originOffset);
    OnorbitAntenna_Abridged.AddSource(builder, sourceOffset);
    OnorbitAntenna_Abridged.AddCreatedBy(builder, createdByOffset);
    OnorbitAntenna_Abridged.AddCreatedAt(builder, createdAtOffset);
    OnorbitAntenna_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    OnorbitAntenna_Abridged.AddIdAntenna(builder, idAntennaOffset);
    OnorbitAntenna_Abridged.AddIdOnOrbit(builder, idOnOrbitOffset);
    OnorbitAntenna_Abridged.AddId(builder, idOffset);
    OnorbitAntenna_Abridged.AddDataMode(builder, dataMode);
    return OnorbitAntenna_Abridged.EndOnorbitAntenna_Abridged(builder);
  }

  public static void StartOnorbitAntenna_Abridged(FlatBufferBuilder builder) { builder.StartTable(11); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdOnOrbit(FlatBufferBuilder builder, StringOffset idOnOrbitOffset) { builder.AddOffset(1, idOnOrbitOffset.Value, 0); }
  public static void AddIdAntenna(FlatBufferBuilder builder, StringOffset idAntennaOffset) { builder.AddOffset(2, idAntennaOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(3, classificationMarkingOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(4, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(5, createdByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(6, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(7, originOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, OnorbitAntenna_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(8, (sbyte)dataMode, 0); }
  public static void AddAntenna(FlatBufferBuilder builder, StringOffset antennaOffset) { builder.AddOffset(9, antennaOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(10, origNetworkOffset.Value, 0); }
  public static Offset<OnorbitAntenna_Abridged> EndOnorbitAntenna_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<OnorbitAntenna_Abridged>(o);
  }
  public static void FinishOnorbitAntenna_AbridgedBuffer(FlatBufferBuilder builder, Offset<OnorbitAntenna_Abridged> offset) { builder.Finish(offset.Value, "ONOR"); }
  public static void FinishSizePrefixedOnorbitAntenna_AbridgedBuffer(FlatBufferBuilder builder, Offset<OnorbitAntenna_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "ONOR"); }
  public OnorbitAntenna_AbridgedT UnPack() {
    var _o = new OnorbitAntenna_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(OnorbitAntenna_AbridgedT _o) {
    _o.Id = this.Id;
    _o.IdOnOrbit = this.IdOnOrbit;
    _o.IdAntenna = this.IdAntenna;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.DataMode = this.DataMode;
    _o.Antenna = this.Antenna;
    _o.OrigNetwork = this.OrigNetwork;
  }
  public static Offset<OnorbitAntenna_Abridged> Pack(FlatBufferBuilder builder, OnorbitAntenna_AbridgedT _o) {
    if (_o == null) return default(Offset<OnorbitAntenna_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idOnOrbit = _o.IdOnOrbit == null ? default(StringOffset) : builder.CreateString(_o.IdOnOrbit);
    var _idAntenna = _o.IdAntenna == null ? default(StringOffset) : builder.CreateString(_o.IdAntenna);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _antenna = _o.Antenna == null ? default(StringOffset) : builder.CreateString(_o.Antenna);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    return CreateOnorbitAntenna_Abridged(
      builder,
      _id,
      _idOnOrbit,
      _idAntenna,
      _classificationMarking,
      _createdAt,
      _createdBy,
      _source,
      _origin,
      _o.DataMode,
      _antenna,
      _origNetwork);
  }
}

public class OnorbitAntenna_AbridgedT
{
  public string Id { get; set; }
  public string IdOnOrbit { get; set; }
  public string IdAntenna { get; set; }
  public string ClassificationMarking { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public OnorbitAntenna_Abridged_dataMode_Enum DataMode { get; set; }
  public string Antenna { get; set; }
  public string OrigNetwork { get; set; }

  public OnorbitAntenna_AbridgedT() {
    this.Id = null;
    this.IdOnOrbit = null;
    this.IdAntenna = null;
    this.ClassificationMarking = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.DataMode = OnorbitAntenna_Abridged_dataMode_Enum.REAL;
    this.Antenna = null;
    this.OrigNetwork = null;
  }
  public static OnorbitAntenna_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return OnorbitAntenna_Abridged.GetRootAsOnorbitAntenna_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    OnorbitAntenna_Abridged.FinishOnorbitAntenna_AbridgedBuffer(fbb, OnorbitAntenna_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class OnorbitAntenna_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdOnOrbit*/, false)
      && verifier.VerifyString(tablePos, 8 /*IdAntenna*/, false)
      && verifier.VerifyString(tablePos, 10 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 12 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 14 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 16 /*Source*/, false)
      && verifier.VerifyString(tablePos, 18 /*Origin*/, false)
      && verifier.VerifyField(tablePos, 20 /*DataMode*/, 1 /*OnorbitAntenna_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 22 /*Antenna*/, false)
      && verifier.VerifyString(tablePos, 24 /*OrigNetwork*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
