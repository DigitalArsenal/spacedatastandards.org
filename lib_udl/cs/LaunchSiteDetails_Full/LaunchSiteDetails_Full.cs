// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Model representation of details compiled/collected on a launch site by a particular source. A launch site may have several details records.
public struct LaunchSiteDetails_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static LaunchSiteDetails_Full GetRootAsLaunchSiteDetails_Full(ByteBuffer _bb) { return GetRootAsLaunchSiteDetails_Full(_bb, new LaunchSiteDetails_Full()); }
  public static LaunchSiteDetails_Full GetRootAsLaunchSiteDetails_Full(ByteBuffer _bb, LaunchSiteDetails_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool LaunchSiteDetails_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "LAUN"); }
  public static bool VerifyLaunchSiteDetails_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("LAUN", false, LaunchSiteDetails_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public LaunchSiteDetails_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: LAUNCHSITEDETAILS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Identifier of the parent launch site record.
  /// Example: /// Example: LAUNCHSITE-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string IdLaunchSite { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdLaunchSiteBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdLaunchSiteBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdLaunchSiteArray() { return __p.__vector_as_array<byte>(6); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(8); }
  /// ID of the location data for the launch site, or null if mobile (e.g. sea launch platform in international waters).
  /// Example: /// Example: LOCATION-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdLocation { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdLocationBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetIdLocationBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIdLocationArray() { return __p.__vector_as_array<byte>(10); }
  /// Launch site group name. Multiple launch sites may be colocated within a launch ''group''.
  /// Example: /// Example: Example-group-name
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchGroup { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchGroupBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetLaunchGroupBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetLaunchGroupArray() { return __p.__vector_as_array<byte>(12); }
  /// Array of supported launch inclinations known for this site. The array is always sized as a multiple of two and includes start/end values to support ranges.  For example, if a site support inclinations of 10 and 12-14, the array would have the following values: [10,10, 12,14].
  /// Example: /// Example: [10.23, 10.23, 12.23, 14.23]
  /// Constraints: No constraints specified.
  public string AvailableInclinations(int j) { int o = __p.__offset(14); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int AvailableInclinationsLength { get { int o = __p.__offset(14); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// Notes/description of the launch site.
  /// Example: /// Example: Example notes
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string Description { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(16); }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(18); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(18, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(18); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(18); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(20); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(20, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(20); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(20); }
  /// Time the row was last updated in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string UpdatedAt { get { int o = __p.__offset(22); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedAtBytes() { return __p.__vector_as_span<byte>(22, 1); }
#else
  public ArraySegment<byte>? GetUpdatedAtBytes() { return __p.__vector_as_arraysegment(22); }
#endif
  public byte[] GetUpdatedAtArray() { return __p.__vector_as_array<byte>(22); }
  /// Application user who updated the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string UpdatedBy { get { int o = __p.__offset(24); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetUpdatedByBytes() { return __p.__vector_as_span<byte>(24, 1); }
#else
  public ArraySegment<byte>? GetUpdatedByBytes() { return __p.__vector_as_arraysegment(24); }
#endif
  public byte[] GetUpdatedByArray() { return __p.__vector_as_array<byte>(24); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(26); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(28); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(30); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(30, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(30); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(30); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public LaunchSiteDetails_Full_dataMode_Enum DataMode { get { int o = __p.__offset(32); return o != 0 ? (LaunchSiteDetails_Full_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : LaunchSiteDetails_Full_dataMode_Enum.REAL; } }
  /// Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
  /// Example: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
  /// Constraints: No constraints specified.
  public string Tags(int j) { int o = __p.__offset(34); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int TagsLength { get { int o = __p.__offset(34); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string Location { get { int o = __p.__offset(36); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLocationBytes() { return __p.__vector_as_span<byte>(36, 1); }
#else
  public ArraySegment<byte>? GetLocationBytes() { return __p.__vector_as_arraysegment(36); }
#endif
  public byte[] GetLocationArray() { return __p.__vector_as_array<byte>(36); }

  public static Offset<LaunchSiteDetails_Full> CreateLaunchSiteDetails_Full(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idLaunchSiteOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idLocationOffset = default(StringOffset),
      StringOffset launchGroupOffset = default(StringOffset),
      VectorOffset availableInclinationsOffset = default(VectorOffset),
      StringOffset descriptionOffset = default(StringOffset),
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset),
      StringOffset updatedAtOffset = default(StringOffset),
      StringOffset updatedByOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      LaunchSiteDetails_Full_dataMode_Enum dataMode = LaunchSiteDetails_Full_dataMode_Enum.REAL,
      VectorOffset tagsOffset = default(VectorOffset),
      StringOffset locationOffset = default(StringOffset)) {
    builder.StartTable(17);
    LaunchSiteDetails_Full.AddLocation(builder, locationOffset);
    LaunchSiteDetails_Full.AddTags(builder, tagsOffset);
    LaunchSiteDetails_Full.AddOrigNetwork(builder, origNetworkOffset);
    LaunchSiteDetails_Full.AddOrigin(builder, originOffset);
    LaunchSiteDetails_Full.AddSource(builder, sourceOffset);
    LaunchSiteDetails_Full.AddUpdatedBy(builder, updatedByOffset);
    LaunchSiteDetails_Full.AddUpdatedAt(builder, updatedAtOffset);
    LaunchSiteDetails_Full.AddCreatedBy(builder, createdByOffset);
    LaunchSiteDetails_Full.AddCreatedAt(builder, createdAtOffset);
    LaunchSiteDetails_Full.AddDescription(builder, descriptionOffset);
    LaunchSiteDetails_Full.AddAvailableInclinations(builder, availableInclinationsOffset);
    LaunchSiteDetails_Full.AddLaunchGroup(builder, launchGroupOffset);
    LaunchSiteDetails_Full.AddIdLocation(builder, idLocationOffset);
    LaunchSiteDetails_Full.AddClassificationMarking(builder, classificationMarkingOffset);
    LaunchSiteDetails_Full.AddIdLaunchSite(builder, idLaunchSiteOffset);
    LaunchSiteDetails_Full.AddId(builder, idOffset);
    LaunchSiteDetails_Full.AddDataMode(builder, dataMode);
    return LaunchSiteDetails_Full.EndLaunchSiteDetails_Full(builder);
  }

  public static void StartLaunchSiteDetails_Full(FlatBufferBuilder builder) { builder.StartTable(17); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdLaunchSite(FlatBufferBuilder builder, StringOffset idLaunchSiteOffset) { builder.AddOffset(1, idLaunchSiteOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(2, classificationMarkingOffset.Value, 0); }
  public static void AddIdLocation(FlatBufferBuilder builder, StringOffset idLocationOffset) { builder.AddOffset(3, idLocationOffset.Value, 0); }
  public static void AddLaunchGroup(FlatBufferBuilder builder, StringOffset launchGroupOffset) { builder.AddOffset(4, launchGroupOffset.Value, 0); }
  public static void AddAvailableInclinations(FlatBufferBuilder builder, VectorOffset availableInclinationsOffset) { builder.AddOffset(5, availableInclinationsOffset.Value, 0); }
  public static VectorOffset CreateAvailableInclinationsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAvailableInclinationsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAvailableInclinationsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAvailableInclinationsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAvailableInclinationsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(6, descriptionOffset.Value, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(7, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(8, createdByOffset.Value, 0); }
  public static void AddUpdatedAt(FlatBufferBuilder builder, StringOffset updatedAtOffset) { builder.AddOffset(9, updatedAtOffset.Value, 0); }
  public static void AddUpdatedBy(FlatBufferBuilder builder, StringOffset updatedByOffset) { builder.AddOffset(10, updatedByOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(11, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(12, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(13, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, LaunchSiteDetails_Full_dataMode_Enum dataMode) { builder.AddSbyte(14, (sbyte)dataMode, 0); }
  public static void AddTags(FlatBufferBuilder builder, VectorOffset tagsOffset) { builder.AddOffset(15, tagsOffset.Value, 0); }
  public static VectorOffset CreateTagsVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateTagsVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartTagsVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddLocation(FlatBufferBuilder builder, StringOffset locationOffset) { builder.AddOffset(16, locationOffset.Value, 0); }
  public static Offset<LaunchSiteDetails_Full> EndLaunchSiteDetails_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<LaunchSiteDetails_Full>(o);
  }
  public static void FinishLaunchSiteDetails_FullBuffer(FlatBufferBuilder builder, Offset<LaunchSiteDetails_Full> offset) { builder.Finish(offset.Value, "LAUN"); }
  public static void FinishSizePrefixedLaunchSiteDetails_FullBuffer(FlatBufferBuilder builder, Offset<LaunchSiteDetails_Full> offset) { builder.FinishSizePrefixed(offset.Value, "LAUN"); }
  public LaunchSiteDetails_FullT UnPack() {
    var _o = new LaunchSiteDetails_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(LaunchSiteDetails_FullT _o) {
    _o.Id = this.Id;
    _o.IdLaunchSite = this.IdLaunchSite;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdLocation = this.IdLocation;
    _o.LaunchGroup = this.LaunchGroup;
    _o.AvailableInclinations = new List<string>();
    for (var _j = 0; _j < this.AvailableInclinationsLength; ++_j) {_o.AvailableInclinations.Add(this.AvailableInclinations(_j));}
    _o.Description = this.Description;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
    _o.UpdatedAt = this.UpdatedAt;
    _o.UpdatedBy = this.UpdatedBy;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
    _o.Tags = new List<string>();
    for (var _j = 0; _j < this.TagsLength; ++_j) {_o.Tags.Add(this.Tags(_j));}
    _o.Location = this.Location;
  }
  public static Offset<LaunchSiteDetails_Full> Pack(FlatBufferBuilder builder, LaunchSiteDetails_FullT _o) {
    if (_o == null) return default(Offset<LaunchSiteDetails_Full>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idLaunchSite = _o.IdLaunchSite == null ? default(StringOffset) : builder.CreateString(_o.IdLaunchSite);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idLocation = _o.IdLocation == null ? default(StringOffset) : builder.CreateString(_o.IdLocation);
    var _launchGroup = _o.LaunchGroup == null ? default(StringOffset) : builder.CreateString(_o.LaunchGroup);
    var _availableInclinations = default(VectorOffset);
    if (_o.AvailableInclinations != null) {
      var __availableInclinations = new StringOffset[_o.AvailableInclinations.Count];
      for (var _j = 0; _j < __availableInclinations.Length; ++_j) { __availableInclinations[_j] = builder.CreateString(_o.AvailableInclinations[_j]); }
      _availableInclinations = CreateAvailableInclinationsVector(builder, __availableInclinations);
    }
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    var _updatedAt = _o.UpdatedAt == null ? default(StringOffset) : builder.CreateString(_o.UpdatedAt);
    var _updatedBy = _o.UpdatedBy == null ? default(StringOffset) : builder.CreateString(_o.UpdatedBy);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _tags = default(VectorOffset);
    if (_o.Tags != null) {
      var __tags = new StringOffset[_o.Tags.Count];
      for (var _j = 0; _j < __tags.Length; ++_j) { __tags[_j] = builder.CreateString(_o.Tags[_j]); }
      _tags = CreateTagsVector(builder, __tags);
    }
    var _location = _o.Location == null ? default(StringOffset) : builder.CreateString(_o.Location);
    return CreateLaunchSiteDetails_Full(
      builder,
      _id,
      _idLaunchSite,
      _classificationMarking,
      _idLocation,
      _launchGroup,
      _availableInclinations,
      _description,
      _createdAt,
      _createdBy,
      _updatedAt,
      _updatedBy,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode,
      _tags,
      _location);
  }
}

public class LaunchSiteDetails_FullT
{
  public string Id { get; set; }
  public string IdLaunchSite { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdLocation { get; set; }
  public string LaunchGroup { get; set; }
  public List<string> AvailableInclinations { get; set; }
  public string Description { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }
  public string UpdatedAt { get; set; }
  public string UpdatedBy { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public LaunchSiteDetails_Full_dataMode_Enum DataMode { get; set; }
  public List<string> Tags { get; set; }
  public string Location { get; set; }

  public LaunchSiteDetails_FullT() {
    this.Id = null;
    this.IdLaunchSite = null;
    this.ClassificationMarking = null;
    this.IdLocation = null;
    this.LaunchGroup = null;
    this.AvailableInclinations = null;
    this.Description = null;
    this.CreatedAt = null;
    this.CreatedBy = null;
    this.UpdatedAt = null;
    this.UpdatedBy = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = LaunchSiteDetails_Full_dataMode_Enum.REAL;
    this.Tags = null;
    this.Location = null;
  }
  public static LaunchSiteDetails_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return LaunchSiteDetails_Full.GetRootAsLaunchSiteDetails_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    LaunchSiteDetails_Full.FinishLaunchSiteDetails_FullBuffer(fbb, LaunchSiteDetails_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class LaunchSiteDetails_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdLaunchSite*/, false)
      && verifier.VerifyString(tablePos, 8 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 10 /*IdLocation*/, false)
      && verifier.VerifyString(tablePos, 12 /*LaunchGroup*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 14 /*AvailableInclinations*/, false)
      && verifier.VerifyString(tablePos, 16 /*Description*/, false)
      && verifier.VerifyString(tablePos, 18 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 20 /*CreatedBy*/, false)
      && verifier.VerifyString(tablePos, 22 /*UpdatedAt*/, false)
      && verifier.VerifyString(tablePos, 24 /*UpdatedBy*/, false)
      && verifier.VerifyString(tablePos, 26 /*Source*/, false)
      && verifier.VerifyString(tablePos, 28 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 30 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 32 /*DataMode*/, 1 /*LaunchSiteDetails_Full_dataMode_Enum*/, 1, false)
      && verifier.VerifyVectorOfStrings(tablePos, 34 /*Tags*/, false)
      && verifier.VerifyString(tablePos, 36 /*Location*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
