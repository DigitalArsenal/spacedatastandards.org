// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Parameters of the constant-scale-height Chapman layer.
public struct IonoObservationDensityProfileTopsideExtensionChapmanConst_Full : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static IonoObservationDensityProfileTopsideExtensionChapmanConst_Full GetRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(ByteBuffer _bb) { return GetRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(_bb, new IonoObservationDensityProfileTopsideExtensionChapmanConst_Full()); }
  public static IonoObservationDensityProfileTopsideExtensionChapmanConst_Full GetRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(ByteBuffer _bb, IonoObservationDensityProfileTopsideExtensionChapmanConst_Full obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool IonoObservationDensityProfileTopsideExtensionChapmanConst_FullBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "IONO"); }
  public static bool VerifyIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("IONO", false, IonoObservationDensityProfileTopsideExtensionChapmanConst_FullVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public IonoObservationDensityProfileTopsideExtensionChapmanConst_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Description of the Chapman computation technique.
  /// Example: /// Example: Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height.
  /// Constraints: No constraints specified.
  public string Description { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(4); }
  /// Peak density of F2 layer, in grams per cubic centimeter.
  /// Example: /// Example: 313283.1
  /// Constraints: No constraints specified.
  public double NmF2 { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Peak height of F2 layer, in kilometers.
  /// Example: /// Example: 265.42
  /// Constraints: No constraints specified.
  public double HmF2 { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Scale height if F2 layer at the peak, in kilometers.
  /// Example: /// Example: 45.191
  /// Constraints: No constraints specified.
  public double ScaleF2 { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
  /// Example: /// Example: 35.1
  /// Constraints: No constraints specified.
  public double Chi { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }

  public static Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full> CreateIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(FlatBufferBuilder builder,
      StringOffset descriptionOffset = default(StringOffset),
      double nmF2 = 0.0,
      double hmF2 = 0.0,
      double scaleF2 = 0.0,
      double chi = 0.0) {
    builder.StartTable(5);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.AddChi(builder, chi);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.AddScaleF2(builder, scaleF2);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.AddHmF2(builder, hmF2);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.AddNmF2(builder, nmF2);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.AddDescription(builder, descriptionOffset);
    return IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.EndIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(builder);
  }

  public static void StartIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(0, descriptionOffset.Value, 0); }
  public static void AddNmF2(FlatBufferBuilder builder, double nmF2) { builder.AddDouble(1, nmF2, 0.0); }
  public static void AddHmF2(FlatBufferBuilder builder, double hmF2) { builder.AddDouble(2, hmF2, 0.0); }
  public static void AddScaleF2(FlatBufferBuilder builder, double scaleF2) { builder.AddDouble(3, scaleF2, 0.0); }
  public static void AddChi(FlatBufferBuilder builder, double chi) { builder.AddDouble(4, chi, 0.0); }
  public static Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full> EndIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full>(o);
  }
  public static void FinishIonoObservationDensityProfileTopsideExtensionChapmanConst_FullBuffer(FlatBufferBuilder builder, Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full> offset) { builder.Finish(offset.Value, "IONO"); }
  public static void FinishSizePrefixedIonoObservationDensityProfileTopsideExtensionChapmanConst_FullBuffer(FlatBufferBuilder builder, Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full> offset) { builder.FinishSizePrefixed(offset.Value, "IONO"); }
  public IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT UnPack() {
    var _o = new IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT _o) {
    _o.Description = this.Description;
    _o.NmF2 = this.NmF2;
    _o.HmF2 = this.HmF2;
    _o.ScaleF2 = this.ScaleF2;
    _o.Chi = this.Chi;
  }
  public static Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full> Pack(FlatBufferBuilder builder, IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT _o) {
    if (_o == null) return default(Offset<IonoObservationDensityProfileTopsideExtensionChapmanConst_Full>);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    return CreateIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(
      builder,
      _description,
      _o.NmF2,
      _o.HmF2,
      _o.ScaleF2,
      _o.Chi);
  }
}

public class IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT
{
  public string Description { get; set; }
  public double NmF2 { get; set; }
  public double HmF2 { get; set; }
  public double ScaleF2 { get; set; }
  public double Chi { get; set; }

  public IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT() {
    this.Description = null;
    this.NmF2 = 0.0;
    this.HmF2 = 0.0;
    this.ScaleF2 = 0.0;
    this.Chi = 0.0;
  }
  public static IonoObservationDensityProfileTopsideExtensionChapmanConst_FullT DeserializeFromBinary(byte[] fbBuffer) {
    return IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.GetRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Full(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.FinishIonoObservationDensityProfileTopsideExtensionChapmanConst_FullBuffer(fbb, IonoObservationDensityProfileTopsideExtensionChapmanConst_Full.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class IonoObservationDensityProfileTopsideExtensionChapmanConst_FullVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Description*/, false)
      && verifier.VerifyField(tablePos, 6 /*NmF2*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 8 /*HmF2*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 10 /*ScaleF2*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 12 /*Chi*/, 8 /*double*/, 8, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
