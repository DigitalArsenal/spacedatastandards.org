// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// A bus is the physical and software infrastructure backbone to which on-orbit satellite payloads are attached for power, control, and other support functions.
public struct Bus_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static Bus_Abridged GetRootAsBus_Abridged(ByteBuffer _bb) { return GetRootAsBus_Abridged(_bb, new Bus_Abridged()); }
  public static Bus_Abridged GetRootAsBus_Abridged(ByteBuffer _bb, Bus_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool Bus_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "BUSA"); }
  public static bool VerifyBus_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("BUSA", false, Bus_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Bus_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: BUS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// Name of this bus.
  /// Example: /// Example: Example name
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(8); }
  /// ID of the parent entity for this bus.
  /// Example: /// Example: 0167f577-e06c-358e-85aa-0a07a730bdd0
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdEntity { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdEntityBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetIdEntityBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetIdEntityArray() { return __p.__vector_as_array<byte>(10); }
  /// Type of this bus.
  /// Example: /// Example: Example type
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Type { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTypeBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetTypeBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetTypeArray() { return __p.__vector_as_array<byte>(12); }
  /// Maximum mass at launch, lower bounds, in kilograms.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxLaunchMassLower { get { int o = __p.__offset(14); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum mass at launch, upper bounds, in kilograms.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxLaunchMassUpper { get { int o = __p.__offset(16); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum mass on station at beginning of life, in kilograms.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxBOLStationMass { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Average mass available on this bus for payloads, in kilograms.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double AvgPayloadMass { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum payload mass available, in kilograms.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxPayloadMass { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Minimum mass of this bus without payloads or fuel, in kilograms.
  /// Example: /// Example: 2858.1
  /// Constraints: No constraints specified.
  public double MinDryMass { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Average mass of this bus without payloads or fuel, in kilograms.
  /// Example: /// Example: 2879.1
  /// Constraints: No constraints specified.
  public double AvgDryMass { get { int o = __p.__offset(26); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Median mass of this bus without payloads or fuel, in kilograms.
  /// Example: /// Example: 2950.1
  /// Constraints: No constraints specified.
  public double MedianDryMass { get { int o = __p.__offset(28); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum mass of this bus without payloads or fuel, in kilograms.
  /// Example: /// Example: 2900.1
  /// Constraints: No constraints specified.
  public double MaxDryMass { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Minimum mass of this bus with fuel, but without payloads, in kilograms.
  /// Example: /// Example: 5192.1
  /// Constraints: No constraints specified.
  public double MinWetMass { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Average mass of this bus with fuel, but without payloads, in kilograms.
  /// Example: /// Example: 5246.1
  /// Constraints: No constraints specified.
  public double AvgWetMass { get { int o = __p.__offset(34); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Median mass of this bus with fuel, but without payloads, in kilograms.
  /// Example: /// Example: 5260.1
  /// Constraints: No constraints specified.
  public double MedianWetMass { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum mass of this bus with fuel, but without payloads, in kilograms.
  /// Example: /// Example: 5300.0
  /// Constraints: No constraints specified.
  public double MaxWetMass { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum power at beginning of life, lower bounds, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxBOLPowerLower { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum power at beginning of life, upper bounds, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxBOLPowerUpper { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum power at end of life, lower bounds, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxEOLPowerLower { get { int o = __p.__offset(44); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum power at end of life, upper bounds, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxEOLPowerUpper { get { int o = __p.__offset(46); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Average power available on this bus, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double AvgSpacecraftPower { get { int o = __p.__offset(48); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum power available on this bus, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxSpacecraftPower { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Orbit averaged power (the power averaged over one orbit) available on this bus, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double OapSpacecraftPower { get { int o = __p.__offset(52); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Average power available on this bus for payloads, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double AvgPayloadPower { get { int o = __p.__offset(54); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Maximum payload power available, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double MaxPayloadPower { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Orbit averaged power (the power averaged over one orbit) available on this bus for payloads, in kilowatts.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double OapPayloadPower { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Body dimension in X direction pertaining to length, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double BodyDimensionX { get { int o = __p.__offset(60); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Body dimension in Y direction pertaining to height, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double BodyDimensionY { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Body dimension in Z direction pertaining to width, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double BodyDimensionZ { get { int o = __p.__offset(64); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The radial dimension available on this bus for payloads, in meters.
  /// Example: /// Example: 1.1
  /// Constraints: No constraints specified.
  public double PayloadDimensionX { get { int o = __p.__offset(66); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The in-track dimension available on this bus for payloads, in meters.
  /// Example: /// Example: 1.1
  /// Constraints: No constraints specified.
  public double PayloadDimensionY { get { int o = __p.__offset(68); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The cross-track dimension available on this bus for payloads, in meters.
  /// Example: /// Example: 1.1
  /// Constraints: No constraints specified.
  public double PayloadDimensionZ { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The volume available on this bus for payloads, in cubic meters.
  /// Example: /// Example: 1.1
  /// Constraints: No constraints specified.
  public double PayloadVolume { get { int o = __p.__offset(72); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Launch envelope dimension in X direction, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double LaunchEnvelopeDimensionX { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Launch envelope dimension in Y direction, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double LaunchEnvelopeDimensionY { get { int o = __p.__offset(76); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Launch envelope dimension in Z direction, in meters.
  /// Example: /// Example: 10.1
  /// Constraints: No constraints specified.
  public double LaunchEnvelopeDimensionZ { get { int o = __p.__offset(78); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// The number of orbit types this bus can support.
  /// Example: /// Example: 3
  /// Constraints: No constraints specified.
  public int NumOrbitType { get { int o = __p.__offset(80); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Unique identifier of the organization which manufactures the telemetry tracking and command subsystem for this bus.
  /// Example: /// Example: TELEMETRYTRACKINGMANUFACTURERORG-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string TelemetryTrackingManufacturerOrgId { get { int o = __p.__offset(82); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetTelemetryTrackingManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(82, 1); }
#else
  public ArraySegment<byte>? GetTelemetryTrackingManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(82); }
#endif
  public byte[] GetTelemetryTrackingManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(82); }
  /// Unique identifier of the organization which manufactures the main onboard computer for this bus.
  /// Example: /// Example: MAINCOMPUTERMANUFACTURERORG-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string MainComputerManufacturerOrgId { get { int o = __p.__offset(84); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMainComputerManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(84, 1); }
#else
  public ArraySegment<byte>? GetMainComputerManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(84); }
#endif
  public byte[] GetMainComputerManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(84); }
  /// Unique identifier of the organization which manufactures this bus.
  /// Example: /// Example: MANUFACTURERORG-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string ManufacturerOrgId { get { int o = __p.__offset(86); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(86, 1); }
#else
  public ArraySegment<byte>? GetManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(86); }
#endif
  public byte[] GetManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(86); }
  /// Unique identifier of the organization which designs the bus kit.
  /// Example: /// Example: BUSKITDESIGNERORG-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string BusKitDesignerOrgId { get { int o = __p.__offset(88); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBusKitDesignerOrgIdBytes() { return __p.__vector_as_span<byte>(88, 1); }
#else
  public ArraySegment<byte>? GetBusKitDesignerOrgIdBytes() { return __p.__vector_as_arraysegment(88); }
#endif
  public byte[] GetBusKitDesignerOrgIdArray() { return __p.__vector_as_array<byte>(88); }
  /// Country where this bus was manufactured. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.
  /// Example: /// Example: US
  /// Constraints: Minimum length = 0, Maximum length = 4
  public string CountryCode { get { int o = __p.__offset(90); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCountryCodeBytes() { return __p.__vector_as_span<byte>(90, 1); }
#else
  public ArraySegment<byte>? GetCountryCodeBytes() { return __p.__vector_as_arraysegment(90); }
#endif
  public byte[] GetCountryCodeArray() { return __p.__vector_as_array<byte>(90); }
  /// Mass category of this bus (e.g. 1 - 10 kg: Nanosatellite, 10 - 100 kg: Microsatellite, 100 - 500 kg: Minisatellite, 1000 - 2500kg: Medium satellite, etc.).
  /// Example: /// Example: Nanosatellite
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string MassCategory { get { int o = __p.__offset(92); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMassCategoryBytes() { return __p.__vector_as_span<byte>(92, 1); }
#else
  public ArraySegment<byte>? GetMassCategoryBytes() { return __p.__vector_as_arraysegment(92); }
#endif
  public byte[] GetMassCategoryArray() { return __p.__vector_as_array<byte>(92); }
  /// Power category of this bus (e.g. 0-1kW low power, etc).
  /// Example: /// Example: low power
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string PowerCategory { get { int o = __p.__offset(94); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPowerCategoryBytes() { return __p.__vector_as_span<byte>(94, 1); }
#else
  public ArraySegment<byte>? GetPowerCategoryBytes() { return __p.__vector_as_arraysegment(94); }
#endif
  public byte[] GetPowerCategoryArray() { return __p.__vector_as_array<byte>(94); }
  /// Boolean indicating if this bus is generic.
  /// Example: /// Example: False
  /// Constraints: No constraints specified.
  public bool Generic { get { int o = __p.__offset(96); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Notes/description of the bus.
  /// Example: /// Example: Dedicated small spacecraft bus.
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Description { get { int o = __p.__offset(98); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(98, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(98); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(98); }
  /// Attitude and Orbital Control Notes/description for the bus.
  /// Example: /// Example: Example notes
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string AocsNotes { get { int o = __p.__offset(100); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAocsNotesBytes() { return __p.__vector_as_span<byte>(100, 1); }
#else
  public ArraySegment<byte>? GetAocsNotesBytes() { return __p.__vector_as_arraysegment(100); }
#endif
  public byte[] GetAocsNotesArray() { return __p.__vector_as_array<byte>(100); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(102); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(102, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(102); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(102); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(104); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(104, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(104); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(104); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(106); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(106, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(106); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(106); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public Bus_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(108); return o != 0 ? (Bus_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : Bus_Abridged_dataMode_Enum.REAL; } }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(110); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(110, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(110); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(110); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(112); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(112, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(112); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(112); }

  public static Offset<Bus_Abridged> CreateBus_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset idEntityOffset = default(StringOffset),
      StringOffset typeOffset = default(StringOffset),
      double maxLaunchMassLower = 0.0,
      double maxLaunchMassUpper = 0.0,
      double maxBOLStationMass = 0.0,
      double avgPayloadMass = 0.0,
      double maxPayloadMass = 0.0,
      double minDryMass = 0.0,
      double avgDryMass = 0.0,
      double medianDryMass = 0.0,
      double maxDryMass = 0.0,
      double minWetMass = 0.0,
      double avgWetMass = 0.0,
      double medianWetMass = 0.0,
      double maxWetMass = 0.0,
      double maxBOLPowerLower = 0.0,
      double maxBOLPowerUpper = 0.0,
      double maxEOLPowerLower = 0.0,
      double maxEOLPowerUpper = 0.0,
      double avgSpacecraftPower = 0.0,
      double maxSpacecraftPower = 0.0,
      double oapSpacecraftPower = 0.0,
      double avgPayloadPower = 0.0,
      double maxPayloadPower = 0.0,
      double oapPayloadPower = 0.0,
      double bodyDimensionX = 0.0,
      double bodyDimensionY = 0.0,
      double bodyDimensionZ = 0.0,
      double payloadDimensionX = 0.0,
      double payloadDimensionY = 0.0,
      double payloadDimensionZ = 0.0,
      double payloadVolume = 0.0,
      double launchEnvelopeDimensionX = 0.0,
      double launchEnvelopeDimensionY = 0.0,
      double launchEnvelopeDimensionZ = 0.0,
      int numOrbitType = 0,
      StringOffset telemetryTrackingManufacturerOrgIdOffset = default(StringOffset),
      StringOffset mainComputerManufacturerOrgIdOffset = default(StringOffset),
      StringOffset manufacturerOrgIdOffset = default(StringOffset),
      StringOffset busKitDesignerOrgIdOffset = default(StringOffset),
      StringOffset countryCodeOffset = default(StringOffset),
      StringOffset massCategoryOffset = default(StringOffset),
      StringOffset powerCategoryOffset = default(StringOffset),
      bool generic = false,
      StringOffset descriptionOffset = default(StringOffset),
      StringOffset aocsNotesOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      Bus_Abridged_dataMode_Enum dataMode = Bus_Abridged_dataMode_Enum.REAL,
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset)) {
    builder.StartTable(55);
    Bus_Abridged.AddLaunchEnvelopeDimensionZ(builder, launchEnvelopeDimensionZ);
    Bus_Abridged.AddLaunchEnvelopeDimensionY(builder, launchEnvelopeDimensionY);
    Bus_Abridged.AddLaunchEnvelopeDimensionX(builder, launchEnvelopeDimensionX);
    Bus_Abridged.AddPayloadVolume(builder, payloadVolume);
    Bus_Abridged.AddPayloadDimensionZ(builder, payloadDimensionZ);
    Bus_Abridged.AddPayloadDimensionY(builder, payloadDimensionY);
    Bus_Abridged.AddPayloadDimensionX(builder, payloadDimensionX);
    Bus_Abridged.AddBodyDimensionZ(builder, bodyDimensionZ);
    Bus_Abridged.AddBodyDimensionY(builder, bodyDimensionY);
    Bus_Abridged.AddBodyDimensionX(builder, bodyDimensionX);
    Bus_Abridged.AddOapPayloadPower(builder, oapPayloadPower);
    Bus_Abridged.AddMaxPayloadPower(builder, maxPayloadPower);
    Bus_Abridged.AddAvgPayloadPower(builder, avgPayloadPower);
    Bus_Abridged.AddOapSpacecraftPower(builder, oapSpacecraftPower);
    Bus_Abridged.AddMaxSpacecraftPower(builder, maxSpacecraftPower);
    Bus_Abridged.AddAvgSpacecraftPower(builder, avgSpacecraftPower);
    Bus_Abridged.AddMaxEOLPowerUpper(builder, maxEOLPowerUpper);
    Bus_Abridged.AddMaxEOLPowerLower(builder, maxEOLPowerLower);
    Bus_Abridged.AddMaxBOLPowerUpper(builder, maxBOLPowerUpper);
    Bus_Abridged.AddMaxBOLPowerLower(builder, maxBOLPowerLower);
    Bus_Abridged.AddMaxWetMass(builder, maxWetMass);
    Bus_Abridged.AddMedianWetMass(builder, medianWetMass);
    Bus_Abridged.AddAvgWetMass(builder, avgWetMass);
    Bus_Abridged.AddMinWetMass(builder, minWetMass);
    Bus_Abridged.AddMaxDryMass(builder, maxDryMass);
    Bus_Abridged.AddMedianDryMass(builder, medianDryMass);
    Bus_Abridged.AddAvgDryMass(builder, avgDryMass);
    Bus_Abridged.AddMinDryMass(builder, minDryMass);
    Bus_Abridged.AddMaxPayloadMass(builder, maxPayloadMass);
    Bus_Abridged.AddAvgPayloadMass(builder, avgPayloadMass);
    Bus_Abridged.AddMaxBOLStationMass(builder, maxBOLStationMass);
    Bus_Abridged.AddMaxLaunchMassUpper(builder, maxLaunchMassUpper);
    Bus_Abridged.AddMaxLaunchMassLower(builder, maxLaunchMassLower);
    Bus_Abridged.AddCreatedBy(builder, createdByOffset);
    Bus_Abridged.AddCreatedAt(builder, createdAtOffset);
    Bus_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    Bus_Abridged.AddOrigin(builder, originOffset);
    Bus_Abridged.AddSource(builder, sourceOffset);
    Bus_Abridged.AddAocsNotes(builder, aocsNotesOffset);
    Bus_Abridged.AddDescription(builder, descriptionOffset);
    Bus_Abridged.AddPowerCategory(builder, powerCategoryOffset);
    Bus_Abridged.AddMassCategory(builder, massCategoryOffset);
    Bus_Abridged.AddCountryCode(builder, countryCodeOffset);
    Bus_Abridged.AddBusKitDesignerOrgId(builder, busKitDesignerOrgIdOffset);
    Bus_Abridged.AddManufacturerOrgId(builder, manufacturerOrgIdOffset);
    Bus_Abridged.AddMainComputerManufacturerOrgId(builder, mainComputerManufacturerOrgIdOffset);
    Bus_Abridged.AddTelemetryTrackingManufacturerOrgId(builder, telemetryTrackingManufacturerOrgIdOffset);
    Bus_Abridged.AddNumOrbitType(builder, numOrbitType);
    Bus_Abridged.AddType(builder, typeOffset);
    Bus_Abridged.AddIdEntity(builder, idEntityOffset);
    Bus_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    Bus_Abridged.AddName(builder, nameOffset);
    Bus_Abridged.AddId(builder, idOffset);
    Bus_Abridged.AddDataMode(builder, dataMode);
    Bus_Abridged.AddGeneric(builder, generic);
    return Bus_Abridged.EndBus_Abridged(builder);
  }

  public static void StartBus_Abridged(FlatBufferBuilder builder) { builder.StartTable(55); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(2, classificationMarkingOffset.Value, 0); }
  public static void AddIdEntity(FlatBufferBuilder builder, StringOffset idEntityOffset) { builder.AddOffset(3, idEntityOffset.Value, 0); }
  public static void AddType(FlatBufferBuilder builder, StringOffset typeOffset) { builder.AddOffset(4, typeOffset.Value, 0); }
  public static void AddMaxLaunchMassLower(FlatBufferBuilder builder, double maxLaunchMassLower) { builder.AddDouble(5, maxLaunchMassLower, 0.0); }
  public static void AddMaxLaunchMassUpper(FlatBufferBuilder builder, double maxLaunchMassUpper) { builder.AddDouble(6, maxLaunchMassUpper, 0.0); }
  public static void AddMaxBOLStationMass(FlatBufferBuilder builder, double maxBOLStationMass) { builder.AddDouble(7, maxBOLStationMass, 0.0); }
  public static void AddAvgPayloadMass(FlatBufferBuilder builder, double avgPayloadMass) { builder.AddDouble(8, avgPayloadMass, 0.0); }
  public static void AddMaxPayloadMass(FlatBufferBuilder builder, double maxPayloadMass) { builder.AddDouble(9, maxPayloadMass, 0.0); }
  public static void AddMinDryMass(FlatBufferBuilder builder, double minDryMass) { builder.AddDouble(10, minDryMass, 0.0); }
  public static void AddAvgDryMass(FlatBufferBuilder builder, double avgDryMass) { builder.AddDouble(11, avgDryMass, 0.0); }
  public static void AddMedianDryMass(FlatBufferBuilder builder, double medianDryMass) { builder.AddDouble(12, medianDryMass, 0.0); }
  public static void AddMaxDryMass(FlatBufferBuilder builder, double maxDryMass) { builder.AddDouble(13, maxDryMass, 0.0); }
  public static void AddMinWetMass(FlatBufferBuilder builder, double minWetMass) { builder.AddDouble(14, minWetMass, 0.0); }
  public static void AddAvgWetMass(FlatBufferBuilder builder, double avgWetMass) { builder.AddDouble(15, avgWetMass, 0.0); }
  public static void AddMedianWetMass(FlatBufferBuilder builder, double medianWetMass) { builder.AddDouble(16, medianWetMass, 0.0); }
  public static void AddMaxWetMass(FlatBufferBuilder builder, double maxWetMass) { builder.AddDouble(17, maxWetMass, 0.0); }
  public static void AddMaxBOLPowerLower(FlatBufferBuilder builder, double maxBOLPowerLower) { builder.AddDouble(18, maxBOLPowerLower, 0.0); }
  public static void AddMaxBOLPowerUpper(FlatBufferBuilder builder, double maxBOLPowerUpper) { builder.AddDouble(19, maxBOLPowerUpper, 0.0); }
  public static void AddMaxEOLPowerLower(FlatBufferBuilder builder, double maxEOLPowerLower) { builder.AddDouble(20, maxEOLPowerLower, 0.0); }
  public static void AddMaxEOLPowerUpper(FlatBufferBuilder builder, double maxEOLPowerUpper) { builder.AddDouble(21, maxEOLPowerUpper, 0.0); }
  public static void AddAvgSpacecraftPower(FlatBufferBuilder builder, double avgSpacecraftPower) { builder.AddDouble(22, avgSpacecraftPower, 0.0); }
  public static void AddMaxSpacecraftPower(FlatBufferBuilder builder, double maxSpacecraftPower) { builder.AddDouble(23, maxSpacecraftPower, 0.0); }
  public static void AddOapSpacecraftPower(FlatBufferBuilder builder, double oapSpacecraftPower) { builder.AddDouble(24, oapSpacecraftPower, 0.0); }
  public static void AddAvgPayloadPower(FlatBufferBuilder builder, double avgPayloadPower) { builder.AddDouble(25, avgPayloadPower, 0.0); }
  public static void AddMaxPayloadPower(FlatBufferBuilder builder, double maxPayloadPower) { builder.AddDouble(26, maxPayloadPower, 0.0); }
  public static void AddOapPayloadPower(FlatBufferBuilder builder, double oapPayloadPower) { builder.AddDouble(27, oapPayloadPower, 0.0); }
  public static void AddBodyDimensionX(FlatBufferBuilder builder, double bodyDimensionX) { builder.AddDouble(28, bodyDimensionX, 0.0); }
  public static void AddBodyDimensionY(FlatBufferBuilder builder, double bodyDimensionY) { builder.AddDouble(29, bodyDimensionY, 0.0); }
  public static void AddBodyDimensionZ(FlatBufferBuilder builder, double bodyDimensionZ) { builder.AddDouble(30, bodyDimensionZ, 0.0); }
  public static void AddPayloadDimensionX(FlatBufferBuilder builder, double payloadDimensionX) { builder.AddDouble(31, payloadDimensionX, 0.0); }
  public static void AddPayloadDimensionY(FlatBufferBuilder builder, double payloadDimensionY) { builder.AddDouble(32, payloadDimensionY, 0.0); }
  public static void AddPayloadDimensionZ(FlatBufferBuilder builder, double payloadDimensionZ) { builder.AddDouble(33, payloadDimensionZ, 0.0); }
  public static void AddPayloadVolume(FlatBufferBuilder builder, double payloadVolume) { builder.AddDouble(34, payloadVolume, 0.0); }
  public static void AddLaunchEnvelopeDimensionX(FlatBufferBuilder builder, double launchEnvelopeDimensionX) { builder.AddDouble(35, launchEnvelopeDimensionX, 0.0); }
  public static void AddLaunchEnvelopeDimensionY(FlatBufferBuilder builder, double launchEnvelopeDimensionY) { builder.AddDouble(36, launchEnvelopeDimensionY, 0.0); }
  public static void AddLaunchEnvelopeDimensionZ(FlatBufferBuilder builder, double launchEnvelopeDimensionZ) { builder.AddDouble(37, launchEnvelopeDimensionZ, 0.0); }
  public static void AddNumOrbitType(FlatBufferBuilder builder, int numOrbitType) { builder.AddInt(38, numOrbitType, 0); }
  public static void AddTelemetryTrackingManufacturerOrgId(FlatBufferBuilder builder, StringOffset telemetryTrackingManufacturerOrgIdOffset) { builder.AddOffset(39, telemetryTrackingManufacturerOrgIdOffset.Value, 0); }
  public static void AddMainComputerManufacturerOrgId(FlatBufferBuilder builder, StringOffset mainComputerManufacturerOrgIdOffset) { builder.AddOffset(40, mainComputerManufacturerOrgIdOffset.Value, 0); }
  public static void AddManufacturerOrgId(FlatBufferBuilder builder, StringOffset manufacturerOrgIdOffset) { builder.AddOffset(41, manufacturerOrgIdOffset.Value, 0); }
  public static void AddBusKitDesignerOrgId(FlatBufferBuilder builder, StringOffset busKitDesignerOrgIdOffset) { builder.AddOffset(42, busKitDesignerOrgIdOffset.Value, 0); }
  public static void AddCountryCode(FlatBufferBuilder builder, StringOffset countryCodeOffset) { builder.AddOffset(43, countryCodeOffset.Value, 0); }
  public static void AddMassCategory(FlatBufferBuilder builder, StringOffset massCategoryOffset) { builder.AddOffset(44, massCategoryOffset.Value, 0); }
  public static void AddPowerCategory(FlatBufferBuilder builder, StringOffset powerCategoryOffset) { builder.AddOffset(45, powerCategoryOffset.Value, 0); }
  public static void AddGeneric(FlatBufferBuilder builder, bool generic) { builder.AddBool(46, generic, false); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(47, descriptionOffset.Value, 0); }
  public static void AddAocsNotes(FlatBufferBuilder builder, StringOffset aocsNotesOffset) { builder.AddOffset(48, aocsNotesOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(49, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(50, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(51, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, Bus_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(52, (sbyte)dataMode, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(53, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(54, createdByOffset.Value, 0); }
  public static Offset<Bus_Abridged> EndBus_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Bus_Abridged>(o);
  }
  public static void FinishBus_AbridgedBuffer(FlatBufferBuilder builder, Offset<Bus_Abridged> offset) { builder.Finish(offset.Value, "BUSA"); }
  public static void FinishSizePrefixedBus_AbridgedBuffer(FlatBufferBuilder builder, Offset<Bus_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "BUSA"); }
  public Bus_AbridgedT UnPack() {
    var _o = new Bus_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(Bus_AbridgedT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.IdEntity = this.IdEntity;
    _o.Type = this.Type;
    _o.MaxLaunchMassLower = this.MaxLaunchMassLower;
    _o.MaxLaunchMassUpper = this.MaxLaunchMassUpper;
    _o.MaxBOLStationMass = this.MaxBOLStationMass;
    _o.AvgPayloadMass = this.AvgPayloadMass;
    _o.MaxPayloadMass = this.MaxPayloadMass;
    _o.MinDryMass = this.MinDryMass;
    _o.AvgDryMass = this.AvgDryMass;
    _o.MedianDryMass = this.MedianDryMass;
    _o.MaxDryMass = this.MaxDryMass;
    _o.MinWetMass = this.MinWetMass;
    _o.AvgWetMass = this.AvgWetMass;
    _o.MedianWetMass = this.MedianWetMass;
    _o.MaxWetMass = this.MaxWetMass;
    _o.MaxBOLPowerLower = this.MaxBOLPowerLower;
    _o.MaxBOLPowerUpper = this.MaxBOLPowerUpper;
    _o.MaxEOLPowerLower = this.MaxEOLPowerLower;
    _o.MaxEOLPowerUpper = this.MaxEOLPowerUpper;
    _o.AvgSpacecraftPower = this.AvgSpacecraftPower;
    _o.MaxSpacecraftPower = this.MaxSpacecraftPower;
    _o.OapSpacecraftPower = this.OapSpacecraftPower;
    _o.AvgPayloadPower = this.AvgPayloadPower;
    _o.MaxPayloadPower = this.MaxPayloadPower;
    _o.OapPayloadPower = this.OapPayloadPower;
    _o.BodyDimensionX = this.BodyDimensionX;
    _o.BodyDimensionY = this.BodyDimensionY;
    _o.BodyDimensionZ = this.BodyDimensionZ;
    _o.PayloadDimensionX = this.PayloadDimensionX;
    _o.PayloadDimensionY = this.PayloadDimensionY;
    _o.PayloadDimensionZ = this.PayloadDimensionZ;
    _o.PayloadVolume = this.PayloadVolume;
    _o.LaunchEnvelopeDimensionX = this.LaunchEnvelopeDimensionX;
    _o.LaunchEnvelopeDimensionY = this.LaunchEnvelopeDimensionY;
    _o.LaunchEnvelopeDimensionZ = this.LaunchEnvelopeDimensionZ;
    _o.NumOrbitType = this.NumOrbitType;
    _o.TelemetryTrackingManufacturerOrgId = this.TelemetryTrackingManufacturerOrgId;
    _o.MainComputerManufacturerOrgId = this.MainComputerManufacturerOrgId;
    _o.ManufacturerOrgId = this.ManufacturerOrgId;
    _o.BusKitDesignerOrgId = this.BusKitDesignerOrgId;
    _o.CountryCode = this.CountryCode;
    _o.MassCategory = this.MassCategory;
    _o.PowerCategory = this.PowerCategory;
    _o.Generic = this.Generic;
    _o.Description = this.Description;
    _o.AocsNotes = this.AocsNotes;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
  }
  public static Offset<Bus_Abridged> Pack(FlatBufferBuilder builder, Bus_AbridgedT _o) {
    if (_o == null) return default(Offset<Bus_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _idEntity = _o.IdEntity == null ? default(StringOffset) : builder.CreateString(_o.IdEntity);
    var _type = _o.Type == null ? default(StringOffset) : builder.CreateString(_o.Type);
    var _telemetryTrackingManufacturerOrgId = _o.TelemetryTrackingManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.TelemetryTrackingManufacturerOrgId);
    var _mainComputerManufacturerOrgId = _o.MainComputerManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.MainComputerManufacturerOrgId);
    var _manufacturerOrgId = _o.ManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.ManufacturerOrgId);
    var _busKitDesignerOrgId = _o.BusKitDesignerOrgId == null ? default(StringOffset) : builder.CreateString(_o.BusKitDesignerOrgId);
    var _countryCode = _o.CountryCode == null ? default(StringOffset) : builder.CreateString(_o.CountryCode);
    var _massCategory = _o.MassCategory == null ? default(StringOffset) : builder.CreateString(_o.MassCategory);
    var _powerCategory = _o.PowerCategory == null ? default(StringOffset) : builder.CreateString(_o.PowerCategory);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _aocsNotes = _o.AocsNotes == null ? default(StringOffset) : builder.CreateString(_o.AocsNotes);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    return CreateBus_Abridged(
      builder,
      _id,
      _name,
      _classificationMarking,
      _idEntity,
      _type,
      _o.MaxLaunchMassLower,
      _o.MaxLaunchMassUpper,
      _o.MaxBOLStationMass,
      _o.AvgPayloadMass,
      _o.MaxPayloadMass,
      _o.MinDryMass,
      _o.AvgDryMass,
      _o.MedianDryMass,
      _o.MaxDryMass,
      _o.MinWetMass,
      _o.AvgWetMass,
      _o.MedianWetMass,
      _o.MaxWetMass,
      _o.MaxBOLPowerLower,
      _o.MaxBOLPowerUpper,
      _o.MaxEOLPowerLower,
      _o.MaxEOLPowerUpper,
      _o.AvgSpacecraftPower,
      _o.MaxSpacecraftPower,
      _o.OapSpacecraftPower,
      _o.AvgPayloadPower,
      _o.MaxPayloadPower,
      _o.OapPayloadPower,
      _o.BodyDimensionX,
      _o.BodyDimensionY,
      _o.BodyDimensionZ,
      _o.PayloadDimensionX,
      _o.PayloadDimensionY,
      _o.PayloadDimensionZ,
      _o.PayloadVolume,
      _o.LaunchEnvelopeDimensionX,
      _o.LaunchEnvelopeDimensionY,
      _o.LaunchEnvelopeDimensionZ,
      _o.NumOrbitType,
      _telemetryTrackingManufacturerOrgId,
      _mainComputerManufacturerOrgId,
      _manufacturerOrgId,
      _busKitDesignerOrgId,
      _countryCode,
      _massCategory,
      _powerCategory,
      _o.Generic,
      _description,
      _aocsNotes,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode,
      _createdAt,
      _createdBy);
  }
}

public class Bus_AbridgedT
{
  public string Id { get; set; }
  public string Name { get; set; }
  public string ClassificationMarking { get; set; }
  public string IdEntity { get; set; }
  public string Type { get; set; }
  public double MaxLaunchMassLower { get; set; }
  public double MaxLaunchMassUpper { get; set; }
  public double MaxBOLStationMass { get; set; }
  public double AvgPayloadMass { get; set; }
  public double MaxPayloadMass { get; set; }
  public double MinDryMass { get; set; }
  public double AvgDryMass { get; set; }
  public double MedianDryMass { get; set; }
  public double MaxDryMass { get; set; }
  public double MinWetMass { get; set; }
  public double AvgWetMass { get; set; }
  public double MedianWetMass { get; set; }
  public double MaxWetMass { get; set; }
  public double MaxBOLPowerLower { get; set; }
  public double MaxBOLPowerUpper { get; set; }
  public double MaxEOLPowerLower { get; set; }
  public double MaxEOLPowerUpper { get; set; }
  public double AvgSpacecraftPower { get; set; }
  public double MaxSpacecraftPower { get; set; }
  public double OapSpacecraftPower { get; set; }
  public double AvgPayloadPower { get; set; }
  public double MaxPayloadPower { get; set; }
  public double OapPayloadPower { get; set; }
  public double BodyDimensionX { get; set; }
  public double BodyDimensionY { get; set; }
  public double BodyDimensionZ { get; set; }
  public double PayloadDimensionX { get; set; }
  public double PayloadDimensionY { get; set; }
  public double PayloadDimensionZ { get; set; }
  public double PayloadVolume { get; set; }
  public double LaunchEnvelopeDimensionX { get; set; }
  public double LaunchEnvelopeDimensionY { get; set; }
  public double LaunchEnvelopeDimensionZ { get; set; }
  public int NumOrbitType { get; set; }
  public string TelemetryTrackingManufacturerOrgId { get; set; }
  public string MainComputerManufacturerOrgId { get; set; }
  public string ManufacturerOrgId { get; set; }
  public string BusKitDesignerOrgId { get; set; }
  public string CountryCode { get; set; }
  public string MassCategory { get; set; }
  public string PowerCategory { get; set; }
  public bool Generic { get; set; }
  public string Description { get; set; }
  public string AocsNotes { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public Bus_Abridged_dataMode_Enum DataMode { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }

  public Bus_AbridgedT() {
    this.Id = null;
    this.Name = null;
    this.ClassificationMarking = null;
    this.IdEntity = null;
    this.Type = null;
    this.MaxLaunchMassLower = 0.0;
    this.MaxLaunchMassUpper = 0.0;
    this.MaxBOLStationMass = 0.0;
    this.AvgPayloadMass = 0.0;
    this.MaxPayloadMass = 0.0;
    this.MinDryMass = 0.0;
    this.AvgDryMass = 0.0;
    this.MedianDryMass = 0.0;
    this.MaxDryMass = 0.0;
    this.MinWetMass = 0.0;
    this.AvgWetMass = 0.0;
    this.MedianWetMass = 0.0;
    this.MaxWetMass = 0.0;
    this.MaxBOLPowerLower = 0.0;
    this.MaxBOLPowerUpper = 0.0;
    this.MaxEOLPowerLower = 0.0;
    this.MaxEOLPowerUpper = 0.0;
    this.AvgSpacecraftPower = 0.0;
    this.MaxSpacecraftPower = 0.0;
    this.OapSpacecraftPower = 0.0;
    this.AvgPayloadPower = 0.0;
    this.MaxPayloadPower = 0.0;
    this.OapPayloadPower = 0.0;
    this.BodyDimensionX = 0.0;
    this.BodyDimensionY = 0.0;
    this.BodyDimensionZ = 0.0;
    this.PayloadDimensionX = 0.0;
    this.PayloadDimensionY = 0.0;
    this.PayloadDimensionZ = 0.0;
    this.PayloadVolume = 0.0;
    this.LaunchEnvelopeDimensionX = 0.0;
    this.LaunchEnvelopeDimensionY = 0.0;
    this.LaunchEnvelopeDimensionZ = 0.0;
    this.NumOrbitType = 0;
    this.TelemetryTrackingManufacturerOrgId = null;
    this.MainComputerManufacturerOrgId = null;
    this.ManufacturerOrgId = null;
    this.BusKitDesignerOrgId = null;
    this.CountryCode = null;
    this.MassCategory = null;
    this.PowerCategory = null;
    this.Generic = false;
    this.Description = null;
    this.AocsNotes = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = Bus_Abridged_dataMode_Enum.REAL;
    this.CreatedAt = null;
    this.CreatedBy = null;
  }
  public static Bus_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return Bus_Abridged.GetRootAsBus_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    Bus_Abridged.FinishBus_AbridgedBuffer(fbb, Bus_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class Bus_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*Name*/, false)
      && verifier.VerifyString(tablePos, 8 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 10 /*IdEntity*/, false)
      && verifier.VerifyString(tablePos, 12 /*Type*/, false)
      && verifier.VerifyField(tablePos, 14 /*MaxLaunchMassLower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 16 /*MaxLaunchMassUpper*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 18 /*MaxBOLStationMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 20 /*AvgPayloadMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 22 /*MaxPayloadMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*MinDryMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 26 /*AvgDryMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 28 /*MedianDryMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 30 /*MaxDryMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 32 /*MinWetMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 34 /*AvgWetMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 36 /*MedianWetMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 38 /*MaxWetMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 40 /*MaxBOLPowerLower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 42 /*MaxBOLPowerUpper*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 44 /*MaxEOLPowerLower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 46 /*MaxEOLPowerUpper*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 48 /*AvgSpacecraftPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 50 /*MaxSpacecraftPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 52 /*OapSpacecraftPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 54 /*AvgPayloadPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 56 /*MaxPayloadPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 58 /*OapPayloadPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 60 /*BodyDimensionX*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 62 /*BodyDimensionY*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 64 /*BodyDimensionZ*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 66 /*PayloadDimensionX*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 68 /*PayloadDimensionY*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 70 /*PayloadDimensionZ*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 72 /*PayloadVolume*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 74 /*LaunchEnvelopeDimensionX*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 76 /*LaunchEnvelopeDimensionY*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 78 /*LaunchEnvelopeDimensionZ*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 80 /*NumOrbitType*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 82 /*TelemetryTrackingManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 84 /*MainComputerManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 86 /*ManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 88 /*BusKitDesignerOrgId*/, false)
      && verifier.VerifyString(tablePos, 90 /*CountryCode*/, false)
      && verifier.VerifyString(tablePos, 92 /*MassCategory*/, false)
      && verifier.VerifyString(tablePos, 94 /*PowerCategory*/, false)
      && verifier.VerifyField(tablePos, 96 /*Generic*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 98 /*Description*/, false)
      && verifier.VerifyString(tablePos, 100 /*AocsNotes*/, false)
      && verifier.VerifyString(tablePos, 102 /*Source*/, false)
      && verifier.VerifyString(tablePos, 104 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 106 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 108 /*DataMode*/, 1 /*Bus_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 110 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 112 /*CreatedBy*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
