// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Planned start and stop for the collection.
public struct ISRCollectionPlanned_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static ISRCollectionPlanned_Abridged GetRootAsISRCollectionPlanned_Abridged(ByteBuffer _bb) { return GetRootAsISRCollectionPlanned_Abridged(_bb, new ISRCollectionPlanned_Abridged()); }
  public static ISRCollectionPlanned_Abridged GetRootAsISRCollectionPlanned_Abridged(ByteBuffer _bb, ISRCollectionPlanned_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool ISRCollectionPlanned_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "ISRC"); }
  public static bool VerifyISRCollectionPlanned_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("ISRC", false, ISRCollectionPlanned_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ISRCollectionPlanned_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Start time of collection, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-19T01:01:15.001Z
  /// Constraints: No constraints specified.
  public string Start { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStartBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetStartBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetStartArray() { return __p.__vector_as_array<byte>(4); }
  /// Stop time of collection, in ISO 8601 UTC format.
  /// Example: /// Example: 2021-01-19T01:01:15.001Z
  /// Constraints: No constraints specified.
  public string Stop { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStopBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetStopBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetStopArray() { return __p.__vector_as_array<byte>(6); }
  /// Additional start and stop for the collection.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string Additional(int j) { int o = __p.__offset(8); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int AdditionalLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<ISRCollectionPlanned_Abridged> CreateISRCollectionPlanned_Abridged(FlatBufferBuilder builder,
      StringOffset startOffset = default(StringOffset),
      StringOffset stopOffset = default(StringOffset),
      VectorOffset additionalOffset = default(VectorOffset)) {
    builder.StartTable(3);
    ISRCollectionPlanned_Abridged.AddAdditional(builder, additionalOffset);
    ISRCollectionPlanned_Abridged.AddStop(builder, stopOffset);
    ISRCollectionPlanned_Abridged.AddStart(builder, startOffset);
    return ISRCollectionPlanned_Abridged.EndISRCollectionPlanned_Abridged(builder);
  }

  public static void StartISRCollectionPlanned_Abridged(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddStart(FlatBufferBuilder builder, StringOffset startOffset) { builder.AddOffset(0, startOffset.Value, 0); }
  public static void AddStop(FlatBufferBuilder builder, StringOffset stopOffset) { builder.AddOffset(1, stopOffset.Value, 0); }
  public static void AddAdditional(FlatBufferBuilder builder, VectorOffset additionalOffset) { builder.AddOffset(2, additionalOffset.Value, 0); }
  public static VectorOffset CreateAdditionalVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateAdditionalVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAdditionalVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateAdditionalVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartAdditionalVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<ISRCollectionPlanned_Abridged> EndISRCollectionPlanned_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ISRCollectionPlanned_Abridged>(o);
  }
  public static void FinishISRCollectionPlanned_AbridgedBuffer(FlatBufferBuilder builder, Offset<ISRCollectionPlanned_Abridged> offset) { builder.Finish(offset.Value, "ISRC"); }
  public static void FinishSizePrefixedISRCollectionPlanned_AbridgedBuffer(FlatBufferBuilder builder, Offset<ISRCollectionPlanned_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "ISRC"); }
  public ISRCollectionPlanned_AbridgedT UnPack() {
    var _o = new ISRCollectionPlanned_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ISRCollectionPlanned_AbridgedT _o) {
    _o.Start = this.Start;
    _o.Stop = this.Stop;
    _o.Additional = new List<string>();
    for (var _j = 0; _j < this.AdditionalLength; ++_j) {_o.Additional.Add(this.Additional(_j));}
  }
  public static Offset<ISRCollectionPlanned_Abridged> Pack(FlatBufferBuilder builder, ISRCollectionPlanned_AbridgedT _o) {
    if (_o == null) return default(Offset<ISRCollectionPlanned_Abridged>);
    var _start = _o.Start == null ? default(StringOffset) : builder.CreateString(_o.Start);
    var _stop = _o.Stop == null ? default(StringOffset) : builder.CreateString(_o.Stop);
    var _additional = default(VectorOffset);
    if (_o.Additional != null) {
      var __additional = new StringOffset[_o.Additional.Count];
      for (var _j = 0; _j < __additional.Length; ++_j) { __additional[_j] = builder.CreateString(_o.Additional[_j]); }
      _additional = CreateAdditionalVector(builder, __additional);
    }
    return CreateISRCollectionPlanned_Abridged(
      builder,
      _start,
      _stop,
      _additional);
  }
}

public class ISRCollectionPlanned_AbridgedT
{
  public string Start { get; set; }
  public string Stop { get; set; }
  public List<string> Additional { get; set; }

  public ISRCollectionPlanned_AbridgedT() {
    this.Start = null;
    this.Stop = null;
    this.Additional = null;
  }
  public static ISRCollectionPlanned_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return ISRCollectionPlanned_Abridged.GetRootAsISRCollectionPlanned_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    ISRCollectionPlanned_Abridged.FinishISRCollectionPlanned_AbridgedBuffer(fbb, ISRCollectionPlanned_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class ISRCollectionPlanned_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Start*/, false)
      && verifier.VerifyString(tablePos, 6 /*Stop*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 8 /*Additional*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
