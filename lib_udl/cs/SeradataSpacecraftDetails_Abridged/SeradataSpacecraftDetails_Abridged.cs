// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// On-orbit spacecraft details compiled by Seradata for a particular satellite.
public struct SeradataSpacecraftDetails_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static SeradataSpacecraftDetails_Abridged GetRootAsSeradataSpacecraftDetails_Abridged(ByteBuffer _bb) { return GetRootAsSeradataSpacecraftDetails_Abridged(_bb, new SeradataSpacecraftDetails_Abridged()); }
  public static SeradataSpacecraftDetails_Abridged GetRootAsSeradataSpacecraftDetails_Abridged(ByteBuffer _bb, SeradataSpacecraftDetails_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool SeradataSpacecraftDetails_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "SERA"); }
  public static bool VerifySeradataSpacecraftDetails_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("SERA", false, SeradataSpacecraftDetails_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SeradataSpacecraftDetails_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Unique identifier of the record, auto-generated by the system.
  /// Example: /// Example: SERADATASPACECRAFTDETAILS-ID
  /// Constraints: Minimum length = 1, Maximum length = 36
  public string Id { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetIdArray() { return __p.__vector_as_array<byte>(4); }
  /// UUID of the parent Onorbit record, if available.
  /// Example: /// Example: 503
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string IdOnOrbit { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIdOnOrbitBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetIdOnOrbitBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetIdOnOrbitArray() { return __p.__vector_as_array<byte>(6); }
  /// Classification marking of the data in IC/CAPCO Portion-marked format.
  /// Example: /// Example: U
  /// Constraints: Minimum length = 1, Maximum length = 128
  public string ClassificationMarking { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetClassificationMarkingBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetClassificationMarkingBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetClassificationMarkingArray() { return __p.__vector_as_array<byte>(8); }
  /// Spacecraft name.
  /// Example: /// Example: name
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Name { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(10); }
  /// Description associated with the spacecraft.
  /// Example: /// Example: description
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string Description { get { int o = __p.__offset(12); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescriptionBytes() { return __p.__vector_as_span<byte>(12, 1); }
#else
  public ArraySegment<byte>? GetDescriptionBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public byte[] GetDescriptionArray() { return __p.__vector_as_array<byte>(12); }
  /// Seradata international number.
  /// Example: /// Example: number
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string IntlNumber { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetIntlNumberBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetIntlNumberBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetIntlNumberArray() { return __p.__vector_as_array<byte>(14); }
  /// Seradata sector (e.g. Commercial, Military, Civil/Other).
  /// Example: /// Example: Commercial
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string Sector { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSectorBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetSectorBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetSectorArray() { return __p.__vector_as_array<byte>(16); }
  /// Apogee in km.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Apogee { get { int o = __p.__offset(18); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Perigee in km.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Perigee { get { int o = __p.__offset(20); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft period in minutes.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Period { get { int o = __p.__offset(22); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Seradata provided inclination in degrees.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Inclination { get { int o = __p.__offset(24); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// UUID of the prime manufacturer organization, if available.
  /// Example: /// Example: 05c43360-382e-4aa2-b875-ed28945ff2e5
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string PrimeManufacturerOrgId { get { int o = __p.__offset(26); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrimeManufacturerOrgIdBytes() { return __p.__vector_as_span<byte>(26, 1); }
#else
  public ArraySegment<byte>? GetPrimeManufacturerOrgIdBytes() { return __p.__vector_as_arraysegment(26); }
#endif
  public byte[] GetPrimeManufacturerOrgIdArray() { return __p.__vector_as_array<byte>(26); }
  /// Spacecraft stabilizer (e.g. 3-Axis, Gravity Gradiant, etc).
  /// Example: /// Example: 3-Axis
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string Stabilizer { get { int o = __p.__offset(28); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStabilizerBytes() { return __p.__vector_as_span<byte>(28, 1); }
#else
  public ArraySegment<byte>? GetStabilizerBytes() { return __p.__vector_as_arraysegment(28); }
#endif
  public byte[] GetStabilizerArray() { return __p.__vector_as_array<byte>(28); }
  /// Spacecraft design life in days.
  /// Example: /// Example: 231
  /// Constraints: No constraints specified.
  public int DesignLife { get { int o = __p.__offset(30); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Spacecraft expected life in days.
  /// Example: /// Example: 231
  /// Constraints: No constraints specified.
  public int ExpectedLife { get { int o = __p.__offset(32); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Boolean indicating if the spacecraft was insured at launch.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool InsuredAtLaunch { get { int o = __p.__offset(34); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Mass at launch in kg.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double LaunchMass { get { int o = __p.__offset(36); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Mass dry in kg.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double DryMass { get { int o = __p.__offset(38); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// NORAD satellite number if available.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int CatalogNumber { get { int o = __p.__offset(40); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Mass dry in kg.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double TotalPayloadPower { get { int o = __p.__offset(42); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft constellation.
  /// Example: /// Example: GPS
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Constellation { get { int o = __p.__offset(44); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetConstellationBytes() { return __p.__vector_as_span<byte>(44, 1); }
#else
  public ArraySegment<byte>? GetConstellationBytes() { return __p.__vector_as_arraysegment(44); }
#endif
  public byte[] GetConstellationArray() { return __p.__vector_as_array<byte>(44); }
  /// Spacecraft orbit category (e.g GEO, LEO, etc).
  /// Example: /// Example: GEO
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string OrbitCategory { get { int o = __p.__offset(46); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrbitCategoryBytes() { return __p.__vector_as_span<byte>(46, 1); }
#else
  public ArraySegment<byte>? GetOrbitCategoryBytes() { return __p.__vector_as_arraysegment(46); }
#endif
  public byte[] GetOrbitCategoryArray() { return __p.__vector_as_array<byte>(46); }
  /// Spacecraft sub orbit category (e.g LEO - Sun-synchronous, Geostationary, etc).
  /// Example: /// Example: Geostationary
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string OrbitSubCategory { get { int o = __p.__offset(48); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrbitSubCategoryBytes() { return __p.__vector_as_span<byte>(48, 1); }
#else
  public ArraySegment<byte>? GetOrbitSubCategoryBytes() { return __p.__vector_as_arraysegment(48); }
#endif
  public byte[] GetOrbitSubCategoryArray() { return __p.__vector_as_array<byte>(48); }
  /// Cost of launch in M USD.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double LaunchCost { get { int o = __p.__offset(50); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Boolean indicating if the spacecraft launch cost is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool LaunchCostEstimated { get { int o = __p.__offset(52); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Boolean indicating if the spacecraft cost is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool CostEstimated { get { int o = __p.__offset(54); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Cost of spacecraft at new in M USD.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double NewCost { get { int o = __p.__offset(56); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Combined cost of spacecraft at new in M USD.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double CombinedNewCost { get { int o = __p.__offset(58); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Boolean indicating if the spacecraft combined new cost is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool CombinedCostEstimated { get { int o = __p.__offset(60); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Insured value of spacecraft at launch in M USD.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double InsuredValueAtLaunch { get { int o = __p.__offset(62); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Boolean indicating if the spacecraft insured value at launch is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool InsuredValueLaunchEstimated { get { int o = __p.__offset(64); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Annual insured depreciaion factor as a percent fraction.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double AnnualInsuredDepreciationFactor { get { int o = __p.__offset(66); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Boolean indicating if the spacecraft annualInsuredDepreciationFactor is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool AnnualInsuredDepreciationFactorEstimated { get { int o = __p.__offset(68); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Insurance premium at launch in M USD.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double InsurancePremiumAtLaunch { get { int o = __p.__offset(70); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Boolean indicating if the spacecraft insurancePremiumAtLaunch is estimated.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool InsurancePremiumAtLaunchEstimated { get { int o = __p.__offset(72); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Number of humans carried on spacecraft.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int NumHumans { get { int o = __p.__offset(74); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Cubesat dispenser type.
  /// Example: /// Example: cubesatDispenserType
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string CubesatDispenserType { get { int o = __p.__offset(76); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCubesatDispenserTypeBytes() { return __p.__vector_as_span<byte>(76, 1); }
#else
  public ArraySegment<byte>? GetCubesatDispenserTypeBytes() { return __p.__vector_as_arraysegment(76); }
#endif
  public byte[] GetCubesatDispenserTypeArray() { return __p.__vector_as_array<byte>(76); }
  /// Mass category (e.g.  2500 - 3500kg  - Large Satellite, 10 - 100 kg - Microsatellite, etc).
  /// Example: /// Example: 2500 - 3500kg  - Large Satellite
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string MassCategory { get { int o = __p.__offset(78); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetMassCategoryBytes() { return __p.__vector_as_span<byte>(78, 1); }
#else
  public ArraySegment<byte>? GetMassCategoryBytes() { return __p.__vector_as_arraysegment(78); }
#endif
  public byte[] GetMassCategoryArray() { return __p.__vector_as_array<byte>(78); }
  /// Seradata launch ID.
  /// Example: /// Example: 11573
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string LaunchId { get { int o = __p.__offset(80); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchIdBytes() { return __p.__vector_as_span<byte>(80, 1); }
#else
  public ArraySegment<byte>? GetLaunchIdBytes() { return __p.__vector_as_arraysegment(80); }
#endif
  public byte[] GetLaunchIdArray() { return __p.__vector_as_array<byte>(80); }
  /// Seradata launch ID.
  /// Example: /// Example: 123
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string LaunchVehicleId { get { int o = __p.__offset(82); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchVehicleIdBytes() { return __p.__vector_as_span<byte>(82, 1); }
#else
  public ArraySegment<byte>? GetLaunchVehicleIdBytes() { return __p.__vector_as_arraysegment(82); }
#endif
  public byte[] GetLaunchVehicleIdArray() { return __p.__vector_as_array<byte>(82); }
  /// Seradata launch vehicle family.
  /// Example: /// Example: launchProviderFlightNumber
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchProviderFlightNumber { get { int o = __p.__offset(84); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchProviderFlightNumberBytes() { return __p.__vector_as_span<byte>(84, 1); }
#else
  public ArraySegment<byte>? GetLaunchProviderFlightNumberBytes() { return __p.__vector_as_arraysegment(84); }
#endif
  public byte[] GetLaunchProviderFlightNumberArray() { return __p.__vector_as_array<byte>(84); }
  /// Launch Site Name.
  /// Example: /// Example: launchSiteName
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchSiteName { get { int o = __p.__offset(86); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchSiteNameBytes() { return __p.__vector_as_span<byte>(86, 1); }
#else
  public ArraySegment<byte>? GetLaunchSiteNameBytes() { return __p.__vector_as_arraysegment(86); }
#endif
  public byte[] GetLaunchSiteNameArray() { return __p.__vector_as_array<byte>(86); }
  /// Seradata Launch Site ID.
  /// Example: /// Example: 28
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string LaunchSiteId { get { int o = __p.__offset(88); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchSiteIdBytes() { return __p.__vector_as_span<byte>(88, 1); }
#else
  public ArraySegment<byte>? GetLaunchSiteIdBytes() { return __p.__vector_as_arraysegment(88); }
#endif
  public byte[] GetLaunchSiteIdArray() { return __p.__vector_as_array<byte>(88); }
  /// Seradata launch country.
  /// Example: /// Example: USA
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string LaunchCountry { get { int o = __p.__offset(90); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchCountryBytes() { return __p.__vector_as_span<byte>(90, 1); }
#else
  public ArraySegment<byte>? GetLaunchCountryBytes() { return __p.__vector_as_arraysegment(90); }
#endif
  public byte[] GetLaunchCountryArray() { return __p.__vector_as_array<byte>(90); }
  /// Seradata launch provider.
  /// Example: /// Example: launchProvider
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string LaunchProvider { get { int o = __p.__offset(92); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchProviderBytes() { return __p.__vector_as_span<byte>(92, 1); }
#else
  public ArraySegment<byte>? GetLaunchProviderBytes() { return __p.__vector_as_arraysegment(92); }
#endif
  public byte[] GetLaunchProviderArray() { return __p.__vector_as_array<byte>(92); }
  /// Seradata launch provider country.
  /// Example: /// Example: USA
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string LaunchProviderCountry { get { int o = __p.__offset(94); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchProviderCountryBytes() { return __p.__vector_as_span<byte>(94, 1); }
#else
  public ArraySegment<byte>? GetLaunchProviderCountryBytes() { return __p.__vector_as_arraysegment(94); }
#endif
  public byte[] GetLaunchProviderCountryArray() { return __p.__vector_as_array<byte>(94); }
  /// Boolean indicating if the launch was commercial.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool CommercialLaunch { get { int o = __p.__offset(96); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Seradata launch type (e.g. Launched, Future, etc).
  /// Example: /// Example: Future
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string LaunchType { get { int o = __p.__offset(98); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchTypeBytes() { return __p.__vector_as_span<byte>(98, 1); }
#else
  public ArraySegment<byte>? GetLaunchTypeBytes() { return __p.__vector_as_arraysegment(98); }
#endif
  public byte[] GetLaunchTypeArray() { return __p.__vector_as_array<byte>(98); }
  /// Seradata launch characteristic (e.g. Expendable, Reusable (New), etc).
  /// Example: /// Example: Expendable
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchCharacteristic { get { int o = __p.__offset(100); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchCharacteristicBytes() { return __p.__vector_as_span<byte>(100, 1); }
#else
  public ArraySegment<byte>? GetLaunchCharacteristicBytes() { return __p.__vector_as_arraysegment(100); }
#endif
  public byte[] GetLaunchCharacteristicArray() { return __p.__vector_as_array<byte>(100); }
  /// Seradata launch number.
  /// Example: /// Example: FN040
  /// Constraints: Minimum length = 0, Maximum length = 16
  public string LaunchNumber { get { int o = __p.__offset(102); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchNumberBytes() { return __p.__vector_as_span<byte>(102, 1); }
#else
  public ArraySegment<byte>? GetLaunchNumberBytes() { return __p.__vector_as_arraysegment(102); }
#endif
  public byte[] GetLaunchNumberArray() { return __p.__vector_as_array<byte>(102); }
  /// Launch date.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string LaunchDate { get { int o = __p.__offset(104); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchDateBytes() { return __p.__vector_as_span<byte>(104, 1); }
#else
  public ArraySegment<byte>? GetLaunchDateBytes() { return __p.__vector_as_arraysegment(104); }
#endif
  public byte[] GetLaunchDateArray() { return __p.__vector_as_array<byte>(104); }
  /// Seradata remarks on launch date.
  /// Example: /// Example: launchDateRemarks
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchDateRemarks { get { int o = __p.__offset(106); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchDateRemarksBytes() { return __p.__vector_as_span<byte>(106, 1); }
#else
  public ArraySegment<byte>? GetLaunchDateRemarksBytes() { return __p.__vector_as_arraysegment(106); }
#endif
  public byte[] GetLaunchDateRemarksArray() { return __p.__vector_as_array<byte>(106); }
  /// Youtube link of launch.
  /// Example: /// Example: youtubeLaunchLink
  /// Constraints: Minimum length = 0, Maximum length = 32
  public string YoutubeLaunchLink { get { int o = __p.__offset(108); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetYoutubeLaunchLinkBytes() { return __p.__vector_as_span<byte>(108, 1); }
#else
  public ArraySegment<byte>? GetYoutubeLaunchLinkBytes() { return __p.__vector_as_arraysegment(108); }
#endif
  public byte[] GetYoutubeLaunchLinkArray() { return __p.__vector_as_array<byte>(108); }
  /// Spacecraft status (e.g. Inactive - Retired, Inactive - Re-entered, Active, etc).
  /// Example: /// Example: Inactive - Retired
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Status { get { int o = __p.__offset(110); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStatusBytes() { return __p.__vector_as_span<byte>(110, 1); }
#else
  public ArraySegment<byte>? GetStatusBytes() { return __p.__vector_as_arraysegment(110); }
#endif
  public byte[] GetStatusArray() { return __p.__vector_as_array<byte>(110); }
  /// Spacecraft owner name.
  /// Example: /// Example: owner
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Owner { get { int o = __p.__offset(112); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOwnerBytes() { return __p.__vector_as_span<byte>(112, 1); }
#else
  public ArraySegment<byte>? GetOwnerBytes() { return __p.__vector_as_arraysegment(112); }
#endif
  public byte[] GetOwnerArray() { return __p.__vector_as_array<byte>(112); }
  /// Spacecraft owner country.
  /// Example: /// Example: USA
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string OwnerCountry { get { int o = __p.__offset(114); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOwnerCountryBytes() { return __p.__vector_as_span<byte>(114, 1); }
#else
  public ArraySegment<byte>? GetOwnerCountryBytes() { return __p.__vector_as_arraysegment(114); }
#endif
  public byte[] GetOwnerCountryArray() { return __p.__vector_as_array<byte>(114); }
  /// Spacecraft operator name.
  /// Example: /// Example: operator
  /// Constraints: Minimum length = 0, Maximum length = 128
  public string Operator { get { int o = __p.__offset(116); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOperatorBytes() { return __p.__vector_as_span<byte>(116, 1); }
#else
  public ArraySegment<byte>? GetOperatorBytes() { return __p.__vector_as_arraysegment(116); }
#endif
  public byte[] GetOperatorArray() { return __p.__vector_as_array<byte>(116); }
  /// Spacecraft operator country.
  /// Example: /// Example: USA
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string OperatorCountry { get { int o = __p.__offset(118); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOperatorCountryBytes() { return __p.__vector_as_span<byte>(118, 1); }
#else
  public ArraySegment<byte>? GetOperatorCountryBytes() { return __p.__vector_as_arraysegment(118); }
#endif
  public byte[] GetOperatorCountryArray() { return __p.__vector_as_array<byte>(118); }
  /// Boolean indicating if the spacecraft was leased.
  /// Example: /// Example: True
  /// Constraints: No constraints specified.
  public bool Leased { get { int o = __p.__offset(120); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }
  /// Spacecraft order date.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string OrderDate { get { int o = __p.__offset(122); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrderDateBytes() { return __p.__vector_as_span<byte>(122, 1); }
#else
  public ArraySegment<byte>? GetOrderDateBytes() { return __p.__vector_as_arraysegment(122); }
#endif
  public byte[] GetOrderDateArray() { return __p.__vector_as_array<byte>(122); }
  /// Total capability lost as a percent fraction.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double CapabilityLost { get { int o = __p.__offset(124); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Total capacity lost as a percent fraction.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double CapacityLost { get { int o = __p.__offset(126); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft primary mission and group.
  /// Example: /// Example: primaryMissionGroup
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string PrimaryMissionGroup { get { int o = __p.__offset(128); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetPrimaryMissionGroupBytes() { return __p.__vector_as_span<byte>(128, 1); }
#else
  public ArraySegment<byte>? GetPrimaryMissionGroupBytes() { return __p.__vector_as_arraysegment(128); }
#endif
  public byte[] GetPrimaryMissionGroupArray() { return __p.__vector_as_array<byte>(128); }
  /// Spacecraft additional missions and groups.
  /// Example: /// Example: additionalMissionsGroups
  /// Constraints: Minimum length = 0, Maximum length = 256
  public string AdditionalMissionsGroups { get { int o = __p.__offset(130); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetAdditionalMissionsGroupsBytes() { return __p.__vector_as_span<byte>(130, 1); }
#else
  public ArraySegment<byte>? GetAdditionalMissionsGroupsBytes() { return __p.__vector_as_arraysegment(130); }
#endif
  public byte[] GetAdditionalMissionsGroupsArray() { return __p.__vector_as_array<byte>(130); }
  /// Number of insurance claims for this spacecraft.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int TotalClaims { get { int o = __p.__offset(132); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Number of injuries related to this spacecraft.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int TotalInjuries { get { int o = __p.__offset(134); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Number of fatalities related to this spacecraft.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int TotalFatalities { get { int o = __p.__offset(136); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Spacecraft name at launch.
  /// Example: /// Example: nameAtLaunch
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string NameAtLaunch { get { int o = __p.__offset(138); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameAtLaunchBytes() { return __p.__vector_as_span<byte>(138, 1); }
#else
  public ArraySegment<byte>? GetNameAtLaunchBytes() { return __p.__vector_as_arraysegment(138); }
#endif
  public byte[] GetNameAtLaunchArray() { return __p.__vector_as_array<byte>(138); }
  /// Spacecraft Bus ID.
  /// Example: /// Example: BUS-ID
  /// Constraints: Minimum length = 0, Maximum length = 36
  public string BusId { get { int o = __p.__offset(140); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetBusIdBytes() { return __p.__vector_as_span<byte>(140, 1); }
#else
  public ArraySegment<byte>? GetBusIdBytes() { return __p.__vector_as_arraysegment(140); }
#endif
  public byte[] GetBusIdArray() { return __p.__vector_as_array<byte>(140); }
  /// Current age in years.
  /// Example: /// Example: 5.898630136986301
  /// Constraints: No constraints specified.
  public double CurrentAge { get { int o = __p.__offset(142); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft life lost as a percent fraction.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double LifeLost { get { int o = __p.__offset(144); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// WGS84 longitude of the spacecraft’s latest GEO position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
  /// Example: /// Example: -8.23
  /// Constraints: No constraints specified.
  public double GeoPosition { get { int o = __p.__offset(146); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft total insurance losses as a fraction.
  /// Example: /// Example: 0.393
  /// Constraints: No constraints specified.
  public double InsuranceLossesTotal { get { int o = __p.__offset(148); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft launch arranger.
  /// Example: /// Example: launchArranger
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchArranger { get { int o = __p.__offset(150); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchArrangerBytes() { return __p.__vector_as_span<byte>(150, 1); }
#else
  public ArraySegment<byte>? GetLaunchArrangerBytes() { return __p.__vector_as_arraysegment(150); }
#endif
  public byte[] GetLaunchArrangerArray() { return __p.__vector_as_array<byte>(150); }
  /// Spacecraft launch arranger country.
  /// Example: /// Example: USA
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string LaunchArrangerCountry { get { int o = __p.__offset(152); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchArrangerCountryBytes() { return __p.__vector_as_span<byte>(152, 1); }
#else
  public ArraySegment<byte>? GetLaunchArrangerCountryBytes() { return __p.__vector_as_arraysegment(152); }
#endif
  public byte[] GetLaunchArrangerCountryArray() { return __p.__vector_as_array<byte>(152); }
  /// Spacecraft serial number.
  /// Example: /// Example: serialNumber
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string SerialNumber { get { int o = __p.__offset(154); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSerialNumberBytes() { return __p.__vector_as_span<byte>(154, 1); }
#else
  public ArraySegment<byte>? GetSerialNumberBytes() { return __p.__vector_as_arraysegment(154); }
#endif
  public byte[] GetSerialNumberArray() { return __p.__vector_as_array<byte>(154); }
  /// Spacecraft program name.
  /// Example: /// Example: programName
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ProgramName { get { int o = __p.__offset(156); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetProgramNameBytes() { return __p.__vector_as_span<byte>(156, 1); }
#else
  public ArraySegment<byte>? GetProgramNameBytes() { return __p.__vector_as_arraysegment(156); }
#endif
  public byte[] GetProgramNameArray() { return __p.__vector_as_array<byte>(156); }
  /// Spacecraft reused hull name.
  /// Example: /// Example: reusedHullName
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ReusedHullName { get { int o = __p.__offset(158); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReusedHullNameBytes() { return __p.__vector_as_span<byte>(158, 1); }
#else
  public ArraySegment<byte>? GetReusedHullNameBytes() { return __p.__vector_as_arraysegment(158); }
#endif
  public byte[] GetReusedHullNameArray() { return __p.__vector_as_array<byte>(158); }
  /// Spacecraft date of observation.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string DateOfObservation { get { int o = __p.__offset(160); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDateOfObservationBytes() { return __p.__vector_as_span<byte>(160, 1); }
#else
  public ArraySegment<byte>? GetDateOfObservationBytes() { return __p.__vector_as_arraysegment(160); }
#endif
  public byte[] GetDateOfObservationArray() { return __p.__vector_as_array<byte>(160); }
  /// Spacecraft latest latitude in degrees.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Lat { get { int o = __p.__offset(162); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft latest longitude in degrees.
  /// Example: /// Example: 1.23
  /// Constraints: No constraints specified.
  public double Lon { get { int o = __p.__offset(164); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft latest altitude in km.
  /// Example: /// Example: 36036.6330576414
  /// Constraints: No constraints specified.
  public double Altitude { get { int o = __p.__offset(166); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft collision risk 1mm sqm latest.
  /// Example: /// Example: 1.33
  /// Constraints: No constraints specified.
  public double CollisionRiskMM { get { int o = __p.__offset(168); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft collision risk 1cm sqm latest.
  /// Example: /// Example: 1.43
  /// Constraints: No constraints specified.
  public double CollisionRiskCM { get { int o = __p.__offset(170); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Spacecraft quantity.
  /// Example: /// Example: 1
  /// Constraints: No constraints specified.
  public int Quantity { get { int o = __p.__offset(172); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// Spacecraft reusable flights.
  /// Example: /// Example: reusableFlights
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string ReusableFlights { get { int o = __p.__offset(174); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReusableFlightsBytes() { return __p.__vector_as_span<byte>(174, 1); }
#else
  public ArraySegment<byte>? GetReusableFlightsBytes() { return __p.__vector_as_arraysegment(174); }
#endif
  public byte[] GetReusableFlightsArray() { return __p.__vector_as_array<byte>(174); }
  /// Notes on the spacecraft.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string Notes { get { int o = __p.__offset(176); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNotesBytes() { return __p.__vector_as_span<byte>(176, 1); }
#else
  public ArraySegment<byte>? GetNotesBytes() { return __p.__vector_as_arraysegment(176); }
#endif
  public byte[] GetNotesArray() { return __p.__vector_as_array<byte>(176); }
  /// Insurance notes for the spacecraft.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string InsuranceNotes { get { int o = __p.__offset(178); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetInsuranceNotesBytes() { return __p.__vector_as_span<byte>(178, 1); }
#else
  public ArraySegment<byte>? GetInsuranceNotesBytes() { return __p.__vector_as_arraysegment(178); }
#endif
  public byte[] GetInsuranceNotesArray() { return __p.__vector_as_array<byte>(178); }
  /// Insurance notes for the spacecraft.
  /// Example: /// Example: Sample Notes
  /// Constraints: Minimum length = 0, Maximum length = 2147483647
  public string LaunchNotes { get { int o = __p.__offset(180); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetLaunchNotesBytes() { return __p.__vector_as_span<byte>(180, 1); }
#else
  public ArraySegment<byte>? GetLaunchNotesBytes() { return __p.__vector_as_arraysegment(180); }
#endif
  public byte[] GetLaunchNotesArray() { return __p.__vector_as_array<byte>(180); }
  /// Source of the data.
  /// Example: /// Example: Bluestaq
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string Source { get { int o = __p.__offset(182); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetSourceBytes() { return __p.__vector_as_span<byte>(182, 1); }
#else
  public ArraySegment<byte>? GetSourceBytes() { return __p.__vector_as_arraysegment(182); }
#endif
  public byte[] GetSourceArray() { return __p.__vector_as_array<byte>(182); }
  /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  /// Example: /// Example: THIRD_PARTY_DATASOURCE
  /// Constraints: Minimum length = 0, Maximum length = 64
  public string Origin { get { int o = __p.__offset(184); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOriginBytes() { return __p.__vector_as_span<byte>(184, 1); }
#else
  public ArraySegment<byte>? GetOriginBytes() { return __p.__vector_as_arraysegment(184); }
#endif
  public byte[] GetOriginArray() { return __p.__vector_as_array<byte>(184); }
  /// The originating source network on which this record was created, auto-populated by the system.
  /// Example: /// Example: ORIG
  /// Constraints: Minimum length = 1, Maximum length = 32
  public string OrigNetwork { get { int o = __p.__offset(186); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetOrigNetworkBytes() { return __p.__vector_as_span<byte>(186, 1); }
#else
  public ArraySegment<byte>? GetOrigNetworkBytes() { return __p.__vector_as_arraysegment(186); }
#endif
  public byte[] GetOrigNetworkArray() { return __p.__vector_as_array<byte>(186); }
  /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  /// Example: /// Example: TEST
  /// Constraints: Minimum length = 1, Maximum length = 32
  public SeradataSpacecraftDetails_Abridged_dataMode_Enum DataMode { get { int o = __p.__offset(188); return o != 0 ? (SeradataSpacecraftDetails_Abridged_dataMode_Enum)__p.bb.GetSbyte(o + __p.bb_pos) : SeradataSpacecraftDetails_Abridged_dataMode_Enum.REAL; } }
  /// Time the row was created in the database, auto-populated by the system.
  /// Example: /// Example: 2018-01-01T16:00:00.123Z
  /// Constraints: No constraints specified.
  public string CreatedAt { get { int o = __p.__offset(190); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedAtBytes() { return __p.__vector_as_span<byte>(190, 1); }
#else
  public ArraySegment<byte>? GetCreatedAtBytes() { return __p.__vector_as_arraysegment(190); }
#endif
  public byte[] GetCreatedAtArray() { return __p.__vector_as_array<byte>(190); }
  /// Application user who created the row in the database, auto-populated by the system.
  /// Example: /// Example: some.user
  /// Constraints: Minimum length = 1, Maximum length = 64
  public string CreatedBy { get { int o = __p.__offset(192); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetCreatedByBytes() { return __p.__vector_as_span<byte>(192, 1); }
#else
  public ArraySegment<byte>? GetCreatedByBytes() { return __p.__vector_as_arraysegment(192); }
#endif
  public byte[] GetCreatedByArray() { return __p.__vector_as_array<byte>(192); }

  public static Offset<SeradataSpacecraftDetails_Abridged> CreateSeradataSpacecraftDetails_Abridged(FlatBufferBuilder builder,
      StringOffset idOffset = default(StringOffset),
      StringOffset idOnOrbitOffset = default(StringOffset),
      StringOffset classificationMarkingOffset = default(StringOffset),
      StringOffset nameOffset = default(StringOffset),
      StringOffset descriptionOffset = default(StringOffset),
      StringOffset intlNumberOffset = default(StringOffset),
      StringOffset sectorOffset = default(StringOffset),
      double apogee = 0.0,
      double perigee = 0.0,
      double period = 0.0,
      double inclination = 0.0,
      StringOffset primeManufacturerOrgIdOffset = default(StringOffset),
      StringOffset stabilizerOffset = default(StringOffset),
      int designLife = 0,
      int expectedLife = 0,
      bool insuredAtLaunch = false,
      double launchMass = 0.0,
      double dryMass = 0.0,
      int catalogNumber = 0,
      double totalPayloadPower = 0.0,
      StringOffset constellationOffset = default(StringOffset),
      StringOffset orbitCategoryOffset = default(StringOffset),
      StringOffset orbitSubCategoryOffset = default(StringOffset),
      double launchCost = 0.0,
      bool launchCostEstimated = false,
      bool costEstimated = false,
      double newCost = 0.0,
      double combinedNewCost = 0.0,
      bool combinedCostEstimated = false,
      double insuredValueAtLaunch = 0.0,
      bool insuredValueLaunchEstimated = false,
      double annualInsuredDepreciationFactor = 0.0,
      bool annualInsuredDepreciationFactorEstimated = false,
      double insurancePremiumAtLaunch = 0.0,
      bool insurancePremiumAtLaunchEstimated = false,
      int numHumans = 0,
      StringOffset cubesatDispenserTypeOffset = default(StringOffset),
      StringOffset massCategoryOffset = default(StringOffset),
      StringOffset launchIdOffset = default(StringOffset),
      StringOffset launchVehicleIdOffset = default(StringOffset),
      StringOffset launchProviderFlightNumberOffset = default(StringOffset),
      StringOffset launchSiteNameOffset = default(StringOffset),
      StringOffset launchSiteIdOffset = default(StringOffset),
      StringOffset launchCountryOffset = default(StringOffset),
      StringOffset launchProviderOffset = default(StringOffset),
      StringOffset launchProviderCountryOffset = default(StringOffset),
      bool commercialLaunch = false,
      StringOffset launchTypeOffset = default(StringOffset),
      StringOffset launchCharacteristicOffset = default(StringOffset),
      StringOffset launchNumberOffset = default(StringOffset),
      StringOffset launchDateOffset = default(StringOffset),
      StringOffset launchDateRemarksOffset = default(StringOffset),
      StringOffset youtubeLaunchLinkOffset = default(StringOffset),
      StringOffset statusOffset = default(StringOffset),
      StringOffset ownerOffset = default(StringOffset),
      StringOffset ownerCountryOffset = default(StringOffset),
      StringOffset @operatorOffset = default(StringOffset),
      StringOffset operatorCountryOffset = default(StringOffset),
      bool leased = false,
      StringOffset orderDateOffset = default(StringOffset),
      double capabilityLost = 0.0,
      double capacityLost = 0.0,
      StringOffset primaryMissionGroupOffset = default(StringOffset),
      StringOffset additionalMissionsGroupsOffset = default(StringOffset),
      int totalClaims = 0,
      int totalInjuries = 0,
      int totalFatalities = 0,
      StringOffset nameAtLaunchOffset = default(StringOffset),
      StringOffset busIdOffset = default(StringOffset),
      double currentAge = 0.0,
      double lifeLost = 0.0,
      double geoPosition = 0.0,
      double insuranceLossesTotal = 0.0,
      StringOffset launchArrangerOffset = default(StringOffset),
      StringOffset launchArrangerCountryOffset = default(StringOffset),
      StringOffset serialNumberOffset = default(StringOffset),
      StringOffset programNameOffset = default(StringOffset),
      StringOffset reusedHullNameOffset = default(StringOffset),
      StringOffset dateOfObservationOffset = default(StringOffset),
      double lat = 0.0,
      double lon = 0.0,
      double altitude = 0.0,
      double collisionRiskMM = 0.0,
      double collisionRiskCM = 0.0,
      int quantity = 0,
      StringOffset reusableFlightsOffset = default(StringOffset),
      StringOffset notesOffset = default(StringOffset),
      StringOffset insuranceNotesOffset = default(StringOffset),
      StringOffset launchNotesOffset = default(StringOffset),
      StringOffset sourceOffset = default(StringOffset),
      StringOffset originOffset = default(StringOffset),
      StringOffset origNetworkOffset = default(StringOffset),
      SeradataSpacecraftDetails_Abridged_dataMode_Enum dataMode = SeradataSpacecraftDetails_Abridged_dataMode_Enum.REAL,
      StringOffset createdAtOffset = default(StringOffset),
      StringOffset createdByOffset = default(StringOffset)) {
    builder.StartTable(95);
    SeradataSpacecraftDetails_Abridged.AddCollisionRiskCM(builder, collisionRiskCM);
    SeradataSpacecraftDetails_Abridged.AddCollisionRiskMM(builder, collisionRiskMM);
    SeradataSpacecraftDetails_Abridged.AddAltitude(builder, altitude);
    SeradataSpacecraftDetails_Abridged.AddLon(builder, lon);
    SeradataSpacecraftDetails_Abridged.AddLat(builder, lat);
    SeradataSpacecraftDetails_Abridged.AddInsuranceLossesTotal(builder, insuranceLossesTotal);
    SeradataSpacecraftDetails_Abridged.AddGeoPosition(builder, geoPosition);
    SeradataSpacecraftDetails_Abridged.AddLifeLost(builder, lifeLost);
    SeradataSpacecraftDetails_Abridged.AddCurrentAge(builder, currentAge);
    SeradataSpacecraftDetails_Abridged.AddCapacityLost(builder, capacityLost);
    SeradataSpacecraftDetails_Abridged.AddCapabilityLost(builder, capabilityLost);
    SeradataSpacecraftDetails_Abridged.AddInsurancePremiumAtLaunch(builder, insurancePremiumAtLaunch);
    SeradataSpacecraftDetails_Abridged.AddAnnualInsuredDepreciationFactor(builder, annualInsuredDepreciationFactor);
    SeradataSpacecraftDetails_Abridged.AddInsuredValueAtLaunch(builder, insuredValueAtLaunch);
    SeradataSpacecraftDetails_Abridged.AddCombinedNewCost(builder, combinedNewCost);
    SeradataSpacecraftDetails_Abridged.AddNewCost(builder, newCost);
    SeradataSpacecraftDetails_Abridged.AddLaunchCost(builder, launchCost);
    SeradataSpacecraftDetails_Abridged.AddTotalPayloadPower(builder, totalPayloadPower);
    SeradataSpacecraftDetails_Abridged.AddDryMass(builder, dryMass);
    SeradataSpacecraftDetails_Abridged.AddLaunchMass(builder, launchMass);
    SeradataSpacecraftDetails_Abridged.AddInclination(builder, inclination);
    SeradataSpacecraftDetails_Abridged.AddPeriod(builder, period);
    SeradataSpacecraftDetails_Abridged.AddPerigee(builder, perigee);
    SeradataSpacecraftDetails_Abridged.AddApogee(builder, apogee);
    SeradataSpacecraftDetails_Abridged.AddCreatedBy(builder, createdByOffset);
    SeradataSpacecraftDetails_Abridged.AddCreatedAt(builder, createdAtOffset);
    SeradataSpacecraftDetails_Abridged.AddOrigNetwork(builder, origNetworkOffset);
    SeradataSpacecraftDetails_Abridged.AddOrigin(builder, originOffset);
    SeradataSpacecraftDetails_Abridged.AddSource(builder, sourceOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchNotes(builder, launchNotesOffset);
    SeradataSpacecraftDetails_Abridged.AddInsuranceNotes(builder, insuranceNotesOffset);
    SeradataSpacecraftDetails_Abridged.AddNotes(builder, notesOffset);
    SeradataSpacecraftDetails_Abridged.AddReusableFlights(builder, reusableFlightsOffset);
    SeradataSpacecraftDetails_Abridged.AddQuantity(builder, quantity);
    SeradataSpacecraftDetails_Abridged.AddDateOfObservation(builder, dateOfObservationOffset);
    SeradataSpacecraftDetails_Abridged.AddReusedHullName(builder, reusedHullNameOffset);
    SeradataSpacecraftDetails_Abridged.AddProgramName(builder, programNameOffset);
    SeradataSpacecraftDetails_Abridged.AddSerialNumber(builder, serialNumberOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchArrangerCountry(builder, launchArrangerCountryOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchArranger(builder, launchArrangerOffset);
    SeradataSpacecraftDetails_Abridged.AddBusId(builder, busIdOffset);
    SeradataSpacecraftDetails_Abridged.AddNameAtLaunch(builder, nameAtLaunchOffset);
    SeradataSpacecraftDetails_Abridged.AddTotalFatalities(builder, totalFatalities);
    SeradataSpacecraftDetails_Abridged.AddTotalInjuries(builder, totalInjuries);
    SeradataSpacecraftDetails_Abridged.AddTotalClaims(builder, totalClaims);
    SeradataSpacecraftDetails_Abridged.AddAdditionalMissionsGroups(builder, additionalMissionsGroupsOffset);
    SeradataSpacecraftDetails_Abridged.AddPrimaryMissionGroup(builder, primaryMissionGroupOffset);
    SeradataSpacecraftDetails_Abridged.AddOrderDate(builder, orderDateOffset);
    SeradataSpacecraftDetails_Abridged.AddOperatorCountry(builder, operatorCountryOffset);
    SeradataSpacecraftDetails_Abridged.AddOperator(builder, @operatorOffset);
    SeradataSpacecraftDetails_Abridged.AddOwnerCountry(builder, ownerCountryOffset);
    SeradataSpacecraftDetails_Abridged.AddOwner(builder, ownerOffset);
    SeradataSpacecraftDetails_Abridged.AddStatus(builder, statusOffset);
    SeradataSpacecraftDetails_Abridged.AddYoutubeLaunchLink(builder, youtubeLaunchLinkOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchDateRemarks(builder, launchDateRemarksOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchDate(builder, launchDateOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchNumber(builder, launchNumberOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchCharacteristic(builder, launchCharacteristicOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchType(builder, launchTypeOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchProviderCountry(builder, launchProviderCountryOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchProvider(builder, launchProviderOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchCountry(builder, launchCountryOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchSiteId(builder, launchSiteIdOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchSiteName(builder, launchSiteNameOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchProviderFlightNumber(builder, launchProviderFlightNumberOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchVehicleId(builder, launchVehicleIdOffset);
    SeradataSpacecraftDetails_Abridged.AddLaunchId(builder, launchIdOffset);
    SeradataSpacecraftDetails_Abridged.AddMassCategory(builder, massCategoryOffset);
    SeradataSpacecraftDetails_Abridged.AddCubesatDispenserType(builder, cubesatDispenserTypeOffset);
    SeradataSpacecraftDetails_Abridged.AddNumHumans(builder, numHumans);
    SeradataSpacecraftDetails_Abridged.AddOrbitSubCategory(builder, orbitSubCategoryOffset);
    SeradataSpacecraftDetails_Abridged.AddOrbitCategory(builder, orbitCategoryOffset);
    SeradataSpacecraftDetails_Abridged.AddConstellation(builder, constellationOffset);
    SeradataSpacecraftDetails_Abridged.AddCatalogNumber(builder, catalogNumber);
    SeradataSpacecraftDetails_Abridged.AddExpectedLife(builder, expectedLife);
    SeradataSpacecraftDetails_Abridged.AddDesignLife(builder, designLife);
    SeradataSpacecraftDetails_Abridged.AddStabilizer(builder, stabilizerOffset);
    SeradataSpacecraftDetails_Abridged.AddPrimeManufacturerOrgId(builder, primeManufacturerOrgIdOffset);
    SeradataSpacecraftDetails_Abridged.AddSector(builder, sectorOffset);
    SeradataSpacecraftDetails_Abridged.AddIntlNumber(builder, intlNumberOffset);
    SeradataSpacecraftDetails_Abridged.AddDescription(builder, descriptionOffset);
    SeradataSpacecraftDetails_Abridged.AddName(builder, nameOffset);
    SeradataSpacecraftDetails_Abridged.AddClassificationMarking(builder, classificationMarkingOffset);
    SeradataSpacecraftDetails_Abridged.AddIdOnOrbit(builder, idOnOrbitOffset);
    SeradataSpacecraftDetails_Abridged.AddId(builder, idOffset);
    SeradataSpacecraftDetails_Abridged.AddDataMode(builder, dataMode);
    SeradataSpacecraftDetails_Abridged.AddLeased(builder, leased);
    SeradataSpacecraftDetails_Abridged.AddCommercialLaunch(builder, commercialLaunch);
    SeradataSpacecraftDetails_Abridged.AddInsurancePremiumAtLaunchEstimated(builder, insurancePremiumAtLaunchEstimated);
    SeradataSpacecraftDetails_Abridged.AddAnnualInsuredDepreciationFactorEstimated(builder, annualInsuredDepreciationFactorEstimated);
    SeradataSpacecraftDetails_Abridged.AddInsuredValueLaunchEstimated(builder, insuredValueLaunchEstimated);
    SeradataSpacecraftDetails_Abridged.AddCombinedCostEstimated(builder, combinedCostEstimated);
    SeradataSpacecraftDetails_Abridged.AddCostEstimated(builder, costEstimated);
    SeradataSpacecraftDetails_Abridged.AddLaunchCostEstimated(builder, launchCostEstimated);
    SeradataSpacecraftDetails_Abridged.AddInsuredAtLaunch(builder, insuredAtLaunch);
    return SeradataSpacecraftDetails_Abridged.EndSeradataSpacecraftDetails_Abridged(builder);
  }

  public static void StartSeradataSpacecraftDetails_Abridged(FlatBufferBuilder builder) { builder.StartTable(95); }
  public static void AddId(FlatBufferBuilder builder, StringOffset idOffset) { builder.AddOffset(0, idOffset.Value, 0); }
  public static void AddIdOnOrbit(FlatBufferBuilder builder, StringOffset idOnOrbitOffset) { builder.AddOffset(1, idOnOrbitOffset.Value, 0); }
  public static void AddClassificationMarking(FlatBufferBuilder builder, StringOffset classificationMarkingOffset) { builder.AddOffset(2, classificationMarkingOffset.Value, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(3, nameOffset.Value, 0); }
  public static void AddDescription(FlatBufferBuilder builder, StringOffset descriptionOffset) { builder.AddOffset(4, descriptionOffset.Value, 0); }
  public static void AddIntlNumber(FlatBufferBuilder builder, StringOffset intlNumberOffset) { builder.AddOffset(5, intlNumberOffset.Value, 0); }
  public static void AddSector(FlatBufferBuilder builder, StringOffset sectorOffset) { builder.AddOffset(6, sectorOffset.Value, 0); }
  public static void AddApogee(FlatBufferBuilder builder, double apogee) { builder.AddDouble(7, apogee, 0.0); }
  public static void AddPerigee(FlatBufferBuilder builder, double perigee) { builder.AddDouble(8, perigee, 0.0); }
  public static void AddPeriod(FlatBufferBuilder builder, double period) { builder.AddDouble(9, period, 0.0); }
  public static void AddInclination(FlatBufferBuilder builder, double inclination) { builder.AddDouble(10, inclination, 0.0); }
  public static void AddPrimeManufacturerOrgId(FlatBufferBuilder builder, StringOffset primeManufacturerOrgIdOffset) { builder.AddOffset(11, primeManufacturerOrgIdOffset.Value, 0); }
  public static void AddStabilizer(FlatBufferBuilder builder, StringOffset stabilizerOffset) { builder.AddOffset(12, stabilizerOffset.Value, 0); }
  public static void AddDesignLife(FlatBufferBuilder builder, int designLife) { builder.AddInt(13, designLife, 0); }
  public static void AddExpectedLife(FlatBufferBuilder builder, int expectedLife) { builder.AddInt(14, expectedLife, 0); }
  public static void AddInsuredAtLaunch(FlatBufferBuilder builder, bool insuredAtLaunch) { builder.AddBool(15, insuredAtLaunch, false); }
  public static void AddLaunchMass(FlatBufferBuilder builder, double launchMass) { builder.AddDouble(16, launchMass, 0.0); }
  public static void AddDryMass(FlatBufferBuilder builder, double dryMass) { builder.AddDouble(17, dryMass, 0.0); }
  public static void AddCatalogNumber(FlatBufferBuilder builder, int catalogNumber) { builder.AddInt(18, catalogNumber, 0); }
  public static void AddTotalPayloadPower(FlatBufferBuilder builder, double totalPayloadPower) { builder.AddDouble(19, totalPayloadPower, 0.0); }
  public static void AddConstellation(FlatBufferBuilder builder, StringOffset constellationOffset) { builder.AddOffset(20, constellationOffset.Value, 0); }
  public static void AddOrbitCategory(FlatBufferBuilder builder, StringOffset orbitCategoryOffset) { builder.AddOffset(21, orbitCategoryOffset.Value, 0); }
  public static void AddOrbitSubCategory(FlatBufferBuilder builder, StringOffset orbitSubCategoryOffset) { builder.AddOffset(22, orbitSubCategoryOffset.Value, 0); }
  public static void AddLaunchCost(FlatBufferBuilder builder, double launchCost) { builder.AddDouble(23, launchCost, 0.0); }
  public static void AddLaunchCostEstimated(FlatBufferBuilder builder, bool launchCostEstimated) { builder.AddBool(24, launchCostEstimated, false); }
  public static void AddCostEstimated(FlatBufferBuilder builder, bool costEstimated) { builder.AddBool(25, costEstimated, false); }
  public static void AddNewCost(FlatBufferBuilder builder, double newCost) { builder.AddDouble(26, newCost, 0.0); }
  public static void AddCombinedNewCost(FlatBufferBuilder builder, double combinedNewCost) { builder.AddDouble(27, combinedNewCost, 0.0); }
  public static void AddCombinedCostEstimated(FlatBufferBuilder builder, bool combinedCostEstimated) { builder.AddBool(28, combinedCostEstimated, false); }
  public static void AddInsuredValueAtLaunch(FlatBufferBuilder builder, double insuredValueAtLaunch) { builder.AddDouble(29, insuredValueAtLaunch, 0.0); }
  public static void AddInsuredValueLaunchEstimated(FlatBufferBuilder builder, bool insuredValueLaunchEstimated) { builder.AddBool(30, insuredValueLaunchEstimated, false); }
  public static void AddAnnualInsuredDepreciationFactor(FlatBufferBuilder builder, double annualInsuredDepreciationFactor) { builder.AddDouble(31, annualInsuredDepreciationFactor, 0.0); }
  public static void AddAnnualInsuredDepreciationFactorEstimated(FlatBufferBuilder builder, bool annualInsuredDepreciationFactorEstimated) { builder.AddBool(32, annualInsuredDepreciationFactorEstimated, false); }
  public static void AddInsurancePremiumAtLaunch(FlatBufferBuilder builder, double insurancePremiumAtLaunch) { builder.AddDouble(33, insurancePremiumAtLaunch, 0.0); }
  public static void AddInsurancePremiumAtLaunchEstimated(FlatBufferBuilder builder, bool insurancePremiumAtLaunchEstimated) { builder.AddBool(34, insurancePremiumAtLaunchEstimated, false); }
  public static void AddNumHumans(FlatBufferBuilder builder, int numHumans) { builder.AddInt(35, numHumans, 0); }
  public static void AddCubesatDispenserType(FlatBufferBuilder builder, StringOffset cubesatDispenserTypeOffset) { builder.AddOffset(36, cubesatDispenserTypeOffset.Value, 0); }
  public static void AddMassCategory(FlatBufferBuilder builder, StringOffset massCategoryOffset) { builder.AddOffset(37, massCategoryOffset.Value, 0); }
  public static void AddLaunchId(FlatBufferBuilder builder, StringOffset launchIdOffset) { builder.AddOffset(38, launchIdOffset.Value, 0); }
  public static void AddLaunchVehicleId(FlatBufferBuilder builder, StringOffset launchVehicleIdOffset) { builder.AddOffset(39, launchVehicleIdOffset.Value, 0); }
  public static void AddLaunchProviderFlightNumber(FlatBufferBuilder builder, StringOffset launchProviderFlightNumberOffset) { builder.AddOffset(40, launchProviderFlightNumberOffset.Value, 0); }
  public static void AddLaunchSiteName(FlatBufferBuilder builder, StringOffset launchSiteNameOffset) { builder.AddOffset(41, launchSiteNameOffset.Value, 0); }
  public static void AddLaunchSiteId(FlatBufferBuilder builder, StringOffset launchSiteIdOffset) { builder.AddOffset(42, launchSiteIdOffset.Value, 0); }
  public static void AddLaunchCountry(FlatBufferBuilder builder, StringOffset launchCountryOffset) { builder.AddOffset(43, launchCountryOffset.Value, 0); }
  public static void AddLaunchProvider(FlatBufferBuilder builder, StringOffset launchProviderOffset) { builder.AddOffset(44, launchProviderOffset.Value, 0); }
  public static void AddLaunchProviderCountry(FlatBufferBuilder builder, StringOffset launchProviderCountryOffset) { builder.AddOffset(45, launchProviderCountryOffset.Value, 0); }
  public static void AddCommercialLaunch(FlatBufferBuilder builder, bool commercialLaunch) { builder.AddBool(46, commercialLaunch, false); }
  public static void AddLaunchType(FlatBufferBuilder builder, StringOffset launchTypeOffset) { builder.AddOffset(47, launchTypeOffset.Value, 0); }
  public static void AddLaunchCharacteristic(FlatBufferBuilder builder, StringOffset launchCharacteristicOffset) { builder.AddOffset(48, launchCharacteristicOffset.Value, 0); }
  public static void AddLaunchNumber(FlatBufferBuilder builder, StringOffset launchNumberOffset) { builder.AddOffset(49, launchNumberOffset.Value, 0); }
  public static void AddLaunchDate(FlatBufferBuilder builder, StringOffset launchDateOffset) { builder.AddOffset(50, launchDateOffset.Value, 0); }
  public static void AddLaunchDateRemarks(FlatBufferBuilder builder, StringOffset launchDateRemarksOffset) { builder.AddOffset(51, launchDateRemarksOffset.Value, 0); }
  public static void AddYoutubeLaunchLink(FlatBufferBuilder builder, StringOffset youtubeLaunchLinkOffset) { builder.AddOffset(52, youtubeLaunchLinkOffset.Value, 0); }
  public static void AddStatus(FlatBufferBuilder builder, StringOffset statusOffset) { builder.AddOffset(53, statusOffset.Value, 0); }
  public static void AddOwner(FlatBufferBuilder builder, StringOffset ownerOffset) { builder.AddOffset(54, ownerOffset.Value, 0); }
  public static void AddOwnerCountry(FlatBufferBuilder builder, StringOffset ownerCountryOffset) { builder.AddOffset(55, ownerCountryOffset.Value, 0); }
  public static void AddOperator(FlatBufferBuilder builder, StringOffset operatorOffset) { builder.AddOffset(56, operatorOffset.Value, 0); }
  public static void AddOperatorCountry(FlatBufferBuilder builder, StringOffset operatorCountryOffset) { builder.AddOffset(57, operatorCountryOffset.Value, 0); }
  public static void AddLeased(FlatBufferBuilder builder, bool leased) { builder.AddBool(58, leased, false); }
  public static void AddOrderDate(FlatBufferBuilder builder, StringOffset orderDateOffset) { builder.AddOffset(59, orderDateOffset.Value, 0); }
  public static void AddCapabilityLost(FlatBufferBuilder builder, double capabilityLost) { builder.AddDouble(60, capabilityLost, 0.0); }
  public static void AddCapacityLost(FlatBufferBuilder builder, double capacityLost) { builder.AddDouble(61, capacityLost, 0.0); }
  public static void AddPrimaryMissionGroup(FlatBufferBuilder builder, StringOffset primaryMissionGroupOffset) { builder.AddOffset(62, primaryMissionGroupOffset.Value, 0); }
  public static void AddAdditionalMissionsGroups(FlatBufferBuilder builder, StringOffset additionalMissionsGroupsOffset) { builder.AddOffset(63, additionalMissionsGroupsOffset.Value, 0); }
  public static void AddTotalClaims(FlatBufferBuilder builder, int totalClaims) { builder.AddInt(64, totalClaims, 0); }
  public static void AddTotalInjuries(FlatBufferBuilder builder, int totalInjuries) { builder.AddInt(65, totalInjuries, 0); }
  public static void AddTotalFatalities(FlatBufferBuilder builder, int totalFatalities) { builder.AddInt(66, totalFatalities, 0); }
  public static void AddNameAtLaunch(FlatBufferBuilder builder, StringOffset nameAtLaunchOffset) { builder.AddOffset(67, nameAtLaunchOffset.Value, 0); }
  public static void AddBusId(FlatBufferBuilder builder, StringOffset busIdOffset) { builder.AddOffset(68, busIdOffset.Value, 0); }
  public static void AddCurrentAge(FlatBufferBuilder builder, double currentAge) { builder.AddDouble(69, currentAge, 0.0); }
  public static void AddLifeLost(FlatBufferBuilder builder, double lifeLost) { builder.AddDouble(70, lifeLost, 0.0); }
  public static void AddGeoPosition(FlatBufferBuilder builder, double geoPosition) { builder.AddDouble(71, geoPosition, 0.0); }
  public static void AddInsuranceLossesTotal(FlatBufferBuilder builder, double insuranceLossesTotal) { builder.AddDouble(72, insuranceLossesTotal, 0.0); }
  public static void AddLaunchArranger(FlatBufferBuilder builder, StringOffset launchArrangerOffset) { builder.AddOffset(73, launchArrangerOffset.Value, 0); }
  public static void AddLaunchArrangerCountry(FlatBufferBuilder builder, StringOffset launchArrangerCountryOffset) { builder.AddOffset(74, launchArrangerCountryOffset.Value, 0); }
  public static void AddSerialNumber(FlatBufferBuilder builder, StringOffset serialNumberOffset) { builder.AddOffset(75, serialNumberOffset.Value, 0); }
  public static void AddProgramName(FlatBufferBuilder builder, StringOffset programNameOffset) { builder.AddOffset(76, programNameOffset.Value, 0); }
  public static void AddReusedHullName(FlatBufferBuilder builder, StringOffset reusedHullNameOffset) { builder.AddOffset(77, reusedHullNameOffset.Value, 0); }
  public static void AddDateOfObservation(FlatBufferBuilder builder, StringOffset dateOfObservationOffset) { builder.AddOffset(78, dateOfObservationOffset.Value, 0); }
  public static void AddLat(FlatBufferBuilder builder, double lat) { builder.AddDouble(79, lat, 0.0); }
  public static void AddLon(FlatBufferBuilder builder, double lon) { builder.AddDouble(80, lon, 0.0); }
  public static void AddAltitude(FlatBufferBuilder builder, double altitude) { builder.AddDouble(81, altitude, 0.0); }
  public static void AddCollisionRiskMM(FlatBufferBuilder builder, double collisionRiskMM) { builder.AddDouble(82, collisionRiskMM, 0.0); }
  public static void AddCollisionRiskCM(FlatBufferBuilder builder, double collisionRiskCM) { builder.AddDouble(83, collisionRiskCM, 0.0); }
  public static void AddQuantity(FlatBufferBuilder builder, int quantity) { builder.AddInt(84, quantity, 0); }
  public static void AddReusableFlights(FlatBufferBuilder builder, StringOffset reusableFlightsOffset) { builder.AddOffset(85, reusableFlightsOffset.Value, 0); }
  public static void AddNotes(FlatBufferBuilder builder, StringOffset notesOffset) { builder.AddOffset(86, notesOffset.Value, 0); }
  public static void AddInsuranceNotes(FlatBufferBuilder builder, StringOffset insuranceNotesOffset) { builder.AddOffset(87, insuranceNotesOffset.Value, 0); }
  public static void AddLaunchNotes(FlatBufferBuilder builder, StringOffset launchNotesOffset) { builder.AddOffset(88, launchNotesOffset.Value, 0); }
  public static void AddSource(FlatBufferBuilder builder, StringOffset sourceOffset) { builder.AddOffset(89, sourceOffset.Value, 0); }
  public static void AddOrigin(FlatBufferBuilder builder, StringOffset originOffset) { builder.AddOffset(90, originOffset.Value, 0); }
  public static void AddOrigNetwork(FlatBufferBuilder builder, StringOffset origNetworkOffset) { builder.AddOffset(91, origNetworkOffset.Value, 0); }
  public static void AddDataMode(FlatBufferBuilder builder, SeradataSpacecraftDetails_Abridged_dataMode_Enum dataMode) { builder.AddSbyte(92, (sbyte)dataMode, 0); }
  public static void AddCreatedAt(FlatBufferBuilder builder, StringOffset createdAtOffset) { builder.AddOffset(93, createdAtOffset.Value, 0); }
  public static void AddCreatedBy(FlatBufferBuilder builder, StringOffset createdByOffset) { builder.AddOffset(94, createdByOffset.Value, 0); }
  public static Offset<SeradataSpacecraftDetails_Abridged> EndSeradataSpacecraftDetails_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SeradataSpacecraftDetails_Abridged>(o);
  }
  public static void FinishSeradataSpacecraftDetails_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataSpacecraftDetails_Abridged> offset) { builder.Finish(offset.Value, "SERA"); }
  public static void FinishSizePrefixedSeradataSpacecraftDetails_AbridgedBuffer(FlatBufferBuilder builder, Offset<SeradataSpacecraftDetails_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "SERA"); }
  public SeradataSpacecraftDetails_AbridgedT UnPack() {
    var _o = new SeradataSpacecraftDetails_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(SeradataSpacecraftDetails_AbridgedT _o) {
    _o.Id = this.Id;
    _o.IdOnOrbit = this.IdOnOrbit;
    _o.ClassificationMarking = this.ClassificationMarking;
    _o.Name = this.Name;
    _o.Description = this.Description;
    _o.IntlNumber = this.IntlNumber;
    _o.Sector = this.Sector;
    _o.Apogee = this.Apogee;
    _o.Perigee = this.Perigee;
    _o.Period = this.Period;
    _o.Inclination = this.Inclination;
    _o.PrimeManufacturerOrgId = this.PrimeManufacturerOrgId;
    _o.Stabilizer = this.Stabilizer;
    _o.DesignLife = this.DesignLife;
    _o.ExpectedLife = this.ExpectedLife;
    _o.InsuredAtLaunch = this.InsuredAtLaunch;
    _o.LaunchMass = this.LaunchMass;
    _o.DryMass = this.DryMass;
    _o.CatalogNumber = this.CatalogNumber;
    _o.TotalPayloadPower = this.TotalPayloadPower;
    _o.Constellation = this.Constellation;
    _o.OrbitCategory = this.OrbitCategory;
    _o.OrbitSubCategory = this.OrbitSubCategory;
    _o.LaunchCost = this.LaunchCost;
    _o.LaunchCostEstimated = this.LaunchCostEstimated;
    _o.CostEstimated = this.CostEstimated;
    _o.NewCost = this.NewCost;
    _o.CombinedNewCost = this.CombinedNewCost;
    _o.CombinedCostEstimated = this.CombinedCostEstimated;
    _o.InsuredValueAtLaunch = this.InsuredValueAtLaunch;
    _o.InsuredValueLaunchEstimated = this.InsuredValueLaunchEstimated;
    _o.AnnualInsuredDepreciationFactor = this.AnnualInsuredDepreciationFactor;
    _o.AnnualInsuredDepreciationFactorEstimated = this.AnnualInsuredDepreciationFactorEstimated;
    _o.InsurancePremiumAtLaunch = this.InsurancePremiumAtLaunch;
    _o.InsurancePremiumAtLaunchEstimated = this.InsurancePremiumAtLaunchEstimated;
    _o.NumHumans = this.NumHumans;
    _o.CubesatDispenserType = this.CubesatDispenserType;
    _o.MassCategory = this.MassCategory;
    _o.LaunchId = this.LaunchId;
    _o.LaunchVehicleId = this.LaunchVehicleId;
    _o.LaunchProviderFlightNumber = this.LaunchProviderFlightNumber;
    _o.LaunchSiteName = this.LaunchSiteName;
    _o.LaunchSiteId = this.LaunchSiteId;
    _o.LaunchCountry = this.LaunchCountry;
    _o.LaunchProvider = this.LaunchProvider;
    _o.LaunchProviderCountry = this.LaunchProviderCountry;
    _o.CommercialLaunch = this.CommercialLaunch;
    _o.LaunchType = this.LaunchType;
    _o.LaunchCharacteristic = this.LaunchCharacteristic;
    _o.LaunchNumber = this.LaunchNumber;
    _o.LaunchDate = this.LaunchDate;
    _o.LaunchDateRemarks = this.LaunchDateRemarks;
    _o.YoutubeLaunchLink = this.YoutubeLaunchLink;
    _o.Status = this.Status;
    _o.Owner = this.Owner;
    _o.OwnerCountry = this.OwnerCountry;
    _o.Operator = this.Operator;
    _o.OperatorCountry = this.OperatorCountry;
    _o.Leased = this.Leased;
    _o.OrderDate = this.OrderDate;
    _o.CapabilityLost = this.CapabilityLost;
    _o.CapacityLost = this.CapacityLost;
    _o.PrimaryMissionGroup = this.PrimaryMissionGroup;
    _o.AdditionalMissionsGroups = this.AdditionalMissionsGroups;
    _o.TotalClaims = this.TotalClaims;
    _o.TotalInjuries = this.TotalInjuries;
    _o.TotalFatalities = this.TotalFatalities;
    _o.NameAtLaunch = this.NameAtLaunch;
    _o.BusId = this.BusId;
    _o.CurrentAge = this.CurrentAge;
    _o.LifeLost = this.LifeLost;
    _o.GeoPosition = this.GeoPosition;
    _o.InsuranceLossesTotal = this.InsuranceLossesTotal;
    _o.LaunchArranger = this.LaunchArranger;
    _o.LaunchArrangerCountry = this.LaunchArrangerCountry;
    _o.SerialNumber = this.SerialNumber;
    _o.ProgramName = this.ProgramName;
    _o.ReusedHullName = this.ReusedHullName;
    _o.DateOfObservation = this.DateOfObservation;
    _o.Lat = this.Lat;
    _o.Lon = this.Lon;
    _o.Altitude = this.Altitude;
    _o.CollisionRiskMM = this.CollisionRiskMM;
    _o.CollisionRiskCM = this.CollisionRiskCM;
    _o.Quantity = this.Quantity;
    _o.ReusableFlights = this.ReusableFlights;
    _o.Notes = this.Notes;
    _o.InsuranceNotes = this.InsuranceNotes;
    _o.LaunchNotes = this.LaunchNotes;
    _o.Source = this.Source;
    _o.Origin = this.Origin;
    _o.OrigNetwork = this.OrigNetwork;
    _o.DataMode = this.DataMode;
    _o.CreatedAt = this.CreatedAt;
    _o.CreatedBy = this.CreatedBy;
  }
  public static Offset<SeradataSpacecraftDetails_Abridged> Pack(FlatBufferBuilder builder, SeradataSpacecraftDetails_AbridgedT _o) {
    if (_o == null) return default(Offset<SeradataSpacecraftDetails_Abridged>);
    var _id = _o.Id == null ? default(StringOffset) : builder.CreateString(_o.Id);
    var _idOnOrbit = _o.IdOnOrbit == null ? default(StringOffset) : builder.CreateString(_o.IdOnOrbit);
    var _classificationMarking = _o.ClassificationMarking == null ? default(StringOffset) : builder.CreateString(_o.ClassificationMarking);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _description = _o.Description == null ? default(StringOffset) : builder.CreateString(_o.Description);
    var _intlNumber = _o.IntlNumber == null ? default(StringOffset) : builder.CreateString(_o.IntlNumber);
    var _sector = _o.Sector == null ? default(StringOffset) : builder.CreateString(_o.Sector);
    var _primeManufacturerOrgId = _o.PrimeManufacturerOrgId == null ? default(StringOffset) : builder.CreateString(_o.PrimeManufacturerOrgId);
    var _stabilizer = _o.Stabilizer == null ? default(StringOffset) : builder.CreateString(_o.Stabilizer);
    var _constellation = _o.Constellation == null ? default(StringOffset) : builder.CreateString(_o.Constellation);
    var _orbitCategory = _o.OrbitCategory == null ? default(StringOffset) : builder.CreateString(_o.OrbitCategory);
    var _orbitSubCategory = _o.OrbitSubCategory == null ? default(StringOffset) : builder.CreateString(_o.OrbitSubCategory);
    var _cubesatDispenserType = _o.CubesatDispenserType == null ? default(StringOffset) : builder.CreateString(_o.CubesatDispenserType);
    var _massCategory = _o.MassCategory == null ? default(StringOffset) : builder.CreateString(_o.MassCategory);
    var _launchId = _o.LaunchId == null ? default(StringOffset) : builder.CreateString(_o.LaunchId);
    var _launchVehicleId = _o.LaunchVehicleId == null ? default(StringOffset) : builder.CreateString(_o.LaunchVehicleId);
    var _launchProviderFlightNumber = _o.LaunchProviderFlightNumber == null ? default(StringOffset) : builder.CreateString(_o.LaunchProviderFlightNumber);
    var _launchSiteName = _o.LaunchSiteName == null ? default(StringOffset) : builder.CreateString(_o.LaunchSiteName);
    var _launchSiteId = _o.LaunchSiteId == null ? default(StringOffset) : builder.CreateString(_o.LaunchSiteId);
    var _launchCountry = _o.LaunchCountry == null ? default(StringOffset) : builder.CreateString(_o.LaunchCountry);
    var _launchProvider = _o.LaunchProvider == null ? default(StringOffset) : builder.CreateString(_o.LaunchProvider);
    var _launchProviderCountry = _o.LaunchProviderCountry == null ? default(StringOffset) : builder.CreateString(_o.LaunchProviderCountry);
    var _launchType = _o.LaunchType == null ? default(StringOffset) : builder.CreateString(_o.LaunchType);
    var _launchCharacteristic = _o.LaunchCharacteristic == null ? default(StringOffset) : builder.CreateString(_o.LaunchCharacteristic);
    var _launchNumber = _o.LaunchNumber == null ? default(StringOffset) : builder.CreateString(_o.LaunchNumber);
    var _launchDate = _o.LaunchDate == null ? default(StringOffset) : builder.CreateString(_o.LaunchDate);
    var _launchDateRemarks = _o.LaunchDateRemarks == null ? default(StringOffset) : builder.CreateString(_o.LaunchDateRemarks);
    var _youtubeLaunchLink = _o.YoutubeLaunchLink == null ? default(StringOffset) : builder.CreateString(_o.YoutubeLaunchLink);
    var _status = _o.Status == null ? default(StringOffset) : builder.CreateString(_o.Status);
    var _owner = _o.Owner == null ? default(StringOffset) : builder.CreateString(_o.Owner);
    var _ownerCountry = _o.OwnerCountry == null ? default(StringOffset) : builder.CreateString(_o.OwnerCountry);
    var _operator = _o.Operator == null ? default(StringOffset) : builder.CreateString(_o.Operator);
    var _operatorCountry = _o.OperatorCountry == null ? default(StringOffset) : builder.CreateString(_o.OperatorCountry);
    var _orderDate = _o.OrderDate == null ? default(StringOffset) : builder.CreateString(_o.OrderDate);
    var _primaryMissionGroup = _o.PrimaryMissionGroup == null ? default(StringOffset) : builder.CreateString(_o.PrimaryMissionGroup);
    var _additionalMissionsGroups = _o.AdditionalMissionsGroups == null ? default(StringOffset) : builder.CreateString(_o.AdditionalMissionsGroups);
    var _nameAtLaunch = _o.NameAtLaunch == null ? default(StringOffset) : builder.CreateString(_o.NameAtLaunch);
    var _busId = _o.BusId == null ? default(StringOffset) : builder.CreateString(_o.BusId);
    var _launchArranger = _o.LaunchArranger == null ? default(StringOffset) : builder.CreateString(_o.LaunchArranger);
    var _launchArrangerCountry = _o.LaunchArrangerCountry == null ? default(StringOffset) : builder.CreateString(_o.LaunchArrangerCountry);
    var _serialNumber = _o.SerialNumber == null ? default(StringOffset) : builder.CreateString(_o.SerialNumber);
    var _programName = _o.ProgramName == null ? default(StringOffset) : builder.CreateString(_o.ProgramName);
    var _reusedHullName = _o.ReusedHullName == null ? default(StringOffset) : builder.CreateString(_o.ReusedHullName);
    var _dateOfObservation = _o.DateOfObservation == null ? default(StringOffset) : builder.CreateString(_o.DateOfObservation);
    var _reusableFlights = _o.ReusableFlights == null ? default(StringOffset) : builder.CreateString(_o.ReusableFlights);
    var _notes = _o.Notes == null ? default(StringOffset) : builder.CreateString(_o.Notes);
    var _insuranceNotes = _o.InsuranceNotes == null ? default(StringOffset) : builder.CreateString(_o.InsuranceNotes);
    var _launchNotes = _o.LaunchNotes == null ? default(StringOffset) : builder.CreateString(_o.LaunchNotes);
    var _source = _o.Source == null ? default(StringOffset) : builder.CreateString(_o.Source);
    var _origin = _o.Origin == null ? default(StringOffset) : builder.CreateString(_o.Origin);
    var _origNetwork = _o.OrigNetwork == null ? default(StringOffset) : builder.CreateString(_o.OrigNetwork);
    var _createdAt = _o.CreatedAt == null ? default(StringOffset) : builder.CreateString(_o.CreatedAt);
    var _createdBy = _o.CreatedBy == null ? default(StringOffset) : builder.CreateString(_o.CreatedBy);
    return CreateSeradataSpacecraftDetails_Abridged(
      builder,
      _id,
      _idOnOrbit,
      _classificationMarking,
      _name,
      _description,
      _intlNumber,
      _sector,
      _o.Apogee,
      _o.Perigee,
      _o.Period,
      _o.Inclination,
      _primeManufacturerOrgId,
      _stabilizer,
      _o.DesignLife,
      _o.ExpectedLife,
      _o.InsuredAtLaunch,
      _o.LaunchMass,
      _o.DryMass,
      _o.CatalogNumber,
      _o.TotalPayloadPower,
      _constellation,
      _orbitCategory,
      _orbitSubCategory,
      _o.LaunchCost,
      _o.LaunchCostEstimated,
      _o.CostEstimated,
      _o.NewCost,
      _o.CombinedNewCost,
      _o.CombinedCostEstimated,
      _o.InsuredValueAtLaunch,
      _o.InsuredValueLaunchEstimated,
      _o.AnnualInsuredDepreciationFactor,
      _o.AnnualInsuredDepreciationFactorEstimated,
      _o.InsurancePremiumAtLaunch,
      _o.InsurancePremiumAtLaunchEstimated,
      _o.NumHumans,
      _cubesatDispenserType,
      _massCategory,
      _launchId,
      _launchVehicleId,
      _launchProviderFlightNumber,
      _launchSiteName,
      _launchSiteId,
      _launchCountry,
      _launchProvider,
      _launchProviderCountry,
      _o.CommercialLaunch,
      _launchType,
      _launchCharacteristic,
      _launchNumber,
      _launchDate,
      _launchDateRemarks,
      _youtubeLaunchLink,
      _status,
      _owner,
      _ownerCountry,
      _operator,
      _operatorCountry,
      _o.Leased,
      _orderDate,
      _o.CapabilityLost,
      _o.CapacityLost,
      _primaryMissionGroup,
      _additionalMissionsGroups,
      _o.TotalClaims,
      _o.TotalInjuries,
      _o.TotalFatalities,
      _nameAtLaunch,
      _busId,
      _o.CurrentAge,
      _o.LifeLost,
      _o.GeoPosition,
      _o.InsuranceLossesTotal,
      _launchArranger,
      _launchArrangerCountry,
      _serialNumber,
      _programName,
      _reusedHullName,
      _dateOfObservation,
      _o.Lat,
      _o.Lon,
      _o.Altitude,
      _o.CollisionRiskMM,
      _o.CollisionRiskCM,
      _o.Quantity,
      _reusableFlights,
      _notes,
      _insuranceNotes,
      _launchNotes,
      _source,
      _origin,
      _origNetwork,
      _o.DataMode,
      _createdAt,
      _createdBy);
  }
}

public class SeradataSpacecraftDetails_AbridgedT
{
  public string Id { get; set; }
  public string IdOnOrbit { get; set; }
  public string ClassificationMarking { get; set; }
  public string Name { get; set; }
  public string Description { get; set; }
  public string IntlNumber { get; set; }
  public string Sector { get; set; }
  public double Apogee { get; set; }
  public double Perigee { get; set; }
  public double Period { get; set; }
  public double Inclination { get; set; }
  public string PrimeManufacturerOrgId { get; set; }
  public string Stabilizer { get; set; }
  public int DesignLife { get; set; }
  public int ExpectedLife { get; set; }
  public bool InsuredAtLaunch { get; set; }
  public double LaunchMass { get; set; }
  public double DryMass { get; set; }
  public int CatalogNumber { get; set; }
  public double TotalPayloadPower { get; set; }
  public string Constellation { get; set; }
  public string OrbitCategory { get; set; }
  public string OrbitSubCategory { get; set; }
  public double LaunchCost { get; set; }
  public bool LaunchCostEstimated { get; set; }
  public bool CostEstimated { get; set; }
  public double NewCost { get; set; }
  public double CombinedNewCost { get; set; }
  public bool CombinedCostEstimated { get; set; }
  public double InsuredValueAtLaunch { get; set; }
  public bool InsuredValueLaunchEstimated { get; set; }
  public double AnnualInsuredDepreciationFactor { get; set; }
  public bool AnnualInsuredDepreciationFactorEstimated { get; set; }
  public double InsurancePremiumAtLaunch { get; set; }
  public bool InsurancePremiumAtLaunchEstimated { get; set; }
  public int NumHumans { get; set; }
  public string CubesatDispenserType { get; set; }
  public string MassCategory { get; set; }
  public string LaunchId { get; set; }
  public string LaunchVehicleId { get; set; }
  public string LaunchProviderFlightNumber { get; set; }
  public string LaunchSiteName { get; set; }
  public string LaunchSiteId { get; set; }
  public string LaunchCountry { get; set; }
  public string LaunchProvider { get; set; }
  public string LaunchProviderCountry { get; set; }
  public bool CommercialLaunch { get; set; }
  public string LaunchType { get; set; }
  public string LaunchCharacteristic { get; set; }
  public string LaunchNumber { get; set; }
  public string LaunchDate { get; set; }
  public string LaunchDateRemarks { get; set; }
  public string YoutubeLaunchLink { get; set; }
  public string Status { get; set; }
  public string Owner { get; set; }
  public string OwnerCountry { get; set; }
  public string Operator { get; set; }
  public string OperatorCountry { get; set; }
  public bool Leased { get; set; }
  public string OrderDate { get; set; }
  public double CapabilityLost { get; set; }
  public double CapacityLost { get; set; }
  public string PrimaryMissionGroup { get; set; }
  public string AdditionalMissionsGroups { get; set; }
  public int TotalClaims { get; set; }
  public int TotalInjuries { get; set; }
  public int TotalFatalities { get; set; }
  public string NameAtLaunch { get; set; }
  public string BusId { get; set; }
  public double CurrentAge { get; set; }
  public double LifeLost { get; set; }
  public double GeoPosition { get; set; }
  public double InsuranceLossesTotal { get; set; }
  public string LaunchArranger { get; set; }
  public string LaunchArrangerCountry { get; set; }
  public string SerialNumber { get; set; }
  public string ProgramName { get; set; }
  public string ReusedHullName { get; set; }
  public string DateOfObservation { get; set; }
  public double Lat { get; set; }
  public double Lon { get; set; }
  public double Altitude { get; set; }
  public double CollisionRiskMM { get; set; }
  public double CollisionRiskCM { get; set; }
  public int Quantity { get; set; }
  public string ReusableFlights { get; set; }
  public string Notes { get; set; }
  public string InsuranceNotes { get; set; }
  public string LaunchNotes { get; set; }
  public string Source { get; set; }
  public string Origin { get; set; }
  public string OrigNetwork { get; set; }
  public SeradataSpacecraftDetails_Abridged_dataMode_Enum DataMode { get; set; }
  public string CreatedAt { get; set; }
  public string CreatedBy { get; set; }

  public SeradataSpacecraftDetails_AbridgedT() {
    this.Id = null;
    this.IdOnOrbit = null;
    this.ClassificationMarking = null;
    this.Name = null;
    this.Description = null;
    this.IntlNumber = null;
    this.Sector = null;
    this.Apogee = 0.0;
    this.Perigee = 0.0;
    this.Period = 0.0;
    this.Inclination = 0.0;
    this.PrimeManufacturerOrgId = null;
    this.Stabilizer = null;
    this.DesignLife = 0;
    this.ExpectedLife = 0;
    this.InsuredAtLaunch = false;
    this.LaunchMass = 0.0;
    this.DryMass = 0.0;
    this.CatalogNumber = 0;
    this.TotalPayloadPower = 0.0;
    this.Constellation = null;
    this.OrbitCategory = null;
    this.OrbitSubCategory = null;
    this.LaunchCost = 0.0;
    this.LaunchCostEstimated = false;
    this.CostEstimated = false;
    this.NewCost = 0.0;
    this.CombinedNewCost = 0.0;
    this.CombinedCostEstimated = false;
    this.InsuredValueAtLaunch = 0.0;
    this.InsuredValueLaunchEstimated = false;
    this.AnnualInsuredDepreciationFactor = 0.0;
    this.AnnualInsuredDepreciationFactorEstimated = false;
    this.InsurancePremiumAtLaunch = 0.0;
    this.InsurancePremiumAtLaunchEstimated = false;
    this.NumHumans = 0;
    this.CubesatDispenserType = null;
    this.MassCategory = null;
    this.LaunchId = null;
    this.LaunchVehicleId = null;
    this.LaunchProviderFlightNumber = null;
    this.LaunchSiteName = null;
    this.LaunchSiteId = null;
    this.LaunchCountry = null;
    this.LaunchProvider = null;
    this.LaunchProviderCountry = null;
    this.CommercialLaunch = false;
    this.LaunchType = null;
    this.LaunchCharacteristic = null;
    this.LaunchNumber = null;
    this.LaunchDate = null;
    this.LaunchDateRemarks = null;
    this.YoutubeLaunchLink = null;
    this.Status = null;
    this.Owner = null;
    this.OwnerCountry = null;
    this.Operator = null;
    this.OperatorCountry = null;
    this.Leased = false;
    this.OrderDate = null;
    this.CapabilityLost = 0.0;
    this.CapacityLost = 0.0;
    this.PrimaryMissionGroup = null;
    this.AdditionalMissionsGroups = null;
    this.TotalClaims = 0;
    this.TotalInjuries = 0;
    this.TotalFatalities = 0;
    this.NameAtLaunch = null;
    this.BusId = null;
    this.CurrentAge = 0.0;
    this.LifeLost = 0.0;
    this.GeoPosition = 0.0;
    this.InsuranceLossesTotal = 0.0;
    this.LaunchArranger = null;
    this.LaunchArrangerCountry = null;
    this.SerialNumber = null;
    this.ProgramName = null;
    this.ReusedHullName = null;
    this.DateOfObservation = null;
    this.Lat = 0.0;
    this.Lon = 0.0;
    this.Altitude = 0.0;
    this.CollisionRiskMM = 0.0;
    this.CollisionRiskCM = 0.0;
    this.Quantity = 0;
    this.ReusableFlights = null;
    this.Notes = null;
    this.InsuranceNotes = null;
    this.LaunchNotes = null;
    this.Source = null;
    this.Origin = null;
    this.OrigNetwork = null;
    this.DataMode = SeradataSpacecraftDetails_Abridged_dataMode_Enum.REAL;
    this.CreatedAt = null;
    this.CreatedBy = null;
  }
  public static SeradataSpacecraftDetails_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return SeradataSpacecraftDetails_Abridged.GetRootAsSeradataSpacecraftDetails_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    SeradataSpacecraftDetails_Abridged.FinishSeradataSpacecraftDetails_AbridgedBuffer(fbb, SeradataSpacecraftDetails_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class SeradataSpacecraftDetails_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyString(tablePos, 4 /*Id*/, false)
      && verifier.VerifyString(tablePos, 6 /*IdOnOrbit*/, false)
      && verifier.VerifyString(tablePos, 8 /*ClassificationMarking*/, false)
      && verifier.VerifyString(tablePos, 10 /*Name*/, false)
      && verifier.VerifyString(tablePos, 12 /*Description*/, false)
      && verifier.VerifyString(tablePos, 14 /*IntlNumber*/, false)
      && verifier.VerifyString(tablePos, 16 /*Sector*/, false)
      && verifier.VerifyField(tablePos, 18 /*Apogee*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 20 /*Perigee*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 22 /*Period*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 24 /*Inclination*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 26 /*PrimeManufacturerOrgId*/, false)
      && verifier.VerifyString(tablePos, 28 /*Stabilizer*/, false)
      && verifier.VerifyField(tablePos, 30 /*DesignLife*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 32 /*ExpectedLife*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 34 /*InsuredAtLaunch*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 36 /*LaunchMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 38 /*DryMass*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 40 /*CatalogNumber*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 42 /*TotalPayloadPower*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 44 /*Constellation*/, false)
      && verifier.VerifyString(tablePos, 46 /*OrbitCategory*/, false)
      && verifier.VerifyString(tablePos, 48 /*OrbitSubCategory*/, false)
      && verifier.VerifyField(tablePos, 50 /*LaunchCost*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 52 /*LaunchCostEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 54 /*CostEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 56 /*NewCost*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 58 /*CombinedNewCost*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 60 /*CombinedCostEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 62 /*InsuredValueAtLaunch*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 64 /*InsuredValueLaunchEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 66 /*AnnualInsuredDepreciationFactor*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 68 /*AnnualInsuredDepreciationFactorEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 70 /*InsurancePremiumAtLaunch*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 72 /*InsurancePremiumAtLaunchEstimated*/, 1 /*bool*/, 1, false)
      && verifier.VerifyField(tablePos, 74 /*NumHumans*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 76 /*CubesatDispenserType*/, false)
      && verifier.VerifyString(tablePos, 78 /*MassCategory*/, false)
      && verifier.VerifyString(tablePos, 80 /*LaunchId*/, false)
      && verifier.VerifyString(tablePos, 82 /*LaunchVehicleId*/, false)
      && verifier.VerifyString(tablePos, 84 /*LaunchProviderFlightNumber*/, false)
      && verifier.VerifyString(tablePos, 86 /*LaunchSiteName*/, false)
      && verifier.VerifyString(tablePos, 88 /*LaunchSiteId*/, false)
      && verifier.VerifyString(tablePos, 90 /*LaunchCountry*/, false)
      && verifier.VerifyString(tablePos, 92 /*LaunchProvider*/, false)
      && verifier.VerifyString(tablePos, 94 /*LaunchProviderCountry*/, false)
      && verifier.VerifyField(tablePos, 96 /*CommercialLaunch*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 98 /*LaunchType*/, false)
      && verifier.VerifyString(tablePos, 100 /*LaunchCharacteristic*/, false)
      && verifier.VerifyString(tablePos, 102 /*LaunchNumber*/, false)
      && verifier.VerifyString(tablePos, 104 /*LaunchDate*/, false)
      && verifier.VerifyString(tablePos, 106 /*LaunchDateRemarks*/, false)
      && verifier.VerifyString(tablePos, 108 /*YoutubeLaunchLink*/, false)
      && verifier.VerifyString(tablePos, 110 /*Status*/, false)
      && verifier.VerifyString(tablePos, 112 /*Owner*/, false)
      && verifier.VerifyString(tablePos, 114 /*OwnerCountry*/, false)
      && verifier.VerifyString(tablePos, 116 /*Operator*/, false)
      && verifier.VerifyString(tablePos, 118 /*OperatorCountry*/, false)
      && verifier.VerifyField(tablePos, 120 /*Leased*/, 1 /*bool*/, 1, false)
      && verifier.VerifyString(tablePos, 122 /*OrderDate*/, false)
      && verifier.VerifyField(tablePos, 124 /*CapabilityLost*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 126 /*CapacityLost*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 128 /*PrimaryMissionGroup*/, false)
      && verifier.VerifyString(tablePos, 130 /*AdditionalMissionsGroups*/, false)
      && verifier.VerifyField(tablePos, 132 /*TotalClaims*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 134 /*TotalInjuries*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 136 /*TotalFatalities*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 138 /*NameAtLaunch*/, false)
      && verifier.VerifyString(tablePos, 140 /*BusId*/, false)
      && verifier.VerifyField(tablePos, 142 /*CurrentAge*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 144 /*LifeLost*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 146 /*GeoPosition*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 148 /*InsuranceLossesTotal*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 150 /*LaunchArranger*/, false)
      && verifier.VerifyString(tablePos, 152 /*LaunchArrangerCountry*/, false)
      && verifier.VerifyString(tablePos, 154 /*SerialNumber*/, false)
      && verifier.VerifyString(tablePos, 156 /*ProgramName*/, false)
      && verifier.VerifyString(tablePos, 158 /*ReusedHullName*/, false)
      && verifier.VerifyString(tablePos, 160 /*DateOfObservation*/, false)
      && verifier.VerifyField(tablePos, 162 /*Lat*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 164 /*Lon*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 166 /*Altitude*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 168 /*CollisionRiskMM*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 170 /*CollisionRiskCM*/, 8 /*double*/, 8, false)
      && verifier.VerifyField(tablePos, 172 /*Quantity*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 174 /*ReusableFlights*/, false)
      && verifier.VerifyString(tablePos, 176 /*Notes*/, false)
      && verifier.VerifyString(tablePos, 178 /*InsuranceNotes*/, false)
      && verifier.VerifyString(tablePos, 180 /*LaunchNotes*/, false)
      && verifier.VerifyString(tablePos, 182 /*Source*/, false)
      && verifier.VerifyString(tablePos, 184 /*Origin*/, false)
      && verifier.VerifyString(tablePos, 186 /*OrigNetwork*/, false)
      && verifier.VerifyField(tablePos, 188 /*DataMode*/, 1 /*SeradataSpacecraftDetails_Abridged_dataMode_Enum*/, 1, false)
      && verifier.VerifyString(tablePos, 190 /*CreatedAt*/, false)
      && verifier.VerifyString(tablePos, 192 /*CreatedBy*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
