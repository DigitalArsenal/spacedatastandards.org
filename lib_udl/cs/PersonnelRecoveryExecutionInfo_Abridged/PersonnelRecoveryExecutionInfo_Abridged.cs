// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

/// /// Information pertaining to the details of executing the recovery.
public struct PersonnelRecoveryExecutionInfo_Abridged : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_24_3_25(); }
  public static PersonnelRecoveryExecutionInfo_Abridged GetRootAsPersonnelRecoveryExecutionInfo_Abridged(ByteBuffer _bb) { return GetRootAsPersonnelRecoveryExecutionInfo_Abridged(_bb, new PersonnelRecoveryExecutionInfo_Abridged()); }
  public static PersonnelRecoveryExecutionInfo_Abridged GetRootAsPersonnelRecoveryExecutionInfo_Abridged(ByteBuffer _bb, PersonnelRecoveryExecutionInfo_Abridged obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public static bool PersonnelRecoveryExecutionInfo_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return Table.__has_identifier(_bb, "PERS"); }
  public static bool VerifyPersonnelRecoveryExecutionInfo_Abridged(ByteBuffer _bb) {Google.FlatBuffers.Verifier verifier = new Google.FlatBuffers.Verifier(_bb); return verifier.VerifyBuffer("PERS", false, PersonnelRecoveryExecutionInfo_AbridgedVerify.Verify); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public PersonnelRecoveryExecutionInfo_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the initial location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  /// Example: /// Example: [103.23, 30.445]
  /// Constraints: No constraints specified.
  public string InitialPoint(int j) { int o = __p.__offset(4); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int InitialPointLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// The heading, in degrees clockwise from North, of entering the recovery zone.
  /// Example: /// Example: 35.66
  /// Constraints: No constraints specified.
  public double Ingress { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// Description of the objective strategy plan.
  /// Example: /// Example: Description of strategy plan.
  /// Constraints: Minimum length = 0, Maximum length = 1024
  public string ObjStrategy { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetObjStrategyBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetObjStrategyBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetObjStrategyArray() { return __p.__vector_as_array<byte>(8); }
  /// Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the egress location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  /// Example: /// Example: [107.23, 30.455]
  /// Constraints: No constraints specified.
  public string EgressPoint(int j) { int o = __p.__offset(10); return o != 0 ? __p.__string(__p.__vector(o) + j * 4) : null; }
  public int EgressPointLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  /// The heading, in degrees, of leaving the recovery zone.
  /// Example: /// Example: 66.53
  /// Constraints: No constraints specified.
  public double Egress { get { int o = __p.__offset(12); return o != 0 ? __p.bb.GetDouble(o + __p.bb_pos) : (double)0.0; } }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string RecoveryVehicle { get { int o = __p.__offset(14); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetRecoveryVehicleBytes() { return __p.__vector_as_span<byte>(14, 1); }
#else
  public ArraySegment<byte>? GetRecoveryVehicleBytes() { return __p.__vector_as_arraysegment(14); }
#endif
  public byte[] GetRecoveryVehicleArray() { return __p.__vector_as_array<byte>(14); }
  /// No description provided.
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  public string EscortVehicle { get { int o = __p.__offset(16); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetEscortVehicleBytes() { return __p.__vector_as_span<byte>(16, 1); }
#else
  public ArraySegment<byte>? GetEscortVehicleBytes() { return __p.__vector_as_arraysegment(16); }
#endif
  public byte[] GetEscortVehicleArray() { return __p.__vector_as_array<byte>(16); }

  public static Offset<PersonnelRecoveryExecutionInfo_Abridged> CreatePersonnelRecoveryExecutionInfo_Abridged(FlatBufferBuilder builder,
      VectorOffset initialPointOffset = default(VectorOffset),
      double ingress = 0.0,
      StringOffset objStrategyOffset = default(StringOffset),
      VectorOffset egressPointOffset = default(VectorOffset),
      double egress = 0.0,
      StringOffset recoveryVehicleOffset = default(StringOffset),
      StringOffset escortVehicleOffset = default(StringOffset)) {
    builder.StartTable(7);
    PersonnelRecoveryExecutionInfo_Abridged.AddEgress(builder, egress);
    PersonnelRecoveryExecutionInfo_Abridged.AddIngress(builder, ingress);
    PersonnelRecoveryExecutionInfo_Abridged.AddEscortVehicle(builder, escortVehicleOffset);
    PersonnelRecoveryExecutionInfo_Abridged.AddRecoveryVehicle(builder, recoveryVehicleOffset);
    PersonnelRecoveryExecutionInfo_Abridged.AddEgressPoint(builder, egressPointOffset);
    PersonnelRecoveryExecutionInfo_Abridged.AddObjStrategy(builder, objStrategyOffset);
    PersonnelRecoveryExecutionInfo_Abridged.AddInitialPoint(builder, initialPointOffset);
    return PersonnelRecoveryExecutionInfo_Abridged.EndPersonnelRecoveryExecutionInfo_Abridged(builder);
  }

  public static void StartPersonnelRecoveryExecutionInfo_Abridged(FlatBufferBuilder builder) { builder.StartTable(7); }
  public static void AddInitialPoint(FlatBufferBuilder builder, VectorOffset initialPointOffset) { builder.AddOffset(0, initialPointOffset.Value, 0); }
  public static VectorOffset CreateInitialPointVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateInitialPointVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInitialPointVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateInitialPointVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartInitialPointVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddIngress(FlatBufferBuilder builder, double ingress) { builder.AddDouble(1, ingress, 0.0); }
  public static void AddObjStrategy(FlatBufferBuilder builder, StringOffset objStrategyOffset) { builder.AddOffset(2, objStrategyOffset.Value, 0); }
  public static void AddEgressPoint(FlatBufferBuilder builder, VectorOffset egressPointOffset) { builder.AddOffset(3, egressPointOffset.Value, 0); }
  public static VectorOffset CreateEgressPointVector(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddOffset(data[i].Value); return builder.EndVector(); }
  public static VectorOffset CreateEgressPointVectorBlock(FlatBufferBuilder builder, StringOffset[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEgressPointVectorBlock(FlatBufferBuilder builder, ArraySegment<StringOffset> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateEgressPointVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<StringOffset>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartEgressPointVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static void AddEgress(FlatBufferBuilder builder, double egress) { builder.AddDouble(4, egress, 0.0); }
  public static void AddRecoveryVehicle(FlatBufferBuilder builder, StringOffset recoveryVehicleOffset) { builder.AddOffset(5, recoveryVehicleOffset.Value, 0); }
  public static void AddEscortVehicle(FlatBufferBuilder builder, StringOffset escortVehicleOffset) { builder.AddOffset(6, escortVehicleOffset.Value, 0); }
  public static Offset<PersonnelRecoveryExecutionInfo_Abridged> EndPersonnelRecoveryExecutionInfo_Abridged(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<PersonnelRecoveryExecutionInfo_Abridged>(o);
  }
  public static void FinishPersonnelRecoveryExecutionInfo_AbridgedBuffer(FlatBufferBuilder builder, Offset<PersonnelRecoveryExecutionInfo_Abridged> offset) { builder.Finish(offset.Value, "PERS"); }
  public static void FinishSizePrefixedPersonnelRecoveryExecutionInfo_AbridgedBuffer(FlatBufferBuilder builder, Offset<PersonnelRecoveryExecutionInfo_Abridged> offset) { builder.FinishSizePrefixed(offset.Value, "PERS"); }
  public PersonnelRecoveryExecutionInfo_AbridgedT UnPack() {
    var _o = new PersonnelRecoveryExecutionInfo_AbridgedT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(PersonnelRecoveryExecutionInfo_AbridgedT _o) {
    _o.InitialPoint = new List<string>();
    for (var _j = 0; _j < this.InitialPointLength; ++_j) {_o.InitialPoint.Add(this.InitialPoint(_j));}
    _o.Ingress = this.Ingress;
    _o.ObjStrategy = this.ObjStrategy;
    _o.EgressPoint = new List<string>();
    for (var _j = 0; _j < this.EgressPointLength; ++_j) {_o.EgressPoint.Add(this.EgressPoint(_j));}
    _o.Egress = this.Egress;
    _o.RecoveryVehicle = this.RecoveryVehicle;
    _o.EscortVehicle = this.EscortVehicle;
  }
  public static Offset<PersonnelRecoveryExecutionInfo_Abridged> Pack(FlatBufferBuilder builder, PersonnelRecoveryExecutionInfo_AbridgedT _o) {
    if (_o == null) return default(Offset<PersonnelRecoveryExecutionInfo_Abridged>);
    var _initialPoint = default(VectorOffset);
    if (_o.InitialPoint != null) {
      var __initialPoint = new StringOffset[_o.InitialPoint.Count];
      for (var _j = 0; _j < __initialPoint.Length; ++_j) { __initialPoint[_j] = builder.CreateString(_o.InitialPoint[_j]); }
      _initialPoint = CreateInitialPointVector(builder, __initialPoint);
    }
    var _objStrategy = _o.ObjStrategy == null ? default(StringOffset) : builder.CreateString(_o.ObjStrategy);
    var _egressPoint = default(VectorOffset);
    if (_o.EgressPoint != null) {
      var __egressPoint = new StringOffset[_o.EgressPoint.Count];
      for (var _j = 0; _j < __egressPoint.Length; ++_j) { __egressPoint[_j] = builder.CreateString(_o.EgressPoint[_j]); }
      _egressPoint = CreateEgressPointVector(builder, __egressPoint);
    }
    var _recoveryVehicle = _o.RecoveryVehicle == null ? default(StringOffset) : builder.CreateString(_o.RecoveryVehicle);
    var _escortVehicle = _o.EscortVehicle == null ? default(StringOffset) : builder.CreateString(_o.EscortVehicle);
    return CreatePersonnelRecoveryExecutionInfo_Abridged(
      builder,
      _initialPoint,
      _o.Ingress,
      _objStrategy,
      _egressPoint,
      _o.Egress,
      _recoveryVehicle,
      _escortVehicle);
  }
}

public class PersonnelRecoveryExecutionInfo_AbridgedT
{
  public List<string> InitialPoint { get; set; }
  public double Ingress { get; set; }
  public string ObjStrategy { get; set; }
  public List<string> EgressPoint { get; set; }
  public double Egress { get; set; }
  public string RecoveryVehicle { get; set; }
  public string EscortVehicle { get; set; }

  public PersonnelRecoveryExecutionInfo_AbridgedT() {
    this.InitialPoint = null;
    this.Ingress = 0.0;
    this.ObjStrategy = null;
    this.EgressPoint = null;
    this.Egress = 0.0;
    this.RecoveryVehicle = null;
    this.EscortVehicle = null;
  }
  public static PersonnelRecoveryExecutionInfo_AbridgedT DeserializeFromBinary(byte[] fbBuffer) {
    return PersonnelRecoveryExecutionInfo_Abridged.GetRootAsPersonnelRecoveryExecutionInfo_Abridged(new ByteBuffer(fbBuffer)).UnPack();
  }
  public byte[] SerializeToBinary() {
    var fbb = new FlatBufferBuilder(0x10000);
    PersonnelRecoveryExecutionInfo_Abridged.FinishPersonnelRecoveryExecutionInfo_AbridgedBuffer(fbb, PersonnelRecoveryExecutionInfo_Abridged.Pack(fbb, this));
    return fbb.DataBuffer.ToSizedArray();
  }
}


static public class PersonnelRecoveryExecutionInfo_AbridgedVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyVectorOfStrings(tablePos, 4 /*InitialPoint*/, false)
      && verifier.VerifyField(tablePos, 6 /*Ingress*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 8 /*ObjStrategy*/, false)
      && verifier.VerifyVectorOfStrings(tablePos, 10 /*EgressPoint*/, false)
      && verifier.VerifyField(tablePos, 12 /*Egress*/, 8 /*double*/, 8, false)
      && verifier.VerifyString(tablePos, 14 /*RecoveryVehicle*/, false)
      && verifier.VerifyString(tablePos, 16 /*EscortVehicle*/, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}
