// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// Provides a means of sending Basic Character Set alphanumeric text messages.
 */
export class MtiFreeText_Abridged implements flatbuffers.IUnpackableObject<MtiFreeText_AbridgedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MtiFreeText_Abridged {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMtiFreeText_Abridged(bb:flatbuffers.ByteBuffer, obj?:MtiFreeText_Abridged):MtiFreeText_Abridged {
  return (obj || new MtiFreeText_Abridged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMtiFreeText_Abridged(bb:flatbuffers.ByteBuffer, obj?:MtiFreeText_Abridged):MtiFreeText_Abridged {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MtiFreeText_Abridged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('MTIF');
}

/**
 * The originator of the Free Text message.
 * Example: /// Example: ORIGINATOR
 * Constraints: Minimum length = 0, Maximum length = 1024
 */
f1():string|null
f1(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
f1(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * The recipient for which the Free Text message is intended.
 * Example: /// Example: RECIPIENT
 * Constraints: Minimum length = 0, Maximum length = 128
 */
f2():string|null
f2(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
f2(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Free text data message.
 * Example: /// Example: TEXT
 * Constraints: Minimum length = 0, Maximum length = 1024
 */
f3():string|null
f3(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
f3(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startMtiFreeText_Abridged(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addF1(builder:flatbuffers.Builder, f1Offset:flatbuffers.Offset) {
  builder.addFieldOffset(0, f1Offset, 0);
}

static addF2(builder:flatbuffers.Builder, f2Offset:flatbuffers.Offset) {
  builder.addFieldOffset(1, f2Offset, 0);
}

static addF3(builder:flatbuffers.Builder, f3Offset:flatbuffers.Offset) {
  builder.addFieldOffset(2, f3Offset, 0);
}

static endMtiFreeText_Abridged(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishMtiFreeText_AbridgedBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'MTIF');
}

static finishSizePrefixedMtiFreeText_AbridgedBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'MTIF', true);
}

static createMtiFreeText_Abridged(builder:flatbuffers.Builder, f1Offset:flatbuffers.Offset, f2Offset:flatbuffers.Offset, f3Offset:flatbuffers.Offset):flatbuffers.Offset {
  MtiFreeText_Abridged.startMtiFreeText_Abridged(builder);
  MtiFreeText_Abridged.addF1(builder, f1Offset);
  MtiFreeText_Abridged.addF2(builder, f2Offset);
  MtiFreeText_Abridged.addF3(builder, f3Offset);
  return MtiFreeText_Abridged.endMtiFreeText_Abridged(builder);
}

unpack(): MtiFreeText_AbridgedT {
  return new MtiFreeText_AbridgedT(
    this.f1(),
    this.f2(),
    this.f3()
  );
}


unpackTo(_o: MtiFreeText_AbridgedT): void {
  _o.f1 = this.f1();
  _o.f2 = this.f2();
  _o.f3 = this.f3();
}
}

export class MtiFreeText_AbridgedT implements flatbuffers.IGeneratedObject {
constructor(
  public f1: string|Uint8Array|null = null,
  public f2: string|Uint8Array|null = null,
  public f3: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const f1 = (this.f1 !== null ? builder.createString(this.f1!) : 0);
  const f2 = (this.f2 !== null ? builder.createString(this.f2!) : 0);
  const f3 = (this.f3 !== null ? builder.createString(this.f3!) : 0);

  return MtiFreeText_Abridged.createMtiFreeText_Abridged(builder,
    f1,
    f2,
    f3
  );
}
}
