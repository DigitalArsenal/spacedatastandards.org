// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// Coefficients, using ‘shiftedChebyshev’ sub-field, to describe E, F1, and bottomside F2 profile shapes, or height uncertainty boundaries (upper and lower).
 */
export class IonoObservationProfileDensityShiftedChebyshevEntry_Full implements flatbuffers.IUnpackableObject<IonoObservationProfileDensityShiftedChebyshevEntry_FullT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IonoObservationProfileDensityShiftedChebyshevEntry_Full {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsIonoObservationProfileDensityShiftedChebyshevEntry_Full(bb:flatbuffers.ByteBuffer, obj?:IonoObservationProfileDensityShiftedChebyshevEntry_Full):IonoObservationProfileDensityShiftedChebyshevEntry_Full {
  return (obj || new IonoObservationProfileDensityShiftedChebyshevEntry_Full()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsIonoObservationProfileDensityShiftedChebyshevEntry_Full(bb:flatbuffers.ByteBuffer, obj?:IonoObservationProfileDensityShiftedChebyshevEntry_Full):IonoObservationProfileDensityShiftedChebyshevEntry_Full {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new IonoObservationProfileDensityShiftedChebyshevEntry_Full()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('IONO');
}

/**
 * The ionospheric plasma layer.
 * Example: /// Example: F2
 * Constraints: No constraints specified.
 */
layer():string|null
layer(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
layer(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Start frequency of the layer, in MHz.
 * Example: /// Example: 0.2
 * Constraints: No constraints specified.
 */
fstart():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Stop frequency of the layer, in MHz.
 * Example: /// Example: 1.39
 * Constraints: No constraints specified.
 */
fstop():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Peak height of the layer, in kilometers.
 * Example: /// Example: 110.1
 * Constraints: No constraints specified.
 */
peakheight():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Height at which density is half of the peak Nm, in kilometers.
 * Example: /// Example: 210.1
 * Constraints: No constraints specified.
 */
zhalfNm():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Number of coefficients in the expansion.
 * Example: /// Example: 5
 * Constraints: No constraints specified.
 */
n():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * Array of coefficients.
 * Example: /// Example: [-11.2, -10.536, 3.357, -0.888, 0.155]
 * Constraints: No constraints specified.
 */
coeffs(index: number):string
coeffs(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
coeffs(index: number,optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
}

coeffsLength():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
}

/**
 * Best fit error.
 * Example: /// Example: 0.02
 * Constraints: No constraints specified.
 */
error():number {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addLayer(builder:flatbuffers.Builder, layerOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, layerOffset, 0);
}

static addFstart(builder:flatbuffers.Builder, fstart:number) {
  builder.addFieldFloat64(1, fstart, 0.0);
}

static addFstop(builder:flatbuffers.Builder, fstop:number) {
  builder.addFieldFloat64(2, fstop, 0.0);
}

static addPeakheight(builder:flatbuffers.Builder, peakheight:number) {
  builder.addFieldFloat64(3, peakheight, 0.0);
}

static addZhalfNm(builder:flatbuffers.Builder, zhalfNm:number) {
  builder.addFieldFloat64(4, zhalfNm, 0.0);
}

static addN(builder:flatbuffers.Builder, n:number) {
  builder.addFieldInt32(5, n, 0);
}

static addCoeffs(builder:flatbuffers.Builder, coeffsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, coeffsOffset, 0);
}

static createCoeffsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (let i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]!);
  }
  return builder.endVector();
}

static startCoeffsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
}

static addError(builder:flatbuffers.Builder, error:number) {
  builder.addFieldFloat64(7, error, 0.0);
}

static endIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishIonoObservationProfileDensityShiftedChebyshevEntry_FullBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'IONO');
}

static finishSizePrefixedIonoObservationProfileDensityShiftedChebyshevEntry_FullBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'IONO', true);
}

static createIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder:flatbuffers.Builder, layerOffset:flatbuffers.Offset, fstart:number, fstop:number, peakheight:number, zhalfNm:number, n:number, coeffsOffset:flatbuffers.Offset, error:number):flatbuffers.Offset {
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.startIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addLayer(builder, layerOffset);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addFstart(builder, fstart);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addFstop(builder, fstop);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addPeakheight(builder, peakheight);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addZhalfNm(builder, zhalfNm);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addN(builder, n);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addCoeffs(builder, coeffsOffset);
  IonoObservationProfileDensityShiftedChebyshevEntry_Full.addError(builder, error);
  return IonoObservationProfileDensityShiftedChebyshevEntry_Full.endIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder);
}

unpack(): IonoObservationProfileDensityShiftedChebyshevEntry_FullT {
  return new IonoObservationProfileDensityShiftedChebyshevEntry_FullT(
    this.layer(),
    this.fstart(),
    this.fstop(),
    this.peakheight(),
    this.zhalfNm(),
    this.n(),
    this.bb!.createScalarList<string>(this.coeffs.bind(this), this.coeffsLength()),
    this.error()
  );
}


unpackTo(_o: IonoObservationProfileDensityShiftedChebyshevEntry_FullT): void {
  _o.layer = this.layer();
  _o.fstart = this.fstart();
  _o.fstop = this.fstop();
  _o.peakheight = this.peakheight();
  _o.zhalfNm = this.zhalfNm();
  _o.n = this.n();
  _o.coeffs = this.bb!.createScalarList<string>(this.coeffs.bind(this), this.coeffsLength());
  _o.error = this.error();
}
}

export class IonoObservationProfileDensityShiftedChebyshevEntry_FullT implements flatbuffers.IGeneratedObject {
constructor(
  public layer: string|Uint8Array|null = null,
  public fstart: number = 0.0,
  public fstop: number = 0.0,
  public peakheight: number = 0.0,
  public zhalfNm: number = 0.0,
  public n: number = 0,
  public coeffs: (string)[] = [],
  public error: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const layer = (this.layer !== null ? builder.createString(this.layer!) : 0);
  const coeffs = IonoObservationProfileDensityShiftedChebyshevEntry_Full.createCoeffsVector(builder, builder.createObjectOffsetList(this.coeffs));

  return IonoObservationProfileDensityShiftedChebyshevEntry_Full.createIonoObservationProfileDensityShiftedChebyshevEntry_Full(builder,
    layer,
    this.fstart,
    this.fstop,
    this.peakheight,
    this.zhalfNm,
    this.n,
    coeffs,
    this.error
  );
}
}
