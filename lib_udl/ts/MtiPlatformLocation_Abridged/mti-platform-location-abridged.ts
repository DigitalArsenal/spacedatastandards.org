// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// Provides information pertaining to the location of the sensor platform during periods when the sensor is not collecting data. It shall be sent as required during periods in which the sensor is not collecting data, such as enroute to an orbit location, during a turn, or any other time at which platform location is required.
 */
export class MtiPlatformLocation_Abridged implements flatbuffers.IUnpackableObject<MtiPlatformLocation_AbridgedT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):MtiPlatformLocation_Abridged {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsMtiPlatformLocation_Abridged(bb:flatbuffers.ByteBuffer, obj?:MtiPlatformLocation_Abridged):MtiPlatformLocation_Abridged {
  return (obj || new MtiPlatformLocation_Abridged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsMtiPlatformLocation_Abridged(bb:flatbuffers.ByteBuffer, obj?:MtiPlatformLocation_Abridged):MtiPlatformLocation_Abridged {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new MtiPlatformLocation_Abridged()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('MTIP');
}

/**
 * Elapsed time, expressed in milliseconds, from midnight at the beginning of the day specified in the Reference Time fields of the Mission Segment to the time the report is prepared.
 * Example: /// Example: 1234567890
 * Constraints: No constraints specified.
 */
l1():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readInt64(this.bb_pos + offset) : BigInt('0');
}

/**
 * North-South position of the platform at the time the report is prepared, expressed as degrees North (positive) or South (negative) of the Equator.
 * Example: /// Example: 45.23
 * Constraints: No constraints specified.
 */
l2():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * East-West position of the platform at the time the report is prepared, expressed as degrees East (positive) from the Prime Meridian.
 * Example: /// Example: 45.23
 * Constraints: No constraints specified.
 */
l3():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Altitude of the platform at the time the report is prepared, referenced to its position above the WGS-84 ellipsoid, in centimeters.
 * Example: /// Example: 45
 * Constraints: No constraints specified.
 */
l4():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * Ground track of the platform at the time the report is prepared, expressed as the angle in degrees (clockwise) from True North.
 * Example: /// Example: 45.23
 * Constraints: No constraints specified.
 */
l5():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Ground speed of the platform at the time the report is prepared, expressed as millimeters per second.
 * Example: /// Example: 50
 * Constraints: No constraints specified.
 */
l6():number {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * Velocity of the platform in the vertical direction, expressed as decimeters per second.
 * Example: /// Example: 82
 * Constraints: No constraints specified.
 */
l7():number {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * Platform location timestamp in ISO8601 UTC format.
 * Example: /// Example: No example provided.
 * Constraints: No constraints specified.
 */
platlocts():string|null
platlocts(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
platlocts(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 18);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startMtiPlatformLocation_Abridged(builder:flatbuffers.Builder) {
  builder.startObject(8);
}

static addL1(builder:flatbuffers.Builder, l1:bigint) {
  builder.addFieldInt64(0, l1, BigInt('0'));
}

static addL2(builder:flatbuffers.Builder, l2:number) {
  builder.addFieldFloat64(1, l2, 0.0);
}

static addL3(builder:flatbuffers.Builder, l3:number) {
  builder.addFieldFloat64(2, l3, 0.0);
}

static addL4(builder:flatbuffers.Builder, l4:number) {
  builder.addFieldInt32(3, l4, 0);
}

static addL5(builder:flatbuffers.Builder, l5:number) {
  builder.addFieldFloat64(4, l5, 0.0);
}

static addL6(builder:flatbuffers.Builder, l6:number) {
  builder.addFieldInt32(5, l6, 0);
}

static addL7(builder:flatbuffers.Builder, l7:number) {
  builder.addFieldInt32(6, l7, 0);
}

static addPlatlocts(builder:flatbuffers.Builder, platloctsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(7, platloctsOffset, 0);
}

static endMtiPlatformLocation_Abridged(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishMtiPlatformLocation_AbridgedBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'MTIP');
}

static finishSizePrefixedMtiPlatformLocation_AbridgedBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'MTIP', true);
}

static createMtiPlatformLocation_Abridged(builder:flatbuffers.Builder, l1:bigint, l2:number, l3:number, l4:number, l5:number, l6:number, l7:number, platloctsOffset:flatbuffers.Offset):flatbuffers.Offset {
  MtiPlatformLocation_Abridged.startMtiPlatformLocation_Abridged(builder);
  MtiPlatformLocation_Abridged.addL1(builder, l1);
  MtiPlatformLocation_Abridged.addL2(builder, l2);
  MtiPlatformLocation_Abridged.addL3(builder, l3);
  MtiPlatformLocation_Abridged.addL4(builder, l4);
  MtiPlatformLocation_Abridged.addL5(builder, l5);
  MtiPlatformLocation_Abridged.addL6(builder, l6);
  MtiPlatformLocation_Abridged.addL7(builder, l7);
  MtiPlatformLocation_Abridged.addPlatlocts(builder, platloctsOffset);
  return MtiPlatformLocation_Abridged.endMtiPlatformLocation_Abridged(builder);
}

unpack(): MtiPlatformLocation_AbridgedT {
  return new MtiPlatformLocation_AbridgedT(
    this.l1(),
    this.l2(),
    this.l3(),
    this.l4(),
    this.l5(),
    this.l6(),
    this.l7(),
    this.platlocts()
  );
}


unpackTo(_o: MtiPlatformLocation_AbridgedT): void {
  _o.l1 = this.l1();
  _o.l2 = this.l2();
  _o.l3 = this.l3();
  _o.l4 = this.l4();
  _o.l5 = this.l5();
  _o.l6 = this.l6();
  _o.l7 = this.l7();
  _o.platlocts = this.platlocts();
}
}

export class MtiPlatformLocation_AbridgedT implements flatbuffers.IGeneratedObject {
constructor(
  public l1: bigint = BigInt('0'),
  public l2: number = 0.0,
  public l3: number = 0.0,
  public l4: number = 0,
  public l5: number = 0.0,
  public l6: number = 0,
  public l7: number = 0,
  public platlocts: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const platlocts = (this.platlocts !== null ? builder.createString(this.platlocts!) : 0);

  return MtiPlatformLocation_Abridged.createMtiPlatformLocation_Abridged(builder,
    this.l1,
    this.l2,
    this.l3,
    this.l4,
    this.l5,
    this.l6,
    this.l7,
    platlocts
  );
}
}
