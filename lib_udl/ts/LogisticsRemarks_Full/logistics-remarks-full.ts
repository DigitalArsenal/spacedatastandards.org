// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// Remarks associated with this LogisticsSupport record.
 */
export class LogisticsRemarks_Full implements flatbuffers.IUnpackableObject<LogisticsRemarks_FullT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LogisticsRemarks_Full {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLogisticsRemarks_Full(bb:flatbuffers.ByteBuffer, obj?:LogisticsRemarks_Full):LogisticsRemarks_Full {
  return (obj || new LogisticsRemarks_Full()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLogisticsRemarks_Full(bb:flatbuffers.ByteBuffer, obj?:LogisticsRemarks_Full):LogisticsRemarks_Full {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LogisticsRemarks_Full()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('LOGI');
}

/**
 * User who published the remark.
 * Example: /// Example: JSMITH
 * Constraints: Minimum length = 0, Maximum length = 32
 */
username():string|null
username(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
username(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Text of the remark.
 * Example: /// Example: EXAMPLE REMARK
 * Constraints: Minimum length = 0, Maximum length = 4000
 */
remark():string|null
remark(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
remark(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.
 * Example: /// Example: 2023-07-17T10:30:00.123Z
 * Constraints: No constraints specified.
 */
lastChanged():string|null
lastChanged(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lastChanged(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startLogisticsRemarks_Full(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addUsername(builder:flatbuffers.Builder, usernameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, usernameOffset, 0);
}

static addRemark(builder:flatbuffers.Builder, remarkOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, remarkOffset, 0);
}

static addLastChanged(builder:flatbuffers.Builder, lastChangedOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, lastChangedOffset, 0);
}

static endLogisticsRemarks_Full(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishLogisticsRemarks_FullBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'LOGI');
}

static finishSizePrefixedLogisticsRemarks_FullBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'LOGI', true);
}

static createLogisticsRemarks_Full(builder:flatbuffers.Builder, usernameOffset:flatbuffers.Offset, remarkOffset:flatbuffers.Offset, lastChangedOffset:flatbuffers.Offset):flatbuffers.Offset {
  LogisticsRemarks_Full.startLogisticsRemarks_Full(builder);
  LogisticsRemarks_Full.addUsername(builder, usernameOffset);
  LogisticsRemarks_Full.addRemark(builder, remarkOffset);
  LogisticsRemarks_Full.addLastChanged(builder, lastChangedOffset);
  return LogisticsRemarks_Full.endLogisticsRemarks_Full(builder);
}

unpack(): LogisticsRemarks_FullT {
  return new LogisticsRemarks_FullT(
    this.username(),
    this.remark(),
    this.lastChanged()
  );
}


unpackTo(_o: LogisticsRemarks_FullT): void {
  _o.username = this.username();
  _o.remark = this.remark();
  _o.lastChanged = this.lastChanged();
}
}

export class LogisticsRemarks_FullT implements flatbuffers.IGeneratedObject {
constructor(
  public username: string|Uint8Array|null = null,
  public remark: string|Uint8Array|null = null,
  public lastChanged: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const username = (this.username !== null ? builder.createString(this.username!) : 0);
  const remark = (this.remark !== null ? builder.createString(this.remark!) : 0);
  const lastChanged = (this.lastChanged !== null ? builder.createString(this.lastChanged!) : 0);

  return LogisticsRemarks_Full.createLogisticsRemarks_Full(builder,
    username,
    remark,
    lastChanged
  );
}
}
