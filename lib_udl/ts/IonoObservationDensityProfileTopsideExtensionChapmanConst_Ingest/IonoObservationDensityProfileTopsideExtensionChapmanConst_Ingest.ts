// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// Parameters of the constant-scale-height Chapman layer.
 */
export class IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest implements flatbuffers.IUnpackableObject<IonoObservationDensityProfileTopsideExtensionChapmanConst_IngestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(bb:flatbuffers.ByteBuffer, obj?:IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest):IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest {
  return (obj || new IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(bb:flatbuffers.ByteBuffer, obj?:IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest):IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('IONO');
}

/**
 * Description of the Chapman computation technique.
 * Example: /// Example: Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height.
 * Constraints: No constraints specified.
 */
description():string|null
description(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
description(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Peak density of F2 layer, in grams per cubic centimeter.
 * Example: /// Example: 313283.1
 * Constraints: No constraints specified.
 */
nmF2():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Peak height of F2 layer, in kilometers.
 * Example: /// Example: 265.42
 * Constraints: No constraints specified.
 */
hmF2():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Scale height if F2 layer at the peak, in kilometers.
 * Example: /// Example: 45.191
 * Constraints: No constraints specified.
 */
scaleF2():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

/**
 * Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
 * Example: /// Example: 35.1
 * Constraints: No constraints specified.
 */
chi():number {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readFloat64(this.bb_pos + offset) : 0.0;
}

static startIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addDescription(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, descriptionOffset, 0);
}

static addNmF2(builder:flatbuffers.Builder, nmF2:number) {
  builder.addFieldFloat64(1, nmF2, 0.0);
}

static addHmF2(builder:flatbuffers.Builder, hmF2:number) {
  builder.addFieldFloat64(2, hmF2, 0.0);
}

static addScaleF2(builder:flatbuffers.Builder, scaleF2:number) {
  builder.addFieldFloat64(3, scaleF2, 0.0);
}

static addChi(builder:flatbuffers.Builder, chi:number) {
  builder.addFieldFloat64(4, chi, 0.0);
}

static endIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishIonoObservationDensityProfileTopsideExtensionChapmanConst_IngestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'IONO');
}

static finishSizePrefixedIonoObservationDensityProfileTopsideExtensionChapmanConst_IngestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'IONO', true);
}

static createIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder:flatbuffers.Builder, descriptionOffset:flatbuffers.Offset, nmF2:number, hmF2:number, scaleF2:number, chi:number):flatbuffers.Offset {
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.startIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder);
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.addDescription(builder, descriptionOffset);
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.addNmF2(builder, nmF2);
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.addHmF2(builder, hmF2);
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.addScaleF2(builder, scaleF2);
  IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.addChi(builder, chi);
  return IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.endIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder);
}

unpack(): IonoObservationDensityProfileTopsideExtensionChapmanConst_IngestT {
  return new IonoObservationDensityProfileTopsideExtensionChapmanConst_IngestT(
    this.description(),
    this.nmF2(),
    this.hmF2(),
    this.scaleF2(),
    this.chi()
  );
}


unpackTo(_o: IonoObservationDensityProfileTopsideExtensionChapmanConst_IngestT): void {
  _o.description = this.description();
  _o.nmF2 = this.nmF2();
  _o.hmF2 = this.hmF2();
  _o.scaleF2 = this.scaleF2();
  _o.chi = this.chi();
}
}

export class IonoObservationDensityProfileTopsideExtensionChapmanConst_IngestT implements flatbuffers.IGeneratedObject {
constructor(
  public description: string|Uint8Array|null = null,
  public nmF2: number = 0.0,
  public hmF2: number = 0.0,
  public scaleF2: number = 0.0,
  public chi: number = 0.0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const description = (this.description !== null ? builder.createString(this.description!) : 0);

  return IonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest.createIonoObservationDensityProfileTopsideExtensionChapmanConst_Ingest(builder,
    description,
    this.nmF2,
    this.hmF2,
    this.scaleF2,
    this.chi
  );
}
}
