// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';



/**
 * /// The specialties required to implement this support item.
 */
export class LogisticsSpecialties_Ingest implements flatbuffers.IUnpackableObject<LogisticsSpecialties_IngestT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):LogisticsSpecialties_Ingest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsLogisticsSpecialties_Ingest(bb:flatbuffers.ByteBuffer, obj?:LogisticsSpecialties_Ingest):LogisticsSpecialties_Ingest {
  return (obj || new LogisticsSpecialties_Ingest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsLogisticsSpecialties_Ingest(bb:flatbuffers.ByteBuffer, obj?:LogisticsSpecialties_Ingest):LogisticsSpecialties_Ingest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new LogisticsSpecialties_Ingest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('LOGI');
}

/**
 * Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.
 * Example: /// Example: ELEN
 * Constraints: Minimum length = 0, Maximum length = 4
 */
specialty():string|null
specialty(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
specialty(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Skill level of the mission response team member.
 * Example: /// Example: 3
 * Constraints: No constraints specified.
 */
skillLevel():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

/**
 * The first name of the specialist.
 * Example: /// Example: JOHN
 * Constraints: Minimum length = 0, Maximum length = 20
 */
firstName():string|null
firstName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
firstName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * The last name of the specialist.
 * Example: /// Example: SMITH
 * Constraints: Minimum length = 0, Maximum length = 30
 */
lastName():string|null
lastName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lastName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Military service rank designation.
 * Example: /// Example: MAJ
 * Constraints: Minimum length = 0, Maximum length = 6
 */
rankCode():string|null
rankCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rankCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * The last four digits of the specialist's social security number.
 * Example: /// Example: 9999
 * Constraints: Minimum length = 0, Maximum length = 4
 */
last4Ssn():string|null
last4Ssn(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
last4Ssn(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

/**
 * Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.
 * Example: /// Example: TC
 * Constraints: Minimum length = 0, Maximum length = 2
 */
roleTypeCode():string|null
roleTypeCode(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
roleTypeCode(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startLogisticsSpecialties_Ingest(builder:flatbuffers.Builder) {
  builder.startObject(7);
}

static addSpecialty(builder:flatbuffers.Builder, specialtyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, specialtyOffset, 0);
}

static addSkillLevel(builder:flatbuffers.Builder, skillLevel:number) {
  builder.addFieldInt32(1, skillLevel, 0);
}

static addFirstName(builder:flatbuffers.Builder, firstNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, firstNameOffset, 0);
}

static addLastName(builder:flatbuffers.Builder, lastNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, lastNameOffset, 0);
}

static addRankCode(builder:flatbuffers.Builder, rankCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, rankCodeOffset, 0);
}

static addLast4Ssn(builder:flatbuffers.Builder, last4SsnOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, last4SsnOffset, 0);
}

static addRoleTypeCode(builder:flatbuffers.Builder, roleTypeCodeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, roleTypeCodeOffset, 0);
}

static endLogisticsSpecialties_Ingest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishLogisticsSpecialties_IngestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'LOGI');
}

static finishSizePrefixedLogisticsSpecialties_IngestBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'LOGI', true);
}

static createLogisticsSpecialties_Ingest(builder:flatbuffers.Builder, specialtyOffset:flatbuffers.Offset, skillLevel:number, firstNameOffset:flatbuffers.Offset, lastNameOffset:flatbuffers.Offset, rankCodeOffset:flatbuffers.Offset, last4SsnOffset:flatbuffers.Offset, roleTypeCodeOffset:flatbuffers.Offset):flatbuffers.Offset {
  LogisticsSpecialties_Ingest.startLogisticsSpecialties_Ingest(builder);
  LogisticsSpecialties_Ingest.addSpecialty(builder, specialtyOffset);
  LogisticsSpecialties_Ingest.addSkillLevel(builder, skillLevel);
  LogisticsSpecialties_Ingest.addFirstName(builder, firstNameOffset);
  LogisticsSpecialties_Ingest.addLastName(builder, lastNameOffset);
  LogisticsSpecialties_Ingest.addRankCode(builder, rankCodeOffset);
  LogisticsSpecialties_Ingest.addLast4Ssn(builder, last4SsnOffset);
  LogisticsSpecialties_Ingest.addRoleTypeCode(builder, roleTypeCodeOffset);
  return LogisticsSpecialties_Ingest.endLogisticsSpecialties_Ingest(builder);
}

unpack(): LogisticsSpecialties_IngestT {
  return new LogisticsSpecialties_IngestT(
    this.specialty(),
    this.skillLevel(),
    this.firstName(),
    this.lastName(),
    this.rankCode(),
    this.last4Ssn(),
    this.roleTypeCode()
  );
}


unpackTo(_o: LogisticsSpecialties_IngestT): void {
  _o.specialty = this.specialty();
  _o.skillLevel = this.skillLevel();
  _o.firstName = this.firstName();
  _o.lastName = this.lastName();
  _o.rankCode = this.rankCode();
  _o.last4Ssn = this.last4Ssn();
  _o.roleTypeCode = this.roleTypeCode();
}
}

export class LogisticsSpecialties_IngestT implements flatbuffers.IGeneratedObject {
constructor(
  public specialty: string|Uint8Array|null = null,
  public skillLevel: number = 0,
  public firstName: string|Uint8Array|null = null,
  public lastName: string|Uint8Array|null = null,
  public rankCode: string|Uint8Array|null = null,
  public last4Ssn: string|Uint8Array|null = null,
  public roleTypeCode: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const specialty = (this.specialty !== null ? builder.createString(this.specialty!) : 0);
  const firstName = (this.firstName !== null ? builder.createString(this.firstName!) : 0);
  const lastName = (this.lastName !== null ? builder.createString(this.lastName!) : 0);
  const rankCode = (this.rankCode !== null ? builder.createString(this.rankCode!) : 0);
  const last4Ssn = (this.last4Ssn !== null ? builder.createString(this.last4Ssn!) : 0);
  const roleTypeCode = (this.roleTypeCode !== null ? builder.createString(this.roleTypeCode!) : 0);

  return LogisticsSpecialties_Ingest.createLogisticsSpecialties_Ingest(builder,
    specialty,
    this.skillLevel,
    firstName,
    lastName,
    rankCode,
    last4Ssn,
    roleTypeCode
  );
}
}
