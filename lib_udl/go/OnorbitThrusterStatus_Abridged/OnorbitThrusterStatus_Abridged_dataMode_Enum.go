// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package OnorbitThrusterStatus_Abridged_dataMode_Enum

import "strconv"

type OnorbitThrusterStatus_Abridged_dataMode_Enum int8

const (
	/// Data collected or produced that pertains to real-world objects, events, and analysis.
	OnorbitThrusterStatus_Abridged_dataMode_EnumREAL      OnorbitThrusterStatus_Abridged_dataMode_Enum = 0
	/// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
	OnorbitThrusterStatus_Abridged_dataMode_EnumTEST      OnorbitThrusterStatus_Abridged_dataMode_Enum = 1
	/// Synthetic data generated by a model to mimic real-world datasets.
	OnorbitThrusterStatus_Abridged_dataMode_EnumSIMULATED OnorbitThrusterStatus_Abridged_dataMode_Enum = 2
	/// Data pertaining to a government or military exercise. The data may include both real and simulated data.
	OnorbitThrusterStatus_Abridged_dataMode_EnumEXERCISE  OnorbitThrusterStatus_Abridged_dataMode_Enum = 3
)

var EnumNamesOnorbitThrusterStatus_Abridged_dataMode_Enum = map[OnorbitThrusterStatus_Abridged_dataMode_Enum]string{
	OnorbitThrusterStatus_Abridged_dataMode_EnumREAL:      "REAL",
	OnorbitThrusterStatus_Abridged_dataMode_EnumTEST:      "TEST",
	OnorbitThrusterStatus_Abridged_dataMode_EnumSIMULATED: "SIMULATED",
	OnorbitThrusterStatus_Abridged_dataMode_EnumEXERCISE:  "EXERCISE",
}

var EnumValuesOnorbitThrusterStatus_Abridged_dataMode_Enum = map[string]OnorbitThrusterStatus_Abridged_dataMode_Enum{
	"REAL":      OnorbitThrusterStatus_Abridged_dataMode_EnumREAL,
	"TEST":      OnorbitThrusterStatus_Abridged_dataMode_EnumTEST,
	"SIMULATED": OnorbitThrusterStatus_Abridged_dataMode_EnumSIMULATED,
	"EXERCISE":  OnorbitThrusterStatus_Abridged_dataMode_EnumEXERCISE,
}

func (v OnorbitThrusterStatus_Abridged_dataMode_Enum) String() string {
	if s, ok := EnumNamesOnorbitThrusterStatus_Abridged_dataMode_Enum[v]; ok {
		return s
	}
	return "OnorbitThrusterStatus_Abridged_dataMode_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
