// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package DataLinkRemarks_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// Collection of remarks associated with this data link message.
type DataLinkRemarks_Abridged struct {
	_tab flatbuffers.Table
}

const DataLinkRemarks_AbridgedIdentifier = "DATA"

func GetRootAsDataLinkRemarks_Abridged(buf []byte, offset flatbuffers.UOffsetT) *DataLinkRemarks_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &DataLinkRemarks_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishDataLinkRemarks_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(DataLinkRemarks_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func DataLinkRemarks_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, DataLinkRemarks_AbridgedIdentifier)
}

func GetSizePrefixedRootAsDataLinkRemarks_Abridged(buf []byte, offset flatbuffers.UOffsetT) *DataLinkRemarks_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &DataLinkRemarks_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedDataLinkRemarks_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(DataLinkRemarks_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedDataLinkRemarks_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, DataLinkRemarks_AbridgedIdentifier)
}

func (rcv *DataLinkRemarks_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *DataLinkRemarks_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// Indicates the subject matter of the remark.
/// Example: /// Example: CONTINGENCY PROCEDURES
/// Constraints: Minimum length = 0, Maximum length = 64
func (rcv *DataLinkRemarks_Abridged) Type() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Indicates the subject matter of the remark.
/// Example: /// Example: CONTINGENCY PROCEDURES
/// Constraints: Minimum length = 0, Maximum length = 64
/// Text of the remark.
/// Example: /// Example: Example data link remarks
/// Constraints: Minimum length = 0, Maximum length = 128
func (rcv *DataLinkRemarks_Abridged) Text() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Text of the remark.
/// Example: /// Example: Example data link remarks
/// Constraints: Minimum length = 0, Maximum length = 128
func DataLinkRemarks_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func DataLinkRemarks_AbridgedAddType(builder *flatbuffers.Builder, type_ flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(type_), 0)
}
func DataLinkRemarks_AbridgedAddText(builder *flatbuffers.Builder, text flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(text), 0)
}
func DataLinkRemarks_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
