// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package AircraftStatus_Ingest_airToGroundStatus_Enum

import "strconv"

type AircraftStatus_Ingest_airToGroundStatus_Enum int8

const (
	/// No description available.
	AircraftStatus_Ingest_airToGroundStatus_EnumOPERATIONAL     AircraftStatus_Ingest_airToGroundStatus_Enum = 0
	/// No description available.
	AircraftStatus_Ingest_airToGroundStatus_EnumNON_OPERATIONAL AircraftStatus_Ingest_airToGroundStatus_Enum = 1
	/// No description available.
	AircraftStatus_Ingest_airToGroundStatus_EnumOFF             AircraftStatus_Ingest_airToGroundStatus_Enum = 2
)

var EnumNamesAircraftStatus_Ingest_airToGroundStatus_Enum = map[AircraftStatus_Ingest_airToGroundStatus_Enum]string{
	AircraftStatus_Ingest_airToGroundStatus_EnumOPERATIONAL:     "OPERATIONAL",
	AircraftStatus_Ingest_airToGroundStatus_EnumNON_OPERATIONAL: "NON_OPERATIONAL",
	AircraftStatus_Ingest_airToGroundStatus_EnumOFF:             "OFF",
}

var EnumValuesAircraftStatus_Ingest_airToGroundStatus_Enum = map[string]AircraftStatus_Ingest_airToGroundStatus_Enum{
	"OPERATIONAL":     AircraftStatus_Ingest_airToGroundStatus_EnumOPERATIONAL,
	"NON_OPERATIONAL": AircraftStatus_Ingest_airToGroundStatus_EnumNON_OPERATIONAL,
	"OFF":             AircraftStatus_Ingest_airToGroundStatus_EnumOFF,
}

func (v AircraftStatus_Ingest_airToGroundStatus_Enum) String() string {
	if s, ok := EnumNamesAircraftStatus_Ingest_airToGroundStatus_Enum[v]; ok {
		return s
	}
	return "AircraftStatus_Ingest_airToGroundStatus_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
