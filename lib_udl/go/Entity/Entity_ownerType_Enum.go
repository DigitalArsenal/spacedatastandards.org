// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package Entity_ownerType_Enum

import "strconv"

type Entity_ownerType_Enum int8

const (
	/// No description available.
	Entity_ownerType_EnumCOMMERCIAL Entity_ownerType_Enum = 0
	/// No description available.
	Entity_ownerType_EnumGOVERNMENT Entity_ownerType_Enum = 1
	/// No description available.
	Entity_ownerType_EnumACADEMIC   Entity_ownerType_Enum = 2
	/// No description available.
	Entity_ownerType_EnumCONSORTIUM Entity_ownerType_Enum = 3
	/// No description available.
	Entity_ownerType_EnumOTHER      Entity_ownerType_Enum = 4
)

var EnumNamesEntity_ownerType_Enum = map[Entity_ownerType_Enum]string{
	Entity_ownerType_EnumCOMMERCIAL: "COMMERCIAL",
	Entity_ownerType_EnumGOVERNMENT: "GOVERNMENT",
	Entity_ownerType_EnumACADEMIC:   "ACADEMIC",
	Entity_ownerType_EnumCONSORTIUM: "CONSORTIUM",
	Entity_ownerType_EnumOTHER:      "OTHER",
}

var EnumValuesEntity_ownerType_Enum = map[string]Entity_ownerType_Enum{
	"COMMERCIAL": Entity_ownerType_EnumCOMMERCIAL,
	"GOVERNMENT": Entity_ownerType_EnumGOVERNMENT,
	"ACADEMIC":   Entity_ownerType_EnumACADEMIC,
	"CONSORTIUM": Entity_ownerType_EnumCONSORTIUM,
	"OTHER":      Entity_ownerType_EnumOTHER,
}

func (v Entity_ownerType_Enum) String() string {
	if s, ok := EnumNamesEntity_ownerType_Enum[v]; ok {
		return s
	}
	return "Entity_ownerType_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
