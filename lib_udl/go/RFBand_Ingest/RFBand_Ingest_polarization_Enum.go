// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package RFBand_Ingest_polarization_Enum

import "strconv"

type RFBand_Ingest_polarization_Enum int8

const (
	/// No description available.
	RFBand_Ingest_polarization_EnumH RFBand_Ingest_polarization_Enum = 0
	/// No description available.
	RFBand_Ingest_polarization_EnumV RFBand_Ingest_polarization_Enum = 1
	/// No description available.
	RFBand_Ingest_polarization_EnumR RFBand_Ingest_polarization_Enum = 2
	/// No description available.
	RFBand_Ingest_polarization_EnumL RFBand_Ingest_polarization_Enum = 3
)

var EnumNamesRFBand_Ingest_polarization_Enum = map[RFBand_Ingest_polarization_Enum]string{
	RFBand_Ingest_polarization_EnumH: "H",
	RFBand_Ingest_polarization_EnumV: "V",
	RFBand_Ingest_polarization_EnumR: "R",
	RFBand_Ingest_polarization_EnumL: "L",
}

var EnumValuesRFBand_Ingest_polarization_Enum = map[string]RFBand_Ingest_polarization_Enum{
	"H": RFBand_Ingest_polarization_EnumH,
	"V": RFBand_Ingest_polarization_EnumV,
	"R": RFBand_Ingest_polarization_EnumR,
	"L": RFBand_Ingest_polarization_EnumL,
}

func (v RFBand_Ingest_polarization_Enum) String() string {
	if s, ok := EnumNamesRFBand_Ingest_polarization_Enum[v]; ok {
		return s
	}
	return "RFBand_Ingest_polarization_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
