// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package AirfieldSlotConsumption_Full_status_Enum

import "strconv"

type AirfieldSlotConsumption_Full_status_Enum int8

const (
	/// No description available.
	AirfieldSlotConsumption_Full_status_EnumREQUESTED AirfieldSlotConsumption_Full_status_Enum = 0
	/// No description available.
	AirfieldSlotConsumption_Full_status_EnumAPPROVED  AirfieldSlotConsumption_Full_status_Enum = 1
	/// No description available.
	AirfieldSlotConsumption_Full_status_EnumDENIED    AirfieldSlotConsumption_Full_status_Enum = 2
	/// No description available.
	AirfieldSlotConsumption_Full_status_EnumBLOCKED   AirfieldSlotConsumption_Full_status_Enum = 3
	/// No description available.
	AirfieldSlotConsumption_Full_status_EnumOTHER     AirfieldSlotConsumption_Full_status_Enum = 4
)

var EnumNamesAirfieldSlotConsumption_Full_status_Enum = map[AirfieldSlotConsumption_Full_status_Enum]string{
	AirfieldSlotConsumption_Full_status_EnumREQUESTED: "REQUESTED",
	AirfieldSlotConsumption_Full_status_EnumAPPROVED:  "APPROVED",
	AirfieldSlotConsumption_Full_status_EnumDENIED:    "DENIED",
	AirfieldSlotConsumption_Full_status_EnumBLOCKED:   "BLOCKED",
	AirfieldSlotConsumption_Full_status_EnumOTHER:     "OTHER",
}

var EnumValuesAirfieldSlotConsumption_Full_status_Enum = map[string]AirfieldSlotConsumption_Full_status_Enum{
	"REQUESTED": AirfieldSlotConsumption_Full_status_EnumREQUESTED,
	"APPROVED":  AirfieldSlotConsumption_Full_status_EnumAPPROVED,
	"DENIED":    AirfieldSlotConsumption_Full_status_EnumDENIED,
	"BLOCKED":   AirfieldSlotConsumption_Full_status_EnumBLOCKED,
	"OTHER":     AirfieldSlotConsumption_Full_status_EnumOTHER,
}

func (v AirfieldSlotConsumption_Full_status_Enum) String() string {
	if s, ok := EnumNamesAirfieldSlotConsumption_Full_status_Enum[v]; ok {
		return s
	}
	return "AirfieldSlotConsumption_Full_status_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
