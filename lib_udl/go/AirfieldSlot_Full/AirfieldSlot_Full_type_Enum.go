// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package AirfieldSlot_Full_type_Enum

import "strconv"

type AirfieldSlot_Full_type_Enum int8

const (
	/// No description available.
	AirfieldSlot_Full_type_EnumWORKING AirfieldSlot_Full_type_Enum = 0
	/// No description available.
	AirfieldSlot_Full_type_EnumPARKING AirfieldSlot_Full_type_Enum = 1
	/// No description available.
	AirfieldSlot_Full_type_EnumTAKEOFF AirfieldSlot_Full_type_Enum = 2
	/// No description available.
	AirfieldSlot_Full_type_EnumLANDING AirfieldSlot_Full_type_Enum = 3
	/// No description available.
	AirfieldSlot_Full_type_EnumOTHER   AirfieldSlot_Full_type_Enum = 4
)

var EnumNamesAirfieldSlot_Full_type_Enum = map[AirfieldSlot_Full_type_Enum]string{
	AirfieldSlot_Full_type_EnumWORKING: "WORKING",
	AirfieldSlot_Full_type_EnumPARKING: "PARKING",
	AirfieldSlot_Full_type_EnumTAKEOFF: "TAKEOFF",
	AirfieldSlot_Full_type_EnumLANDING: "LANDING",
	AirfieldSlot_Full_type_EnumOTHER:   "OTHER",
}

var EnumValuesAirfieldSlot_Full_type_Enum = map[string]AirfieldSlot_Full_type_Enum{
	"WORKING": AirfieldSlot_Full_type_EnumWORKING,
	"PARKING": AirfieldSlot_Full_type_EnumPARKING,
	"TAKEOFF": AirfieldSlot_Full_type_EnumTAKEOFF,
	"LANDING": AirfieldSlot_Full_type_EnumLANDING,
	"OTHER":   AirfieldSlot_Full_type_EnumOTHER,
}

func (v AirfieldSlot_Full_type_Enum) String() string {
	if s, ok := EnumNamesAirfieldSlot_Full_type_Enum[v]; ok {
		return s
	}
	return "AirfieldSlot_Full_type_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
