// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package EOObservation_Ingest_referenceFrame_Enum

import "strconv"

type EOObservation_Ingest_referenceFrame_Enum int8

const (
	/// No description available.
	EOObservation_Ingest_referenceFrame_EnumJ2000 EOObservation_Ingest_referenceFrame_Enum = 0
	/// No description available.
	EOObservation_Ingest_referenceFrame_EnumGCRF  EOObservation_Ingest_referenceFrame_Enum = 1
	/// No description available.
	EOObservation_Ingest_referenceFrame_EnumITRF  EOObservation_Ingest_referenceFrame_Enum = 2
	/// No description available.
	EOObservation_Ingest_referenceFrame_EnumTEME  EOObservation_Ingest_referenceFrame_Enum = 3
)

var EnumNamesEOObservation_Ingest_referenceFrame_Enum = map[EOObservation_Ingest_referenceFrame_Enum]string{
	EOObservation_Ingest_referenceFrame_EnumJ2000: "J2000",
	EOObservation_Ingest_referenceFrame_EnumGCRF:  "GCRF",
	EOObservation_Ingest_referenceFrame_EnumITRF:  "ITRF",
	EOObservation_Ingest_referenceFrame_EnumTEME:  "TEME",
}

var EnumValuesEOObservation_Ingest_referenceFrame_Enum = map[string]EOObservation_Ingest_referenceFrame_Enum{
	"J2000": EOObservation_Ingest_referenceFrame_EnumJ2000,
	"GCRF":  EOObservation_Ingest_referenceFrame_EnumGCRF,
	"ITRF":  EOObservation_Ingest_referenceFrame_EnumITRF,
	"TEME":  EOObservation_Ingest_referenceFrame_EnumTEME,
}

func (v EOObservation_Ingest_referenceFrame_Enum) String() string {
	if s, ok := EnumNamesEOObservation_Ingest_referenceFrame_Enum[v]; ok {
		return s
	}
	return "EOObservation_Ingest_referenceFrame_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
