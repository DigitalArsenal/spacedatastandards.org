// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package SofDataSourceRef_Full

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// List of data sources related to this document.
type SofDataSourceRef_Full struct {
	_tab flatbuffers.Table
}

const SofDataSourceRef_FullIdentifier = "SOFD"

func GetRootAsSofDataSourceRef_Full(buf []byte, offset flatbuffers.UOffsetT) *SofDataSourceRef_Full {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SofDataSourceRef_Full{}
	x.Init(buf, n+offset)
	return x
}

func FinishSofDataSourceRef_FullBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(SofDataSourceRef_FullIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func SofDataSourceRef_FullBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, SofDataSourceRef_FullIdentifier)
}

func GetSizePrefixedRootAsSofDataSourceRef_Full(buf []byte, offset flatbuffers.UOffsetT) *SofDataSourceRef_Full {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &SofDataSourceRef_Full{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedSofDataSourceRef_FullBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(SofDataSourceRef_FullIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedSofDataSourceRef_FullBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, SofDataSourceRef_FullIdentifier)
}

func (rcv *SofDataSourceRef_Full) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SofDataSourceRef_Full) Table() flatbuffers.Table {
	return rcv._tab
}

/// Data source id.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *SofDataSourceRef_Full) DataSourceId() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Data source id.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// start position.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *SofDataSourceRef_Full) StartPosition() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// start position.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// end position.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *SofDataSourceRef_Full) EndPosition() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// end position.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// paragraph number.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *SofDataSourceRef_Full) ParagraphNumber() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// paragraph number.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// sentence number.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *SofDataSourceRef_Full) SentenceNumber() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// sentence number.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func SofDataSourceRef_FullStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func SofDataSourceRef_FullAddDataSourceId(builder *flatbuffers.Builder, dataSourceId flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(dataSourceId), 0)
}
func SofDataSourceRef_FullAddStartPosition(builder *flatbuffers.Builder, startPosition flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(startPosition), 0)
}
func SofDataSourceRef_FullAddEndPosition(builder *flatbuffers.Builder, endPosition flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(endPosition), 0)
}
func SofDataSourceRef_FullAddParagraphNumber(builder *flatbuffers.Builder, paragraphNumber flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(paragraphNumber), 0)
}
func SofDataSourceRef_FullAddSentenceNumber(builder *flatbuffers.Builder, sentenceNumber flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(sentenceNumber), 0)
}
func SofDataSourceRef_FullEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
