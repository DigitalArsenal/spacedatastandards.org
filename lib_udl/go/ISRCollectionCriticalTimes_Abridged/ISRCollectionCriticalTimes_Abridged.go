// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package ISRCollectionCriticalTimes_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// High priority time windows.
type ISRCollectionCriticalTimes_Abridged struct {
	_tab flatbuffers.Table
}

const ISRCollectionCriticalTimes_AbridgedIdentifier = "ISRC"

func GetRootAsISRCollectionCriticalTimes_Abridged(buf []byte, offset flatbuffers.UOffsetT) *ISRCollectionCriticalTimes_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ISRCollectionCriticalTimes_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishISRCollectionCriticalTimes_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(ISRCollectionCriticalTimes_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func ISRCollectionCriticalTimes_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, ISRCollectionCriticalTimes_AbridgedIdentifier)
}

func GetSizePrefixedRootAsISRCollectionCriticalTimes_Abridged(buf []byte, offset flatbuffers.UOffsetT) *ISRCollectionCriticalTimes_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ISRCollectionCriticalTimes_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedISRCollectionCriticalTimes_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(ISRCollectionCriticalTimes_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedISRCollectionCriticalTimes_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, ISRCollectionCriticalTimes_AbridgedIdentifier)
}

func (rcv *ISRCollectionCriticalTimes_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ISRCollectionCriticalTimes_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// Critical start time to collect an image for this requirement.
/// Example: /// Example: 2021-01-19T01:01:15.001Z
/// Constraints: No constraints specified.
func (rcv *ISRCollectionCriticalTimes_Abridged) EarliestImagingTime() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Critical start time to collect an image for this requirement.
/// Example: /// Example: 2021-01-19T01:01:15.001Z
/// Constraints: No constraints specified.
/// Critical stop time to collect an image for this requirement.
/// Example: /// Example: 2021-01-19T01:11:15.001Z
/// Constraints: No constraints specified.
func (rcv *ISRCollectionCriticalTimes_Abridged) LatestImagingTime() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Critical stop time to collect an image for this requirement.
/// Example: /// Example: 2021-01-19T01:11:15.001Z
/// Constraints: No constraints specified.
func ISRCollectionCriticalTimes_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ISRCollectionCriticalTimes_AbridgedAddEarliestImagingTime(builder *flatbuffers.Builder, earliestImagingTime flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(earliestImagingTime), 0)
}
func ISRCollectionCriticalTimes_AbridgedAddLatestImagingTime(builder *flatbuffers.Builder, latestImagingTime flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(latestImagingTime), 0)
}
func ISRCollectionCriticalTimes_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
