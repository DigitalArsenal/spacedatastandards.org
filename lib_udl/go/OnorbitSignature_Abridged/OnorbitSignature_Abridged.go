// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package OnorbitSignature_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// Contains a list of common information across both Radar and EO observations.
type OnorbitSignature_Abridged struct {
	_tab flatbuffers.Table
}

const OnorbitSignature_AbridgedIdentifier = "ONOR"

func GetRootAsOnorbitSignature_Abridged(buf []byte, offset flatbuffers.UOffsetT) *OnorbitSignature_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &OnorbitSignature_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishOnorbitSignature_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(OnorbitSignature_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func OnorbitSignature_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, OnorbitSignature_AbridgedIdentifier)
}

func GetSizePrefixedRootAsOnorbitSignature_Abridged(buf []byte, offset flatbuffers.UOffsetT) *OnorbitSignature_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &OnorbitSignature_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedOnorbitSignature_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(OnorbitSignature_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedOnorbitSignature_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, OnorbitSignature_AbridgedIdentifier)
}

func (rcv *OnorbitSignature_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *OnorbitSignature_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *OnorbitSignature_Abridged) EoObservation() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *OnorbitSignature_Abridged) RadarObservation() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *OnorbitSignature_Abridged) RfObservation() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// No description provided.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func OnorbitSignature_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func OnorbitSignature_AbridgedAddEoObservation(builder *flatbuffers.Builder, eoObservation flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(eoObservation), 0)
}
func OnorbitSignature_AbridgedAddRadarObservation(builder *flatbuffers.Builder, radarObservation flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(radarObservation), 0)
}
func OnorbitSignature_AbridgedAddRfObservation(builder *flatbuffers.Builder, rfObservation flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(rfObservation), 0)
}
func OnorbitSignature_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
