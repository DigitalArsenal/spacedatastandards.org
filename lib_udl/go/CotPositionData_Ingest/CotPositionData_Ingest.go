// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package CotPositionData_Ingest

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// Schema for the CotPositionData to post.
type CotPositionData_Ingest struct {
	_tab flatbuffers.Table
}

const CotPositionData_IngestIdentifier = "COTP"

func GetRootAsCotPositionData_Ingest(buf []byte, offset flatbuffers.UOffsetT) *CotPositionData_Ingest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CotPositionData_Ingest{}
	x.Init(buf, n+offset)
	return x
}

func FinishCotPositionData_IngestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(CotPositionData_IngestIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func CotPositionData_IngestBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, CotPositionData_IngestIdentifier)
}

func GetSizePrefixedRootAsCotPositionData_Ingest(buf []byte, offset flatbuffers.UOffsetT) *CotPositionData_Ingest {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &CotPositionData_Ingest{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedCotPositionData_IngestBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(CotPositionData_IngestIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedCotPositionData_IngestBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, CotPositionData_IngestIdentifier)
}

func (rcv *CotPositionData_Ingest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CotPositionData_Ingest) Table() flatbuffers.Table {
	return rcv._tab
}

/// Name of the POI target Object.
/// Example: /// Example: POI_NAME
/// Constraints: Minimum length = 1, Maximum length = 2147483647
func (rcv *CotPositionData_Ingest) CallSign() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Name of the POI target Object.
/// Example: /// Example: POI_NAME
/// Constraints: Minimum length = 1, Maximum length = 2147483647
/// Team role  (Team Member| Team Lead | HQ | Sniper | Medic | Forward Observer | RTO | K9).
/// Example: /// Example: Team Member
/// Constraints: Minimum length = 1, Maximum length = 2147483647
func (rcv *CotPositionData_Ingest) TeamRole() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Team role  (Team Member| Team Lead | HQ | Sniper | Medic | Forward Observer | RTO | K9).
/// Example: /// Example: Team Member
/// Constraints: Minimum length = 1, Maximum length = 2147483647
/// Description of the POI target Object.
/// Example: /// Example: Description of the object
/// Constraints: Minimum length = 1, Maximum length = 2147483647
func (rcv *CotPositionData_Ingest) Team() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Description of the POI target Object.
/// Example: /// Example: Description of the object
/// Constraints: Minimum length = 1, Maximum length = 2147483647
func CotPositionData_IngestStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func CotPositionData_IngestAddCallSign(builder *flatbuffers.Builder, callSign flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(callSign), 0)
}
func CotPositionData_IngestAddTeamRole(builder *flatbuffers.Builder, teamRole flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(teamRole), 0)
}
func CotPositionData_IngestAddTeam(builder *flatbuffers.Builder, team flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(team), 0)
}
func CotPositionData_IngestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
