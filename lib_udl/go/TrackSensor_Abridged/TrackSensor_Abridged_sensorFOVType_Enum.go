// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package TrackSensor_Abridged_sensorFOVType_Enum

import "strconv"

type TrackSensor_Abridged_sensorFOVType_Enum int8

const (
	/// No description available.
	TrackSensor_Abridged_sensorFOVType_EnumBUTTERFLY          TrackSensor_Abridged_sensorFOVType_Enum = 0
	/// No description available.
	TrackSensor_Abridged_sensorFOVType_EnumCONE_ANGULAR       TrackSensor_Abridged_sensorFOVType_Enum = 1
	/// No description available.
	TrackSensor_Abridged_sensorFOVType_EnumCONE_DISTANCE      TrackSensor_Abridged_sensorFOVType_Enum = 2
	/// No description available.
	TrackSensor_Abridged_sensorFOVType_EnumHORIZON_TO_HORIZON TrackSensor_Abridged_sensorFOVType_Enum = 3
	/// No description available.
	TrackSensor_Abridged_sensorFOVType_EnumUNKNOWN            TrackSensor_Abridged_sensorFOVType_Enum = 4
)

var EnumNamesTrackSensor_Abridged_sensorFOVType_Enum = map[TrackSensor_Abridged_sensorFOVType_Enum]string{
	TrackSensor_Abridged_sensorFOVType_EnumBUTTERFLY:          "BUTTERFLY",
	TrackSensor_Abridged_sensorFOVType_EnumCONE_ANGULAR:       "CONE_ANGULAR",
	TrackSensor_Abridged_sensorFOVType_EnumCONE_DISTANCE:      "CONE_DISTANCE",
	TrackSensor_Abridged_sensorFOVType_EnumHORIZON_TO_HORIZON: "HORIZON_TO_HORIZON",
	TrackSensor_Abridged_sensorFOVType_EnumUNKNOWN:            "UNKNOWN",
}

var EnumValuesTrackSensor_Abridged_sensorFOVType_Enum = map[string]TrackSensor_Abridged_sensorFOVType_Enum{
	"BUTTERFLY":          TrackSensor_Abridged_sensorFOVType_EnumBUTTERFLY,
	"CONE_ANGULAR":       TrackSensor_Abridged_sensorFOVType_EnumCONE_ANGULAR,
	"CONE_DISTANCE":      TrackSensor_Abridged_sensorFOVType_EnumCONE_DISTANCE,
	"HORIZON_TO_HORIZON": TrackSensor_Abridged_sensorFOVType_EnumHORIZON_TO_HORIZON,
	"UNKNOWN":            TrackSensor_Abridged_sensorFOVType_EnumUNKNOWN,
}

func (v TrackSensor_Abridged_sensorFOVType_Enum) String() string {
	if s, ok := EnumNamesTrackSensor_Abridged_sensorFOVType_Enum[v]; ok {
		return s
	}
	return "TrackSensor_Abridged_sensorFOVType_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
