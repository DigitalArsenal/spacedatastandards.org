// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package MtiJobRequest_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// A grouping of zero or more target reports for which the sensor provides a single time, sensor position, reference position on the ground with simple estimates for the observed area at the reported time, and other pertinent data.
type MtiJobRequest_Abridged struct {
	_tab flatbuffers.Table
}

const MtiJobRequest_AbridgedIdentifier = "MTIJ"

func GetRootAsMtiJobRequest_Abridged(buf []byte, offset flatbuffers.UOffsetT) *MtiJobRequest_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &MtiJobRequest_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishMtiJobRequest_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(MtiJobRequest_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func MtiJobRequest_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, MtiJobRequest_AbridgedIdentifier)
}

func GetSizePrefixedRootAsMtiJobRequest_Abridged(buf []byte, offset flatbuffers.UOffsetT) *MtiJobRequest_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &MtiJobRequest_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedMtiJobRequest_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(MtiJobRequest_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedMtiJobRequest_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, MtiJobRequest_AbridgedIdentifier)
}

func (rcv *MtiJobRequest_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MtiJobRequest_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// The requestor of the sensor service.
/// Example: /// Example: REQUESTER
/// Constraints: Minimum length = 0, Maximum length = 10
func (rcv *MtiJobRequest_Abridged) R1() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// The requestor of the sensor service.
/// Example: /// Example: REQUESTER
/// Constraints: Minimum length = 0, Maximum length = 10
/// Identifier for the tasking message sent by the requesting station.
/// Example: /// Example: IDENTIFIER
/// Constraints: Minimum length = 0, Maximum length = 10
func (rcv *MtiJobRequest_Abridged) R2() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Identifier for the tasking message sent by the requesting station.
/// Example: /// Example: IDENTIFIER
/// Constraints: Minimum length = 0, Maximum length = 10
/// The priority of the request relative to other requests originated by the requesting station.
/// Example: /// Example: 15
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R3() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// The priority of the request relative to other requests originated by the requesting station.
/// Example: /// Example: 15
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR3(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

/// North-South position of the first corner (Point A) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R4() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// North-South position of the first corner (Point A) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR4(n float64) bool {
	return rcv._tab.MutateFloat64Slot(10, n)
}

/// East-West position of the first corner (Point A) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R5() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// East-West position of the first corner (Point A) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR5(n float64) bool {
	return rcv._tab.MutateFloat64Slot(12, n)
}

/// North-South position of the second corner (Point B) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R6() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// North-South position of the second corner (Point B) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR6(n float64) bool {
	return rcv._tab.MutateFloat64Slot(14, n)
}

/// East-West position of the second corner (Point B) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R7() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// East-West position of the second corner (Point B) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR7(n float64) bool {
	return rcv._tab.MutateFloat64Slot(16, n)
}

/// North-South position of the third corner (Point C) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R8() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// North-South position of the third corner (Point C) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR8(n float64) bool {
	return rcv._tab.MutateFloat64Slot(18, n)
}

/// East-West position of the third corner (Point C) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R9() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// East-West position of the third corner (Point C) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR9(n float64) bool {
	return rcv._tab.MutateFloat64Slot(20, n)
}

/// North-South position of the fourth corner (Point D) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R10() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// North-South position of the fourth corner (Point D) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR10(n float64) bool {
	return rcv._tab.MutateFloat64Slot(22, n)
}

/// East-West position of the fourth corner (Point D) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R11() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// East-West position of the fourth corner (Point D) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
/// Example: /// Example: 10.23
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR11(n float64) bool {
	return rcv._tab.MutateFloat64Slot(24, n)
}

/// Identifies the radar mode requested by the requestor.
/// Example: /// Example: MODE
/// Constraints: Minimum length = 0, Maximum length = 32
func (rcv *MtiJobRequest_Abridged) R12() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Identifies the radar mode requested by the requestor.
/// Example: /// Example: MODE
/// Constraints: Minimum length = 0, Maximum length = 32
/// Specifies the radar range resolution requested by the requestor, expressed in centimeters.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R13() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(28))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Specifies the radar range resolution requested by the requestor, expressed in centimeters.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR13(n int32) bool {
	return rcv._tab.MutateInt32Slot(28, n)
}

/// Specifies the radar cross-range resolution requested by the requestor, expressed in decimeters.
/// Example: /// Example: 100
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R14() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(30))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Specifies the radar cross-range resolution requested by the requestor, expressed in decimeters.
/// Example: /// Example: 100
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR14(n int32) bool {
	return rcv._tab.MutateInt32Slot(30, n)
}

/// Specifies the Earliest Start Time for which the service is requested.  Composite of fields R15-R20.
/// Example: /// Example: 2018-01-01T16:00:00.123456Z
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) JobReqEst() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(32))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Specifies the Earliest Start Time for which the service is requested.  Composite of fields R15-R20.
/// Example: /// Example: 2018-01-01T16:00:00.123456Z
/// Constraints: No constraints specified.
/// Specifies the maximum time from the requested start time after which the request is to be abandoned, expressed in seconds.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R21() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(34))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Specifies the maximum time from the requested start time after which the request is to be abandoned, expressed in seconds.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR21(n int32) bool {
	return rcv._tab.MutateInt32Slot(34, n)
}

/// Specifies the time duration for the radar job, measured from the actual start of the job, expressed in seconds.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R22() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(36))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Specifies the time duration for the radar job, measured from the actual start of the job, expressed in seconds.
/// Example: /// Example: 10
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR22(n int32) bool {
	return rcv._tab.MutateInt32Slot(36, n)
}

/// Specifies the revisit interval for the radar job, expressed in deciseconds.
/// Example: /// Example: 100
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R23() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(38))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Specifies the revisit interval for the radar job, expressed in deciseconds.
/// Example: /// Example: 100
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR23(n int32) bool {
	return rcv._tab.MutateInt32Slot(38, n)
}

/// the type of sensor or the platform.
/// Example: /// Example: TYPE
/// Constraints: Minimum length = 0, Maximum length = 32
func (rcv *MtiJobRequest_Abridged) R24() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(40))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// the type of sensor or the platform.
/// Example: /// Example: TYPE
/// Constraints: Minimum length = 0, Maximum length = 32
/// The particular variant of the sensor type.
/// Example: /// Example: VARIANT
/// Constraints: Minimum length = 0, Maximum length = 8
func (rcv *MtiJobRequest_Abridged) R25() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(42))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// The particular variant of the sensor type.
/// Example: /// Example: VARIANT
/// Constraints: Minimum length = 0, Maximum length = 8
/// Flag field indicating that it is an initial request (flag = 0) or the desire of the requestor to cancel (flag = 1) the requested job.
/// Example: /// Example: True
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) R26() bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(44))
	if o != 0 {
		return rcv._tab.GetBool(o + rcv._tab.Pos)
	}
	return false
}

/// Flag field indicating that it is an initial request (flag = 0) or the desire of the requestor to cancel (flag = 1) the requested job.
/// Example: /// Example: True
/// Constraints: No constraints specified.
func (rcv *MtiJobRequest_Abridged) MutateR26(n bool) bool {
	return rcv._tab.MutateBoolSlot(44, n)
}

func MtiJobRequest_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(21)
}
func MtiJobRequest_AbridgedAddR1(builder *flatbuffers.Builder, r1 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(r1), 0)
}
func MtiJobRequest_AbridgedAddR2(builder *flatbuffers.Builder, r2 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(r2), 0)
}
func MtiJobRequest_AbridgedAddR3(builder *flatbuffers.Builder, r3 int32) {
	builder.PrependInt32Slot(2, r3, 0)
}
func MtiJobRequest_AbridgedAddR4(builder *flatbuffers.Builder, r4 float64) {
	builder.PrependFloat64Slot(3, r4, 0.0)
}
func MtiJobRequest_AbridgedAddR5(builder *flatbuffers.Builder, r5 float64) {
	builder.PrependFloat64Slot(4, r5, 0.0)
}
func MtiJobRequest_AbridgedAddR6(builder *flatbuffers.Builder, r6 float64) {
	builder.PrependFloat64Slot(5, r6, 0.0)
}
func MtiJobRequest_AbridgedAddR7(builder *flatbuffers.Builder, r7 float64) {
	builder.PrependFloat64Slot(6, r7, 0.0)
}
func MtiJobRequest_AbridgedAddR8(builder *flatbuffers.Builder, r8 float64) {
	builder.PrependFloat64Slot(7, r8, 0.0)
}
func MtiJobRequest_AbridgedAddR9(builder *flatbuffers.Builder, r9 float64) {
	builder.PrependFloat64Slot(8, r9, 0.0)
}
func MtiJobRequest_AbridgedAddR10(builder *flatbuffers.Builder, r10 float64) {
	builder.PrependFloat64Slot(9, r10, 0.0)
}
func MtiJobRequest_AbridgedAddR11(builder *flatbuffers.Builder, r11 float64) {
	builder.PrependFloat64Slot(10, r11, 0.0)
}
func MtiJobRequest_AbridgedAddR12(builder *flatbuffers.Builder, r12 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(11, flatbuffers.UOffsetT(r12), 0)
}
func MtiJobRequest_AbridgedAddR13(builder *flatbuffers.Builder, r13 int32) {
	builder.PrependInt32Slot(12, r13, 0)
}
func MtiJobRequest_AbridgedAddR14(builder *flatbuffers.Builder, r14 int32) {
	builder.PrependInt32Slot(13, r14, 0)
}
func MtiJobRequest_AbridgedAddJobReqEst(builder *flatbuffers.Builder, jobReqEst flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(14, flatbuffers.UOffsetT(jobReqEst), 0)
}
func MtiJobRequest_AbridgedAddR21(builder *flatbuffers.Builder, r21 int32) {
	builder.PrependInt32Slot(15, r21, 0)
}
func MtiJobRequest_AbridgedAddR22(builder *flatbuffers.Builder, r22 int32) {
	builder.PrependInt32Slot(16, r22, 0)
}
func MtiJobRequest_AbridgedAddR23(builder *flatbuffers.Builder, r23 int32) {
	builder.PrependInt32Slot(17, r23, 0)
}
func MtiJobRequest_AbridgedAddR24(builder *flatbuffers.Builder, r24 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(18, flatbuffers.UOffsetT(r24), 0)
}
func MtiJobRequest_AbridgedAddR25(builder *flatbuffers.Builder, r25 flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(19, flatbuffers.UOffsetT(r25), 0)
}
func MtiJobRequest_AbridgedAddR26(builder *flatbuffers.Builder, r26 bool) {
	builder.PrependBoolSlot(20, r26, false)
}
func MtiJobRequest_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
