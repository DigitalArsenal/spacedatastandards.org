// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package Sensortype_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// No description available.
type Sensortype_Abridged struct {
	_tab flatbuffers.Table
}

const Sensortype_AbridgedIdentifier = "SENS"

func GetRootAsSensortype_Abridged(buf []byte, offset flatbuffers.UOffsetT) *Sensortype_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Sensortype_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishSensortype_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(Sensortype_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func Sensortype_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, Sensortype_AbridgedIdentifier)
}

func GetSizePrefixedRootAsSensortype_Abridged(buf []byte, offset flatbuffers.UOffsetT) *Sensortype_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &Sensortype_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedSensortype_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(Sensortype_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedSensortype_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, Sensortype_AbridgedIdentifier)
}

func (rcv *Sensortype_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Sensortype_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// Unique identifier of the record, auto-generated by the system.
/// Example: /// Example: 12344411
/// Constraints: No constraints specified.
func (rcv *Sensortype_Abridged) Id() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

/// Unique identifier of the record, auto-generated by the system.
/// Example: /// Example: 12344411
/// Constraints: No constraints specified.
func (rcv *Sensortype_Abridged) MutateId(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

/// The specific sensor type and/or surveillance capability of this sensor.
/// Example: /// Example: Space Borne
/// Constraints: Minimum length = 0, Maximum length = 128
func (rcv *Sensortype_Abridged) Type() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// The specific sensor type and/or surveillance capability of this sensor.
/// Example: /// Example: Space Borne
/// Constraints: Minimum length = 0, Maximum length = 128
/// Time the row was created in the database, auto-populated by the system.
/// Example: /// Example: 2018-01-01T16:00:00.123Z
/// Constraints: No constraints specified.
func (rcv *Sensortype_Abridged) CreatedAt() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Time the row was created in the database, auto-populated by the system.
/// Example: /// Example: 2018-01-01T16:00:00.123Z
/// Constraints: No constraints specified.
/// Application user who created the row in the database, auto-populated by the system.
/// Example: /// Example: some.user
/// Constraints: Minimum length = 1, Maximum length = 64
func (rcv *Sensortype_Abridged) CreatedBy() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// Application user who created the row in the database, auto-populated by the system.
/// Example: /// Example: some.user
/// Constraints: Minimum length = 1, Maximum length = 64
/// The originating source network on which this record was created, auto-populated by the system.
/// Example: /// Example: OPS1
/// Constraints: Minimum length = 1, Maximum length = 32
func (rcv *Sensortype_Abridged) OrigNetwork() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// The originating source network on which this record was created, auto-populated by the system.
/// Example: /// Example: OPS1
/// Constraints: Minimum length = 1, Maximum length = 32
func Sensortype_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func Sensortype_AbridgedAddId(builder *flatbuffers.Builder, id int32) {
	builder.PrependInt32Slot(0, id, 0)
}
func Sensortype_AbridgedAddType(builder *flatbuffers.Builder, type_ flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(type_), 0)
}
func Sensortype_AbridgedAddCreatedAt(builder *flatbuffers.Builder, createdAt flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(createdAt), 0)
}
func Sensortype_AbridgedAddCreatedBy(builder *flatbuffers.Builder, createdBy flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(createdBy), 0)
}
func Sensortype_AbridgedAddOrigNetwork(builder *flatbuffers.Builder, origNetwork flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(origNetwork), 0)
}
func Sensortype_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
