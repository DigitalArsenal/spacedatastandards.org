// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package RFObservationDetails_Full_polarityType_Enum

import "strconv"

type RFObservationDetails_Full_polarityType_Enum int8

const (
	/// No description available.
	RFObservationDetails_Full_polarityType_EnumH RFObservationDetails_Full_polarityType_Enum = 0
	/// No description available.
	RFObservationDetails_Full_polarityType_EnumV RFObservationDetails_Full_polarityType_Enum = 1
	/// No description available.
	RFObservationDetails_Full_polarityType_EnumR RFObservationDetails_Full_polarityType_Enum = 2
	/// No description available.
	RFObservationDetails_Full_polarityType_EnumL RFObservationDetails_Full_polarityType_Enum = 3
)

var EnumNamesRFObservationDetails_Full_polarityType_Enum = map[RFObservationDetails_Full_polarityType_Enum]string{
	RFObservationDetails_Full_polarityType_EnumH: "H",
	RFObservationDetails_Full_polarityType_EnumV: "V",
	RFObservationDetails_Full_polarityType_EnumR: "R",
	RFObservationDetails_Full_polarityType_EnumL: "L",
}

var EnumValuesRFObservationDetails_Full_polarityType_Enum = map[string]RFObservationDetails_Full_polarityType_Enum{
	"H": RFObservationDetails_Full_polarityType_EnumH,
	"V": RFObservationDetails_Full_polarityType_EnumV,
	"R": RFObservationDetails_Full_polarityType_EnumR,
	"L": RFObservationDetails_Full_polarityType_EnumL,
}

func (v RFObservationDetails_Full_polarityType_Enum) String() string {
	if s, ok := EnumNamesRFObservationDetails_Full_polarityType_Enum[v]; ok {
		return s
	}
	return "RFObservationDetails_Full_polarityType_Enum(" + strconv.FormatInt(int64(v), 10) + ")"
}
