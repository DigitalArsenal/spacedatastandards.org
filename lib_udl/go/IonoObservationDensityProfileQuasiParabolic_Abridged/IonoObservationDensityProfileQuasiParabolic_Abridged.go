// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package IonoObservationDensityProfileQuasiParabolic_Abridged

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

/// /// Coefficients to describe profile shape as quasi-parabolic segments.
type IonoObservationDensityProfileQuasiParabolic_Abridged struct {
	_tab flatbuffers.Table
}

const IonoObservationDensityProfileQuasiParabolic_AbridgedIdentifier = "IONO"

func GetRootAsIonoObservationDensityProfileQuasiParabolic_Abridged(buf []byte, offset flatbuffers.UOffsetT) *IonoObservationDensityProfileQuasiParabolic_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &IonoObservationDensityProfileQuasiParabolic_Abridged{}
	x.Init(buf, n+offset)
	return x
}

func FinishIonoObservationDensityProfileQuasiParabolic_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(IonoObservationDensityProfileQuasiParabolic_AbridgedIdentifier)
	builder.FinishWithFileIdentifier(offset, identifierBytes)
}

func IonoObservationDensityProfileQuasiParabolic_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.BufferHasIdentifier(buf, IonoObservationDensityProfileQuasiParabolic_AbridgedIdentifier)
}

func GetSizePrefixedRootAsIonoObservationDensityProfileQuasiParabolic_Abridged(buf []byte, offset flatbuffers.UOffsetT) *IonoObservationDensityProfileQuasiParabolic_Abridged {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &IonoObservationDensityProfileQuasiParabolic_Abridged{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedIonoObservationDensityProfileQuasiParabolic_AbridgedBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	identifierBytes := []byte(IonoObservationDensityProfileQuasiParabolic_AbridgedIdentifier)
	builder.FinishSizePrefixedWithFileIdentifier(offset, identifierBytes)
}

func SizePrefixedIonoObservationDensityProfileQuasiParabolic_AbridgedBufferHasIdentifier(buf []byte) bool {
	return flatbuffers.SizePrefixedBufferHasIdentifier(buf, IonoObservationDensityProfileQuasiParabolic_AbridgedIdentifier)
}

func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) Table() flatbuffers.Table {
	return rcv._tab
}

/// General description of the quasi-parabolic computation algorithm.
/// Example: /// Example: Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C
/// Constraints: No constraints specified.
func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) Description() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

/// General description of the quasi-parabolic computation algorithm.
/// Example: /// Example: Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C
/// Constraints: No constraints specified.
/// Value of the Earth's radius, in kilometers, used for computations.
/// Example: /// Example: 6370.1
/// Constraints: No constraints specified.
func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) EarthRadius() float64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetFloat64(o + rcv._tab.Pos)
	}
	return 0.0
}

/// Value of the Earth's radius, in kilometers, used for computations.
/// Example: /// Example: 6370.1
/// Constraints: No constraints specified.
func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) MutateEarthRadius(n float64) bool {
	return rcv._tab.MutateFloat64Slot(6, n)
}

/// Array of quasi-parabolic segments. Each segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C”. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) QuasiParabolicSegments(j int) []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.ByteVector(a + flatbuffers.UOffsetT(j*4))
	}
	return nil
}

func (rcv *IonoObservationDensityProfileQuasiParabolic_Abridged) QuasiParabolicSegmentsLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

/// Array of quasi-parabolic segments. Each segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C”. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
/// Example: /// Example: No example provided.
/// Constraints: No constraints specified.
func IonoObservationDensityProfileQuasiParabolic_AbridgedStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func IonoObservationDensityProfileQuasiParabolic_AbridgedAddDescription(builder *flatbuffers.Builder, description flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(description), 0)
}
func IonoObservationDensityProfileQuasiParabolic_AbridgedAddEarthRadius(builder *flatbuffers.Builder, earthRadius float64) {
	builder.PrependFloat64Slot(1, earthRadius, 0.0)
}
func IonoObservationDensityProfileQuasiParabolic_AbridgedAddQuasiParabolicSegments(builder *flatbuffers.Builder, quasiParabolicSegments flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(quasiParabolicSegments), 0)
}
func IonoObservationDensityProfileQuasiParabolic_AbridgedStartQuasiParabolicSegmentsVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func IonoObservationDensityProfileQuasiParabolic_AbridgedEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
