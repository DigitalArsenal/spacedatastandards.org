// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Information pertaining to the details of executing the recovery.
 */
@Suppress("unused")
class PersonnelRecoveryExecutionInfo_Abridged : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : PersonnelRecoveryExecutionInfo_Abridged {
        __init(_i, _bb)
        return this
    }
    /**
     * Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the initial location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
     * Example: /// Example: [103.23, 30.445]
     * Constraints: No constraints specified.
     */
    fun initialPoint(j: Int) : String? {
        val o = __offset(4)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val initialPointLength : Int
        get() {
            val o = __offset(4); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * The heading, in degrees clockwise from North, of entering the recovery zone.
     * Example: /// Example: 35.66
     * Constraints: No constraints specified.
     */
    val ingress : Double
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Description of the objective strategy plan.
     * Example: /// Example: Description of strategy plan.
     * Constraints: Minimum length = 0, Maximum length = 1024
     */
    val objStrategy : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val objStrategyAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun objStrategyInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the egress location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
     * Example: /// Example: [107.23, 30.455]
     * Constraints: No constraints specified.
     */
    fun egressPoint(j: Int) : String? {
        val o = __offset(10)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val egressPointLength : Int
        get() {
            val o = __offset(10); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * The heading, in degrees, of leaving the recovery zone.
     * Example: /// Example: 66.53
     * Constraints: No constraints specified.
     */
    val egress : Double
        get() {
            val o = __offset(12)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val recoveryVehicle : String?
        get() {
            val o = __offset(14)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val recoveryVehicleAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(14, 1)
    fun recoveryVehicleInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 14, 1)
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val escortVehicle : String?
        get() {
            val o = __offset(16)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val escortVehicleAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(16, 1)
    fun escortVehicleInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 16, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsPersonnelRecoveryExecutionInfo_Abridged(_bb: ByteBuffer): PersonnelRecoveryExecutionInfo_Abridged = getRootAsPersonnelRecoveryExecutionInfo_Abridged(_bb, PersonnelRecoveryExecutionInfo_Abridged())
        fun getRootAsPersonnelRecoveryExecutionInfo_Abridged(_bb: ByteBuffer, obj: PersonnelRecoveryExecutionInfo_Abridged): PersonnelRecoveryExecutionInfo_Abridged {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun PersonnelRecoveryExecutionInfo_AbridgedBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "PERS")
        fun createPersonnelRecoveryExecutionInfo_Abridged(builder: FlatBufferBuilder, initialPointOffset: Int, ingress: Double, objStrategyOffset: Int, egressPointOffset: Int, egress: Double, recoveryVehicleOffset: Int, escortVehicleOffset: Int) : Int {
            builder.startTable(7)
            addEgress(builder, egress)
            addIngress(builder, ingress)
            addEscortVehicle(builder, escortVehicleOffset)
            addRecoveryVehicle(builder, recoveryVehicleOffset)
            addEgressPoint(builder, egressPointOffset)
            addObjStrategy(builder, objStrategyOffset)
            addInitialPoint(builder, initialPointOffset)
            return endPersonnelRecoveryExecutionInfo_Abridged(builder)
        }
        fun startPersonnelRecoveryExecutionInfo_Abridged(builder: FlatBufferBuilder) = builder.startTable(7)
        fun addInitialPoint(builder: FlatBufferBuilder, initialPoint: Int) = builder.addOffset(0, initialPoint, 0)
        fun createInitialPointVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startInitialPointVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addIngress(builder: FlatBufferBuilder, ingress: Double) = builder.addDouble(1, ingress, 0.0)
        fun addObjStrategy(builder: FlatBufferBuilder, objStrategy: Int) = builder.addOffset(2, objStrategy, 0)
        fun addEgressPoint(builder: FlatBufferBuilder, egressPoint: Int) = builder.addOffset(3, egressPoint, 0)
        fun createEgressPointVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startEgressPointVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addEgress(builder: FlatBufferBuilder, egress: Double) = builder.addDouble(4, egress, 0.0)
        fun addRecoveryVehicle(builder: FlatBufferBuilder, recoveryVehicle: Int) = builder.addOffset(5, recoveryVehicle, 0)
        fun addEscortVehicle(builder: FlatBufferBuilder, escortVehicle: Int) = builder.addOffset(6, escortVehicle, 0)
        fun endPersonnelRecoveryExecutionInfo_Abridged(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishPersonnelRecoveryExecutionInfoAbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "PERS")
        fun finishSizePrefixedPersonnelRecoveryExecutionInfo_AbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "PERS")
    }
}
