// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.
 */
@Suppress("unused")
class LogisticsTransportationPlans_Abridged : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : LogisticsTransportationPlans_Abridged {
        __init(_i, _bb)
        return this
    }
    /**
     * System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.
     * Example: /// Example: T89002
     * Constraints: Minimum length = 0, Maximum length = 10
     */
    val plansNumber : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val plansNumberAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun plansNumberInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.
     * Example: /// Example: False
     * Constraints: No constraints specified.
     */
    val missionChange : Boolean
        get() {
            val o = __offset(6)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    /**
     * Defines the transporation plan as either a deployment or redeployment.
     * Example: /// Example: DEPLOY
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val planDefinition : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val planDefinitionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun planDefinitionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.
     * Example: /// Example: N
     * Constraints: Minimum length = 1, Maximum length = 1
     */
    val statusCode : String?
        get() {
            val o = __offset(10)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val statusCodeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(10, 1)
    fun statusCodeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 10, 1)
    /**
     * The AMS username of the operator who alters the coordination status.  Automatically captured by the system.
     * Example: /// Example: SMITH, JOHN
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val coordinator : String?
        get() {
            val o = __offset(12)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val coordinatorAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(12, 1)
    fun coordinatorInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 12, 1)
    /**
     * The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.
     * Example: /// Example: TACC
     * Constraints: Minimum length = 0, Maximum length = 10
     */
    val coordinatorUnit : String?
        get() {
            val o = __offset(14)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val coordinatorUnitAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(14, 1)
    fun coordinatorUnitInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 14, 1)
    /**
     * The origin location.
     * Example: /// Example: KATL
     * Constraints: Minimum length = 0, Maximum length = 4
     */
    val originIcao : String?
        get() {
            val o = __offset(16)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val originIcaoAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(16, 1)
    fun originIcaoInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 16, 1)
    /**
     * ETD of the first segment, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-15T14:25:00.123Z
     * Constraints: No constraints specified.
     */
    val estDepTime : String?
        get() {
            val o = __offset(18)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val estDepTimeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(18, 1)
    fun estDepTimeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 18, 1)
    /**
     * ETA of the final segment, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-15T14:25:00.123Z
     * Constraints: No constraints specified.
     */
    val estArrTime : String?
        get() {
            val o = __offset(20)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val estArrTimeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(20, 1)
    fun estArrTimeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 20, 1)
    /**
     * Destination location ICAO.
     * Example: /// Example: YBCS
     * Constraints: Minimum length = 0, Maximum length = 4
     */
    val destinationIcao : String?
        get() {
            val o = __offset(22)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val destinationIcaoAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(22, 1)
    fun destinationIcaoInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 22, 1)
    /**
     * The identifier that represents a Logistics Master Record.
     * Example: /// Example: L62126
     * Constraints: Minimum length = 0, Maximum length = 10
     */
    val logisticMasterRecordId : String?
        get() {
            val o = __offset(24)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val logisticMasterRecordIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(24, 1)
    fun logisticMasterRecordIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 24, 1)
    /**
     * Contains the tail number displayed by GDSS2.
     * Example: /// Example: 99209
     * Constraints: Minimum length = 0, Maximum length = 7
     */
    val tpTailNumber : String?
        get() {
            val o = __offset(26)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val tpTailNumberAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(26, 1)
    fun tpTailNumberInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 26, 1)
    /**
     * The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.
     * Example: /// Example: C17A
     * Constraints: Minimum length = 0, Maximum length = 8
     */
    val tpAircraftMds : String?
        get() {
            val o = __offset(28)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val tpAircraftMdsAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(28, 1)
    fun tpAircraftMdsInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 28, 1)
    /**
     * The major command for the current unit.
     * Example: /// Example: HQAMC
     * Constraints: Minimum length = 0, Maximum length = 250
     */
    val majcom : String?
        get() {
            val o = __offset(30)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val majcomAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(30, 1)
    fun majcomInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 30, 1)
    /**
     * Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-14T20:37:00.123Z
     * Constraints: No constraints specified.
     */
    val approxArrTime : String?
        get() {
            val o = __offset(32)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val approxArrTimeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(32, 1)
    fun approxArrTimeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 32, 1)
    /**
     * Transportation plan duration, expressed in the format MMM:SS.
     * Example: /// Example: 086:20
     * Constraints: Minimum length = 0, Maximum length = 6
     */
    val duration : String?
        get() {
            val o = __offset(34)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val durationAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(34, 1)
    fun durationInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 34, 1)
    /**
     * Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-14T19:37:00.123Z
     * Constraints: No constraints specified.
     */
    val actDepTime : String?
        get() {
            val o = __offset(36)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val actDepTimeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(36, 1)
    fun actDepTimeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 36, 1)
    /**
     * GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-14T20:37:00.123Z
     * Constraints: No constraints specified.
     */
    val closedDate : String?
        get() {
            val o = __offset(38)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val closedDateAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(38, 1)
    fun closedDateInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 38, 1)
    /**
     * GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-14T20:37:00.123Z
     * Constraints: No constraints specified.
     */
    val cancelledDate : String?
        get() {
            val o = __offset(40)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val cancelledDateAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(40, 1)
    fun cancelledDateInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 40, 1)
    /**
     * These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.
     * Example: /// Example: NMCMU
     * Constraints: Minimum length = 0, Maximum length = 6
     */
    val aircraftStatus : String?
        get() {
            val o = __offset(42)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val aircraftStatusAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(42, 1)
    fun aircraftStatusInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 42, 1)
    /**
     * Transportation plan enroute stops.
     * Example: /// Example: 4
     * Constraints: No constraints specified.
     */
    val numEnrouteStops : Int
        get() {
            val o = __offset(44)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.
     * Example: /// Example: 9009209
     * Constraints: Minimum length = 0, Maximum length = 30
     */
    val serialNumber : String?
        get() {
            val o = __offset(46)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val serialNumberAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(46, 1)
    fun serialNumberInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 46, 1)
    /**
     * The number of transloads for this Transportation Plan.
     * Example: /// Example: 3
     * Constraints: No constraints specified.
     */
    val numTransLoads : Int
        get() {
            val o = __offset(48)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2023-07-14T20:37:00.123Z
     * Constraints: No constraints specified.
     */
    val lastChangedDate : String?
        get() {
            val o = __offset(50)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val lastChangedDateAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(50, 1)
    fun lastChangedDateInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 50, 1)
    /**
     * The transportation segments associated with this transportation plan.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    fun logisticsSegments(j: Int) : String? {
        val o = __offset(52)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val logisticsSegmentsLength : Int
        get() {
            val o = __offset(52); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * Remarks associated with this transportation plan.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    fun logisticsTransportationPlansRemarks(j: Int) : String? {
        val o = __offset(54)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val logisticsTransportationPlansRemarksLength : Int
        get() {
            val o = __offset(54); return if (o != 0) __vector_len(o) else 0
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsLogisticsTransportationPlans_Abridged(_bb: ByteBuffer): LogisticsTransportationPlans_Abridged = getRootAsLogisticsTransportationPlans_Abridged(_bb, LogisticsTransportationPlans_Abridged())
        fun getRootAsLogisticsTransportationPlans_Abridged(_bb: ByteBuffer, obj: LogisticsTransportationPlans_Abridged): LogisticsTransportationPlans_Abridged {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun LogisticsTransportationPlans_AbridgedBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "LOGI")
        fun createLogisticsTransportationPlans_Abridged(builder: FlatBufferBuilder, plansNumberOffset: Int, missionChange: Boolean, planDefinitionOffset: Int, statusCodeOffset: Int, coordinatorOffset: Int, coordinatorUnitOffset: Int, originIcaoOffset: Int, estDepTimeOffset: Int, estArrTimeOffset: Int, destinationIcaoOffset: Int, logisticMasterRecordIdOffset: Int, tpTailNumberOffset: Int, tpAircraftMdsOffset: Int, majcomOffset: Int, approxArrTimeOffset: Int, durationOffset: Int, actDepTimeOffset: Int, closedDateOffset: Int, cancelledDateOffset: Int, aircraftStatusOffset: Int, numEnrouteStops: Int, serialNumberOffset: Int, numTransLoads: Int, lastChangedDateOffset: Int, logisticsSegmentsOffset: Int, logisticsTransportationPlansRemarksOffset: Int) : Int {
            builder.startTable(26)
            addLogisticsTransportationPlansRemarks(builder, logisticsTransportationPlansRemarksOffset)
            addLogisticsSegments(builder, logisticsSegmentsOffset)
            addLastChangedDate(builder, lastChangedDateOffset)
            addNumTransLoads(builder, numTransLoads)
            addSerialNumber(builder, serialNumberOffset)
            addNumEnrouteStops(builder, numEnrouteStops)
            addAircraftStatus(builder, aircraftStatusOffset)
            addCancelledDate(builder, cancelledDateOffset)
            addClosedDate(builder, closedDateOffset)
            addActDepTime(builder, actDepTimeOffset)
            addDuration(builder, durationOffset)
            addApproxArrTime(builder, approxArrTimeOffset)
            addMajcom(builder, majcomOffset)
            addTpAircraftMDS(builder, tpAircraftMdsOffset)
            addTpTailNumber(builder, tpTailNumberOffset)
            addLogisticMasterRecordId(builder, logisticMasterRecordIdOffset)
            addDestinationICAO(builder, destinationIcaoOffset)
            addEstArrTime(builder, estArrTimeOffset)
            addEstDepTime(builder, estDepTimeOffset)
            addOriginICAO(builder, originIcaoOffset)
            addCoordinatorUnit(builder, coordinatorUnitOffset)
            addCoordinator(builder, coordinatorOffset)
            addStatusCode(builder, statusCodeOffset)
            addPlanDefinition(builder, planDefinitionOffset)
            addPlansNumber(builder, plansNumberOffset)
            addMissionChange(builder, missionChange)
            return endLogisticsTransportationPlans_Abridged(builder)
        }
        fun startLogisticsTransportationPlans_Abridged(builder: FlatBufferBuilder) = builder.startTable(26)
        fun addPlansNumber(builder: FlatBufferBuilder, plansNumber: Int) = builder.addOffset(0, plansNumber, 0)
        fun addMissionChange(builder: FlatBufferBuilder, missionChange: Boolean) = builder.addBoolean(1, missionChange, false)
        fun addPlanDefinition(builder: FlatBufferBuilder, planDefinition: Int) = builder.addOffset(2, planDefinition, 0)
        fun addStatusCode(builder: FlatBufferBuilder, statusCode: Int) = builder.addOffset(3, statusCode, 0)
        fun addCoordinator(builder: FlatBufferBuilder, coordinator: Int) = builder.addOffset(4, coordinator, 0)
        fun addCoordinatorUnit(builder: FlatBufferBuilder, coordinatorUnit: Int) = builder.addOffset(5, coordinatorUnit, 0)
        fun addOriginICAO(builder: FlatBufferBuilder, originIcao: Int) = builder.addOffset(6, originIcao, 0)
        fun addEstDepTime(builder: FlatBufferBuilder, estDepTime: Int) = builder.addOffset(7, estDepTime, 0)
        fun addEstArrTime(builder: FlatBufferBuilder, estArrTime: Int) = builder.addOffset(8, estArrTime, 0)
        fun addDestinationICAO(builder: FlatBufferBuilder, destinationIcao: Int) = builder.addOffset(9, destinationIcao, 0)
        fun addLogisticMasterRecordId(builder: FlatBufferBuilder, logisticMasterRecordId: Int) = builder.addOffset(10, logisticMasterRecordId, 0)
        fun addTpTailNumber(builder: FlatBufferBuilder, tpTailNumber: Int) = builder.addOffset(11, tpTailNumber, 0)
        fun addTpAircraftMDS(builder: FlatBufferBuilder, tpAircraftMds: Int) = builder.addOffset(12, tpAircraftMds, 0)
        fun addMajcom(builder: FlatBufferBuilder, majcom: Int) = builder.addOffset(13, majcom, 0)
        fun addApproxArrTime(builder: FlatBufferBuilder, approxArrTime: Int) = builder.addOffset(14, approxArrTime, 0)
        fun addDuration(builder: FlatBufferBuilder, duration: Int) = builder.addOffset(15, duration, 0)
        fun addActDepTime(builder: FlatBufferBuilder, actDepTime: Int) = builder.addOffset(16, actDepTime, 0)
        fun addClosedDate(builder: FlatBufferBuilder, closedDate: Int) = builder.addOffset(17, closedDate, 0)
        fun addCancelledDate(builder: FlatBufferBuilder, cancelledDate: Int) = builder.addOffset(18, cancelledDate, 0)
        fun addAircraftStatus(builder: FlatBufferBuilder, aircraftStatus: Int) = builder.addOffset(19, aircraftStatus, 0)
        fun addNumEnrouteStops(builder: FlatBufferBuilder, numEnrouteStops: Int) = builder.addInt(20, numEnrouteStops, 0)
        fun addSerialNumber(builder: FlatBufferBuilder, serialNumber: Int) = builder.addOffset(21, serialNumber, 0)
        fun addNumTransLoads(builder: FlatBufferBuilder, numTransLoads: Int) = builder.addInt(22, numTransLoads, 0)
        fun addLastChangedDate(builder: FlatBufferBuilder, lastChangedDate: Int) = builder.addOffset(23, lastChangedDate, 0)
        fun addLogisticsSegments(builder: FlatBufferBuilder, logisticsSegments: Int) = builder.addOffset(24, logisticsSegments, 0)
        fun createLogisticsSegmentsVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startLogisticsSegmentsVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addLogisticsTransportationPlansRemarks(builder: FlatBufferBuilder, logisticsTransportationPlansRemarks: Int) = builder.addOffset(25, logisticsTransportationPlansRemarks, 0)
        fun createLogisticsTransportationPlansRemarksVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startLogisticsTransportationPlansRemarksVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun endLogisticsTransportationPlans_Abridged(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishLogisticsTransportationPlansAbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "LOGI")
        fun finishSizePrefixedLogisticsTransportationPlans_AbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "LOGI")
    }
}
