// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Coefficients, using ‘shiftedChebyshev’ sub-field, to describe E, F1, and bottomside F2 profile shapes, or height uncertainty boundaries (upper and lower).
 */
@Suppress("unused")
class IonoObservationProfileDensityShiftedChebyshevEntry_Abridged : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : IonoObservationProfileDensityShiftedChebyshevEntry_Abridged {
        __init(_i, _bb)
        return this
    }
    /**
     * The ionospheric plasma layer.
     * Example: /// Example: F2
     * Constraints: No constraints specified.
     */
    val layer : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val layerAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun layerInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Start frequency of the layer, in MHz.
     * Example: /// Example: 0.2
     * Constraints: No constraints specified.
     */
    val fstart : Double
        get() {
            val o = __offset(6)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Stop frequency of the layer, in MHz.
     * Example: /// Example: 1.39
     * Constraints: No constraints specified.
     */
    val fstop : Double
        get() {
            val o = __offset(8)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Peak height of the layer, in kilometers.
     * Example: /// Example: 110.1
     * Constraints: No constraints specified.
     */
    val peakheight : Double
        get() {
            val o = __offset(10)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Height at which density is half of the peak Nm, in kilometers.
     * Example: /// Example: 210.1
     * Constraints: No constraints specified.
     */
    val zhalfNm : Double
        get() {
            val o = __offset(12)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Number of coefficients in the expansion.
     * Example: /// Example: 5
     * Constraints: No constraints specified.
     */
    val n : Int
        get() {
            val o = __offset(14)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * Array of coefficients.
     * Example: /// Example: [-11.2, -10.536, 3.357, -0.888, 0.155]
     * Constraints: No constraints specified.
     */
    fun coeffs(j: Int) : String? {
        val o = __offset(16)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val coeffsLength : Int
        get() {
            val o = __offset(16); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * Best fit error.
     * Example: /// Example: 0.02
     * Constraints: No constraints specified.
     */
    val error : Double
        get() {
            val o = __offset(18)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(_bb: ByteBuffer): IonoObservationProfileDensityShiftedChebyshevEntry_Abridged = getRootAsIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(_bb, IonoObservationProfileDensityShiftedChebyshevEntry_Abridged())
        fun getRootAsIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(_bb: ByteBuffer, obj: IonoObservationProfileDensityShiftedChebyshevEntry_Abridged): IonoObservationProfileDensityShiftedChebyshevEntry_Abridged {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun IonoObservationProfileDensityShiftedChebyshevEntry_AbridgedBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "IONO")
        fun createIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(builder: FlatBufferBuilder, layerOffset: Int, fstart: Double, fstop: Double, peakheight: Double, zhalfNm: Double, n: Int, coeffsOffset: Int, error: Double) : Int {
            builder.startTable(8)
            addError(builder, error)
            addZhalfNm(builder, zhalfNm)
            addPeakheight(builder, peakheight)
            addFstop(builder, fstop)
            addFstart(builder, fstart)
            addCoeffs(builder, coeffsOffset)
            addN(builder, n)
            addLayer(builder, layerOffset)
            return endIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(builder)
        }
        fun startIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(builder: FlatBufferBuilder) = builder.startTable(8)
        fun addLayer(builder: FlatBufferBuilder, layer: Int) = builder.addOffset(0, layer, 0)
        fun addFstart(builder: FlatBufferBuilder, fstart: Double) = builder.addDouble(1, fstart, 0.0)
        fun addFstop(builder: FlatBufferBuilder, fstop: Double) = builder.addDouble(2, fstop, 0.0)
        fun addPeakheight(builder: FlatBufferBuilder, peakheight: Double) = builder.addDouble(3, peakheight, 0.0)
        fun addZhalfNm(builder: FlatBufferBuilder, zhalfNm: Double) = builder.addDouble(4, zhalfNm, 0.0)
        fun addN(builder: FlatBufferBuilder, n: Int) = builder.addInt(5, n, 0)
        fun addCoeffs(builder: FlatBufferBuilder, coeffs: Int) = builder.addOffset(6, coeffs, 0)
        fun createCoeffsVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startCoeffsVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addError(builder: FlatBufferBuilder, error: Double) = builder.addDouble(7, error, 0.0)
        fun endIonoObservationProfileDensityShiftedChebyshevEntry_Abridged(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishIonoObservationProfileDensityShiftedChebyshevEntryAbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "IONO")
        fun finishSizePrefixedIonoObservationProfileDensityShiftedChebyshevEntry_AbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "IONO")
    }
}
