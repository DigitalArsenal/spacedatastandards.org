// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Collection that identifies points of reference used in the establishment of the data links. There can be 1 to many DataLinkRefPoints collections within the datalink service.
 */
@Suppress("unused")
class DataLinkRefPoints_Abridged : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : DataLinkRefPoints_Abridged {
        __init(_i, _bb)
        return this
    }
    /**
     * Type of data link reference point or grid origin.
     * Example: /// Example: DLRP
     * Constraints: Minimum length = 0, Maximum length = 7
     */
    val refPointType : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val refPointTypeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun refPointTypeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Identifier to designate a reference point.
     * Example: /// Example: L5
     * Constraints: Minimum length = 0, Maximum length = 20
     */
    val refDes : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val refDesAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun refDesInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * The location name of the point of reference for this data link message.
     * Example: /// Example: FORT BRAGG
     * Constraints: Minimum length = 0, Maximum length = 20
     */
    val refLocName : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val refLocNameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun refLocNameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * WGS84 latitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
     * Example: /// Example: 45.23
     * Constraints: No constraints specified.
     */
    val refLat : Double
        get() {
            val o = __offset(10)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * WGS84 longitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
     * Example: /// Example: 179.1
     * Constraints: No constraints specified.
     */
    val refLon : Double
        get() {
            val o = __offset(12)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Indicates when a particular event or nickname becomes effective or the old event or nickname is deleted, in ISO 8601 UTC format with millisecond precision.
     * Example: /// Example: 2024-01-08T13:55:43.123Z
     * Constraints: No constraints specified.
     */
    val effEventTime : String?
        get() {
            val o = __offset(14)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val effEventTimeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(14, 1)
    fun effEventTimeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 14, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsDataLinkRefPoints_Abridged(_bb: ByteBuffer): DataLinkRefPoints_Abridged = getRootAsDataLinkRefPoints_Abridged(_bb, DataLinkRefPoints_Abridged())
        fun getRootAsDataLinkRefPoints_Abridged(_bb: ByteBuffer, obj: DataLinkRefPoints_Abridged): DataLinkRefPoints_Abridged {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun DataLinkRefPoints_AbridgedBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "DATA")
        fun createDataLinkRefPoints_Abridged(builder: FlatBufferBuilder, refPointTypeOffset: Int, refDesOffset: Int, refLocNameOffset: Int, refLat: Double, refLon: Double, effEventTimeOffset: Int) : Int {
            builder.startTable(6)
            addRefLon(builder, refLon)
            addRefLat(builder, refLat)
            addEffEventTime(builder, effEventTimeOffset)
            addRefLocName(builder, refLocNameOffset)
            addRefDes(builder, refDesOffset)
            addRefPointType(builder, refPointTypeOffset)
            return endDataLinkRefPoints_Abridged(builder)
        }
        fun startDataLinkRefPoints_Abridged(builder: FlatBufferBuilder) = builder.startTable(6)
        fun addRefPointType(builder: FlatBufferBuilder, refPointType: Int) = builder.addOffset(0, refPointType, 0)
        fun addRefDes(builder: FlatBufferBuilder, refDes: Int) = builder.addOffset(1, refDes, 0)
        fun addRefLocName(builder: FlatBufferBuilder, refLocName: Int) = builder.addOffset(2, refLocName, 0)
        fun addRefLat(builder: FlatBufferBuilder, refLat: Double) = builder.addDouble(3, refLat, 0.0)
        fun addRefLon(builder: FlatBufferBuilder, refLon: Double) = builder.addDouble(4, refLon, 0.0)
        fun addEffEventTime(builder: FlatBufferBuilder, effEventTime: Int) = builder.addOffset(5, effEventTime, 0)
        fun endDataLinkRefPoints_Abridged(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishDataLinkRefPointsAbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "DATA")
        fun finishSizePrefixedDataLinkRefPoints_AbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "DATA")
    }
}
