// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// List of data sources related to this document.
 */
@Suppress("unused")
class SofDataSourceRef_Ingest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : SofDataSourceRef_Ingest {
        __init(_i, _bb)
        return this
    }
    /**
     * Data source id.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val dataSourceId : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val dataSourceIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun dataSourceIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * start position.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val startPosition : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val startPositionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun startPositionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * end position.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val endPosition : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val endPositionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun endPositionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * paragraph number.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val paragraphNumber : String?
        get() {
            val o = __offset(10)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val paragraphNumberAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(10, 1)
    fun paragraphNumberInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 10, 1)
    /**
     * sentence number.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val sentenceNumber : String?
        get() {
            val o = __offset(12)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val sentenceNumberAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(12, 1)
    fun sentenceNumberInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 12, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsSofDataSourceRef_Ingest(_bb: ByteBuffer): SofDataSourceRef_Ingest = getRootAsSofDataSourceRef_Ingest(_bb, SofDataSourceRef_Ingest())
        fun getRootAsSofDataSourceRef_Ingest(_bb: ByteBuffer, obj: SofDataSourceRef_Ingest): SofDataSourceRef_Ingest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun SofDataSourceRef_IngestBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "SOFD")
        fun createSofDataSourceRef_Ingest(builder: FlatBufferBuilder, dataSourceIdOffset: Int, startPositionOffset: Int, endPositionOffset: Int, paragraphNumberOffset: Int, sentenceNumberOffset: Int) : Int {
            builder.startTable(5)
            addSentenceNumber(builder, sentenceNumberOffset)
            addParagraphNumber(builder, paragraphNumberOffset)
            addEndPosition(builder, endPositionOffset)
            addStartPosition(builder, startPositionOffset)
            addDataSourceId(builder, dataSourceIdOffset)
            return endSofDataSourceRef_Ingest(builder)
        }
        fun startSofDataSourceRef_Ingest(builder: FlatBufferBuilder) = builder.startTable(5)
        fun addDataSourceId(builder: FlatBufferBuilder, dataSourceId: Int) = builder.addOffset(0, dataSourceId, 0)
        fun addStartPosition(builder: FlatBufferBuilder, startPosition: Int) = builder.addOffset(1, startPosition, 0)
        fun addEndPosition(builder: FlatBufferBuilder, endPosition: Int) = builder.addOffset(2, endPosition, 0)
        fun addParagraphNumber(builder: FlatBufferBuilder, paragraphNumber: Int) = builder.addOffset(3, paragraphNumber, 0)
        fun addSentenceNumber(builder: FlatBufferBuilder, sentenceNumber: Int) = builder.addOffset(4, sentenceNumber, 0)
        fun endSofDataSourceRef_Ingest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishSofDataSourceRefIngestBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "SOFD")
        fun finishSizePrefixedSofDataSourceRef_IngestBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "SOFD")
    }
}
