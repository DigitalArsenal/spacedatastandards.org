// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Model representation of additional detailed organization data as collected by a particular source.
 */
@Suppress("unused")
class OrganizationDetails : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : OrganizationDetails {
        __init(_i, _bb)
        return this
    }
    /**
     * Unique identifier of the record, auto-generated by the system.
     * Example: /// Example: ORGANIZATIONDETAILS-ID
     * Constraints: Minimum length = 1, Maximum length = 36
     */
    val id : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val idAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun idInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Unique identifier of the parent organization.
     * Example: /// Example: ORGANIZATION-ID
     * Constraints: Minimum length = 1, Maximum length = 36
     */
    val idOrganization : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val idOrganizationAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun idOrganizationInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * Classification marking of the data in IC/CAPCO Portion-marked format.
     * Example: /// Example: U
     * Constraints: Minimum length = 1, Maximum length = 128
     */
    val classificationMarking : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val classificationMarkingAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun classificationMarkingInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * Organization details name.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 1, Maximum length = 128
     */
    val name : String?
        get() {
            val o = __offset(10)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val nameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(10, 1)
    fun nameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 10, 1)
    /**
     * Listed contact email address for the organization.
     * Example: /// Example: some_organization@organization.com
     * Constraints: Minimum length = 0, Maximum length = 320
     */
    val email : String?
        get() {
            val o = __offset(12)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val emailAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(12, 1)
    fun emailInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 12, 1)
    /**
     * Street number of the organization.
     * Example: /// Example: 123 Main Street
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val address1 : String?
        get() {
            val o = __offset(14)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val address1AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(14, 1)
    fun address1InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 14, 1)
    /**
     * Field for additional organization address information such as PO Box and unit number.
     * Example: /// Example: Apt 4B
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val address2 : String?
        get() {
            val o = __offset(16)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val address2AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(16, 1)
    fun address2InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 16, 1)
    /**
     * Contains the third line of address information for an organization.
     * Example: /// Example: Colorado Springs CO, 80903
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val address3 : String?
        get() {
            val o = __offset(18)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val address3AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(18, 1)
    fun address3InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 18, 1)
    /**
     * Administrative boundaries of the first sub-national level. Level 1 is simply the largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a state or province.
     * Example: /// Example: Colorado
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val geoAdminLevel1 : String?
        get() {
            val o = __offset(20)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val geoAdminLevel1AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(20, 1)
    fun geoAdminLevel1InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 20, 1)
    /**
     * Administrative boundaries of the second sub-national level. Level 2 is simply the second largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a county or district.
     * Example: /// Example: El Paso County
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val geoAdminLevel2 : String?
        get() {
            val o = __offset(22)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val geoAdminLevel2AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(22, 1)
    fun geoAdminLevel2InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 22, 1)
    /**
     * Administrative boundaries of the third sub-national level. Level 3 is simply the third largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a city or township.
     * Example: /// Example: Colorado Springs
     * Constraints: Minimum length = 0, Maximum length = 120
     */
    val geoAdminLevel3 : String?
        get() {
            val o = __offset(24)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val geoAdminLevel3AsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(24, 1)
    fun geoAdminLevel3InByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 24, 1)
    /**
     * A postal code, such as PIN or ZIP Code, is a series of letters or digits or both included in the postal address of the organization.
     * Example: /// Example: 80903
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val postalCode : String?
        get() {
            val o = __offset(26)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val postalCodeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(26, 1)
    fun postalCodeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 26, 1)
    /**
     * Organization description.
     * Example: /// Example: Example description
     * Constraints: Minimum length = 0, Maximum length = 2147483647
     */
    val description : String?
        get() {
            val o = __offset(28)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val descriptionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(28, 1)
    fun descriptionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 28, 1)
    /**
     * Former organization ID (if this organization previously existed as another organization).
     * Example: /// Example: FORMERORG-ID
     * Constraints: Minimum length = 0, Maximum length = 36
     */
    val formerOrgId : String?
        get() {
            val o = __offset(30)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val formerOrgIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(30, 1)
    fun formerOrgIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 30, 1)
    /**
     * Parent organization ID of this organization if it is a child organization.
     * Example: /// Example: PARENTORG-ID
     * Constraints: Minimum length = 0, Maximum length = 36
     */
    val parentOrgId : String?
        get() {
            val o = __offset(32)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val parentOrgIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(32, 1)
    fun parentOrgIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 32, 1)
    /**
     * For organizations of type CORPORATION, the effective financial year end date for revenue, EBITDA, and profit values.
     * Example: /// Example: 2021-01-01T01:01:01.123Z
     * Constraints: No constraints specified.
     */
    val financialYearEndDate : String?
        get() {
            val o = __offset(34)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val financialYearEndDateAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(34, 1)
    fun financialYearEndDateInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 34, 1)
    /**
     * For organizations of type CORPORATION, total annual revenue as of financialYearEndDate in US Dollars.
     * Example: /// Example: 123.4
     * Constraints: No constraints specified.
     */
    val revenue : Double
        get() {
            val o = __offset(36)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * For organizations of type CORPORATION, total annual profit as of financialYearEndDate in US Dollars.
     * Example: /// Example: 123.4
     * Constraints: No constraints specified.
     */
    val profit : Double
        get() {
            val o = __offset(38)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * For organizations of type CORPORATION, the company EBITDA value as of financialYearEndDate in US Dollars.
     * Example: /// Example: 123.4
     * Constraints: No constraints specified.
     */
    val ebitda : Double
        get() {
            val o = __offset(40)
            return if(o != 0) bb.getDouble(o + bb_pos) else 0.0
        }
    /**
     * Total number of FTEs in this organization.
     * Example: /// Example: 123
     * Constraints: No constraints specified.
     */
    val ftes : Int
        get() {
            val o = __offset(42)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * Designated broker for this organization.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 128
     */
    val broker : String?
        get() {
            val o = __offset(44)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val brokerAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(44, 1)
    fun brokerInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 44, 1)
    /**
     * For organizations of type CORPORATION, the name of the Chief Executive Officer.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 128
     */
    val ceo : String?
        get() {
            val o = __offset(46)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val ceoAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(46, 1)
    fun ceoInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 46, 1)
    /**
     * For organizations of type CORPORATION, the name of the Chief Financial Officer.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 128
     */
    val cfo : String?
        get() {
            val o = __offset(48)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val cfoAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(48, 1)
    fun cfoInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 48, 1)
    /**
     * For organizations of type CORPORATION, the name of the Chief Technology Officer.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 128
     */
    val cto : String?
        get() {
            val o = __offset(50)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val ctoAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(50, 1)
    fun ctoInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 50, 1)
    /**
     * The name of the risk manager for the organization.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 128
     */
    val riskManager : String?
        get() {
            val o = __offset(52)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val riskManagerAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(52, 1)
    fun riskManagerInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 52, 1)
    /**
     * Mass ranking for this organization.
     * Example: /// Example: 123
     * Constraints: No constraints specified.
     */
    val massRanking : Int
        get() {
            val o = __offset(54)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * Revenue ranking for this organization.
     * Example: /// Example: 123
     * Constraints: No constraints specified.
     */
    val revenueRanking : Int
        get() {
            val o = __offset(56)
            return if(o != 0) bb.getInt(o + bb_pos) else 0
        }
    /**
     * For organizations of type CORPORATION, notes on company financials.
     * Example: /// Example: Example notes
     * Constraints: Minimum length = 0, Maximum length = 2147483647
     */
    val financialNotes : String?
        get() {
            val o = __offset(58)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val financialNotesAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(58, 1)
    fun financialNotesInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 58, 1)
    /**
     * Notes on the services provided by the organization.
     * Example: /// Example: Example notes
     * Constraints: Minimum length = 0, Maximum length = 2147483647
     */
    val servicesNotes : String?
        get() {
            val o = __offset(60)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val servicesNotesAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(60, 1)
    fun servicesNotesInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 60, 1)
    /**
     * Satellite fleet planning notes for this organization.
     * Example: /// Example: Example notes
     * Constraints: Minimum length = 0, Maximum length = 2147483647
     */
    val fleetPlanNotes : String?
        get() {
            val o = __offset(62)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val fleetPlanNotesAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(62, 1)
    fun fleetPlanNotesInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 62, 1)
    /**
     * Source of the data.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 1, Maximum length = 64
     */
    val source : String?
        get() {
            val o = __offset(64)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val sourceAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(64, 1)
    fun sourceInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 64, 1)
    /**
     * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 64
     */
    val origin : String?
        get() {
            val o = __offset(66)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val originAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(66, 1)
    fun originInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 66, 1)
    /**
     * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
     * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
     * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
     * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
     * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
     * Example: /// Example: TEST
     * Constraints: Minimum length = 1, Maximum length = 32
     */
    val dataMode : Byte
        get() {
            val o = __offset(68)
            return if(o != 0) bb.get(o + bb_pos) else 0
        }
    /**
     * Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
     * Example: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
     * Constraints: No constraints specified.
     */
    fun tags(j: Int) : String? {
        val o = __offset(70)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val tagsLength : Int
        get() {
            val o = __offset(70); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * Time the row was created in the database, auto-populated by the system.
     * Example: /// Example: 2018-01-01T16:00:00.123Z
     * Constraints: No constraints specified.
     */
    val createdAt : String?
        get() {
            val o = __offset(72)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val createdAtAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(72, 1)
    fun createdAtInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 72, 1)
    /**
     * Application user who created the row in the database, auto-populated by the system.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 1, Maximum length = 64
     */
    val createdBy : String?
        get() {
            val o = __offset(74)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val createdByAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(74, 1)
    fun createdByInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 74, 1)
    /**
     * Time the row was last updated in the database, auto-populated by the system.
     * Example: /// Example: 2018-01-01T16:00:00.123Z
     * Constraints: No constraints specified.
     */
    val updatedAt : String?
        get() {
            val o = __offset(76)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val updatedAtAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(76, 1)
    fun updatedAtInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 76, 1)
    /**
     * Application user who updated the row in the database, auto-populated by the system.
     * Example: /// Example: some.user
     * Constraints: Minimum length = 0, Maximum length = 64
     */
    val updatedBy : String?
        get() {
            val o = __offset(78)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val updatedByAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(78, 1)
    fun updatedByInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 78, 1)
    /**
     * The originating source network on which this record was created, auto-populated by the system.
     * Example: /// Example: OPS1
     * Constraints: Minimum length = 1, Maximum length = 32
     */
    val origNetwork : String?
        get() {
            val o = __offset(80)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val origNetworkAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(80, 1)
    fun origNetworkInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 80, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsOrganizationDetails(_bb: ByteBuffer): OrganizationDetails = getRootAsOrganizationDetails(_bb, OrganizationDetails())
        fun getRootAsOrganizationDetails(_bb: ByteBuffer, obj: OrganizationDetails): OrganizationDetails {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun OrganizationDetailsBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "ORGA")
        fun createOrganizationDetails(builder: FlatBufferBuilder, idOffset: Int, idOrganizationOffset: Int, classificationMarkingOffset: Int, nameOffset: Int, emailOffset: Int, address1Offset: Int, address2Offset: Int, address3Offset: Int, geoAdminLevel1Offset: Int, geoAdminLevel2Offset: Int, geoAdminLevel3Offset: Int, postalCodeOffset: Int, descriptionOffset: Int, formerOrgIdOffset: Int, parentOrgIdOffset: Int, financialYearEndDateOffset: Int, revenue: Double, profit: Double, ebitda: Double, ftes: Int, brokerOffset: Int, ceoOffset: Int, cfoOffset: Int, ctoOffset: Int, riskManagerOffset: Int, massRanking: Int, revenueRanking: Int, financialNotesOffset: Int, servicesNotesOffset: Int, fleetPlanNotesOffset: Int, sourceOffset: Int, originOffset: Int, dataMode: Byte, tagsOffset: Int, createdAtOffset: Int, createdByOffset: Int, updatedAtOffset: Int, updatedByOffset: Int, origNetworkOffset: Int) : Int {
            builder.startTable(39)
            addEbitda(builder, ebitda)
            addProfit(builder, profit)
            addRevenue(builder, revenue)
            addOrigNetwork(builder, origNetworkOffset)
            addUpdatedBy(builder, updatedByOffset)
            addUpdatedAt(builder, updatedAtOffset)
            addCreatedBy(builder, createdByOffset)
            addCreatedAt(builder, createdAtOffset)
            addTags(builder, tagsOffset)
            addOrigin(builder, originOffset)
            addSource(builder, sourceOffset)
            addFleetPlanNotes(builder, fleetPlanNotesOffset)
            addServicesNotes(builder, servicesNotesOffset)
            addFinancialNotes(builder, financialNotesOffset)
            addRevenueRanking(builder, revenueRanking)
            addMassRanking(builder, massRanking)
            addRiskManager(builder, riskManagerOffset)
            addCto(builder, ctoOffset)
            addCfo(builder, cfoOffset)
            addCeo(builder, ceoOffset)
            addBroker(builder, brokerOffset)
            addFtes(builder, ftes)
            addFinancialYearEndDate(builder, financialYearEndDateOffset)
            addParentOrgId(builder, parentOrgIdOffset)
            addFormerOrgId(builder, formerOrgIdOffset)
            addDescription(builder, descriptionOffset)
            addPostalCode(builder, postalCodeOffset)
            addGeoAdminLevel3(builder, geoAdminLevel3Offset)
            addGeoAdminLevel2(builder, geoAdminLevel2Offset)
            addGeoAdminLevel1(builder, geoAdminLevel1Offset)
            addAddress3(builder, address3Offset)
            addAddress2(builder, address2Offset)
            addAddress1(builder, address1Offset)
            addEmail(builder, emailOffset)
            addName(builder, nameOffset)
            addClassificationMarking(builder, classificationMarkingOffset)
            addIdOrganization(builder, idOrganizationOffset)
            addId(builder, idOffset)
            addDataMode(builder, dataMode)
            return endOrganizationDetails(builder)
        }
        fun startOrganizationDetails(builder: FlatBufferBuilder) = builder.startTable(39)
        fun addId(builder: FlatBufferBuilder, id: Int) = builder.addOffset(0, id, 0)
        fun addIdOrganization(builder: FlatBufferBuilder, idOrganization: Int) = builder.addOffset(1, idOrganization, 0)
        fun addClassificationMarking(builder: FlatBufferBuilder, classificationMarking: Int) = builder.addOffset(2, classificationMarking, 0)
        fun addName(builder: FlatBufferBuilder, name: Int) = builder.addOffset(3, name, 0)
        fun addEmail(builder: FlatBufferBuilder, email: Int) = builder.addOffset(4, email, 0)
        fun addAddress1(builder: FlatBufferBuilder, address1: Int) = builder.addOffset(5, address1, 0)
        fun addAddress2(builder: FlatBufferBuilder, address2: Int) = builder.addOffset(6, address2, 0)
        fun addAddress3(builder: FlatBufferBuilder, address3: Int) = builder.addOffset(7, address3, 0)
        fun addGeoAdminLevel1(builder: FlatBufferBuilder, geoAdminLevel1: Int) = builder.addOffset(8, geoAdminLevel1, 0)
        fun addGeoAdminLevel2(builder: FlatBufferBuilder, geoAdminLevel2: Int) = builder.addOffset(9, geoAdminLevel2, 0)
        fun addGeoAdminLevel3(builder: FlatBufferBuilder, geoAdminLevel3: Int) = builder.addOffset(10, geoAdminLevel3, 0)
        fun addPostalCode(builder: FlatBufferBuilder, postalCode: Int) = builder.addOffset(11, postalCode, 0)
        fun addDescription(builder: FlatBufferBuilder, description: Int) = builder.addOffset(12, description, 0)
        fun addFormerOrgId(builder: FlatBufferBuilder, formerOrgId: Int) = builder.addOffset(13, formerOrgId, 0)
        fun addParentOrgId(builder: FlatBufferBuilder, parentOrgId: Int) = builder.addOffset(14, parentOrgId, 0)
        fun addFinancialYearEndDate(builder: FlatBufferBuilder, financialYearEndDate: Int) = builder.addOffset(15, financialYearEndDate, 0)
        fun addRevenue(builder: FlatBufferBuilder, revenue: Double) = builder.addDouble(16, revenue, 0.0)
        fun addProfit(builder: FlatBufferBuilder, profit: Double) = builder.addDouble(17, profit, 0.0)
        fun addEbitda(builder: FlatBufferBuilder, ebitda: Double) = builder.addDouble(18, ebitda, 0.0)
        fun addFtes(builder: FlatBufferBuilder, ftes: Int) = builder.addInt(19, ftes, 0)
        fun addBroker(builder: FlatBufferBuilder, broker: Int) = builder.addOffset(20, broker, 0)
        fun addCeo(builder: FlatBufferBuilder, ceo: Int) = builder.addOffset(21, ceo, 0)
        fun addCfo(builder: FlatBufferBuilder, cfo: Int) = builder.addOffset(22, cfo, 0)
        fun addCto(builder: FlatBufferBuilder, cto: Int) = builder.addOffset(23, cto, 0)
        fun addRiskManager(builder: FlatBufferBuilder, riskManager: Int) = builder.addOffset(24, riskManager, 0)
        fun addMassRanking(builder: FlatBufferBuilder, massRanking: Int) = builder.addInt(25, massRanking, 0)
        fun addRevenueRanking(builder: FlatBufferBuilder, revenueRanking: Int) = builder.addInt(26, revenueRanking, 0)
        fun addFinancialNotes(builder: FlatBufferBuilder, financialNotes: Int) = builder.addOffset(27, financialNotes, 0)
        fun addServicesNotes(builder: FlatBufferBuilder, servicesNotes: Int) = builder.addOffset(28, servicesNotes, 0)
        fun addFleetPlanNotes(builder: FlatBufferBuilder, fleetPlanNotes: Int) = builder.addOffset(29, fleetPlanNotes, 0)
        fun addSource(builder: FlatBufferBuilder, source: Int) = builder.addOffset(30, source, 0)
        fun addOrigin(builder: FlatBufferBuilder, origin: Int) = builder.addOffset(31, origin, 0)
        fun addDataMode(builder: FlatBufferBuilder, dataMode: Byte) = builder.addByte(32, dataMode, 0)
        fun addTags(builder: FlatBufferBuilder, tags: Int) = builder.addOffset(33, tags, 0)
        fun createTagsVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startTagsVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addCreatedAt(builder: FlatBufferBuilder, createdAt: Int) = builder.addOffset(34, createdAt, 0)
        fun addCreatedBy(builder: FlatBufferBuilder, createdBy: Int) = builder.addOffset(35, createdBy, 0)
        fun addUpdatedAt(builder: FlatBufferBuilder, updatedAt: Int) = builder.addOffset(36, updatedAt, 0)
        fun addUpdatedBy(builder: FlatBufferBuilder, updatedBy: Int) = builder.addOffset(37, updatedBy, 0)
        fun addOrigNetwork(builder: FlatBufferBuilder, origNetwork: Int) = builder.addOffset(38, origNetwork, 0)
        fun endOrganizationDetails(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishOrganizationDetailsBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "ORGA")
        fun finishSizePrefixedOrganizationDetailsBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "ORGA")
    }
}
