// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Schema for Crew Member data.
 */
@Suppress("unused")
class CrewMembers_Abridged : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : CrewMembers_Abridged {
        __init(_i, _bb)
        return this
    }
    /**
     * The last name of the crew member.
     * Example: /// Example: Smith
     * Constraints: Minimum length = 0, Maximum length = 64
     */
    val lastName : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val lastNameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun lastNameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * The first name of the crew member.
     * Example: /// Example: Freddie
     * Constraints: Minimum length = 0, Maximum length = 64
     */
    val firstName : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val firstNameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun firstNameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * The middle initial of the crew member.
     * Example: /// Example: G
     * Constraints: Minimum length = 0, Maximum length = 1
     */
    val middleInitial : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val middleInitialAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun middleInitialInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * Unique identifier of the crew member assigned by the originating source.
     * Example: /// Example: 12345678abc
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val memberId : String?
        get() {
            val o = __offset(10)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val memberIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(10, 1)
    fun memberIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 10, 1)
    /**
     * Flag indicating this crew member is a civilian or non-military person.
     * Example: /// Example: False
     * Constraints: No constraints specified.
     */
    val civilian : Boolean
        get() {
            val o = __offset(12)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    /**
     * Flag indicating this person is the aircraft commander.
     * Example: /// Example: False
     * Constraints: No constraints specified.
     */
    val commander : Boolean
        get() {
            val o = __offset(14)
            return if(o != 0) 0.toByte() != bb.get(o + bb_pos) else false
        }
    /**
     * Last four digits of the crew member's social security number.
     * Example: /// Example: 1234
     * Constraints: Minimum length = 0, Maximum length = 4
     */
    val last4Ssn : String?
        get() {
            val o = __offset(16)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val last4SsnAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(16, 1)
    fun last4SsnInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 16, 1)
    /**
     * The crew member's 10-digit DoD ID number.
     * Example: /// Example: 0123456789
     * Constraints: Minimum length = 0, Maximum length = 10
     */
    val dodId : String?
        get() {
            val o = __offset(18)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val dodIdAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(18, 1)
    fun dodIdInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 18, 1)
    /**
     * The duty position of the crew member.
     * Example: /// Example: IP
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val dutyPosition : String?
        get() {
            val o = __offset(20)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val dutyPositionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(20, 1)
    fun dutyPositionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 20, 1)
    /**
     * The crew position of the crew member.
     * Example: /// Example: EP A
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val crewPosition : String?
        get() {
            val o = __offset(22)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val crewPositionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(22, 1)
    fun crewPositionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 22, 1)
    /**
     * Amplifying details about the crew member type (e.g. RAVEN, FCC, COMCAM, AIRCREW, MEP, OTHER, etc.).
     * Example: /// Example: AIRCREW
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val memberType : String?
        get() {
            val o = __offset(24)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val memberTypeAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(24, 1)
    fun memberTypeInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 24, 1)
    /**
     * The military branch assignment of the crew member.
     * Example: /// Example: Air Force
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val branch : String?
        get() {
            val o = __offset(26)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val branchAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(26, 1)
    fun branchInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 26, 1)
    /**
     * The rank of the crew member.
     * Example: /// Example: Capt
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val rank : String?
        get() {
            val o = __offset(28)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val rankAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(28, 1)
    fun rankInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 28, 1)
    /**
     * The wing the crew member serves.
     * Example: /// Example: 60AMW
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val wing : String?
        get() {
            val o = __offset(30)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val wingAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(30, 1)
    fun wingInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 30, 1)
    /**
     * The squadron the crew member serves.
     * Example: /// Example: 21AS
     * Constraints: Minimum length = 0, Maximum length = 32
     */
    val squadron : String?
        get() {
            val o = __offset(32)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val squadronAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(32, 1)
    fun squadronInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 32, 1)
    /**
     * Remarks concerning the crew member.
     * Example: /// Example: Crew member remark
     * Constraints: Minimum length = 0, Maximum length = 512
     */
    val memberRemarks : String?
        get() {
            val o = __offset(34)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val memberRemarksAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(34, 1)
    fun memberRemarksInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 34, 1)
    /**
     * The Mattermost username of this crew member.
     * Example: /// Example: fgsmith
     * Constraints: Minimum length = 0, Maximum length = 64
     */
    val username : String?
        get() {
            val o = __offset(36)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val usernameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(36, 1)
    fun usernameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 36, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsCrewMembers_Abridged(_bb: ByteBuffer): CrewMembers_Abridged = getRootAsCrewMembers_Abridged(_bb, CrewMembers_Abridged())
        fun getRootAsCrewMembers_Abridged(_bb: ByteBuffer, obj: CrewMembers_Abridged): CrewMembers_Abridged {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun CrewMembers_AbridgedBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "CREW")
        fun createCrewMembers_Abridged(builder: FlatBufferBuilder, lastNameOffset: Int, firstNameOffset: Int, middleInitialOffset: Int, memberIdOffset: Int, civilian: Boolean, commander: Boolean, last4SsnOffset: Int, dodIdOffset: Int, dutyPositionOffset: Int, crewPositionOffset: Int, memberTypeOffset: Int, branchOffset: Int, rankOffset: Int, wingOffset: Int, squadronOffset: Int, memberRemarksOffset: Int, usernameOffset: Int) : Int {
            builder.startTable(17)
            addUsername(builder, usernameOffset)
            addMemberRemarks(builder, memberRemarksOffset)
            addSquadron(builder, squadronOffset)
            addWing(builder, wingOffset)
            addRank(builder, rankOffset)
            addBranch(builder, branchOffset)
            addMemberType(builder, memberTypeOffset)
            addCrewPosition(builder, crewPositionOffset)
            addDutyPosition(builder, dutyPositionOffset)
            addDodID(builder, dodIdOffset)
            addLast4SSN(builder, last4SsnOffset)
            addMemberId(builder, memberIdOffset)
            addMiddleInitial(builder, middleInitialOffset)
            addFirstName(builder, firstNameOffset)
            addLastName(builder, lastNameOffset)
            addCommander(builder, commander)
            addCivilian(builder, civilian)
            return endCrewMembers_Abridged(builder)
        }
        fun startCrewMembers_Abridged(builder: FlatBufferBuilder) = builder.startTable(17)
        fun addLastName(builder: FlatBufferBuilder, lastName: Int) = builder.addOffset(0, lastName, 0)
        fun addFirstName(builder: FlatBufferBuilder, firstName: Int) = builder.addOffset(1, firstName, 0)
        fun addMiddleInitial(builder: FlatBufferBuilder, middleInitial: Int) = builder.addOffset(2, middleInitial, 0)
        fun addMemberId(builder: FlatBufferBuilder, memberId: Int) = builder.addOffset(3, memberId, 0)
        fun addCivilian(builder: FlatBufferBuilder, civilian: Boolean) = builder.addBoolean(4, civilian, false)
        fun addCommander(builder: FlatBufferBuilder, commander: Boolean) = builder.addBoolean(5, commander, false)
        fun addLast4SSN(builder: FlatBufferBuilder, last4Ssn: Int) = builder.addOffset(6, last4Ssn, 0)
        fun addDodID(builder: FlatBufferBuilder, dodId: Int) = builder.addOffset(7, dodId, 0)
        fun addDutyPosition(builder: FlatBufferBuilder, dutyPosition: Int) = builder.addOffset(8, dutyPosition, 0)
        fun addCrewPosition(builder: FlatBufferBuilder, crewPosition: Int) = builder.addOffset(9, crewPosition, 0)
        fun addMemberType(builder: FlatBufferBuilder, memberType: Int) = builder.addOffset(10, memberType, 0)
        fun addBranch(builder: FlatBufferBuilder, branch: Int) = builder.addOffset(11, branch, 0)
        fun addRank(builder: FlatBufferBuilder, rank: Int) = builder.addOffset(12, rank, 0)
        fun addWing(builder: FlatBufferBuilder, wing: Int) = builder.addOffset(13, wing, 0)
        fun addSquadron(builder: FlatBufferBuilder, squadron: Int) = builder.addOffset(14, squadron, 0)
        fun addMemberRemarks(builder: FlatBufferBuilder, memberRemarks: Int) = builder.addOffset(15, memberRemarks, 0)
        fun addUsername(builder: FlatBufferBuilder, username: Int) = builder.addOffset(16, username, 0)
        fun endCrewMembers_Abridged(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishCrewMembersAbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "CREW")
        fun finishSizePrefixedCrewMembers_AbridgedBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "CREW")
    }
}
