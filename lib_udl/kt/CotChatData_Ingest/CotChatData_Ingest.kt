// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Schema for the CotChatData to post.
 */
@Suppress("unused")
class CotChatData_Ingest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : CotChatData_Ingest {
        __init(_i, _bb)
        return this
    }
    /**
     * Chat room name to send chat message to.
     * Example: /// Example: All Chat Rooms
     * Constraints: No constraints specified.
     */
    val chatRoom : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val chatRoomAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun chatRoomInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * Callsign of chat sender.
     * Example: /// Example: Pebble
     * Constraints: No constraints specified.
     */
    val chatSenderCallSign : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val chatSenderCallSignAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun chatSenderCallSignInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * Contents of a chat message.
     * Example: /// Example: Mission is go
     * Constraints: No constraints specified.
     */
    val chatMsg : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val chatMsgAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun chatMsgInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsCotChatData_Ingest(_bb: ByteBuffer): CotChatData_Ingest = getRootAsCotChatData_Ingest(_bb, CotChatData_Ingest())
        fun getRootAsCotChatData_Ingest(_bb: ByteBuffer, obj: CotChatData_Ingest): CotChatData_Ingest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun CotChatData_IngestBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "COTC")
        fun createCotChatData_Ingest(builder: FlatBufferBuilder, chatRoomOffset: Int, chatSenderCallSignOffset: Int, chatMsgOffset: Int) : Int {
            builder.startTable(3)
            addChatMsg(builder, chatMsgOffset)
            addChatSenderCallSign(builder, chatSenderCallSignOffset)
            addChatRoom(builder, chatRoomOffset)
            return endCotChatData_Ingest(builder)
        }
        fun startCotChatData_Ingest(builder: FlatBufferBuilder) = builder.startTable(3)
        fun addChatRoom(builder: FlatBufferBuilder, chatRoom: Int) = builder.addOffset(0, chatRoom, 0)
        fun addChatSenderCallSign(builder: FlatBufferBuilder, chatSenderCallSign: Int) = builder.addOffset(1, chatSenderCallSign, 0)
        fun addChatMsg(builder: FlatBufferBuilder, chatMsg: Int) = builder.addOffset(2, chatMsg, 0)
        fun endCotChatData_Ingest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishCotChatDataIngestBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "COTC")
        fun finishSizePrefixedCotChatData_IngestBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "COTC")
    }
}
