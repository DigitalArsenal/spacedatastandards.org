// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

/**
 * /// Profile of electron densities in the ionosphere associated with an IonoObservation.
 */
@Suppress("unused")
class IonoObservationDensityProfile_Full : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : IonoObservationDensityProfile_Full {
        __init(_i, _bb)
        return this
    }
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val parabolic : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val parabolicAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun parabolicInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val quasiParabolic : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val quasiParabolicAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun quasiParabolicInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    /**
     * Description of the valley model and parameters.
     * Example: /// Example: 2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting.
     * Constraints: No constraints specified.
     */
    val valleyModelDescription : String?
        get() {
            val o = __offset(8)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val valleyModelDescriptionAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(8, 1)
    fun valleyModelDescriptionInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 8, 1)
    /**
     * Array of valley model coefficients.
     * Example: /// Example: [39.597, 0.1777]
     * Constraints: No constraints specified.
     */
    fun valleyModelCoeffs(j: Int) : String? {
        val o = __offset(10)
        return if (o != 0) {
            __string(__vector(o) + j * 4)
        } else {
            null
        }
    }
    val valleyModelCoeffsLength : Int
        get() {
            val o = __offset(10); return if (o != 0) __vector_len(o) else 0
        }
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val shiftedChebyshev : String?
        get() {
            val o = __offset(12)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val shiftedChebyshevAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(12, 1)
    fun shiftedChebyshevInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 12, 1)
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val topsideExtensionChapmanConst : String?
        get() {
            val o = __offset(14)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val topsideExtensionChapmanConstAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(14, 1)
    fun topsideExtensionChapmanConstInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 14, 1)
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val topsideExtensionVaryChap : String?
        get() {
            val o = __offset(16)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val topsideExtensionVaryChapAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(16, 1)
    fun topsideExtensionVaryChapInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 16, 1)
    /**
     * No description provided.
     * Example: /// Example: No example provided.
     * Constraints: No constraints specified.
     */
    val iri : String?
        get() {
            val o = __offset(18)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val iriAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(18, 1)
    fun iriInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 18, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsIonoObservationDensityProfile_Full(_bb: ByteBuffer): IonoObservationDensityProfile_Full = getRootAsIonoObservationDensityProfile_Full(_bb, IonoObservationDensityProfile_Full())
        fun getRootAsIonoObservationDensityProfile_Full(_bb: ByteBuffer, obj: IonoObservationDensityProfile_Full): IonoObservationDensityProfile_Full {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun IonoObservationDensityProfile_FullBufferHasIdentifier(_bb: ByteBuffer) : Boolean = __has_identifier(_bb, "IONO")
        fun createIonoObservationDensityProfile_Full(builder: FlatBufferBuilder, parabolicOffset: Int, quasiParabolicOffset: Int, valleyModelDescriptionOffset: Int, valleyModelCoeffsOffset: Int, shiftedChebyshevOffset: Int, topsideExtensionChapmanConstOffset: Int, topsideExtensionVaryChapOffset: Int, iriOffset: Int) : Int {
            builder.startTable(8)
            addIri(builder, iriOffset)
            addTopsideExtensionVaryChap(builder, topsideExtensionVaryChapOffset)
            addTopsideExtensionChapmanConst(builder, topsideExtensionChapmanConstOffset)
            addShiftedChebyshev(builder, shiftedChebyshevOffset)
            addValleyModelCoeffs(builder, valleyModelCoeffsOffset)
            addValleyModelDescription(builder, valleyModelDescriptionOffset)
            addQuasiParabolic(builder, quasiParabolicOffset)
            addParabolic(builder, parabolicOffset)
            return endIonoObservationDensityProfile_Full(builder)
        }
        fun startIonoObservationDensityProfile_Full(builder: FlatBufferBuilder) = builder.startTable(8)
        fun addParabolic(builder: FlatBufferBuilder, parabolic: Int) = builder.addOffset(0, parabolic, 0)
        fun addQuasiParabolic(builder: FlatBufferBuilder, quasiParabolic: Int) = builder.addOffset(1, quasiParabolic, 0)
        fun addValleyModelDescription(builder: FlatBufferBuilder, valleyModelDescription: Int) = builder.addOffset(2, valleyModelDescription, 0)
        fun addValleyModelCoeffs(builder: FlatBufferBuilder, valleyModelCoeffs: Int) = builder.addOffset(3, valleyModelCoeffs, 0)
        fun createValleyModelCoeffsVector(builder: FlatBufferBuilder, data: IntArray) : Int {
            builder.startVector(4, data.size, 4)
            for (i in data.size - 1 downTo 0) {
                builder.addOffset(data[i])
            }
            return builder.endVector()
        }
        fun startValleyModelCoeffsVector(builder: FlatBufferBuilder, numElems: Int) = builder.startVector(4, numElems, 4)
        fun addShiftedChebyshev(builder: FlatBufferBuilder, shiftedChebyshev: Int) = builder.addOffset(4, shiftedChebyshev, 0)
        fun addTopsideExtensionChapmanConst(builder: FlatBufferBuilder, topsideExtensionChapmanConst: Int) = builder.addOffset(5, topsideExtensionChapmanConst, 0)
        fun addTopsideExtensionVaryChap(builder: FlatBufferBuilder, topsideExtensionVaryChap: Int) = builder.addOffset(6, topsideExtensionVaryChap, 0)
        fun addIri(builder: FlatBufferBuilder, iri: Int) = builder.addOffset(7, iri, 0)
        fun endIonoObservationDensityProfile_Full(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
        fun finishIonoObservationDensityProfileFullBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finish(offset, "IONO")
        fun finishSizePrefixedIonoObservationDensityProfile_FullBuffer(builder: FlatBufferBuilder, offset: Int) = builder.finishSizePrefixed(offset, "IONO")
    }
}
