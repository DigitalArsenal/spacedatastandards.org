// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class MtiPlatformLocation_Abridged

/// /// Provides information pertaining to the location of the sensor platform during periods when the sensor is not collecting data. It shall be sent as required during periods in which the sensor is not collecting data, such as enroute to an orbit location, during a turn, or any other time at which platform location is required.
class MtiPlatformLocation_Abridged : flatbuffers.handle
    /// Elapsed time, expressed in milliseconds, from midnight at the beginning of the day specified in the Reference Time fields of the Mission Segment to the time the report is prepared.
    /// Example: /// Example: 1234567890
    /// Constraints: No constraints specified.
    def l1() -> int:
        return flatbuffers.field_int64(buf_, pos_, 4, 0)
    /// North-South position of the platform at the time the report is prepared, expressed as degrees North (positive) or South (negative) of the Equator.
    /// Example: /// Example: 45.23
    /// Constraints: No constraints specified.
    def l2() -> float:
        return flatbuffers.field_float64(buf_, pos_, 6, 0.0)
    /// East-West position of the platform at the time the report is prepared, expressed as degrees East (positive) from the Prime Meridian.
    /// Example: /// Example: 45.23
    /// Constraints: No constraints specified.
    def l3() -> float:
        return flatbuffers.field_float64(buf_, pos_, 8, 0.0)
    /// Altitude of the platform at the time the report is prepared, referenced to its position above the WGS-84 ellipsoid, in centimeters.
    /// Example: /// Example: 45
    /// Constraints: No constraints specified.
    def l4() -> int:
        return flatbuffers.field_int32(buf_, pos_, 10, 0)
    /// Ground track of the platform at the time the report is prepared, expressed as the angle in degrees (clockwise) from True North.
    /// Example: /// Example: 45.23
    /// Constraints: No constraints specified.
    def l5() -> float:
        return flatbuffers.field_float64(buf_, pos_, 12, 0.0)
    /// Ground speed of the platform at the time the report is prepared, expressed as millimeters per second.
    /// Example: /// Example: 50
    /// Constraints: No constraints specified.
    def l6() -> int:
        return flatbuffers.field_int32(buf_, pos_, 14, 0)
    /// Velocity of the platform in the vertical direction, expressed as decimeters per second.
    /// Example: /// Example: 82
    /// Constraints: No constraints specified.
    def l7() -> int:
        return flatbuffers.field_int32(buf_, pos_, 16, 0)
    /// Platform location timestamp in ISO8601 UTC format.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def platlocts() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)

def GetRootAsMtiPlatformLocation_Abridged(buf:string): return MtiPlatformLocation_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct MtiPlatformLocation_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(8)
        return this
    def add_l1(l1:int):
        b_.PrependInt64Slot(0, l1, 0)
        return this
    def add_l2(l2:float):
        b_.PrependFloat64Slot(1, l2, 0.0)
        return this
    def add_l3(l3:float):
        b_.PrependFloat64Slot(2, l3, 0.0)
        return this
    def add_l4(l4:int):
        b_.PrependInt32Slot(3, l4, 0)
        return this
    def add_l5(l5:float):
        b_.PrependFloat64Slot(4, l5, 0.0)
        return this
    def add_l6(l6:int):
        b_.PrependInt32Slot(5, l6, 0)
        return this
    def add_l7(l7:int):
        b_.PrependInt32Slot(6, l7, 0)
        return this
    def add_platlocts(platlocts:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, platlocts)
        return this
    def end():
        return b_.EndObject()

