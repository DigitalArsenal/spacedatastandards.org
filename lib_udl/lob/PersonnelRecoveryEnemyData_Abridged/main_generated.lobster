// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class PersonnelRecoveryEnemyData_Abridged

/// /// Information detailing knowledge of enemies in the area.
class PersonnelRecoveryEnemyData_Abridged : flatbuffers.handle
    /// Directions to known enemies in the operation area (NORTH, NORTHEAST, EAST, SOUTHEAST, SOUTH, SOUTHWEST, WEST, NORTHWEST, SURROUNDED).
    /// Example: /// Example: NORTHWEST
    /// Constraints: Minimum length = 0, Maximum length = 32
    def dirToEnemy() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The type of hostile fire received (SMALL ARMS, MORTAR, ARTILLERY, ROCKETS).
    /// Example: /// Example: SMALL ARMS
    /// Constraints: Minimum length = 0, Maximum length = 32
    def hostileFireType() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Comments provided by friendlies about the evac zone.
    /// Example: /// Example: Comments from friendlies.
    /// Constraints: Minimum length = 0, Maximum length = 128
    def friendliesRemarks() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Hot Landing Zone remarks.
    /// Example: /// Example: Hot Landing Zone remarks.
    /// Constraints: Minimum length = 0, Maximum length = 128
    def hlzRemarks() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)

def GetRootAsPersonnelRecoveryEnemyData_Abridged(buf:string): return PersonnelRecoveryEnemyData_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct PersonnelRecoveryEnemyData_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_dirToEnemy(dirToEnemy:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, dirToEnemy)
        return this
    def add_hostileFireType(hostileFireType:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, hostileFireType)
        return this
    def add_friendliesRemarks(friendliesRemarks:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, friendliesRemarks)
        return this
    def add_hlzRemarks(hlzRemarks:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, hlzRemarks)
        return this
    def end():
        return b_.EndObject()

