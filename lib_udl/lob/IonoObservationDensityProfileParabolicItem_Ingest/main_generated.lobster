// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class IonoObservationDensityProfileParabolicItem_Ingest

/// /// Describes the E, F1, and F2 layers as parabolic-shape segments.
class IonoObservationDensityProfileParabolicItem_Ingest : flatbuffers.handle
    /// Ionospheric plasma layer (E, F1, or F2).
    /// Example: /// Example: E
    /// Constraints: No constraints specified.
    def layer() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Plasma frequency at the layer peak, in MHz.
    /// Example: /// Example: 3.621
    /// Constraints: No constraints specified.
    def f() -> float:
        return flatbuffers.field_float64(buf_, pos_, 6, 0.0)
    /// Height of the layer peak, in kilometers.
    /// Example: /// Example: 110.2
    /// Constraints: No constraints specified.
    def z() -> float:
        return flatbuffers.field_float64(buf_, pos_, 8, 0.0)
    /// Half-thickness of the layer, in kilometers.
    /// Example: /// Example: 11.1
    /// Constraints: No constraints specified.
    def y() -> float:
        return flatbuffers.field_float64(buf_, pos_, 10, 0.0)

def GetRootAsIonoObservationDensityProfileParabolicItem_Ingest(buf:string): return IonoObservationDensityProfileParabolicItem_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct IonoObservationDensityProfileParabolicItem_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_layer(layer:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, layer)
        return this
    def add_f(f:float):
        b_.PrependFloat64Slot(1, f, 0.0)
        return this
    def add_z(z:float):
        b_.PrependFloat64Slot(2, z, 0.0)
        return this
    def add_y(y:float):
        b_.PrependFloat64Slot(3, y, 0.0)
        return this
    def end():
        return b_.EndObject()

