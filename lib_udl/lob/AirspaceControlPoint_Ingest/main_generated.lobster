// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class AirspaceControlPoint_Ingest

/// /// The controlPoint set describes any reference/controlling/rendevous point for a given airspace control means.
class AirspaceControlPoint_Ingest : flatbuffers.handle
    /// One of possible control point type codes, such as CP, ER, OT, etc.
    /// Example: /// Example: CP
    /// Constraints: Minimum length = 0, Maximum length = 2
    def ctrlPtType() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The name applied to the control point, used as a reference.
    /// Example: /// Example: APPLE
    /// Constraints: Minimum length = 0, Maximum length = 32
    def ctrlPtName() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// A geospatial point coordinate specified in DMS (Degrees, Minutes, Seconds) format that represents the location of the control point.
    /// Example: /// Example: 203632N0594256E
    /// Constraints: Minimum length = 0, Maximum length = 16
    def ctrlPtLocation() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// The altitude of the control point.
    /// Example: /// Example: BRFL:MSL-FL230
    /// Constraints: Minimum length = 0, Maximum length = 32
    def ctrlPtAltitude() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)

def GetRootAsAirspaceControlPoint_Ingest(buf:string): return AirspaceControlPoint_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct AirspaceControlPoint_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_ctrlPtType(ctrlPtType:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, ctrlPtType)
        return this
    def add_ctrlPtName(ctrlPtName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, ctrlPtName)
        return this
    def add_ctrlPtLocation(ctrlPtLocation:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, ctrlPtLocation)
        return this
    def add_ctrlPtAltitude(ctrlPtAltitude:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, ctrlPtAltitude)
        return this
    def end():
        return b_.EndObject()

