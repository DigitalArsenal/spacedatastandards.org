// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

enum SortiePPR_Abridged_type_Enum:
    /// No description available.
    SortiePPR_Abridged_type_Enum_M = 0
    /// No description available.
    SortiePPR_Abridged_type_Enum_C = 1

enum SortiePPR_Abridged_dataMode_Enum:
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    SortiePPR_Abridged_dataMode_Enum_REAL = 0
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    SortiePPR_Abridged_dataMode_Enum_TEST = 1
    /// Synthetic data generated by a model to mimic real-world datasets.
    SortiePPR_Abridged_dataMode_Enum_SIMULATED = 2
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    SortiePPR_Abridged_dataMode_Enum_EXERCISE = 3

class SortiePPR_Abridged

/// /// SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.
class SortiePPR_Abridged : flatbuffers.handle
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: /// Example: SORTIEPPR-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    def id() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    def classificationMarking() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.
    /// Example: /// Example: 4ef3d1e8-ab08-ab70-498f-edc479734e5c
    /// Constraints: Minimum length = 1, Maximum length = 36
    def idSortie() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
    /// Example: /// Example: aa714f4d52a37ab1a00b21af9566e379
    /// Constraints: Minimum length = 0, Maximum length = 36
    def externalId() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)
    /// The prior permission required (PPR) number issued by the airfield for a sortie.
    /// Example: /// Example: 07-21-07W
    /// Constraints: Minimum length = 0, Maximum length = 16
    def number() -> string:
        return flatbuffers.field_string(buf_, pos_, 12)
    /// Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2024-01-01T01:01:01.123Z
    /// Constraints: No constraints specified.
    def startTime() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)
    /// Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2024-01-01T01:01:01.123Z
    /// Constraints: No constraints specified.
    def endTime() -> string:
        return flatbuffers.field_string(buf_, pos_, 16)
    /// The username of the prior permission required (PPR) requestor.
    /// Example: /// Example: jsmith1
    /// Constraints: Minimum length = 0, Maximum length = 32
    def requestor() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)
    /// Identifier of the prior permission required (PPR) grantor.
    /// Example: /// Example: SMITH
    /// Constraints: Minimum length = 0, Maximum length = 32
    def grantor() -> string:
        return flatbuffers.field_string(buf_, pos_, 20)
    /// Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].
    /// Example: /// Example: M
    /// Constraints: Minimum length = 0, Maximum length = 1
    def type() -> SortiePPR_Abridged_type_Enum:
        return SortiePPR_Abridged_type_Enum(flatbuffers.field_int8(buf_, pos_, 22, 0))
    /// Remarks concerning the prior permission required (PPR) for a sortie.
    /// Example: /// Example: PPR remark
    /// Constraints: Minimum length = 0, Maximum length = 512
    def remarks() -> string:
        return flatbuffers.field_string(buf_, pos_, 24)
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    def createdAt() -> string:
        return flatbuffers.field_string(buf_, pos_, 26)
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    def createdBy() -> string:
        return flatbuffers.field_string(buf_, pos_, 28)
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    def sourceDL() -> string:
        return flatbuffers.field_string(buf_, pos_, 30)
    /// Source of the data.
    /// Example: /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    def source() -> string:
        return flatbuffers.field_string(buf_, pos_, 32)
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    def origin() -> string:
        return flatbuffers.field_string(buf_, pos_, 34)
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: /// Example: OPS1
    /// Constraints: Minimum length = 1, Maximum length = 32
    def origNetwork() -> string:
        return flatbuffers.field_string(buf_, pos_, 36)
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    /// EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    /// REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    /// SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    /// TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    /// Example: /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    def dataMode() -> SortiePPR_Abridged_dataMode_Enum:
        return SortiePPR_Abridged_dataMode_Enum(flatbuffers.field_int8(buf_, pos_, 38, 0))

def GetRootAsSortiePPR_Abridged(buf:string): return SortiePPR_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct SortiePPR_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(18)
        return this
    def add_id(id:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, id)
        return this
    def add_classificationMarking(classificationMarking:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, classificationMarking)
        return this
    def add_idSortie(idSortie:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, idSortie)
        return this
    def add_externalId(externalId:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, externalId)
        return this
    def add_number(number:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(4, number)
        return this
    def add_startTime(startTime:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, startTime)
        return this
    def add_endTime(endTime:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(6, endTime)
        return this
    def add_requestor(requestor:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, requestor)
        return this
    def add_grantor(grantor:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(8, grantor)
        return this
    def add_type(type:SortiePPR_Abridged_type_Enum):
        b_.PrependInt8Slot(9, type, 0)
        return this
    def add_remarks(remarks:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(10, remarks)
        return this
    def add_createdAt(createdAt:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(11, createdAt)
        return this
    def add_createdBy(createdBy:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(12, createdBy)
        return this
    def add_sourceDL(sourceDL:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(13, sourceDL)
        return this
    def add_source(source:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(14, source)
        return this
    def add_origin(origin:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(15, origin)
        return this
    def add_origNetwork(origNetwork:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(16, origNetwork)
        return this
    def add_dataMode(dataMode:SortiePPR_Abridged_dataMode_Enum):
        b_.PrependInt8Slot(17, dataMode, 0)
        return this
    def end():
        return b_.EndObject()

