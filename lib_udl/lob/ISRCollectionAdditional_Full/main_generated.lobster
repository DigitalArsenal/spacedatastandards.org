// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class ISRCollectionAdditional_Full

/// /// Additional start and stop for the collection.
class ISRCollectionAdditional_Full : flatbuffers.handle
    /// Unique Identifier of additional collection period.
    /// Example: /// Example: ISRCOLLECTIONADDITIONAL
    /// Constraints: Minimum length = 0, Maximum length = 36
    def id() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Start time of collection, in ISO 8601 UTC format.
    /// Example: /// Example: 2021-01-19T01:01:15.001Z
    /// Constraints: No constraints specified.
    def start() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Stop time of collection, in ISO 8601 UTC format.
    /// Example: /// Example: 2021-01-19T01:01:15.001Z
    /// Constraints: No constraints specified.
    def stop() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)

def GetRootAsISRCollectionAdditional_Full(buf:string): return ISRCollectionAdditional_Full { buf, flatbuffers.indirect(buf, 0) }

struct ISRCollectionAdditional_FullBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(3)
        return this
    def add_id(id:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, id)
        return this
    def add_start(start:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, start)
        return this
    def add_stop(stop:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, stop)
        return this
    def end():
        return b_.EndObject()

