// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class PointOfContact_Abridged

/// /// Point of contacts for scheduling or modifying the route.
class PointOfContact_Abridged : flatbuffers.handle
    /// Sequencing field for point of contact.
    /// Example: /// Example: 1
    /// Constraints: No constraints specified.
    def pocSequenceId() -> int:
        return flatbuffers.field_int32(buf_, pos_, 4, 0)
    /// A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).
    /// Example: /// Example: Originator
    /// Constraints: Minimum length = 0, Maximum length = 36
    def pocTypeName() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// The name of the contact.
    /// Example: /// Example: Fred Smith
    /// Constraints: Minimum length = 0, Maximum length = 36
    def pocName() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Office name for which the contact belongs.
    /// Example: /// Example: A34
    /// Constraints: Minimum length = 0, Maximum length = 36
    def office() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)
    /// The username of the contact.
    /// Example: /// Example: fgsmith
    /// Constraints: Minimum length = 0, Maximum length = 64
    def username() -> string:
        return flatbuffers.field_string(buf_, pos_, 12)
    /// The rank of contact.
    /// Example: /// Example: Capt
    /// Constraints: Minimum length = 0, Maximum length = 32
    def rank() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)
    /// Organization name for which the contact belongs.
    /// Example: /// Example: HQAF
    /// Constraints: Minimum length = 0, Maximum length = 36
    def pocOrg() -> string:
        return flatbuffers.field_string(buf_, pos_, 16)
    /// Phone number of the contact.
    /// Example: /// Example: 8675309
    /// Constraints: Minimum length = 0, Maximum length = 45
    def phone() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)
    /// Text of the remark.
    /// Example: /// Example: POC remark.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def remark() -> string:
        return flatbuffers.field_string(buf_, pos_, 20)

def GetRootAsPointOfContact_Abridged(buf:string): return PointOfContact_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct PointOfContact_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(9)
        return this
    def add_pocSequenceId(pocSequenceId:int):
        b_.PrependInt32Slot(0, pocSequenceId, 0)
        return this
    def add_pocTypeName(pocTypeName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, pocTypeName)
        return this
    def add_pocName(pocName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, pocName)
        return this
    def add_office(office:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, office)
        return this
    def add_username(username:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(4, username)
        return this
    def add_rank(rank:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, rank)
        return this
    def add_pocOrg(pocOrg:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(6, pocOrg)
        return this
    def add_phone(phone:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, phone)
        return this
    def add_remark(remark:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(8, remark)
        return this
    def end():
        return b_.EndObject()

