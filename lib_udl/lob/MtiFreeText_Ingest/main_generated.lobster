// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class MtiFreeText_Ingest

/// /// Provides a means of sending Basic Character Set alphanumeric text messages.
class MtiFreeText_Ingest : flatbuffers.handle
    /// The originator of the Free Text message.
    /// Example: /// Example: ORIGINATOR
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def f1() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The recipient for which the Free Text message is intended.
    /// Example: /// Example: RECIPIENT
    /// Constraints: Minimum length = 0, Maximum length = 128
    def f2() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Free text data message.
    /// Example: /// Example: TEXT
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def f3() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)

def GetRootAsMtiFreeText_Ingest(buf:string): return MtiFreeText_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct MtiFreeText_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(3)
        return this
    def add_f1(f1:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, f1)
        return this
    def add_f2(f2:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, f2)
        return this
    def add_f3(f3:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, f3)
        return this
    def end():
        return b_.EndObject()

