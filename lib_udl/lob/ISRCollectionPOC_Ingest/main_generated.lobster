// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class ISRCollectionPOC_Ingest

/// /// Information about the Point of Contact (POC) for this ISR Collection.
class ISRCollectionPOC_Ingest : flatbuffers.handle
    /// Unique identifier of the collection requirement POC.
    /// Example: /// Example: ISRCOLLECTIONPOC-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    def id() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Name of the POC.
    /// Example: /// Example: NAME
    /// Constraints: Minimum length = 0, Maximum length = 128
    def name() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Callsign of the POC.
    /// Example: /// Example: CALLSIGN
    /// Constraints: Minimum length = 0, Maximum length = 32
    def callsign() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Unit the POC belongs to.
    /// Example: /// Example: UNIT
    /// Constraints: Minimum length = 0, Maximum length = 32
    def unit() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)
    /// Email address of the POC.
    /// Example: /// Example: EMAIL
    /// Constraints: Minimum length = 0, Maximum length = 128
    def email() -> string:
        return flatbuffers.field_string(buf_, pos_, 12)
    /// Phone number of the POC.
    /// Example: /// Example: PHONE
    /// Constraints: Minimum length = 0, Maximum length = 45
    def phone() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)
    /// Radio Frequency the POC is on.
    /// Example: /// Example: 123.23
    /// Constraints: No constraints specified.
    def radioFrequency() -> float:
        return flatbuffers.field_float64(buf_, pos_, 16, 0.0)
    /// Chat system the POC is accessing.
    /// Example: /// Example: CHAT
    /// Constraints: Minimum length = 0, Maximum length = 32
    def chatSystem() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)
    /// Chat name of the POC.
    /// Example: /// Example: CHAT_NAME
    /// Constraints: Minimum length = 0, Maximum length = 32
    def chatName() -> string:
        return flatbuffers.field_string(buf_, pos_, 20)
    /// Amplifying notes about the POC.
    /// Example: /// Example: NOTES
    /// Constraints: Minimum length = 0, Maximum length = 256
    def notes() -> string:
        return flatbuffers.field_string(buf_, pos_, 22)

def GetRootAsISRCollectionPOC_Ingest(buf:string): return ISRCollectionPOC_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct ISRCollectionPOC_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(10)
        return this
    def add_id(id:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, id)
        return this
    def add_name(name:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, name)
        return this
    def add_callsign(callsign:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, callsign)
        return this
    def add_unit(unit:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, unit)
        return this
    def add_email(email:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(4, email)
        return this
    def add_phone(phone:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, phone)
        return this
    def add_radioFrequency(radioFrequency:float):
        b_.PrependFloat64Slot(6, radioFrequency, 0.0)
        return this
    def add_chatSystem(chatSystem:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, chatSystem)
        return this
    def add_chatName(chatName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(8, chatName)
        return this
    def add_notes(notes:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(9, notes)
        return this
    def end():
        return b_.EndObject()

