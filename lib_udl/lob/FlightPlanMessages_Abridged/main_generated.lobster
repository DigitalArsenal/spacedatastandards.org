// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class FlightPlanMessages_Abridged

/// /// Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.
class FlightPlanMessages_Abridged : flatbuffers.handle
    /// The severity of the message.
    /// Example: /// Example: SEVERE
    /// Constraints: Minimum length = 0, Maximum length = 16
    def severity() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The waypoint number for which the message was generated, or enter "PLAN" for a message impacting the entire route.
    /// Example: /// Example: 20
    /// Constraints: Minimum length = 0, Maximum length = 8
    def wpNum() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// The flight path that generated the message (PRIMARY, ALTERNATE, etc.).
    /// Example: /// Example: PRIMARY
    /// Constraints: Minimum length = 0, Maximum length = 16
    def routePath() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// The text of the message.
    /// Example: /// Example: Message text
    /// Constraints: Minimum length = 0, Maximum length = 256
    def msgText() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)

def GetRootAsFlightPlanMessages_Abridged(buf:string): return FlightPlanMessages_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct FlightPlanMessages_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_severity(severity:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, severity)
        return this
    def add_wpNum(wpNum:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, wpNum)
        return this
    def add_routePath(routePath:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, routePath)
        return this
    def add_msgText(msgText:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, msgText)
        return this
    def end():
        return b_.EndObject()

