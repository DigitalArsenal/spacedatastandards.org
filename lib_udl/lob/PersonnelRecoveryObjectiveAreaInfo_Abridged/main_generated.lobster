// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class PersonnelRecoveryObjectiveAreaInfo_Abridged

/// /// Objective Area Information.
class PersonnelRecoveryObjectiveAreaInfo_Abridged : flatbuffers.handle
    /// Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the pz location.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
    /// Example: /// Example: [103.23, 30.445]
    /// Constraints: No constraints specified.
    def pzLocation(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 4) + i * 4)
    def pzLocation_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 4)
    /// Description of the pickup zone location.
    /// Example: /// Example: Near the lake.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def pzDesc() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// The call sign of the on-scene commander.
    /// Example: /// Example: STARFOX
    /// Constraints: Minimum length = 0, Maximum length = 128
    def oscCallSign() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// The radio frequency of the on-scene commander.
    /// Example: /// Example: 12.55
    /// Constraints: No constraints specified.
    def oscFreq() -> float:
        return flatbuffers.field_float64(buf_, pos_, 10, 0.0)
    /// Information detailing knowledge of enemies in the area.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def enemyData(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 12) + i * 4)
    def enemyData_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 12)

def GetRootAsPersonnelRecoveryObjectiveAreaInfo_Abridged(buf:string): return PersonnelRecoveryObjectiveAreaInfo_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct PersonnelRecoveryObjectiveAreaInfo_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(5)
        return this
    def add_pzLocation(pzLocation:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, pzLocation)
        return this
    def add_pzDesc(pzDesc:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, pzDesc)
        return this
    def add_oscCallSign(oscCallSign:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, oscCallSign)
        return this
    def add_oscFreq(oscFreq:float):
        b_.PrependFloat64Slot(3, oscFreq, 0.0)
        return this
    def add_enemyData(enemyData:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(4, enemyData)
        return this
    def end():
        return b_.EndObject()

def PersonnelRecoveryObjectiveAreaInfo_AbridgedStartPzLocationVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def PersonnelRecoveryObjectiveAreaInfo_AbridgedCreatePzLocationVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

def PersonnelRecoveryObjectiveAreaInfo_AbridgedStartEnemyDataVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def PersonnelRecoveryObjectiveAreaInfo_AbridgedCreateEnemyDataVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

