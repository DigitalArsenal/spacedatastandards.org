// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class EvacEtiology_Full

/// /// Medical condition causation information.
class EvacEtiology_Full : flatbuffers.handle
    /// The cause or manner of causation of the medical condition.  Intended as, but not constrained to, K07.1 EtiologyType Enumeration (e.g. ASSAULT, BUILDING COLLAPSE, BURN CHEMICAL, BURN ELECTRICAL, BURN, BURN HOT LIQUID, BURN RADIATION, BURN THERMAL, etc.).
    /// Example: /// Example: BURN
    /// Constraints: Minimum length = 0, Maximum length = 32
    def type() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The body part or location affected from the etiology.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).
    /// Example: /// Example: ARM LEFT FRONT
    /// Constraints: Minimum length = 0, Maximum length = 32
    def bodyPart() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Datetime of the discovery of the etiology state in ISO 8601 UTC format.
    /// Example: /// Example: 2021-10-16T16:00:00.123Z
    /// Constraints: No constraints specified.
    def time() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Additional comments on the patient's etiology information.
    /// Example: /// Example: Comments on the etiology info.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def comments() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)

def GetRootAsEvacEtiology_Full(buf:string): return EvacEtiology_Full { buf, flatbuffers.indirect(buf, 0) }

struct EvacEtiology_FullBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_type(type:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, type)
        return this
    def add_bodyPart(bodyPart:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, bodyPart)
        return this
    def add_time(time:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, time)
        return this
    def add_comments(comments:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, comments)
        return this
    def end():
        return b_.EndObject()

