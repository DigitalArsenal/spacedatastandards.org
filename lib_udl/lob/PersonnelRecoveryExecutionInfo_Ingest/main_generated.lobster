// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class PersonnelRecoveryExecutionInfo_Ingest

/// /// Information pertaining to the details of executing the recovery.
class PersonnelRecoveryExecutionInfo_Ingest : flatbuffers.handle
    /// Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the initial location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
    /// Example: /// Example: [103.23, 30.445]
    /// Constraints: No constraints specified.
    def initialPoint(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 4) + i * 4)
    def initialPoint_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 4)
    /// The heading, in degrees clockwise from North, of entering the recovery zone.
    /// Example: /// Example: 35.66
    /// Constraints: No constraints specified.
    def ingress() -> float:
        return flatbuffers.field_float64(buf_, pos_, 6, 0.0)
    /// Description of the objective strategy plan.
    /// Example: /// Example: Description of strategy plan.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def objStrategy() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the egress location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
    /// Example: /// Example: [107.23, 30.455]
    /// Constraints: No constraints specified.
    def egressPoint(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 10) + i * 4)
    def egressPoint_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 10)
    /// The heading, in degrees, of leaving the recovery zone.
    /// Example: /// Example: 66.53
    /// Constraints: No constraints specified.
    def egress() -> float:
        return flatbuffers.field_float64(buf_, pos_, 12, 0.0)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def recoveryVehicle() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def escortVehicle() -> string:
        return flatbuffers.field_string(buf_, pos_, 16)

def GetRootAsPersonnelRecoveryExecutionInfo_Ingest(buf:string): return PersonnelRecoveryExecutionInfo_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct PersonnelRecoveryExecutionInfo_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(7)
        return this
    def add_initialPoint(initialPoint:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, initialPoint)
        return this
    def add_ingress(ingress:float):
        b_.PrependFloat64Slot(1, ingress, 0.0)
        return this
    def add_objStrategy(objStrategy:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, objStrategy)
        return this
    def add_egressPoint(egressPoint:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, egressPoint)
        return this
    def add_egress(egress:float):
        b_.PrependFloat64Slot(4, egress, 0.0)
        return this
    def add_recoveryVehicle(recoveryVehicle:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, recoveryVehicle)
        return this
    def add_escortVehicle(escortVehicle:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(6, escortVehicle)
        return this
    def end():
        return b_.EndObject()

def PersonnelRecoveryExecutionInfo_IngestStartInitialPointVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def PersonnelRecoveryExecutionInfo_IngestCreateInitialPointVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

def PersonnelRecoveryExecutionInfo_IngestStartEgressPointVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def PersonnelRecoveryExecutionInfo_IngestCreateEgressPointVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

