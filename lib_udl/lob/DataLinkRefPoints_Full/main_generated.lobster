// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class DataLinkRefPoints_Full

/// /// Collection that identifies points of reference used in the establishment of the data links. There can be 1 to many DataLinkRefPoints collections within the datalink service.
class DataLinkRefPoints_Full : flatbuffers.handle
    /// Type of data link reference point or grid origin.
    /// Example: /// Example: DLRP
    /// Constraints: Minimum length = 0, Maximum length = 7
    def refPointType() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Identifier to designate a reference point.
    /// Example: /// Example: L5
    /// Constraints: Minimum length = 0, Maximum length = 20
    def refDes() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// The location name of the point of reference for this data link message.
    /// Example: /// Example: FORT BRAGG
    /// Constraints: Minimum length = 0, Maximum length = 20
    def refLocName() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// WGS84 latitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: /// Example: 45.23
    /// Constraints: No constraints specified.
    def refLat() -> float:
        return flatbuffers.field_float64(buf_, pos_, 10, 0.0)
    /// WGS84 longitude of the reference point for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: /// Example: 179.1
    /// Constraints: No constraints specified.
    def refLon() -> float:
        return flatbuffers.field_float64(buf_, pos_, 12, 0.0)
    /// Indicates when a particular event or nickname becomes effective or the old event or nickname is deleted, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2024-01-08T13:55:43.123Z
    /// Constraints: No constraints specified.
    def effEventTime() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)

def GetRootAsDataLinkRefPoints_Full(buf:string): return DataLinkRefPoints_Full { buf, flatbuffers.indirect(buf, 0) }

struct DataLinkRefPoints_FullBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(6)
        return this
    def add_refPointType(refPointType:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, refPointType)
        return this
    def add_refDes(refDes:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, refDes)
        return this
    def add_refLocName(refLocName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, refLocName)
        return this
    def add_refLat(refLat:float):
        b_.PrependFloat64Slot(3, refLat, 0.0)
        return this
    def add_refLon(refLon:float):
        b_.PrependFloat64Slot(4, refLon, 0.0)
        return this
    def add_effEventTime(effEventTime:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, effEventTime)
        return this
    def end():
        return b_.EndObject()

