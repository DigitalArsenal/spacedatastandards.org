// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class ISRCollectionCriticalTimes_Ingest

/// /// High priority time windows.
class ISRCollectionCriticalTimes_Ingest : flatbuffers.handle
    /// Critical start time to collect an image for this requirement.
    /// Example: /// Example: 2021-01-19T01:01:15.001Z
    /// Constraints: No constraints specified.
    def earliestImagingTime() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Critical stop time to collect an image for this requirement.
    /// Example: /// Example: 2021-01-19T01:11:15.001Z
    /// Constraints: No constraints specified.
    def latestImagingTime() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)

def GetRootAsISRCollectionCriticalTimes_Ingest(buf:string): return ISRCollectionCriticalTimes_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct ISRCollectionCriticalTimes_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(2)
        return this
    def add_earliestImagingTime(earliestImagingTime:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, earliestImagingTime)
        return this
    def add_latestImagingTime(latestImagingTime:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, latestImagingTime)
        return this
    def end():
        return b_.EndObject()

