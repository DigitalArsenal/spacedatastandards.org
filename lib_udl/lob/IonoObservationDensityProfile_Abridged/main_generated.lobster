// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class IonoObservationDensityProfile_Abridged

/// /// Profile of electron densities in the ionosphere associated with an IonoObservation.
class IonoObservationDensityProfile_Abridged : flatbuffers.handle
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def parabolic() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def quasiParabolic() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Description of the valley model and parameters.
    /// Example: /// Example: 2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting.
    /// Constraints: No constraints specified.
    def valleyModelDescription() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Array of valley model coefficients.
    /// Example: /// Example: [39.597, 0.1777]
    /// Constraints: No constraints specified.
    def valleyModelCoeffs(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 10) + i * 4)
    def valleyModelCoeffs_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 10)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def shiftedChebyshev() -> string:
        return flatbuffers.field_string(buf_, pos_, 12)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def topsideExtensionChapmanConst() -> string:
        return flatbuffers.field_string(buf_, pos_, 14)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def topsideExtensionVaryChap() -> string:
        return flatbuffers.field_string(buf_, pos_, 16)
    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def iri() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)

def GetRootAsIonoObservationDensityProfile_Abridged(buf:string): return IonoObservationDensityProfile_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct IonoObservationDensityProfile_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(8)
        return this
    def add_parabolic(parabolic:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, parabolic)
        return this
    def add_quasiParabolic(quasiParabolic:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, quasiParabolic)
        return this
    def add_valleyModelDescription(valleyModelDescription:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, valleyModelDescription)
        return this
    def add_valleyModelCoeffs(valleyModelCoeffs:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, valleyModelCoeffs)
        return this
    def add_shiftedChebyshev(shiftedChebyshev:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(4, shiftedChebyshev)
        return this
    def add_topsideExtensionChapmanConst(topsideExtensionChapmanConst:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(5, topsideExtensionChapmanConst)
        return this
    def add_topsideExtensionVaryChap(topsideExtensionVaryChap:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(6, topsideExtensionVaryChap)
        return this
    def add_iri(iri:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, iri)
        return this
    def end():
        return b_.EndObject()

def IonoObservationDensityProfile_AbridgedStartValleyModelCoeffsVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def IonoObservationDensityProfile_AbridgedCreateValleyModelCoeffsVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

