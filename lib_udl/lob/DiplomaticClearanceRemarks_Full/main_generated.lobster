// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class DiplomaticClearanceRemarks_Full

/// /// Collection of diplomatic clearance remarks.
class DiplomaticClearanceRemarks_Full : flatbuffers.handle
    /// Global Decision Support System (GDSS) remark identifier.
    /// Example: /// Example: GDSSREMARK-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    def gdssRemarkId() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Text of the remark.
    /// Example: /// Example: Example mission remarks.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    def text() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// Date the remark was published, in ISO 8601 UTC format, with millisecond precision.
    /// Example: /// Example: 2024-01-01T01:01:01.123Z
    /// Constraints: No constraints specified.
    def date() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// User who published the remark.
    /// Example: /// Example: John Doe
    /// Constraints: Minimum length = 0, Maximum length = 20
    def user() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)

def GetRootAsDiplomaticClearanceRemarks_Full(buf:string): return DiplomaticClearanceRemarks_Full { buf, flatbuffers.indirect(buf, 0) }

struct DiplomaticClearanceRemarks_FullBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(4)
        return this
    def add_gdssRemarkId(gdssRemarkId:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, gdssRemarkId)
        return this
    def add_text(text:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, text)
        return this
    def add_date(date:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, date)
        return this
    def add_user(user:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, user)
        return this
    def end():
        return b_.EndObject()

