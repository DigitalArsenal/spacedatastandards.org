// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class IonoObservationDensityProfileIRI_Abridged

/// /// Full set of the IRI formalism coefficients.
class IonoObservationDensityProfileIRI_Abridged : flatbuffers.handle
    /// Description of IRI implementation.
    /// Example: /// Example: Full altitude range of 1D vertical plasma density profile for D, E, and F regions of the ionosphere provided by IRI, in which model parameters are replaced with observed ionogram-derived data where available.
    /// Constraints: No constraints specified.
    def description() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Peak density of F2 layer, in grams per cubic centimeter.
    /// Example: /// Example: 313283.1
    /// Constraints: No constraints specified.
    def nmF2() -> float:
        return flatbuffers.field_float64(buf_, pos_, 6, 0.0)
    /// Peak height of F2 layer, in kilometers.
    /// Example: /// Example: 265.42
    /// Constraints: No constraints specified.
    def hmF2() -> float:
        return flatbuffers.field_float64(buf_, pos_, 8, 0.0)
    /// B0 parameter of the F2 layer shape.
    /// Example: /// Example: 245.1
    /// Constraints: No constraints specified.
    def b0() -> float:
        return flatbuffers.field_float64(buf_, pos_, 10, 0.0)
    /// B1 parameter of the F2 layer shape.
    /// Example: /// Example: 3.45
    /// Constraints: No constraints specified.
    def b1() -> float:
        return flatbuffers.field_float64(buf_, pos_, 12, 0.0)
    /// Peak density of the F1 layer, in grams per cubic centimeter.
    /// Example: /// Example: 210486
    /// Constraints: No constraints specified.
    def nmF1() -> float:
        return flatbuffers.field_float64(buf_, pos_, 14, 0.0)
    /// Peak height of the F1 layer, in kilometers.
    /// Example: /// Example: 210.3
    /// Constraints: No constraints specified.
    def hmF1() -> float:
        return flatbuffers.field_float64(buf_, pos_, 16, 0.0)
    /// D1 parameter of the F1 layer shape.
    /// Example: /// Example: 0
    /// Constraints: No constraints specified.
    def d1() -> float:
        return flatbuffers.field_float64(buf_, pos_, 18, 0.0)
    /// Height HZ of the interim layer, in kilometers.
    /// Example: /// Example: 142.7
    /// Constraints: No constraints specified.
    def hz() -> float:
        return flatbuffers.field_float64(buf_, pos_, 20, 0.0)
    /// The valley height, in kilometers.
    /// Example: /// Example: 116.2
    /// Constraints: No constraints specified.
    def hValTop() -> float:
        return flatbuffers.field_float64(buf_, pos_, 22, 0.0)
    /// The valley depth, in grams per cubic centimeter.
    /// Example: /// Example: 147025.1
    /// Constraints: No constraints specified.
    def nValB() -> float:
        return flatbuffers.field_float64(buf_, pos_, 24, 0.0)
    /// Peak density of the E layer, in per cubic centimeter.
    /// Example: /// Example: 154164.1
    /// Constraints: No constraints specified.
    def nmE() -> float:
        return flatbuffers.field_float64(buf_, pos_, 26, 0.0)
    /// Peak height of the F2 layer, in kilometers.
    /// Example: /// Example: 99.8
    /// Constraints: No constraints specified.
    def hmE() -> float:
        return flatbuffers.field_float64(buf_, pos_, 28, 0.0)
    /// Height of the intermediate region at the top of D region, in kilometers.
    /// Example: /// Example: 85.6
    /// Constraints: No constraints specified.
    def hdx() -> float:
        return flatbuffers.field_float64(buf_, pos_, 30, 0.0)
    /// Peak density of the D layer, in per cubic centimeter.
    /// Example: /// Example: 937543116.1
    /// Constraints: No constraints specified.
    def nmD() -> float:
        return flatbuffers.field_float64(buf_, pos_, 32, 0.0)
    /// Peak height of the D layer, in kilometers.
    /// Example: /// Example: 81.1
    /// Constraints: No constraints specified.
    def hmD() -> float:
        return flatbuffers.field_float64(buf_, pos_, 34, 0.0)
    /// Starting height of the D layer, in kilometers.
    /// Example: /// Example: 50.1
    /// Constraints: No constraints specified.
    def ha() -> float:
        return flatbuffers.field_float64(buf_, pos_, 36, 0.0)
    /// TBD.
    /// Example: /// Example: 0.0474732023322638
    /// Constraints: No constraints specified.
    def fp1() -> float:
        return flatbuffers.field_float64(buf_, pos_, 38, 0.0)
    /// TBD.
    /// Example: /// Example: -0.00112685246984002
    /// Constraints: No constraints specified.
    def fp2() -> float:
        return flatbuffers.field_float64(buf_, pos_, 40, 0.0)
    /// TBD.
    /// Example: /// Example: 0.00827559450035957
    /// Constraints: No constraints specified.
    def fp30() -> float:
        return flatbuffers.field_float64(buf_, pos_, 42, 0.0)
    /// TBD.
    /// Example: /// Example: 0.000201178475411428
    /// Constraints: No constraints specified.
    def fp3U() -> float:
        return flatbuffers.field_float64(buf_, pos_, 44, 0.0)
    /// Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
    /// Example: /// Example: 35.1
    /// Constraints: No constraints specified.
    def chi() -> float:
        return flatbuffers.field_float64(buf_, pos_, 46, 0.0)

def GetRootAsIonoObservationDensityProfileIRI_Abridged(buf:string): return IonoObservationDensityProfileIRI_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct IonoObservationDensityProfileIRI_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(22)
        return this
    def add_description(description:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, description)
        return this
    def add_nmF2(nmF2:float):
        b_.PrependFloat64Slot(1, nmF2, 0.0)
        return this
    def add_hmF2(hmF2:float):
        b_.PrependFloat64Slot(2, hmF2, 0.0)
        return this
    def add_b0(b0:float):
        b_.PrependFloat64Slot(3, b0, 0.0)
        return this
    def add_b1(b1:float):
        b_.PrependFloat64Slot(4, b1, 0.0)
        return this
    def add_nmF1(nmF1:float):
        b_.PrependFloat64Slot(5, nmF1, 0.0)
        return this
    def add_hmF1(hmF1:float):
        b_.PrependFloat64Slot(6, hmF1, 0.0)
        return this
    def add_d1(d1:float):
        b_.PrependFloat64Slot(7, d1, 0.0)
        return this
    def add_hz(hz:float):
        b_.PrependFloat64Slot(8, hz, 0.0)
        return this
    def add_hValTop(hValTop:float):
        b_.PrependFloat64Slot(9, hValTop, 0.0)
        return this
    def add_nValB(nValB:float):
        b_.PrependFloat64Slot(10, nValB, 0.0)
        return this
    def add_nmE(nmE:float):
        b_.PrependFloat64Slot(11, nmE, 0.0)
        return this
    def add_hmE(hmE:float):
        b_.PrependFloat64Slot(12, hmE, 0.0)
        return this
    def add_hdx(hdx:float):
        b_.PrependFloat64Slot(13, hdx, 0.0)
        return this
    def add_nmD(nmD:float):
        b_.PrependFloat64Slot(14, nmD, 0.0)
        return this
    def add_hmD(hmD:float):
        b_.PrependFloat64Slot(15, hmD, 0.0)
        return this
    def add_ha(ha:float):
        b_.PrependFloat64Slot(16, ha, 0.0)
        return this
    def add_fp1(fp1:float):
        b_.PrependFloat64Slot(17, fp1, 0.0)
        return this
    def add_fp2(fp2:float):
        b_.PrependFloat64Slot(18, fp2, 0.0)
        return this
    def add_fp30(fp30:float):
        b_.PrependFloat64Slot(19, fp30, 0.0)
        return this
    def add_fp3U(fp3U:float):
        b_.PrependFloat64Slot(20, fp3U, 0.0)
        return this
    def add_chi(chi:float):
        b_.PrependFloat64Slot(21, chi, 0.0)
        return this
    def end():
        return b_.EndObject()

