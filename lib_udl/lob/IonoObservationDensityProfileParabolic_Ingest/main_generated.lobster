// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class IonoObservationDensityProfileParabolic_Ingest

/// /// Coefficients to describe the E, F1, and F2 layers as parabolic-shape segments.
class IonoObservationDensityProfileParabolic_Ingest : flatbuffers.handle
    /// General description of the QP computation algorithm.
    /// Example: /// Example: Best-fit algorithm in NHPC software.
    /// Constraints: No constraints specified.
    def description() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Describes the E, F1, and F2 layers as parabolic-shape segments.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    def parabolicItems(i:int) -> string:
        return flatbuffers.string(buf_, buf_.flatbuffers.field_vector(pos_, 6) + i * 4)
    def parabolicItems_length() -> int:
        return flatbuffers.field_vector_len(buf_, pos_, 6)

def GetRootAsIonoObservationDensityProfileParabolic_Ingest(buf:string): return IonoObservationDensityProfileParabolic_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct IonoObservationDensityProfileParabolic_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(2)
        return this
    def add_description(description:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, description)
        return this
    def add_parabolicItems(parabolicItems:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, parabolicItems)
        return this
    def end():
        return b_.EndObject()

def IonoObservationDensityProfileParabolic_IngestStartParabolicItemsVector(b_:flatbuffers.builder, n_:int):
    b_.StartVector(4, n_, 4)
def IonoObservationDensityProfileParabolic_IngestCreateParabolicItemsVector(b_:flatbuffers.builder, v_:[flatbuffers.offset]):
    b_.StartVector(4, v_.length, 4)
    reverse(v_) e_: b_.PrependUOffsetTRelative(e_)
    return b_.EndVector(v_.length)

