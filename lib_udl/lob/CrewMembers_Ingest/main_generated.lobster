// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class CrewMembers_Ingest

/// /// Schema for Crew Member data.
class CrewMembers_Ingest : flatbuffers.handle
    /// The last name of the crew member.
    /// Example: /// Example: Smith
    /// Constraints: Minimum length = 0, Maximum length = 64
    def lastName() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// The first name of the crew member.
    /// Example: /// Example: Freddie
    /// Constraints: Minimum length = 0, Maximum length = 64
    def firstName() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)
    /// The middle initial of the crew member.
    /// Example: /// Example: G
    /// Constraints: Minimum length = 0, Maximum length = 1
    def middleInitial() -> string:
        return flatbuffers.field_string(buf_, pos_, 8)
    /// Unique identifier of the crew member assigned by the originating source.
    /// Example: /// Example: 12345678abc
    /// Constraints: Minimum length = 0, Maximum length = 32
    def memberId() -> string:
        return flatbuffers.field_string(buf_, pos_, 10)
    /// Flag indicating this crew member is a civilian or non-military person.
    /// Example: /// Example: False
    /// Constraints: No constraints specified.
    def civilian() -> bool:
        return bool(flatbuffers.field_int8(buf_, pos_, 12, 0))
    /// Flag indicating this person is the aircraft commander.
    /// Example: /// Example: False
    /// Constraints: No constraints specified.
    def commander() -> bool:
        return bool(flatbuffers.field_int8(buf_, pos_, 14, 0))
    /// Last four digits of the crew member's social security number.
    /// Example: /// Example: 1234
    /// Constraints: Minimum length = 0, Maximum length = 4
    def last4SSN() -> string:
        return flatbuffers.field_string(buf_, pos_, 16)
    /// The crew member's 10-digit DoD ID number.
    /// Example: /// Example: 0123456789
    /// Constraints: Minimum length = 0, Maximum length = 10
    def dodID() -> string:
        return flatbuffers.field_string(buf_, pos_, 18)
    /// The duty position of the crew member.
    /// Example: /// Example: IP
    /// Constraints: Minimum length = 0, Maximum length = 32
    def dutyPosition() -> string:
        return flatbuffers.field_string(buf_, pos_, 20)
    /// The crew position of the crew member.
    /// Example: /// Example: EP A
    /// Constraints: Minimum length = 0, Maximum length = 32
    def crewPosition() -> string:
        return flatbuffers.field_string(buf_, pos_, 22)
    /// Amplifying details about the crew member type (e.g. RAVEN, FCC, COMCAM, AIRCREW, MEP, OTHER, etc.).
    /// Example: /// Example: AIRCREW
    /// Constraints: Minimum length = 0, Maximum length = 32
    def memberType() -> string:
        return flatbuffers.field_string(buf_, pos_, 24)
    /// The military branch assignment of the crew member.
    /// Example: /// Example: Air Force
    /// Constraints: Minimum length = 0, Maximum length = 32
    def branch() -> string:
        return flatbuffers.field_string(buf_, pos_, 26)
    /// The rank of the crew member.
    /// Example: /// Example: Capt
    /// Constraints: Minimum length = 0, Maximum length = 32
    def rank() -> string:
        return flatbuffers.field_string(buf_, pos_, 28)
    /// The wing the crew member serves.
    /// Example: /// Example: 60AMW
    /// Constraints: Minimum length = 0, Maximum length = 32
    def wing() -> string:
        return flatbuffers.field_string(buf_, pos_, 30)
    /// The squadron the crew member serves.
    /// Example: /// Example: 21AS
    /// Constraints: Minimum length = 0, Maximum length = 32
    def squadron() -> string:
        return flatbuffers.field_string(buf_, pos_, 32)
    /// Remarks concerning the crew member.
    /// Example: /// Example: Crew member remark
    /// Constraints: Minimum length = 0, Maximum length = 512
    def memberRemarks() -> string:
        return flatbuffers.field_string(buf_, pos_, 34)
    /// The Mattermost username of this crew member.
    /// Example: /// Example: fgsmith
    /// Constraints: Minimum length = 0, Maximum length = 64
    def username() -> string:
        return flatbuffers.field_string(buf_, pos_, 36)

def GetRootAsCrewMembers_Ingest(buf:string): return CrewMembers_Ingest { buf, flatbuffers.indirect(buf, 0) }

struct CrewMembers_IngestBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(17)
        return this
    def add_lastName(lastName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, lastName)
        return this
    def add_firstName(firstName:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, firstName)
        return this
    def add_middleInitial(middleInitial:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(2, middleInitial)
        return this
    def add_memberId(memberId:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(3, memberId)
        return this
    def add_civilian(civilian:bool):
        b_.PrependBoolSlot(4, civilian, 0)
        return this
    def add_commander(commander:bool):
        b_.PrependBoolSlot(5, commander, 0)
        return this
    def add_last4SSN(last4SSN:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(6, last4SSN)
        return this
    def add_dodID(dodID:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(7, dodID)
        return this
    def add_dutyPosition(dutyPosition:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(8, dutyPosition)
        return this
    def add_crewPosition(crewPosition:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(9, crewPosition)
        return this
    def add_memberType(memberType:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(10, memberType)
        return this
    def add_branch(branch:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(11, branch)
        return this
    def add_rank(rank:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(12, rank)
        return this
    def add_wing(wing:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(13, wing)
        return this
    def add_squadron(squadron:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(14, squadron)
        return this
    def add_memberRemarks(memberRemarks:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(15, memberRemarks)
        return this
    def add_username(username:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(16, username)
        return this
    def end():
        return b_.EndObject()

