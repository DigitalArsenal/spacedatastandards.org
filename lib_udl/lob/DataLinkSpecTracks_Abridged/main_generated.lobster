// automatically generated by the FlatBuffers compiler, do not modify
import flatbuffers

class DataLinkSpecTracks_Abridged

/// /// Collection of special track numbers used on the data links. There can be 0 to many DataLinkSpecTracks collections within the datalink service.
class DataLinkSpecTracks_Abridged : flatbuffers.handle
    /// The special track number used on the data link entered as an octal reference number. Used to identify a particular type of platform (e.g. MPA, KRESTA) or platform name (e.g. TROMP, MOUNT WHITNEY) which is not included in assigned track blocks.
    /// Example: /// Example: 12345
    /// Constraints: Minimum length = 0, Maximum length = 16
    def specTrackNum() -> string:
        return flatbuffers.field_string(buf_, pos_, 4)
    /// Description of the special track number.
    /// Example: /// Example: SAM SITE CHARLIE
    /// Constraints: Minimum length = 0, Maximum length = 40
    def specTrackNumDesc() -> string:
        return flatbuffers.field_string(buf_, pos_, 6)

def GetRootAsDataLinkSpecTracks_Abridged(buf:string): return DataLinkSpecTracks_Abridged { buf, flatbuffers.indirect(buf, 0) }

struct DataLinkSpecTracks_AbridgedBuilder:
    b_:flatbuffers.builder
    def start():
        b_.StartObject(2)
        return this
    def add_specTrackNum(specTrackNum:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(0, specTrackNum)
        return this
    def add_specTrackNumDesc(specTrackNumDesc:flatbuffers.offset):
        b_.PrependUOffsetTRelativeSlot(1, specTrackNumDesc)
        return this
    def end():
        return b_.EndObject()

