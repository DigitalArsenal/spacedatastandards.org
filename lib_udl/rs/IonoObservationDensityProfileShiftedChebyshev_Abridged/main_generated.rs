// automatically generated by the FlatBuffers compiler, do not modify


// @generated

use core::mem;
use core::cmp::Ordering;

extern crate flatbuffers;
use self::flatbuffers::{EndianScalar, Follow};

pub enum IonoObservationDensityProfileShiftedChebyshev_AbridgedOffset {}
#[derive(Copy, Clone, PartialEq)]

/// /// Coefficients to describe either the E, F1, and bottomside F2 profile shapes or the height uncertainty boundaries.
pub struct IonoObservationDensityProfileShiftedChebyshev_Abridged<'a> {
  pub _tab: flatbuffers::Table<'a>,
}

impl<'a> flatbuffers::Follow<'a> for IonoObservationDensityProfileShiftedChebyshev_Abridged<'a> {
  type Inner = IonoObservationDensityProfileShiftedChebyshev_Abridged<'a>;
  #[inline]
  unsafe fn follow(buf: &'a [u8], loc: usize) -> Self::Inner {
    Self { _tab: flatbuffers::Table::new(buf, loc) }
  }
}

impl<'a> IonoObservationDensityProfileShiftedChebyshev_Abridged<'a> {
  pub const VT_DESCRIPTION: flatbuffers::VOffsetT = 4;
  pub const VT_SHIFTEDCHEBYSHEVS: flatbuffers::VOffsetT = 6;

  #[inline]
  pub unsafe fn init_from_table(table: flatbuffers::Table<'a>) -> Self {
    IonoObservationDensityProfileShiftedChebyshev_Abridged { _tab: table }
  }
  #[allow(unused_mut)]
  pub fn create<'bldr: 'args, 'args: 'mut_bldr, 'mut_bldr, A: flatbuffers::Allocator + 'bldr>(
    _fbb: &'mut_bldr mut flatbuffers::FlatBufferBuilder<'bldr, A>,
    args: &'args IonoObservationDensityProfileShiftedChebyshev_AbridgedArgs<'args>
  ) -> flatbuffers::WIPOffset<IonoObservationDensityProfileShiftedChebyshev_Abridged<'bldr>> {
    let mut builder = IonoObservationDensityProfileShiftedChebyshev_AbridgedBuilder::new(_fbb);
    if let Some(x) = args.shiftedChebyshevs { builder.add_shiftedChebyshevs(x); }
    if let Some(x) = args.description { builder.add_description(x); }
    builder.finish()
  }

  pub fn unpack(&self) -> IonoObservationDensityProfileShiftedChebyshev_AbridgedT {
    let description = self.description().map(|x| {
      x.to_string()
    });
    let shiftedChebyshevs = self.shiftedChebyshevs().map(|x| {
      x.iter().map(|s| s.to_string()).collect()
    });
    IonoObservationDensityProfileShiftedChebyshev_AbridgedT {
      description,
      shiftedChebyshevs,
    }
  }

  /// Description of the computation technique.
  /// Example: /// Example: Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion.
  /// Constraints: No constraints specified.
  #[inline]
  pub fn description(&self) -> Option<&'a str> {
    // Safety:
    // Created from valid Table for this object
    // which contains a valid value in this slot
    unsafe { self._tab.get::<flatbuffers::ForwardsUOffset<&str>>(IonoObservationDensityProfileShiftedChebyshev_Abridged::VT_DESCRIPTION, None)}
  }
  /// Up to 3 groups of coefficients, using “shiftedChebyshev” sub-field, to describe E, F1, and bottomside F2 profile shapes, or up to 6 groups of coefficients to describe height uncertainty boundaries (upper and lower).
  /// Example: /// Example: No example provided.
  /// Constraints: No constraints specified.
  #[inline]
  pub fn shiftedChebyshevs(&self) -> Option<flatbuffers::Vector<'a, flatbuffers::ForwardsUOffset<&'a str>>> {
    // Safety:
    // Created from valid Table for this object
    // which contains a valid value in this slot
    unsafe { self._tab.get::<flatbuffers::ForwardsUOffset<flatbuffers::Vector<'a, flatbuffers::ForwardsUOffset<&'a str>>>>(IonoObservationDensityProfileShiftedChebyshev_Abridged::VT_SHIFTEDCHEBYSHEVS, None)}
  }
}

impl flatbuffers::Verifiable for IonoObservationDensityProfileShiftedChebyshev_Abridged<'_> {
  #[inline]
  fn run_verifier(
    v: &mut flatbuffers::Verifier, pos: usize
  ) -> Result<(), flatbuffers::InvalidFlatbuffer> {
    use self::flatbuffers::Verifiable;
    v.visit_table(pos)?
     .visit_field::<flatbuffers::ForwardsUOffset<&str>>("description", Self::VT_DESCRIPTION, false)?
     .visit_field::<flatbuffers::ForwardsUOffset<flatbuffers::Vector<'_, flatbuffers::ForwardsUOffset<&'_ str>>>>("shiftedChebyshevs", Self::VT_SHIFTEDCHEBYSHEVS, false)?
     .finish();
    Ok(())
  }
}
pub struct IonoObservationDensityProfileShiftedChebyshev_AbridgedArgs<'a> {
    pub description: Option<flatbuffers::WIPOffset<&'a str>>,
    pub shiftedChebyshevs: Option<flatbuffers::WIPOffset<flatbuffers::Vector<'a, flatbuffers::ForwardsUOffset<&'a str>>>>,
}
impl<'a> Default for IonoObservationDensityProfileShiftedChebyshev_AbridgedArgs<'a> {
  #[inline]
  fn default() -> Self {
    IonoObservationDensityProfileShiftedChebyshev_AbridgedArgs {
      description: None,
      shiftedChebyshevs: None,
    }
  }
}

pub struct IonoObservationDensityProfileShiftedChebyshev_AbridgedBuilder<'a: 'b, 'b, A: flatbuffers::Allocator + 'a> {
  fbb_: &'b mut flatbuffers::FlatBufferBuilder<'a, A>,
  start_: flatbuffers::WIPOffset<flatbuffers::TableUnfinishedWIPOffset>,
}
impl<'a: 'b, 'b, A: flatbuffers::Allocator + 'a> IonoObservationDensityProfileShiftedChebyshev_AbridgedBuilder<'a, 'b, A> {
  #[inline]
  pub fn add_description(&mut self, description: flatbuffers::WIPOffset<&'b  str>) {
    self.fbb_.push_slot_always::<flatbuffers::WIPOffset<_>>(IonoObservationDensityProfileShiftedChebyshev_Abridged::VT_DESCRIPTION, description);
  }
  #[inline]
  pub fn add_shiftedChebyshevs(&mut self, shiftedChebyshevs: flatbuffers::WIPOffset<flatbuffers::Vector<'b , flatbuffers::ForwardsUOffset<&'b  str>>>) {
    self.fbb_.push_slot_always::<flatbuffers::WIPOffset<_>>(IonoObservationDensityProfileShiftedChebyshev_Abridged::VT_SHIFTEDCHEBYSHEVS, shiftedChebyshevs);
  }
  #[inline]
  pub fn new(_fbb: &'b mut flatbuffers::FlatBufferBuilder<'a, A>) -> IonoObservationDensityProfileShiftedChebyshev_AbridgedBuilder<'a, 'b, A> {
    let start = _fbb.start_table();
    IonoObservationDensityProfileShiftedChebyshev_AbridgedBuilder {
      fbb_: _fbb,
      start_: start,
    }
  }
  #[inline]
  pub fn finish(self) -> flatbuffers::WIPOffset<IonoObservationDensityProfileShiftedChebyshev_Abridged<'a>> {
    let o = self.fbb_.end_table(self.start_);
    flatbuffers::WIPOffset::new(o.value())
  }
}

impl core::fmt::Debug for IonoObservationDensityProfileShiftedChebyshev_Abridged<'_> {
  fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
    let mut ds = f.debug_struct("IonoObservationDensityProfileShiftedChebyshev_Abridged");
      ds.field("description", &self.description());
      ds.field("shiftedChebyshevs", &self.shiftedChebyshevs());
      ds.finish()
  }
}
#[non_exhaustive]
#[derive(Debug, Clone, PartialEq)]
pub struct IonoObservationDensityProfileShiftedChebyshev_AbridgedT {
  pub description: Option<String>,
  pub shiftedChebyshevs: Option<Vec<String>>,
}
impl Default for IonoObservationDensityProfileShiftedChebyshev_AbridgedT {
  fn default() -> Self {
    Self {
      description: None,
      shiftedChebyshevs: None,
    }
  }
}
impl IonoObservationDensityProfileShiftedChebyshev_AbridgedT {
  pub fn pack<'b, A: flatbuffers::Allocator + 'b>(
    &self,
    _fbb: &mut flatbuffers::FlatBufferBuilder<'b, A>
  ) -> flatbuffers::WIPOffset<IonoObservationDensityProfileShiftedChebyshev_Abridged<'b>> {
    let description = self.description.as_ref().map(|x|{
      _fbb.create_string(x)
    });
    let shiftedChebyshevs = self.shiftedChebyshevs.as_ref().map(|x|{
      let w: Vec<_> = x.iter().map(|s| _fbb.create_string(s)).collect();_fbb.create_vector(&w)
    });
    IonoObservationDensityProfileShiftedChebyshev_Abridged::create(_fbb, &IonoObservationDensityProfileShiftedChebyshev_AbridgedArgs{
      description,
      shiftedChebyshevs,
    })
  }
}
#[inline]
/// Verifies that a buffer of bytes contains a `IonoObservationDensityProfileShiftedChebyshev_Abridged`
/// and returns it.
/// Note that verification is still experimental and may not
/// catch every error, or be maximally performant. For the
/// previous, unchecked, behavior use
/// `root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked`.
pub fn root_as_iono_observation_density_profile_shifted_chebyshev_abridged(buf: &[u8]) -> Result<IonoObservationDensityProfileShiftedChebyshev_Abridged, flatbuffers::InvalidFlatbuffer> {
  flatbuffers::root::<IonoObservationDensityProfileShiftedChebyshev_Abridged>(buf)
}
#[inline]
/// Verifies that a buffer of bytes contains a size prefixed
/// `IonoObservationDensityProfileShiftedChebyshev_Abridged` and returns it.
/// Note that verification is still experimental and may not
/// catch every error, or be maximally performant. For the
/// previous, unchecked, behavior use
/// `size_prefixed_root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked`.
pub fn size_prefixed_root_as_iono_observation_density_profile_shifted_chebyshev_abridged(buf: &[u8]) -> Result<IonoObservationDensityProfileShiftedChebyshev_Abridged, flatbuffers::InvalidFlatbuffer> {
  flatbuffers::size_prefixed_root::<IonoObservationDensityProfileShiftedChebyshev_Abridged>(buf)
}
#[inline]
/// Verifies, with the given options, that a buffer of bytes
/// contains a `IonoObservationDensityProfileShiftedChebyshev_Abridged` and returns it.
/// Note that verification is still experimental and may not
/// catch every error, or be maximally performant. For the
/// previous, unchecked, behavior use
/// `root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked`.
pub fn root_as_iono_observation_density_profile_shifted_chebyshev_abridged_with_opts<'b, 'o>(
  opts: &'o flatbuffers::VerifierOptions,
  buf: &'b [u8],
) -> Result<IonoObservationDensityProfileShiftedChebyshev_Abridged<'b>, flatbuffers::InvalidFlatbuffer> {
  flatbuffers::root_with_opts::<IonoObservationDensityProfileShiftedChebyshev_Abridged<'b>>(opts, buf)
}
#[inline]
/// Verifies, with the given verifier options, that a buffer of
/// bytes contains a size prefixed `IonoObservationDensityProfileShiftedChebyshev_Abridged` and returns
/// it. Note that verification is still experimental and may not
/// catch every error, or be maximally performant. For the
/// previous, unchecked, behavior use
/// `root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked`.
pub fn size_prefixed_root_as_iono_observation_density_profile_shifted_chebyshev_abridged_with_opts<'b, 'o>(
  opts: &'o flatbuffers::VerifierOptions,
  buf: &'b [u8],
) -> Result<IonoObservationDensityProfileShiftedChebyshev_Abridged<'b>, flatbuffers::InvalidFlatbuffer> {
  flatbuffers::size_prefixed_root_with_opts::<IonoObservationDensityProfileShiftedChebyshev_Abridged<'b>>(opts, buf)
}
#[inline]
/// Assumes, without verification, that a buffer of bytes contains a IonoObservationDensityProfileShiftedChebyshev_Abridged and returns it.
/// # Safety
/// Callers must trust the given bytes do indeed contain a valid `IonoObservationDensityProfileShiftedChebyshev_Abridged`.
pub unsafe fn root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked(buf: &[u8]) -> IonoObservationDensityProfileShiftedChebyshev_Abridged {
  flatbuffers::root_unchecked::<IonoObservationDensityProfileShiftedChebyshev_Abridged>(buf)
}
#[inline]
/// Assumes, without verification, that a buffer of bytes contains a size prefixed IonoObservationDensityProfileShiftedChebyshev_Abridged and returns it.
/// # Safety
/// Callers must trust the given bytes do indeed contain a valid size prefixed `IonoObservationDensityProfileShiftedChebyshev_Abridged`.
pub unsafe fn size_prefixed_root_as_iono_observation_density_profile_shifted_chebyshev_abridged_unchecked(buf: &[u8]) -> IonoObservationDensityProfileShiftedChebyshev_Abridged {
  flatbuffers::size_prefixed_root_unchecked::<IonoObservationDensityProfileShiftedChebyshev_Abridged>(buf)
}
pub const IONO_OBSERVATION_DENSITY_PROFILE_SHIFTED_CHEBYSHEV_ABRIDGED_IDENTIFIER: &str = "IONO";

#[inline]
pub fn iono_observation_density_profile_shifted_chebyshev_abridged_buffer_has_identifier(buf: &[u8]) -> bool {
  flatbuffers::buffer_has_identifier(buf, IONO_OBSERVATION_DENSITY_PROFILE_SHIFTED_CHEBYSHEV_ABRIDGED_IDENTIFIER, false)
}

#[inline]
pub fn iono_observation_density_profile_shifted_chebyshev_abridged_size_prefixed_buffer_has_identifier(buf: &[u8]) -> bool {
  flatbuffers::buffer_has_identifier(buf, IONO_OBSERVATION_DENSITY_PROFILE_SHIFTED_CHEBYSHEV_ABRIDGED_IDENTIFIER, true)
}

#[inline]
pub fn finish_iono_observation_density_profile_shifted_chebyshev_abridged_buffer<'a, 'b, A: flatbuffers::Allocator + 'a>(
    fbb: &'b mut flatbuffers::FlatBufferBuilder<'a, A>,
    root: flatbuffers::WIPOffset<IonoObservationDensityProfileShiftedChebyshev_Abridged<'a>>) {
  fbb.finish(root, Some(IONO_OBSERVATION_DENSITY_PROFILE_SHIFTED_CHEBYSHEV_ABRIDGED_IDENTIFIER));
}

#[inline]
pub fn finish_size_prefixed_iono_observation_density_profile_shifted_chebyshev_abridged_buffer<'a, 'b, A: flatbuffers::Allocator + 'a>(fbb: &'b mut flatbuffers::FlatBufferBuilder<'a, A>, root: flatbuffers::WIPOffset<IonoObservationDensityProfileShiftedChebyshev_Abridged<'a>>) {
  fbb.finish_size_prefixed(root, Some(IONO_OBSERVATION_DENSITY_PROFILE_SHIFTED_CHEBYSHEV_ABRIDGED_IDENTIFIER));
}
