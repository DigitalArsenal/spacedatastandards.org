// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Schema for the CotChatData to post.
 */
@SuppressWarnings("unused")
public final class CotChatData_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static CotChatData_Ingest getRootAsCotChatData_Ingest(ByteBuffer _bb) { return getRootAsCotChatData_Ingest(_bb, new CotChatData_Ingest()); }
  public static CotChatData_Ingest getRootAsCotChatData_Ingest(ByteBuffer _bb, CotChatData_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean CotChatData_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "COTC"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public CotChatData_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Chat room name to send chat message to.
   * Example: /// Example: All Chat Rooms
   * Constraints: No constraints specified.
   */
  public String chatRoom() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer chatRoomAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer chatRoomInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Callsign of chat sender.
   * Example: /// Example: Pebble
   * Constraints: No constraints specified.
   */
  public String chatSenderCallSign() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer chatSenderCallSignAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer chatSenderCallSignInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Contents of a chat message.
   * Example: /// Example: Mission is go
   * Constraints: No constraints specified.
   */
  public String chatMsg() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer chatMsgAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer chatMsgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createCotChatData_Ingest(FlatBufferBuilder builder,
      int chatRoomOffset,
      int chatSenderCallSignOffset,
      int chatMsgOffset) {
    builder.startTable(3);
    CotChatData_Ingest.addChatMsg(builder, chatMsgOffset);
    CotChatData_Ingest.addChatSenderCallSign(builder, chatSenderCallSignOffset);
    CotChatData_Ingest.addChatRoom(builder, chatRoomOffset);
    return CotChatData_Ingest.endCotChatData_Ingest(builder);
  }

  public static void startCotChatData_Ingest(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addChatRoom(FlatBufferBuilder builder, int chatRoomOffset) { builder.addOffset(0, chatRoomOffset, 0); }
  public static void addChatSenderCallSign(FlatBufferBuilder builder, int chatSenderCallSignOffset) { builder.addOffset(1, chatSenderCallSignOffset, 0); }
  public static void addChatMsg(FlatBufferBuilder builder, int chatMsgOffset) { builder.addOffset(2, chatMsgOffset, 0); }
  public static int endCotChatData_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishCotChatData_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "COTC"); }
  public static void finishSizePrefixedCotChatData_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "COTC"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public CotChatData_Ingest get(int j) { return get(new CotChatData_Ingest(), j); }
    public CotChatData_Ingest get(CotChatData_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

