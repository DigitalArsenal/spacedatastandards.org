// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// List of COA metrics associated with this effect response.
 */
@SuppressWarnings("unused")
public final class EffectResponseMetrics_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static EffectResponseMetrics_Ingest getRootAsEffectResponseMetrics_Ingest(ByteBuffer _bb) { return getRootAsEffectResponseMetrics_Ingest(_bb, new EffectResponseMetrics_Ingest()); }
  public static EffectResponseMetrics_Ingest getRootAsEffectResponseMetrics_Ingest(ByteBuffer _bb, EffectResponseMetrics_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean EffectResponseMetrics_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "EFFE"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EffectResponseMetrics_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The type of the metric (e.g. CollateralDamage, GoalAchievement, OpportunityCost, Timeliness, Unavailable, etc.).
   * Example: /// Example: GoalAchievement
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String metricType() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer metricTypeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer metricTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * The metric score specific to its domain.
   * Example: /// Example: 10.1
   * Constraints: No constraints specified.
   */
  public double domainValue() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * The metric score adjusted to be relative and comparable to other domains.
   * Example: /// Example: 10.1
   * Constraints: No constraints specified.
   */
  public double relativeValue() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * The metric that was used to score this task.
   * Example: /// Example: Example metric
   * Constraints: Minimum length = 0, Maximum length = 1024
   */
  public String provenance() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer provenanceAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer provenanceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createEffectResponseMetrics_Ingest(FlatBufferBuilder builder,
      int metricTypeOffset,
      double domainValue,
      double relativeValue,
      int provenanceOffset) {
    builder.startTable(4);
    EffectResponseMetrics_Ingest.addRelativeValue(builder, relativeValue);
    EffectResponseMetrics_Ingest.addDomainValue(builder, domainValue);
    EffectResponseMetrics_Ingest.addProvenance(builder, provenanceOffset);
    EffectResponseMetrics_Ingest.addMetricType(builder, metricTypeOffset);
    return EffectResponseMetrics_Ingest.endEffectResponseMetrics_Ingest(builder);
  }

  public static void startEffectResponseMetrics_Ingest(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addMetricType(FlatBufferBuilder builder, int metricTypeOffset) { builder.addOffset(0, metricTypeOffset, 0); }
  public static void addDomainValue(FlatBufferBuilder builder, double domainValue) { builder.addDouble(1, domainValue, 0.0); }
  public static void addRelativeValue(FlatBufferBuilder builder, double relativeValue) { builder.addDouble(2, relativeValue, 0.0); }
  public static void addProvenance(FlatBufferBuilder builder, int provenanceOffset) { builder.addOffset(3, provenanceOffset, 0); }
  public static int endEffectResponseMetrics_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEffectResponseMetrics_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "EFFE"); }
  public static void finishSizePrefixedEffectResponseMetrics_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "EFFE"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EffectResponseMetrics_Ingest get(int j) { return get(new EffectResponseMetrics_Ingest(), j); }
    public EffectResponseMetrics_Ingest get(EffectResponseMetrics_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

