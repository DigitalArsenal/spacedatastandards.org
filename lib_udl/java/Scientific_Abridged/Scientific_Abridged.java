// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Scientific or other data from Seradata.
 */
@SuppressWarnings("unused")
public final class Scientific_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Scientific_Abridged getRootAsScientific_Abridged(ByteBuffer _bb) { return getRootAsScientific_Abridged(_bb, new Scientific_Abridged()); }
  public static Scientific_Abridged getRootAsScientific_Abridged(ByteBuffer _bb, Scientific_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean Scientific_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "SCIE"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Scientific_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: SCIENTIFIC-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
   * Example: /// Example: REF-SPACECRAFT-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String spacecraftId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer spacecraftIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer spacecraftIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Hosted for company/Organization Id.
   * Example: /// Example: REF-HOSTEDFORCOMPANYORG-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String hostedForCompanyOrgId() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hostedForCompanyOrgIdAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer hostedForCompanyOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Unique identifier of the organization which manufactures this bus.
   * Example: /// Example: REF-MANUFACTURERORG-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String manufacturerOrgId() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer manufacturerOrgIdAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer manufacturerOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Payload category, e.g. Magnetometer, Radiometer, Sensor, etc.
   * Example: /// Example: Sensor
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String payloadCategory() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer payloadCategoryAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer payloadCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Sensor name from sera data, e.g. SEM/MAG (SEM / Magnetometer).
   * Example: /// Example: SEM/MAG
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String name() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Frequency band, e.g. Gamma.
   * Example: /// Example: Gamma
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String frequencyBand() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer frequencyBandAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer frequencyBandInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Notes associated with the payload.
   * Example: /// Example: NOTES
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String notes() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer notesAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer notesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(32); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * ID of the parent entity for this Scientific.
   * Example: /// Example: 0167f577-e06c-358e-85aa-0a07a730bdd0
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idEntity() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idEntityAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer idEntityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }

  public static int createScientific_Abridged(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int spacecraftIdOffset,
      int hostedForCompanyOrgIdOffset,
      int manufacturerOrgIdOffset,
      int payloadCategoryOffset,
      int nameOffset,
      int frequencyBandOffset,
      int notesOffset,
      int createdAtOffset,
      int createdByOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode,
      int idEntityOffset) {
    builder.startTable(16);
    Scientific_Abridged.addIdEntity(builder, idEntityOffset);
    Scientific_Abridged.addOrigNetwork(builder, origNetworkOffset);
    Scientific_Abridged.addOrigin(builder, originOffset);
    Scientific_Abridged.addSource(builder, sourceOffset);
    Scientific_Abridged.addCreatedBy(builder, createdByOffset);
    Scientific_Abridged.addCreatedAt(builder, createdAtOffset);
    Scientific_Abridged.addNotes(builder, notesOffset);
    Scientific_Abridged.addFrequencyBand(builder, frequencyBandOffset);
    Scientific_Abridged.addName(builder, nameOffset);
    Scientific_Abridged.addPayloadCategory(builder, payloadCategoryOffset);
    Scientific_Abridged.addManufacturerOrgId(builder, manufacturerOrgIdOffset);
    Scientific_Abridged.addHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    Scientific_Abridged.addSpacecraftId(builder, spacecraftIdOffset);
    Scientific_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    Scientific_Abridged.addId(builder, idOffset);
    Scientific_Abridged.addDataMode(builder, dataMode);
    return Scientific_Abridged.endScientific_Abridged(builder);
  }

  public static void startScientific_Abridged(FlatBufferBuilder builder) { builder.startTable(16); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addSpacecraftId(FlatBufferBuilder builder, int spacecraftIdOffset) { builder.addOffset(2, spacecraftIdOffset, 0); }
  public static void addHostedForCompanyOrgId(FlatBufferBuilder builder, int hostedForCompanyOrgIdOffset) { builder.addOffset(3, hostedForCompanyOrgIdOffset, 0); }
  public static void addManufacturerOrgId(FlatBufferBuilder builder, int manufacturerOrgIdOffset) { builder.addOffset(4, manufacturerOrgIdOffset, 0); }
  public static void addPayloadCategory(FlatBufferBuilder builder, int payloadCategoryOffset) { builder.addOffset(5, payloadCategoryOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(6, nameOffset, 0); }
  public static void addFrequencyBand(FlatBufferBuilder builder, int frequencyBandOffset) { builder.addOffset(7, frequencyBandOffset, 0); }
  public static void addNotes(FlatBufferBuilder builder, int notesOffset) { builder.addOffset(8, notesOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(9, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(10, createdByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(11, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(12, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(13, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(14, dataMode, 0); }
  public static void addIdEntity(FlatBufferBuilder builder, int idEntityOffset) { builder.addOffset(15, idEntityOffset, 0); }
  public static int endScientific_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishScientific_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "SCIE"); }
  public static void finishSizePrefixedScientific_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "SCIE"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Scientific_Abridged get(int j) { return get(new Scientific_Abridged(), j); }
    public Scientific_Abridged get(Scientific_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

