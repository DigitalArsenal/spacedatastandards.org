// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// A quasi-parabolic segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C‚Äù. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
 */
@SuppressWarnings("unused")
public final class IonoObservationDensityProfileQuasiParabolicSegment_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static IonoObservationDensityProfileQuasiParabolicSegment_Ingest getRootAsIonoObservationDensityProfileQuasiParabolicSegment_Ingest(ByteBuffer _bb) { return getRootAsIonoObservationDensityProfileQuasiParabolicSegment_Ingest(_bb, new IonoObservationDensityProfileQuasiParabolicSegment_Ingest()); }
  public static IonoObservationDensityProfileQuasiParabolicSegment_Ingest getRootAsIonoObservationDensityProfileQuasiParabolicSegment_Ingest(ByteBuffer _bb, IonoObservationDensityProfileQuasiParabolicSegment_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean IonoObservationDensityProfileQuasiParabolicSegment_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "IONO"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IonoObservationDensityProfileQuasiParabolicSegment_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The index of this segment in the list, from 1 to NumSegments.
   * Example: /// Example: 12
   * Constraints: No constraints specified.
   */
  public int index() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * Starting range of the segment, in kilometers from the Earth's center.
   * Example: /// Example: 6460.1
   * Constraints: No constraints specified.
   */
  public double rb() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Ending range of the segment, in kilometers from the Earth's center.
   * Example: /// Example: 6480.001
   * Constraints: No constraints specified.
   */
  public double re() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Coefficient A.
   * Example: /// Example: -550273940000
   * Constraints: No constraints specified.
   */
  public double a() { int o = __offset(10); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Coefficient B.
   * Example: /// Example: 169837632
   * Constraints: No constraints specified.
   */
  public double b() { int o = __offset(12); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Coefficient C.
   * Example: /// Example: 13104.63
   * Constraints: No constraints specified.
   */
  public double c() { int o = __offset(14); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Best-fit error.
   * Example: /// Example: 0.0016
   * Constraints: No constraints specified.
   */
  public double error() { int o = __offset(16); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createIonoObservationDensityProfileQuasiParabolicSegment_Ingest(FlatBufferBuilder builder,
      int index,
      double rb,
      double re,
      double a,
      double b,
      double c,
      double error) {
    builder.startTable(7);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addError(builder, error);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addC(builder, c);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addB(builder, b);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addA(builder, a);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addRe(builder, re);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addRb(builder, rb);
    IonoObservationDensityProfileQuasiParabolicSegment_Ingest.addIndex(builder, index);
    return IonoObservationDensityProfileQuasiParabolicSegment_Ingest.endIonoObservationDensityProfileQuasiParabolicSegment_Ingest(builder);
  }

  public static void startIonoObservationDensityProfileQuasiParabolicSegment_Ingest(FlatBufferBuilder builder) { builder.startTable(7); }
  public static void addIndex(FlatBufferBuilder builder, int index) { builder.addInt(0, index, 0); }
  public static void addRb(FlatBufferBuilder builder, double rb) { builder.addDouble(1, rb, 0.0); }
  public static void addRe(FlatBufferBuilder builder, double re) { builder.addDouble(2, re, 0.0); }
  public static void addA(FlatBufferBuilder builder, double a) { builder.addDouble(3, a, 0.0); }
  public static void addB(FlatBufferBuilder builder, double b) { builder.addDouble(4, b, 0.0); }
  public static void addC(FlatBufferBuilder builder, double c) { builder.addDouble(5, c, 0.0); }
  public static void addError(FlatBufferBuilder builder, double error) { builder.addDouble(6, error, 0.0); }
  public static int endIonoObservationDensityProfileQuasiParabolicSegment_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishIonoObservationDensityProfileQuasiParabolicSegment_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "IONO"); }
  public static void finishSizePrefixedIonoObservationDensityProfileQuasiParabolicSegment_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "IONO"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IonoObservationDensityProfileQuasiParabolicSegment_Ingest get(int j) { return get(new IonoObservationDensityProfileQuasiParabolicSegment_Ingest(), j); }
    public IonoObservationDensityProfileQuasiParabolicSegment_Ingest get(IonoObservationDensityProfileQuasiParabolicSegment_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

