// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Point of contacts for scheduling or modifying the route.
 */
@SuppressWarnings("unused")
public final class PointOfContact_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static PointOfContact_Ingest getRootAsPointOfContact_Ingest(ByteBuffer _bb) { return getRootAsPointOfContact_Ingest(_bb, new PointOfContact_Ingest()); }
  public static PointOfContact_Ingest getRootAsPointOfContact_Ingest(ByteBuffer _bb, PointOfContact_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean PointOfContact_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "POIN"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public PointOfContact_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Sequencing field for point of contact.
   * Example: /// Example: 1
   * Constraints: No constraints specified.
   */
  public int pocSequenceId() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).
   * Example: /// Example: Originator
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String pocTypeName() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pocTypeNameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer pocTypeNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * The name of the contact.
   * Example: /// Example: Fred Smith
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String pocName() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pocNameAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer pocNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Office name for which the contact belongs.
   * Example: /// Example: A34
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String office() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer officeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer officeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * The username of the contact.
   * Example: /// Example: fgsmith
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String username() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer usernameAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer usernameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * The rank of contact.
   * Example: /// Example: Capt
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String rank() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer rankAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer rankInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Organization name for which the contact belongs.
   * Example: /// Example: HQAF
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String pocOrg() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pocOrgAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer pocOrgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Phone number of the contact.
   * Example: /// Example: 8675309
   * Constraints: Minimum length = 0, Maximum length = 45
   */
  public String phone() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer phoneAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer phoneInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Text of the remark.
   * Example: /// Example: POC remark.
   * Constraints: Minimum length = 0, Maximum length = 1024
   */
  public String remark() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer remarkAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer remarkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }

  public static int createPointOfContact_Ingest(FlatBufferBuilder builder,
      int pocSequenceId,
      int pocTypeNameOffset,
      int pocNameOffset,
      int officeOffset,
      int usernameOffset,
      int rankOffset,
      int pocOrgOffset,
      int phoneOffset,
      int remarkOffset) {
    builder.startTable(9);
    PointOfContact_Ingest.addRemark(builder, remarkOffset);
    PointOfContact_Ingest.addPhone(builder, phoneOffset);
    PointOfContact_Ingest.addPocOrg(builder, pocOrgOffset);
    PointOfContact_Ingest.addRank(builder, rankOffset);
    PointOfContact_Ingest.addUsername(builder, usernameOffset);
    PointOfContact_Ingest.addOffice(builder, officeOffset);
    PointOfContact_Ingest.addPocName(builder, pocNameOffset);
    PointOfContact_Ingest.addPocTypeName(builder, pocTypeNameOffset);
    PointOfContact_Ingest.addPocSequenceId(builder, pocSequenceId);
    return PointOfContact_Ingest.endPointOfContact_Ingest(builder);
  }

  public static void startPointOfContact_Ingest(FlatBufferBuilder builder) { builder.startTable(9); }
  public static void addPocSequenceId(FlatBufferBuilder builder, int pocSequenceId) { builder.addInt(0, pocSequenceId, 0); }
  public static void addPocTypeName(FlatBufferBuilder builder, int pocTypeNameOffset) { builder.addOffset(1, pocTypeNameOffset, 0); }
  public static void addPocName(FlatBufferBuilder builder, int pocNameOffset) { builder.addOffset(2, pocNameOffset, 0); }
  public static void addOffice(FlatBufferBuilder builder, int officeOffset) { builder.addOffset(3, officeOffset, 0); }
  public static void addUsername(FlatBufferBuilder builder, int usernameOffset) { builder.addOffset(4, usernameOffset, 0); }
  public static void addRank(FlatBufferBuilder builder, int rankOffset) { builder.addOffset(5, rankOffset, 0); }
  public static void addPocOrg(FlatBufferBuilder builder, int pocOrgOffset) { builder.addOffset(6, pocOrgOffset, 0); }
  public static void addPhone(FlatBufferBuilder builder, int phoneOffset) { builder.addOffset(7, phoneOffset, 0); }
  public static void addRemark(FlatBufferBuilder builder, int remarkOffset) { builder.addOffset(8, remarkOffset, 0); }
  public static int endPointOfContact_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishPointOfContact_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "POIN"); }
  public static void finishSizePrefixedPointOfContact_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "POIN"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public PointOfContact_Ingest get(int j) { return get(new PointOfContact_Ingest(), j); }
    public PointOfContact_Ingest get(PointOfContact_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

