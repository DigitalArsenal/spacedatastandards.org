// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Details for an sigint payload from  Seradata.
 */
@SuppressWarnings("unused")
public final class SeradataSigIntPayload_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SeradataSigIntPayload_Ingest getRootAsSeradataSigIntPayload_Ingest(ByteBuffer _bb) { return getRootAsSeradataSigIntPayload_Ingest(_bb, new SeradataSigIntPayload_Ingest()); }
  public static SeradataSigIntPayload_Ingest getRootAsSeradataSigIntPayload_Ingest(ByteBuffer _bb, SeradataSigIntPayload_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean SeradataSigIntPayload_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "SERA"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SeradataSigIntPayload_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: SERADATASIGINTPAYLOAD-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
   * Example: /// Example: spacecraftId
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String spacecraftId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer spacecraftIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer spacecraftIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * UUID of the Sensor record.
   * Example: /// Example: 0c5ec9c0-10cd-1d35-c46b-3764c4d76e13
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idSensor() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idSensorAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer idSensorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Hosted for company/Organization Id.
   * Example: /// Example: hostedForCompanyOrgId
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String hostedForCompanyOrgId() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hostedForCompanyOrgIdAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer hostedForCompanyOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Manufacturer Organization Id.
   * Example: /// Example: manufacturerOrgId
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String manufacturerOrgId() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer manufacturerOrgIdAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer manufacturerOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * SIGINT Payload type, e.g. Comint, Elint, etc.
   * Example: /// Example: Comint
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String type() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Swath Width in kilometers.
   * Example: /// Example: 1.23
   * Constraints: No constraints specified.
   */
  public double swathWidth() { int o = __offset(18); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Ground Station info for this payload.
   * Example: /// Example: groundStations
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String groundStations() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer groundStationsAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer groundStationsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Ground Station Locations for this payload.
   * Example: /// Example: groundStationLocations
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String groundStationLocations() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer groundStationLocationsAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer groundStationLocationsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Frequency coverage for this payload.
   * Example: /// Example: 1.1 to 3.3
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String frequencyCoverage() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer frequencyCoverageAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer frequencyCoverageInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Positional Accuracy for this payload.
   * Example: /// Example: positionalAccuracy
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String positionalAccuracy() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer positionalAccuracyAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer positionalAccuracyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Intercept parameters.
   * Example: /// Example: interceptParameters
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String interceptParameters() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer interceptParametersAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer interceptParametersInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Sensor name from Seradata.
   * Example: /// Example: Sensor Name
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String name() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Payload notes.
   * Example: /// Example: Sample Notes
   * Constraints: Minimum length = 0, Maximum length = 2147483647
   */
  public String notes() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer notesAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer notesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(44); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createSeradataSigIntPayload_Ingest(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int spacecraftIdOffset,
      int idSensorOffset,
      int hostedForCompanyOrgIdOffset,
      int manufacturerOrgIdOffset,
      int typeOffset,
      double swathWidth,
      int groundStationsOffset,
      int groundStationLocationsOffset,
      int frequencyCoverageOffset,
      int positionalAccuracyOffset,
      int interceptParametersOffset,
      int nameOffset,
      int notesOffset,
      int createdAtOffset,
      int createdByOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode) {
    builder.startTable(21);
    SeradataSigIntPayload_Ingest.addSwathWidth(builder, swathWidth);
    SeradataSigIntPayload_Ingest.addOrigNetwork(builder, origNetworkOffset);
    SeradataSigIntPayload_Ingest.addOrigin(builder, originOffset);
    SeradataSigIntPayload_Ingest.addSource(builder, sourceOffset);
    SeradataSigIntPayload_Ingest.addCreatedBy(builder, createdByOffset);
    SeradataSigIntPayload_Ingest.addCreatedAt(builder, createdAtOffset);
    SeradataSigIntPayload_Ingest.addNotes(builder, notesOffset);
    SeradataSigIntPayload_Ingest.addName(builder, nameOffset);
    SeradataSigIntPayload_Ingest.addInterceptParameters(builder, interceptParametersOffset);
    SeradataSigIntPayload_Ingest.addPositionalAccuracy(builder, positionalAccuracyOffset);
    SeradataSigIntPayload_Ingest.addFrequencyCoverage(builder, frequencyCoverageOffset);
    SeradataSigIntPayload_Ingest.addGroundStationLocations(builder, groundStationLocationsOffset);
    SeradataSigIntPayload_Ingest.addGroundStations(builder, groundStationsOffset);
    SeradataSigIntPayload_Ingest.addType(builder, typeOffset);
    SeradataSigIntPayload_Ingest.addManufacturerOrgId(builder, manufacturerOrgIdOffset);
    SeradataSigIntPayload_Ingest.addHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    SeradataSigIntPayload_Ingest.addIdSensor(builder, idSensorOffset);
    SeradataSigIntPayload_Ingest.addSpacecraftId(builder, spacecraftIdOffset);
    SeradataSigIntPayload_Ingest.addClassificationMarking(builder, classificationMarkingOffset);
    SeradataSigIntPayload_Ingest.addId(builder, idOffset);
    SeradataSigIntPayload_Ingest.addDataMode(builder, dataMode);
    return SeradataSigIntPayload_Ingest.endSeradataSigIntPayload_Ingest(builder);
  }

  public static void startSeradataSigIntPayload_Ingest(FlatBufferBuilder builder) { builder.startTable(21); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addSpacecraftId(FlatBufferBuilder builder, int spacecraftIdOffset) { builder.addOffset(2, spacecraftIdOffset, 0); }
  public static void addIdSensor(FlatBufferBuilder builder, int idSensorOffset) { builder.addOffset(3, idSensorOffset, 0); }
  public static void addHostedForCompanyOrgId(FlatBufferBuilder builder, int hostedForCompanyOrgIdOffset) { builder.addOffset(4, hostedForCompanyOrgIdOffset, 0); }
  public static void addManufacturerOrgId(FlatBufferBuilder builder, int manufacturerOrgIdOffset) { builder.addOffset(5, manufacturerOrgIdOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(6, typeOffset, 0); }
  public static void addSwathWidth(FlatBufferBuilder builder, double swathWidth) { builder.addDouble(7, swathWidth, 0.0); }
  public static void addGroundStations(FlatBufferBuilder builder, int groundStationsOffset) { builder.addOffset(8, groundStationsOffset, 0); }
  public static void addGroundStationLocations(FlatBufferBuilder builder, int groundStationLocationsOffset) { builder.addOffset(9, groundStationLocationsOffset, 0); }
  public static void addFrequencyCoverage(FlatBufferBuilder builder, int frequencyCoverageOffset) { builder.addOffset(10, frequencyCoverageOffset, 0); }
  public static void addPositionalAccuracy(FlatBufferBuilder builder, int positionalAccuracyOffset) { builder.addOffset(11, positionalAccuracyOffset, 0); }
  public static void addInterceptParameters(FlatBufferBuilder builder, int interceptParametersOffset) { builder.addOffset(12, interceptParametersOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(13, nameOffset, 0); }
  public static void addNotes(FlatBufferBuilder builder, int notesOffset) { builder.addOffset(14, notesOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(15, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(16, createdByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(17, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(18, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(19, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(20, dataMode, 0); }
  public static int endSeradataSigIntPayload_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSeradataSigIntPayload_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "SERA"); }
  public static void finishSizePrefixedSeradataSigIntPayload_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "SERA"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SeradataSigIntPayload_Ingest get(int j) { return get(new SeradataSigIntPayload_Ingest(), j); }
    public SeradataSigIntPayload_Ingest get(SeradataSigIntPayload_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

