// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Information on the mission and flight plans, the type and configuration of the platform, and the reference time.
 */
@SuppressWarnings("unused")
public final class Mti_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Mti_Abridged getRootAsMti_Abridged(ByteBuffer _bb) { return getRootAsMti_Abridged(_bb, new Mti_Abridged()); }
  public static Mti_Abridged getRootAsMti_Abridged(ByteBuffer _bb, Mti_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean Mti_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "MTIA"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Mti_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: MTI-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(12); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String createdBy() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Nationality of the platform providing the data.
   * Example: /// Example: NATIONALITY
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String p3() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer p3AsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer p3InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Control / handling marking.
   * Example: /// Example: MARKING
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String p6() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer p6AsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer p6InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Data record exercise indicator.
   * Example: /// Example: INDICATOR
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String p7() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer p7AsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer p7InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * ID of the platform providing the data (tail number for air platform, name and numerical designator for space-based platforms).
   * Example: /// Example: P8-ID
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String p8() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer p8AsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer p8InByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Integer field, assigned by the platform, that uniquely identifies the mission for the platform.
   * Example: /// Example: 45
   * Constraints: No constraints specified.
   */
  public int p9() { int o = __offset(26); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: 45
   * Constraints: No constraints specified.
   */
  public int p10() { int o = __offset(28); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String missions(int j) { int o = __offset(30); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int missionsLength() { int o = __offset(30); return o != 0 ? __vector_len(o) : 0; }
  public StringVector missionsVector() { return missionsVector(new StringVector()); }
  public StringVector missionsVector(StringVector obj) { int o = __offset(30); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String dwells(int j) { int o = __offset(32); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int dwellsLength() { int o = __offset(32); return o != 0 ? __vector_len(o) : 0; }
  public StringVector dwellsVector() { return dwellsVector(new StringVector()); }
  public StringVector dwellsVector(StringVector obj) { int o = __offset(32); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String hrrs(int j) { int o = __offset(34); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int hrrsLength() { int o = __offset(34); return o != 0 ? __vector_len(o) : 0; }
  public StringVector hrrsVector() { return hrrsVector(new StringVector()); }
  public StringVector hrrsVector(StringVector obj) { int o = __offset(34); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String jobDefs(int j) { int o = __offset(36); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int jobDefsLength() { int o = __offset(36); return o != 0 ? __vector_len(o) : 0; }
  public StringVector jobDefsVector() { return jobDefsVector(new StringVector()); }
  public StringVector jobDefsVector(StringVector obj) { int o = __offset(36); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String freeTexts(int j) { int o = __offset(38); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int freeTextsLength() { int o = __offset(38); return o != 0 ? __vector_len(o) : 0; }
  public StringVector freeTextsVector() { return freeTextsVector(new StringVector()); }
  public StringVector freeTextsVector(StringVector obj) { int o = __offset(38); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String platformLocs(int j) { int o = __offset(40); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int platformLocsLength() { int o = __offset(40); return o != 0 ? __vector_len(o) : 0; }
  public StringVector platformLocsVector() { return platformLocsVector(new StringVector()); }
  public StringVector platformLocsVector(StringVector obj) { int o = __offset(40); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * A platform-assigned number identifying the specific request or task that pertains to all Dwell, HRR, and Range-Doppler segments in the packet.  Job ID is unique within a mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String jobRequests(int j) { int o = __offset(42); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int jobRequestsLength() { int o = __offset(42); return o != 0 ? __vector_len(o) : 0; }
  public StringVector jobRequestsVector() { return jobRequestsVector(new StringVector()); }
  public StringVector jobRequestsVector(StringVector obj) { int o = __offset(42); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }

  public static int createMti_Abridged(FlatBufferBuilder builder,
      int classificationMarkingOffset,
      int sourceOffset,
      int originOffset,
      int idOffset,
      byte dataMode,
      int createdByOffset,
      int createdAtOffset,
      int p3Offset,
      int p6Offset,
      int p7Offset,
      int p8Offset,
      int p9,
      int p10,
      int missionsOffset,
      int dwellsOffset,
      int hrrsOffset,
      int jobDefsOffset,
      int freeTextsOffset,
      int platformLocsOffset,
      int jobRequestsOffset,
      int origNetworkOffset) {
    builder.startTable(21);
    Mti_Abridged.addOrigNetwork(builder, origNetworkOffset);
    Mti_Abridged.addJobRequests(builder, jobRequestsOffset);
    Mti_Abridged.addPlatformLocs(builder, platformLocsOffset);
    Mti_Abridged.addFreeTexts(builder, freeTextsOffset);
    Mti_Abridged.addJobDefs(builder, jobDefsOffset);
    Mti_Abridged.addHrrs(builder, hrrsOffset);
    Mti_Abridged.addDwells(builder, dwellsOffset);
    Mti_Abridged.addMissions(builder, missionsOffset);
    Mti_Abridged.addP10(builder, p10);
    Mti_Abridged.addP9(builder, p9);
    Mti_Abridged.addP8(builder, p8Offset);
    Mti_Abridged.addP7(builder, p7Offset);
    Mti_Abridged.addP6(builder, p6Offset);
    Mti_Abridged.addP3(builder, p3Offset);
    Mti_Abridged.addCreatedAt(builder, createdAtOffset);
    Mti_Abridged.addCreatedBy(builder, createdByOffset);
    Mti_Abridged.addId(builder, idOffset);
    Mti_Abridged.addOrigin(builder, originOffset);
    Mti_Abridged.addSource(builder, sourceOffset);
    Mti_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    Mti_Abridged.addDataMode(builder, dataMode);
    return Mti_Abridged.endMti_Abridged(builder);
  }

  public static void startMti_Abridged(FlatBufferBuilder builder) { builder.startTable(21); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(0, classificationMarkingOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(1, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(2, originOffset, 0); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(3, idOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(4, dataMode, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(5, createdByOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(6, createdAtOffset, 0); }
  public static void addP3(FlatBufferBuilder builder, int p3Offset) { builder.addOffset(7, p3Offset, 0); }
  public static void addP6(FlatBufferBuilder builder, int p6Offset) { builder.addOffset(8, p6Offset, 0); }
  public static void addP7(FlatBufferBuilder builder, int p7Offset) { builder.addOffset(9, p7Offset, 0); }
  public static void addP8(FlatBufferBuilder builder, int p8Offset) { builder.addOffset(10, p8Offset, 0); }
  public static void addP9(FlatBufferBuilder builder, int p9) { builder.addInt(11, p9, 0); }
  public static void addP10(FlatBufferBuilder builder, int p10) { builder.addInt(12, p10, 0); }
  public static void addMissions(FlatBufferBuilder builder, int missionsOffset) { builder.addOffset(13, missionsOffset, 0); }
  public static int createMissionsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startMissionsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDwells(FlatBufferBuilder builder, int dwellsOffset) { builder.addOffset(14, dwellsOffset, 0); }
  public static int createDwellsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDwellsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addHrrs(FlatBufferBuilder builder, int hrrsOffset) { builder.addOffset(15, hrrsOffset, 0); }
  public static int createHrrsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startHrrsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addJobDefs(FlatBufferBuilder builder, int jobDefsOffset) { builder.addOffset(16, jobDefsOffset, 0); }
  public static int createJobDefsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startJobDefsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addFreeTexts(FlatBufferBuilder builder, int freeTextsOffset) { builder.addOffset(17, freeTextsOffset, 0); }
  public static int createFreeTextsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startFreeTextsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addPlatformLocs(FlatBufferBuilder builder, int platformLocsOffset) { builder.addOffset(18, platformLocsOffset, 0); }
  public static int createPlatformLocsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startPlatformLocsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addJobRequests(FlatBufferBuilder builder, int jobRequestsOffset) { builder.addOffset(19, jobRequestsOffset, 0); }
  public static int createJobRequestsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startJobRequestsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(20, origNetworkOffset, 0); }
  public static int endMti_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishMti_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "MTIA"); }
  public static void finishSizePrefixedMti_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "MTIA"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Mti_Abridged get(int j) { return get(new Mti_Abridged(), j); }
    public Mti_Abridged get(Mti_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

