// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.
 */
@SuppressWarnings("unused")
public final class SortiePPR_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SortiePPR_Full getRootAsSortiePPR_Full(ByteBuffer _bb) { return getRootAsSortiePPR_Full(_bb, new SortiePPR_Full()); }
  public static SortiePPR_Full getRootAsSortiePPR_Full(ByteBuffer _bb, SortiePPR_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean SortiePPR_FullBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "SORT"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SortiePPR_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: SORTIEPPR-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.
   * Example: /// Example: 4ef3d1e8-ab08-ab70-498f-edc479734e5c
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String idSortie() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idSortieAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer idSortieInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
   * Example: /// Example: aa714f4d52a37ab1a00b21af9566e379
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String externalId() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer externalIdAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer externalIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * The prior permission required (PPR) number issued by the airfield for a sortie.
   * Example: /// Example: 07-21-07W
   * Constraints: Minimum length = 0, Maximum length = 16
   */
  public String number() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer numberAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer numberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2024-01-01T01:01:01.123Z
   * Constraints: No constraints specified.
   */
  public String startTime() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer startTimeAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer startTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2024-01-01T01:01:01.123Z
   * Constraints: No constraints specified.
   */
  public String endTime() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer endTimeAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer endTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * The username of the prior permission required (PPR) requestor.
   * Example: /// Example: jsmith1
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String requestor() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer requestorAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer requestorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Identifier of the prior permission required (PPR) grantor.
   * Example: /// Example: SMITH
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String grantor() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer grantorAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer grantorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].
   * Example: /// Example: M
   * Constraints: Minimum length = 0, Maximum length = 1
   */
  public byte type() { int o = __offset(22); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Remarks concerning the prior permission required (PPR) for a sortie.
   * Example: /// Example: PPR remark
   * Constraints: Minimum length = 0, Maximum length = 512
   */
  public String remarks() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer remarksAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer remarksInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Time the row was updated in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Application user who updated the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
   * Example: /// Example: AXE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String sourceDl() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceDlAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer sourceDlInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: OPS1
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(42); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createSortiePPR_Full(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int idSortieOffset,
      int externalIdOffset,
      int numberOffset,
      int startTimeOffset,
      int endTimeOffset,
      int requestorOffset,
      int grantorOffset,
      byte type,
      int remarksOffset,
      int createdAtOffset,
      int createdByOffset,
      int updatedAtOffset,
      int updatedByOffset,
      int sourceDlOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode) {
    builder.startTable(20);
    SortiePPR_Full.addOrigNetwork(builder, origNetworkOffset);
    SortiePPR_Full.addOrigin(builder, originOffset);
    SortiePPR_Full.addSource(builder, sourceOffset);
    SortiePPR_Full.addSourceDl(builder, sourceDlOffset);
    SortiePPR_Full.addUpdatedBy(builder, updatedByOffset);
    SortiePPR_Full.addUpdatedAt(builder, updatedAtOffset);
    SortiePPR_Full.addCreatedBy(builder, createdByOffset);
    SortiePPR_Full.addCreatedAt(builder, createdAtOffset);
    SortiePPR_Full.addRemarks(builder, remarksOffset);
    SortiePPR_Full.addGrantor(builder, grantorOffset);
    SortiePPR_Full.addRequestor(builder, requestorOffset);
    SortiePPR_Full.addEndTime(builder, endTimeOffset);
    SortiePPR_Full.addStartTime(builder, startTimeOffset);
    SortiePPR_Full.addNumber(builder, numberOffset);
    SortiePPR_Full.addExternalId(builder, externalIdOffset);
    SortiePPR_Full.addIdSortie(builder, idSortieOffset);
    SortiePPR_Full.addClassificationMarking(builder, classificationMarkingOffset);
    SortiePPR_Full.addId(builder, idOffset);
    SortiePPR_Full.addDataMode(builder, dataMode);
    SortiePPR_Full.addType(builder, type);
    return SortiePPR_Full.endSortiePPR_Full(builder);
  }

  public static void startSortiePPR_Full(FlatBufferBuilder builder) { builder.startTable(20); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addIdSortie(FlatBufferBuilder builder, int idSortieOffset) { builder.addOffset(2, idSortieOffset, 0); }
  public static void addExternalId(FlatBufferBuilder builder, int externalIdOffset) { builder.addOffset(3, externalIdOffset, 0); }
  public static void addNumber(FlatBufferBuilder builder, int numberOffset) { builder.addOffset(4, numberOffset, 0); }
  public static void addStartTime(FlatBufferBuilder builder, int startTimeOffset) { builder.addOffset(5, startTimeOffset, 0); }
  public static void addEndTime(FlatBufferBuilder builder, int endTimeOffset) { builder.addOffset(6, endTimeOffset, 0); }
  public static void addRequestor(FlatBufferBuilder builder, int requestorOffset) { builder.addOffset(7, requestorOffset, 0); }
  public static void addGrantor(FlatBufferBuilder builder, int grantorOffset) { builder.addOffset(8, grantorOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(9, type, 0); }
  public static void addRemarks(FlatBufferBuilder builder, int remarksOffset) { builder.addOffset(10, remarksOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(11, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(12, createdByOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(13, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(14, updatedByOffset, 0); }
  public static void addSourceDl(FlatBufferBuilder builder, int sourceDlOffset) { builder.addOffset(15, sourceDlOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(16, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(17, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(18, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(19, dataMode, 0); }
  public static int endSortiePPR_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSortiePPR_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "SORT"); }
  public static void finishSizePrefixedSortiePPR_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "SORT"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SortiePPR_Full get(int j) { return get(new SortiePPR_Full(), j); }
    public SortiePPR_Full get(SortiePPR_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

