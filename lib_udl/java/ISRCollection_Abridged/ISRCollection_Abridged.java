// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// ISR Collection data.
 */
@SuppressWarnings("unused")
public final class ISRCollection_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static ISRCollection_Abridged getRootAsISRCollection_Abridged(ByteBuffer _bb) { return getRootAsISRCollection_Abridged(_bb, new ISRCollection_Abridged()); }
  public static ISRCollection_Abridged getRootAsISRCollection_Abridged(ByteBuffer _bb, ISRCollection_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean ISRCollection_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "ISRC"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ISRCollection_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: ISRCOLLECTION-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Version of the IDEX software the request came from for compatibility.
   * Example: /// Example: 2
   * Constraints: No constraints specified.
   */
  public int idexVersion() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * Human readable Mission Name.
   * Example: /// Example: Example mission name
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String name() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Mission Identifier.
   * Example: /// Example: myTask-2020-04-23T00:00:00.000Z
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionId() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionIdAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer missionIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Designation of mission Area Of Responsibility.
   * Example: /// Example: Kandahar
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionAor() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionAorAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer missionAorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Primary type of intelligence to be collected during the mission.
   * Example: /// Example: Sig
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionPrimaryIntelDiscipline() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionPrimaryIntelDisciplineAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer missionPrimaryIntelDisciplineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Sub category of primary intelligence to be collected.
   * Example: /// Example: FMV
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionPrimarySubCategory() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionPrimarySubCategoryAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer missionPrimarySubCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Type of intelligence to be collected second.
   * Example: /// Example: Intelligence_2
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionSecondaryIntelDiscipline() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionSecondaryIntelDisciplineAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer missionSecondaryIntelDisciplineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Mission sub category for secondary intelligence discipline to be collected.
   * Example: /// Example: Convoy
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionSecondarySubCategory() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionSecondarySubCategoryAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer missionSecondarySubCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * What is the primary objective(Role) of this mission.
   * Example: /// Example: Targeting of Lead Vehicle
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionRole() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionRoleAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer missionRoleInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Mission operation name.
   * Example: /// Example: OP-HONEY-BADGER
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionOperation() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionOperationAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer missionOperationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Mission Priority (1-n).
   * Example: /// Example: 1
   * Constraints: No constraints specified.
   */
  public int missionPriority() { int o = __offset(28); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * Name of the Supporting unit/Location that is performing this mission.
   * Example: /// Example: ENVOYS
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionSupportedUnit() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionSupportedUnitAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer missionSupportedUnitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Text version of what we are emphasizing in this mission.
   * Example: /// Example: Mission emphasis
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionEmphasis() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionEmphasisAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer missionEmphasisInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * WGS-84 latitude of the start position, in degrees. -90 to 90 degrees (negative values south of equator).
   * Example: /// Example: 45.23
   * Constraints: No constraints specified.
   */
  public double missionStartPointLat() { int o = __offset(34); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * WGS-84 longitude of the start position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
   * Example: /// Example: 80.23
   * Constraints: No constraints specified.
   */
  public double missionStartPointLong() { int o = __offset(36); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Mission geographical collection area.
   * Example: /// Example: Example collection area
   * Constraints: Minimum length = 0, Maximum length = 512
   */
  public String missionCollectionArea() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionCollectionAreaAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer missionCollectionAreaInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * Joint Operations Area.
   * Example: /// Example: Operation area
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionJoa() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionJoaAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer missionJoaInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * A synchronization matrix is used to organize the logistics synchronization process during a mission.
   * Example: /// Example: MATRIX
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionSyncMatrixBin() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionSyncMatrixBinAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer missionSyncMatrixBinInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Country code of the mission.  A Country may represent countries, multi-national consortiums, and international organizations.
   * Example: /// Example: US
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String missionCountry() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionCountryAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer missionCountryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * Region of the mission.
   * Example: /// Example: Example Region
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionRegion() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionRegionAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer missionRegionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * Subregion of the mission.
   * Example: /// Example: Example Subregion
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String missionSubRegion() { int o = __offset(48); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missionSubRegionAsByteBuffer() { return __vector_as_bytebuffer(48, 1); }
  public ByteBuffer missionSubRegionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 48, 1); }
  /**
   * Mission desired collection requirements.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String collectionRequirements(int j) { int o = __offset(50); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int collectionRequirementsLength() { int o = __offset(50); return o != 0 ? __vector_len(o) : 0; }
  public StringVector collectionRequirementsVector() { return collectionRequirementsVector(new StringVector()); }
  public StringVector collectionRequirementsVector(StringVector obj) { int o = __offset(50); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Object for data dissemination.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String transit(int j) { int o = __offset(52); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int transitLength() { int o = __offset(52); return o != 0 ? __vector_len(o) : 0; }
  public StringVector transitVector() { return transitVector(new StringVector()); }
  public StringVector transitVector(StringVector obj) { int o = __offset(52); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Individual taskings to complete the mission.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String taskings(int j) { int o = __offset(54); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int taskingsLength() { int o = __offset(54); return o != 0 ? __vector_len(o) : 0; }
  public StringVector taskingsVector() { return taskingsVector(new StringVector()); }
  public StringVector taskingsVector(StringVector obj) { int o = __offset(54); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2021-01-19T01:01:15.001Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(56); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(56, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 56, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(58); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(58, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 58, 1); }
  /**
   * Time the row was updated in the database, auto-populated by the system, example = 2018-01-01T16:00:00.123Z.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(60); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(60, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 60, 1); }
  /**
   * Application user who updated the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(62); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(62, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 62, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(64); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(64, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 64, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(66); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(66, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 66, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(68); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(70); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(70, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 70, 1); }

  public static int createISRCollection_Abridged(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int idexVersion,
      int nameOffset,
      int missionIdOffset,
      int missionAorOffset,
      int missionPrimaryIntelDisciplineOffset,
      int missionPrimarySubCategoryOffset,
      int missionSecondaryIntelDisciplineOffset,
      int missionSecondarySubCategoryOffset,
      int missionRoleOffset,
      int missionOperationOffset,
      int missionPriority,
      int missionSupportedUnitOffset,
      int missionEmphasisOffset,
      double missionStartPointLat,
      double missionStartPointLong,
      int missionCollectionAreaOffset,
      int missionJoaOffset,
      int missionSyncMatrixBinOffset,
      int missionCountryOffset,
      int missionRegionOffset,
      int missionSubRegionOffset,
      int collectionRequirementsOffset,
      int transitOffset,
      int taskingsOffset,
      int createdAtOffset,
      int createdByOffset,
      int updatedAtOffset,
      int updatedByOffset,
      int sourceOffset,
      int originOffset,
      byte dataMode,
      int origNetworkOffset) {
    builder.startTable(34);
    ISRCollection_Abridged.addMissionStartPointLong(builder, missionStartPointLong);
    ISRCollection_Abridged.addMissionStartPointLat(builder, missionStartPointLat);
    ISRCollection_Abridged.addOrigNetwork(builder, origNetworkOffset);
    ISRCollection_Abridged.addOrigin(builder, originOffset);
    ISRCollection_Abridged.addSource(builder, sourceOffset);
    ISRCollection_Abridged.addUpdatedBy(builder, updatedByOffset);
    ISRCollection_Abridged.addUpdatedAt(builder, updatedAtOffset);
    ISRCollection_Abridged.addCreatedBy(builder, createdByOffset);
    ISRCollection_Abridged.addCreatedAt(builder, createdAtOffset);
    ISRCollection_Abridged.addTaskings(builder, taskingsOffset);
    ISRCollection_Abridged.addTransit(builder, transitOffset);
    ISRCollection_Abridged.addCollectionRequirements(builder, collectionRequirementsOffset);
    ISRCollection_Abridged.addMissionSubRegion(builder, missionSubRegionOffset);
    ISRCollection_Abridged.addMissionRegion(builder, missionRegionOffset);
    ISRCollection_Abridged.addMissionCountry(builder, missionCountryOffset);
    ISRCollection_Abridged.addMissionSyncMatrixBin(builder, missionSyncMatrixBinOffset);
    ISRCollection_Abridged.addMissionJoa(builder, missionJoaOffset);
    ISRCollection_Abridged.addMissionCollectionArea(builder, missionCollectionAreaOffset);
    ISRCollection_Abridged.addMissionEmphasis(builder, missionEmphasisOffset);
    ISRCollection_Abridged.addMissionSupportedUnit(builder, missionSupportedUnitOffset);
    ISRCollection_Abridged.addMissionPriority(builder, missionPriority);
    ISRCollection_Abridged.addMissionOperation(builder, missionOperationOffset);
    ISRCollection_Abridged.addMissionRole(builder, missionRoleOffset);
    ISRCollection_Abridged.addMissionSecondarySubCategory(builder, missionSecondarySubCategoryOffset);
    ISRCollection_Abridged.addMissionSecondaryIntelDiscipline(builder, missionSecondaryIntelDisciplineOffset);
    ISRCollection_Abridged.addMissionPrimarySubCategory(builder, missionPrimarySubCategoryOffset);
    ISRCollection_Abridged.addMissionPrimaryIntelDiscipline(builder, missionPrimaryIntelDisciplineOffset);
    ISRCollection_Abridged.addMissionAor(builder, missionAorOffset);
    ISRCollection_Abridged.addMissionId(builder, missionIdOffset);
    ISRCollection_Abridged.addName(builder, nameOffset);
    ISRCollection_Abridged.addIdexVersion(builder, idexVersion);
    ISRCollection_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    ISRCollection_Abridged.addId(builder, idOffset);
    ISRCollection_Abridged.addDataMode(builder, dataMode);
    return ISRCollection_Abridged.endISRCollection_Abridged(builder);
  }

  public static void startISRCollection_Abridged(FlatBufferBuilder builder) { builder.startTable(34); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addIdexVersion(FlatBufferBuilder builder, int idexVersion) { builder.addInt(2, idexVersion, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(3, nameOffset, 0); }
  public static void addMissionId(FlatBufferBuilder builder, int missionIdOffset) { builder.addOffset(4, missionIdOffset, 0); }
  public static void addMissionAor(FlatBufferBuilder builder, int missionAorOffset) { builder.addOffset(5, missionAorOffset, 0); }
  public static void addMissionPrimaryIntelDiscipline(FlatBufferBuilder builder, int missionPrimaryIntelDisciplineOffset) { builder.addOffset(6, missionPrimaryIntelDisciplineOffset, 0); }
  public static void addMissionPrimarySubCategory(FlatBufferBuilder builder, int missionPrimarySubCategoryOffset) { builder.addOffset(7, missionPrimarySubCategoryOffset, 0); }
  public static void addMissionSecondaryIntelDiscipline(FlatBufferBuilder builder, int missionSecondaryIntelDisciplineOffset) { builder.addOffset(8, missionSecondaryIntelDisciplineOffset, 0); }
  public static void addMissionSecondarySubCategory(FlatBufferBuilder builder, int missionSecondarySubCategoryOffset) { builder.addOffset(9, missionSecondarySubCategoryOffset, 0); }
  public static void addMissionRole(FlatBufferBuilder builder, int missionRoleOffset) { builder.addOffset(10, missionRoleOffset, 0); }
  public static void addMissionOperation(FlatBufferBuilder builder, int missionOperationOffset) { builder.addOffset(11, missionOperationOffset, 0); }
  public static void addMissionPriority(FlatBufferBuilder builder, int missionPriority) { builder.addInt(12, missionPriority, 0); }
  public static void addMissionSupportedUnit(FlatBufferBuilder builder, int missionSupportedUnitOffset) { builder.addOffset(13, missionSupportedUnitOffset, 0); }
  public static void addMissionEmphasis(FlatBufferBuilder builder, int missionEmphasisOffset) { builder.addOffset(14, missionEmphasisOffset, 0); }
  public static void addMissionStartPointLat(FlatBufferBuilder builder, double missionStartPointLat) { builder.addDouble(15, missionStartPointLat, 0.0); }
  public static void addMissionStartPointLong(FlatBufferBuilder builder, double missionStartPointLong) { builder.addDouble(16, missionStartPointLong, 0.0); }
  public static void addMissionCollectionArea(FlatBufferBuilder builder, int missionCollectionAreaOffset) { builder.addOffset(17, missionCollectionAreaOffset, 0); }
  public static void addMissionJoa(FlatBufferBuilder builder, int missionJoaOffset) { builder.addOffset(18, missionJoaOffset, 0); }
  public static void addMissionSyncMatrixBin(FlatBufferBuilder builder, int missionSyncMatrixBinOffset) { builder.addOffset(19, missionSyncMatrixBinOffset, 0); }
  public static void addMissionCountry(FlatBufferBuilder builder, int missionCountryOffset) { builder.addOffset(20, missionCountryOffset, 0); }
  public static void addMissionRegion(FlatBufferBuilder builder, int missionRegionOffset) { builder.addOffset(21, missionRegionOffset, 0); }
  public static void addMissionSubRegion(FlatBufferBuilder builder, int missionSubRegionOffset) { builder.addOffset(22, missionSubRegionOffset, 0); }
  public static void addCollectionRequirements(FlatBufferBuilder builder, int collectionRequirementsOffset) { builder.addOffset(23, collectionRequirementsOffset, 0); }
  public static int createCollectionRequirementsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCollectionRequirementsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTransit(FlatBufferBuilder builder, int transitOffset) { builder.addOffset(24, transitOffset, 0); }
  public static int createTransitVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTransitVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addTaskings(FlatBufferBuilder builder, int taskingsOffset) { builder.addOffset(25, taskingsOffset, 0); }
  public static int createTaskingsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTaskingsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(26, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(27, createdByOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(28, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(29, updatedByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(30, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(31, originOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(32, dataMode, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(33, origNetworkOffset, 0); }
  public static int endISRCollection_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishISRCollection_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "ISRC"); }
  public static void finishSizePrefixedISRCollection_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "ISRC"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ISRCollection_Abridged get(int j) { return get(new ISRCollection_Abridged(), j); }
    public ISRCollection_Abridged get(ISRCollection_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

