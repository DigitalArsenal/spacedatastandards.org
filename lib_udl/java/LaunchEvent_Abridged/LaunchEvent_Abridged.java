// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Information on known launch events.
 */
@SuppressWarnings("unused")
public final class LaunchEvent_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static LaunchEvent_Abridged getRootAsLaunchEvent_Abridged(ByteBuffer _bb) { return getRootAsLaunchEvent_Abridged(_bb, new LaunchEvent_Abridged()); }
  public static LaunchEvent_Abridged getRootAsLaunchEvent_Abridged(ByteBuffer _bb, LaunchEvent_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean LaunchEvent_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "LAUN"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LaunchEvent_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: LAUNCHEVENT-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Unique identifier of the target on-orbit object, if correlated.
   * Example: /// Example: REF-ONORBIT-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idOnOrbit() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idOnOrbitAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer idOnOrbitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Optional target-id, if missing in UDL.
   * Example: /// Example: ORIGOBJECT-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String origObjectId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origObjectIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer origObjectIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * The sources or SCG references from which the classification of this data is derived.
   * Example: /// Example: Example source
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String derivedFrom() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer derivedFromAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer derivedFromInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * The declassification date of this data, in ISO 8601 UTC format.
   * Example: /// Example: 2021-01-01T01:02:02.123Z
   * Constraints: No constraints specified.
   */
  public String declassificationDate() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer declassificationDateAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer declassificationDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Declassification string of this data.
   * Example: /// Example: Example Declassification
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String declassificationString() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer declassificationStringAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer declassificationStringInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Timestamp of the originating message in ISO8601 UTC format.
   * Example: /// Example: 2020-01-01T00:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String msgCreateDate() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgCreateDateAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer msgCreateDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * The DISOB launch Failure Code, if applicable.
   * Example: /// Example: Example failure code
   * Constraints: Minimum length = 0, Maximum length = 100
   */
  public String launchFailureCode() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer launchFailureCodeAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer launchFailureCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * The launch date, in ISO8601 UTC format.
   * Example: /// Example: 2020-01-01T00:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String launchDate() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer launchDateAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer launchDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * The Basic Encyclopedia Number, if applicable.
   * Example: /// Example: ENC-123
   * Constraints: Minimum length = 0, Maximum length = 10
   */
  public String beNumber() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer beNumberAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer beNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * The OSuffix, if applicable.
   * Example: /// Example: oSuffix
   * Constraints: Minimum length = 0, Maximum length = 10
   */
  public String oSuffix() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer oSuffixAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer oSuffixInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * The Launch facility name.
   * Example: /// Example: Example launch facility name
   * Constraints: Minimum length = 0, Maximum length = 100
   */
  public String launchFacilityName() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer launchFacilityNameAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer launchFacilityNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(38); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * Satellite/catalog number of the target on-orbit object.
   * Example: /// Example: 12
   * Constraints: No constraints specified.
   */
  public int satNo() { int o = __offset(42); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createLaunchEvent_Abridged(FlatBufferBuilder builder,
      int idOffset,
      int idOnOrbitOffset,
      int origObjectIdOffset,
      int classificationMarkingOffset,
      int derivedFromOffset,
      int declassificationDateOffset,
      int declassificationStringOffset,
      int msgCreateDateOffset,
      int launchFailureCodeOffset,
      int launchDateOffset,
      int beNumberOffset,
      int oSuffixOffset,
      int launchFacilityNameOffset,
      int createdAtOffset,
      int createdByOffset,
      int originOffset,
      int sourceOffset,
      byte dataMode,
      int origNetworkOffset,
      int satNo) {
    builder.startTable(20);
    LaunchEvent_Abridged.addSatNo(builder, satNo);
    LaunchEvent_Abridged.addOrigNetwork(builder, origNetworkOffset);
    LaunchEvent_Abridged.addSource(builder, sourceOffset);
    LaunchEvent_Abridged.addOrigin(builder, originOffset);
    LaunchEvent_Abridged.addCreatedBy(builder, createdByOffset);
    LaunchEvent_Abridged.addCreatedAt(builder, createdAtOffset);
    LaunchEvent_Abridged.addLaunchFacilityName(builder, launchFacilityNameOffset);
    LaunchEvent_Abridged.addOSuffix(builder, oSuffixOffset);
    LaunchEvent_Abridged.addBeNumber(builder, beNumberOffset);
    LaunchEvent_Abridged.addLaunchDate(builder, launchDateOffset);
    LaunchEvent_Abridged.addLaunchFailureCode(builder, launchFailureCodeOffset);
    LaunchEvent_Abridged.addMsgCreateDate(builder, msgCreateDateOffset);
    LaunchEvent_Abridged.addDeclassificationString(builder, declassificationStringOffset);
    LaunchEvent_Abridged.addDeclassificationDate(builder, declassificationDateOffset);
    LaunchEvent_Abridged.addDerivedFrom(builder, derivedFromOffset);
    LaunchEvent_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    LaunchEvent_Abridged.addOrigObjectId(builder, origObjectIdOffset);
    LaunchEvent_Abridged.addIdOnOrbit(builder, idOnOrbitOffset);
    LaunchEvent_Abridged.addId(builder, idOffset);
    LaunchEvent_Abridged.addDataMode(builder, dataMode);
    return LaunchEvent_Abridged.endLaunchEvent_Abridged(builder);
  }

  public static void startLaunchEvent_Abridged(FlatBufferBuilder builder) { builder.startTable(20); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addIdOnOrbit(FlatBufferBuilder builder, int idOnOrbitOffset) { builder.addOffset(1, idOnOrbitOffset, 0); }
  public static void addOrigObjectId(FlatBufferBuilder builder, int origObjectIdOffset) { builder.addOffset(2, origObjectIdOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(3, classificationMarkingOffset, 0); }
  public static void addDerivedFrom(FlatBufferBuilder builder, int derivedFromOffset) { builder.addOffset(4, derivedFromOffset, 0); }
  public static void addDeclassificationDate(FlatBufferBuilder builder, int declassificationDateOffset) { builder.addOffset(5, declassificationDateOffset, 0); }
  public static void addDeclassificationString(FlatBufferBuilder builder, int declassificationStringOffset) { builder.addOffset(6, declassificationStringOffset, 0); }
  public static void addMsgCreateDate(FlatBufferBuilder builder, int msgCreateDateOffset) { builder.addOffset(7, msgCreateDateOffset, 0); }
  public static void addLaunchFailureCode(FlatBufferBuilder builder, int launchFailureCodeOffset) { builder.addOffset(8, launchFailureCodeOffset, 0); }
  public static void addLaunchDate(FlatBufferBuilder builder, int launchDateOffset) { builder.addOffset(9, launchDateOffset, 0); }
  public static void addBeNumber(FlatBufferBuilder builder, int beNumberOffset) { builder.addOffset(10, beNumberOffset, 0); }
  public static void addOSuffix(FlatBufferBuilder builder, int oSuffixOffset) { builder.addOffset(11, oSuffixOffset, 0); }
  public static void addLaunchFacilityName(FlatBufferBuilder builder, int launchFacilityNameOffset) { builder.addOffset(12, launchFacilityNameOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(13, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(14, createdByOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(15, originOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(16, sourceOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(17, dataMode, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(18, origNetworkOffset, 0); }
  public static void addSatNo(FlatBufferBuilder builder, int satNo) { builder.addInt(19, satNo, 0); }
  public static int endLaunchEvent_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishLaunchEvent_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "LAUN"); }
  public static void finishSizePrefixedLaunchEvent_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "LAUN"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LaunchEvent_Abridged get(int j) { return get(new LaunchEvent_Abridged(), j); }
    public LaunchEvent_Abridged get(LaunchEvent_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

