// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Profile of electron densities in the ionosphere associated with an IonoObservation.
 */
@SuppressWarnings("unused")
public final class IonoObservationDensityProfile_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static IonoObservationDensityProfile_Abridged getRootAsIonoObservationDensityProfile_Abridged(ByteBuffer _bb) { return getRootAsIonoObservationDensityProfile_Abridged(_bb, new IonoObservationDensityProfile_Abridged()); }
  public static IonoObservationDensityProfile_Abridged getRootAsIonoObservationDensityProfile_Abridged(ByteBuffer _bb, IonoObservationDensityProfile_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean IonoObservationDensityProfile_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "IONO"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public IonoObservationDensityProfile_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String parabolic() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer parabolicAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer parabolicInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String quasiParabolic() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer quasiParabolicAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer quasiParabolicInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Description of the valley model and parameters.
   * Example: /// Example: 2-parameter UMLCAR model with width W in km and depth D in MHz, no fitting.
   * Constraints: No constraints specified.
   */
  public String valleyModelDescription() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer valleyModelDescriptionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer valleyModelDescriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Array of valley model coefficients.
   * Example: /// Example: [39.597, 0.1777]
   * Constraints: No constraints specified.
   */
  public String valleyModelCoeffs(int j) { int o = __offset(10); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int valleyModelCoeffsLength() { int o = __offset(10); return o != 0 ? __vector_len(o) : 0; }
  public StringVector valleyModelCoeffsVector() { return valleyModelCoeffsVector(new StringVector()); }
  public StringVector valleyModelCoeffsVector(StringVector obj) { int o = __offset(10); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String shiftedChebyshev() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer shiftedChebyshevAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer shiftedChebyshevInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String topsideExtensionChapmanConst() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer topsideExtensionChapmanConstAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer topsideExtensionChapmanConstInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String topsideExtensionVaryChap() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer topsideExtensionVaryChapAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer topsideExtensionVaryChapInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String iri() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer iriAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer iriInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }

  public static int createIonoObservationDensityProfile_Abridged(FlatBufferBuilder builder,
      int parabolicOffset,
      int quasiParabolicOffset,
      int valleyModelDescriptionOffset,
      int valleyModelCoeffsOffset,
      int shiftedChebyshevOffset,
      int topsideExtensionChapmanConstOffset,
      int topsideExtensionVaryChapOffset,
      int iriOffset) {
    builder.startTable(8);
    IonoObservationDensityProfile_Abridged.addIri(builder, iriOffset);
    IonoObservationDensityProfile_Abridged.addTopsideExtensionVaryChap(builder, topsideExtensionVaryChapOffset);
    IonoObservationDensityProfile_Abridged.addTopsideExtensionChapmanConst(builder, topsideExtensionChapmanConstOffset);
    IonoObservationDensityProfile_Abridged.addShiftedChebyshev(builder, shiftedChebyshevOffset);
    IonoObservationDensityProfile_Abridged.addValleyModelCoeffs(builder, valleyModelCoeffsOffset);
    IonoObservationDensityProfile_Abridged.addValleyModelDescription(builder, valleyModelDescriptionOffset);
    IonoObservationDensityProfile_Abridged.addQuasiParabolic(builder, quasiParabolicOffset);
    IonoObservationDensityProfile_Abridged.addParabolic(builder, parabolicOffset);
    return IonoObservationDensityProfile_Abridged.endIonoObservationDensityProfile_Abridged(builder);
  }

  public static void startIonoObservationDensityProfile_Abridged(FlatBufferBuilder builder) { builder.startTable(8); }
  public static void addParabolic(FlatBufferBuilder builder, int parabolicOffset) { builder.addOffset(0, parabolicOffset, 0); }
  public static void addQuasiParabolic(FlatBufferBuilder builder, int quasiParabolicOffset) { builder.addOffset(1, quasiParabolicOffset, 0); }
  public static void addValleyModelDescription(FlatBufferBuilder builder, int valleyModelDescriptionOffset) { builder.addOffset(2, valleyModelDescriptionOffset, 0); }
  public static void addValleyModelCoeffs(FlatBufferBuilder builder, int valleyModelCoeffsOffset) { builder.addOffset(3, valleyModelCoeffsOffset, 0); }
  public static int createValleyModelCoeffsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startValleyModelCoeffsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addShiftedChebyshev(FlatBufferBuilder builder, int shiftedChebyshevOffset) { builder.addOffset(4, shiftedChebyshevOffset, 0); }
  public static void addTopsideExtensionChapmanConst(FlatBufferBuilder builder, int topsideExtensionChapmanConstOffset) { builder.addOffset(5, topsideExtensionChapmanConstOffset, 0); }
  public static void addTopsideExtensionVaryChap(FlatBufferBuilder builder, int topsideExtensionVaryChapOffset) { builder.addOffset(6, topsideExtensionVaryChapOffset, 0); }
  public static void addIri(FlatBufferBuilder builder, int iriOffset) { builder.addOffset(7, iriOffset, 0); }
  public static int endIonoObservationDensityProfile_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishIonoObservationDensityProfile_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "IONO"); }
  public static void finishSizePrefixedIonoObservationDensityProfile_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "IONO"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public IonoObservationDensityProfile_Abridged get(int j) { return get(new IonoObservationDensityProfile_Abridged(), j); }
    public IonoObservationDensityProfile_Abridged get(IonoObservationDensityProfile_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

