// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Maintenance schedule and operational status of Sensor.
 */
@SuppressWarnings("unused")
public final class SensorMaintenance_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SensorMaintenance_Full getRootAsSensorMaintenance_Full(ByteBuffer _bb) { return getRootAsSensorMaintenance_Full(_bb, new SensorMaintenance_Full()); }
  public static SensorMaintenance_Full getRootAsSensorMaintenance_Full(ByteBuffer _bb, SensorMaintenance_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean SensorMaintenance_FullBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "SENS"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SensorMaintenance_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: SENSORMAINTENANCE-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * The site to which this item applies.  NOTE - this site code is COLT specific and may not identically correspond to other UDL site IDs.
   * Example: /// Example: site01
   * Constraints: Minimum length = 1, Maximum length = 6
   */
  public String siteCode() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer siteCodeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer siteCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * UUID of the sensor.
   * Example: /// Example: idSensor
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idSensor() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idSensorAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer idSensorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * The planned outage start time in ISO8601 UTC format.
   * Example: /// Example: 2018-01-01T16:00:00.123456Z
   * Constraints: No constraints specified.
   */
  public String startTime() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer startTimeAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer startTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * The planned outage end time in ISO8601 UTC format.
   * Example: /// Example: 2018-01-01T16:00:00.123456Z
   * Constraints: No constraints specified.
   */
  public String endTime() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer endTimeAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer endTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * The minimum time required to recall this activity, expressed as ddd:hh:mm.
   * Example: /// Example: 128:16:52
   * Constraints: Minimum length = 0, Maximum length = 20
   */
  public String recall() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer recallAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer recallInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * The duration of the planned outage, expressed as ddd:hh:mm.
   * Example: /// Example: 128:16:52
   * Constraints: Minimum length = 0, Maximum length = 20
   */
  public String duration() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer durationAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer durationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * The Missile Warning operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.
   * Example: /// Example: G
   * Constraints: Minimum length = 0, Maximum length = 3
   */
  public String mwOpsCap() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mwOpsCapAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer mwOpsCapInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * The Space Surveillance operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.
   * Example: /// Example: Y
   * Constraints: Minimum length = 0, Maximum length = 3
   */
  public String ssOpsCap() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer ssOpsCapAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer ssOpsCapInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * The Missile Defense operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.
   * Example: /// Example: R
   * Constraints: Minimum length = 0, Maximum length = 3
   */
  public String mdOpsCap() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer mdOpsCapAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer mdOpsCapInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * The sensor face(s) to which this COLT maintenance item applies, if applicable.
   * Example: /// Example: impactedFaces
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String impactedFaces() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer impactedFacesAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer impactedFacesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * The mission capability status of the equipment (e.g. FMC, NMC, PMC, UNK, etc.).
   * Example: /// Example: FMC
   * Constraints: Minimum length = 0, Maximum length = 20
   */
  public String equipStatus() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer equipStatusAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer equipStatusInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Description of the activity taking place during this outage.
   * Example: /// Example: Activity Description
   * Constraints: No constraints specified.
   */
  public String activity() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer activityAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer activityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Remarks concerning this outage.
   * Example: /// Example: Remarks
   * Constraints: No constraints specified.
   */
  public String remark() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer remarkAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer remarkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * The name of the requestor.
   * Example: /// Example: requestor
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String requestor() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer requestorAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer requestorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * The name of the changer, if applicable.
   * Example: /// Example: changer
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String changer() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer changerAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer changerInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * The name of the approver.
   * Example: /// Example: approver
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String approver() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer approverAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer approverInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * COLT EOWID.
   * Example: /// Example: eowId
   * Constraints: Minimum length = 0, Maximum length = 20
   */
  public String eowId() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer eowIdAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer eowIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * The revision number for this maintenance item.
   * Example: /// Example: rev
   * Constraints: Minimum length = 0, Maximum length = 5
   */
  public String rev() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer revAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer revInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * The priority of this maintenance item.
   * Example: /// Example: low
   * Constraints: Minimum length = 0, Maximum length = 5
   */
  public String priority() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer priorityAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer priorityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * Release.
   * Example: /// Example: rel
   * Constraints: Minimum length = 0, Maximum length = 5
   */
  public String rel() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer relAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer relInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * The internal COLT line number assigned to this item.
   * Example: /// Example: lineNumber
   * Constraints: Minimum length = 0, Maximum length = 20
   */
  public String lineNumber() { int o = __offset(48); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lineNumberAsByteBuffer() { return __vector_as_bytebuffer(48, 1); }
  public ByteBuffer lineNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 48, 1); }
  /**
   * The name of the resource(s) affected by this maintenance item.
   * Example: /// Example: resource
   * Constraints: Minimum length = 0, Maximum length = 255
   */
  public String resource() { int o = __offset(50); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer resourceAsByteBuffer() { return __vector_as_bytebuffer(50, 1); }
  public ByteBuffer resourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 50, 1); }
  /**
   * The date that this item became inactive in ISO8601 UTC format.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String inactiveDate() { int o = __offset(52); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer inactiveDateAsByteBuffer() { return __vector_as_bytebuffer(52, 1); }
  public ByteBuffer inactiveDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 52, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(54); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(54, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 54, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(56); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(56, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 56, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(58); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(58, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 58, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(60); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(60, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 60, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(62); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(64); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(64, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 64, 1); }
  /**
   * Time the row was last updated in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(66); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(66, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 66, 1); }
  /**
   * Application user who updated the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(68); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(68, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 68, 1); }

  public static int createSensorMaintenance_Full(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int siteCodeOffset,
      int idSensorOffset,
      int startTimeOffset,
      int endTimeOffset,
      int recallOffset,
      int durationOffset,
      int mwOpsCapOffset,
      int ssOpsCapOffset,
      int mdOpsCapOffset,
      int impactedFacesOffset,
      int equipStatusOffset,
      int activityOffset,
      int remarkOffset,
      int requestorOffset,
      int changerOffset,
      int approverOffset,
      int eowIdOffset,
      int revOffset,
      int priorityOffset,
      int relOffset,
      int lineNumberOffset,
      int resourceOffset,
      int inactiveDateOffset,
      int createdAtOffset,
      int createdByOffset,
      int sourceOffset,
      int originOffset,
      byte dataMode,
      int origNetworkOffset,
      int updatedAtOffset,
      int updatedByOffset) {
    builder.startTable(33);
    SensorMaintenance_Full.addUpdatedBy(builder, updatedByOffset);
    SensorMaintenance_Full.addUpdatedAt(builder, updatedAtOffset);
    SensorMaintenance_Full.addOrigNetwork(builder, origNetworkOffset);
    SensorMaintenance_Full.addOrigin(builder, originOffset);
    SensorMaintenance_Full.addSource(builder, sourceOffset);
    SensorMaintenance_Full.addCreatedBy(builder, createdByOffset);
    SensorMaintenance_Full.addCreatedAt(builder, createdAtOffset);
    SensorMaintenance_Full.addInactiveDate(builder, inactiveDateOffset);
    SensorMaintenance_Full.addResource(builder, resourceOffset);
    SensorMaintenance_Full.addLineNumber(builder, lineNumberOffset);
    SensorMaintenance_Full.addRel(builder, relOffset);
    SensorMaintenance_Full.addPriority(builder, priorityOffset);
    SensorMaintenance_Full.addRev(builder, revOffset);
    SensorMaintenance_Full.addEowId(builder, eowIdOffset);
    SensorMaintenance_Full.addApprover(builder, approverOffset);
    SensorMaintenance_Full.addChanger(builder, changerOffset);
    SensorMaintenance_Full.addRequestor(builder, requestorOffset);
    SensorMaintenance_Full.addRemark(builder, remarkOffset);
    SensorMaintenance_Full.addActivity(builder, activityOffset);
    SensorMaintenance_Full.addEquipStatus(builder, equipStatusOffset);
    SensorMaintenance_Full.addImpactedFaces(builder, impactedFacesOffset);
    SensorMaintenance_Full.addMdOpsCap(builder, mdOpsCapOffset);
    SensorMaintenance_Full.addSsOpsCap(builder, ssOpsCapOffset);
    SensorMaintenance_Full.addMwOpsCap(builder, mwOpsCapOffset);
    SensorMaintenance_Full.addDuration(builder, durationOffset);
    SensorMaintenance_Full.addRecall(builder, recallOffset);
    SensorMaintenance_Full.addEndTime(builder, endTimeOffset);
    SensorMaintenance_Full.addStartTime(builder, startTimeOffset);
    SensorMaintenance_Full.addIdSensor(builder, idSensorOffset);
    SensorMaintenance_Full.addSiteCode(builder, siteCodeOffset);
    SensorMaintenance_Full.addClassificationMarking(builder, classificationMarkingOffset);
    SensorMaintenance_Full.addId(builder, idOffset);
    SensorMaintenance_Full.addDataMode(builder, dataMode);
    return SensorMaintenance_Full.endSensorMaintenance_Full(builder);
  }

  public static void startSensorMaintenance_Full(FlatBufferBuilder builder) { builder.startTable(33); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addSiteCode(FlatBufferBuilder builder, int siteCodeOffset) { builder.addOffset(2, siteCodeOffset, 0); }
  public static void addIdSensor(FlatBufferBuilder builder, int idSensorOffset) { builder.addOffset(3, idSensorOffset, 0); }
  public static void addStartTime(FlatBufferBuilder builder, int startTimeOffset) { builder.addOffset(4, startTimeOffset, 0); }
  public static void addEndTime(FlatBufferBuilder builder, int endTimeOffset) { builder.addOffset(5, endTimeOffset, 0); }
  public static void addRecall(FlatBufferBuilder builder, int recallOffset) { builder.addOffset(6, recallOffset, 0); }
  public static void addDuration(FlatBufferBuilder builder, int durationOffset) { builder.addOffset(7, durationOffset, 0); }
  public static void addMwOpsCap(FlatBufferBuilder builder, int mwOpsCapOffset) { builder.addOffset(8, mwOpsCapOffset, 0); }
  public static void addSsOpsCap(FlatBufferBuilder builder, int ssOpsCapOffset) { builder.addOffset(9, ssOpsCapOffset, 0); }
  public static void addMdOpsCap(FlatBufferBuilder builder, int mdOpsCapOffset) { builder.addOffset(10, mdOpsCapOffset, 0); }
  public static void addImpactedFaces(FlatBufferBuilder builder, int impactedFacesOffset) { builder.addOffset(11, impactedFacesOffset, 0); }
  public static void addEquipStatus(FlatBufferBuilder builder, int equipStatusOffset) { builder.addOffset(12, equipStatusOffset, 0); }
  public static void addActivity(FlatBufferBuilder builder, int activityOffset) { builder.addOffset(13, activityOffset, 0); }
  public static void addRemark(FlatBufferBuilder builder, int remarkOffset) { builder.addOffset(14, remarkOffset, 0); }
  public static void addRequestor(FlatBufferBuilder builder, int requestorOffset) { builder.addOffset(15, requestorOffset, 0); }
  public static void addChanger(FlatBufferBuilder builder, int changerOffset) { builder.addOffset(16, changerOffset, 0); }
  public static void addApprover(FlatBufferBuilder builder, int approverOffset) { builder.addOffset(17, approverOffset, 0); }
  public static void addEowId(FlatBufferBuilder builder, int eowIdOffset) { builder.addOffset(18, eowIdOffset, 0); }
  public static void addRev(FlatBufferBuilder builder, int revOffset) { builder.addOffset(19, revOffset, 0); }
  public static void addPriority(FlatBufferBuilder builder, int priorityOffset) { builder.addOffset(20, priorityOffset, 0); }
  public static void addRel(FlatBufferBuilder builder, int relOffset) { builder.addOffset(21, relOffset, 0); }
  public static void addLineNumber(FlatBufferBuilder builder, int lineNumberOffset) { builder.addOffset(22, lineNumberOffset, 0); }
  public static void addResource(FlatBufferBuilder builder, int resourceOffset) { builder.addOffset(23, resourceOffset, 0); }
  public static void addInactiveDate(FlatBufferBuilder builder, int inactiveDateOffset) { builder.addOffset(24, inactiveDateOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(25, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(26, createdByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(27, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(28, originOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(29, dataMode, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(30, origNetworkOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(31, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(32, updatedByOffset, 0); }
  public static int endSensorMaintenance_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSensorMaintenance_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "SENS"); }
  public static void finishSizePrefixedSensorMaintenance_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "SENS"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SensorMaintenance_Full get(int j) { return get(new SensorMaintenance_Full(), j); }
    public SensorMaintenance_Full get(SensorMaintenance_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

