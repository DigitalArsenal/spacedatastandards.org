// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// No description available.
 */
@SuppressWarnings("unused")
public final class EphemFormatType extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static EphemFormatType getRootAsEphemFormatType(ByteBuffer _bb) { return getRootAsEphemFormatType(_bb, new EphemFormatType()); }
  public static EphemFormatType getRootAsEphemFormatType(ByteBuffer _bb, EphemFormatType obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean EphemFormatTypeBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "EPHE"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EphemFormatType __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }


  public static void startEphemFormatType(FlatBufferBuilder builder) { builder.startTable(0); }
  public static int endEphemFormatType(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEphemFormatTypeBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "EPHE"); }
  public static void finishSizePrefixedEphemFormatTypeBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "EPHE"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EphemFormatType get(int j) { return get(new EphemFormatType(), j); }
    public EphemFormatType get(EphemFormatType obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

