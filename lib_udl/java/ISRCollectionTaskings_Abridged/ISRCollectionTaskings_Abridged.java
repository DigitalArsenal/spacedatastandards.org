// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Individual taskings to complete the mission.
 */
@SuppressWarnings("unused")
public final class ISRCollectionTaskings_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static ISRCollectionTaskings_Abridged getRootAsISRCollectionTaskings_Abridged(ByteBuffer _bb) { return getRootAsISRCollectionTaskings_Abridged(_bb, new ISRCollectionTaskings_Abridged()); }
  public static ISRCollectionTaskings_Abridged getRootAsISRCollectionTaskings_Abridged(ByteBuffer _bb, ISRCollectionTaskings_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean ISRCollectionTaskings_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "ISRC"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ISRCollectionTaskings_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Tasking Unique Identifier.
   * Example: /// Example: ISRCOLLECTIONTASKINGS-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Type of tasking.
   * Example: /// Example: Deliberate
   * Constraints: Minimum length = 1, Maximum length = 16
   */
  public byte type() { int o = __offset(6); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Type of collection tasked.
   * Example: /// Example: Simultaneous
   * Constraints: Minimum length = 1, Maximum length = 16
   */
  public byte collectionType() { int o = __offset(8); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Human readable definition of this taskings Area Of Responsibility.
   * Example: /// Example: Kandahar
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingAor() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingAorAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer taskingAorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Eight line.
   * Example: /// Example: No example provided.
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String eightLine() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer eightLineAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer eightLineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Primary type of intelligence to be collected during the mission.
   * Example: /// Example: Sig
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingPrimaryIntelDiscipline() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingPrimaryIntelDisciplineAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer taskingPrimaryIntelDisciplineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Sub category of primary intelligence to be collected.
   * Example: /// Example: FMV
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingPrimarySubCategory() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingPrimarySubCategoryAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer taskingPrimarySubCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Type of tasking intelligence to be collected second.
   * Example: /// Example: Intelligence_2
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingSecondaryIntelDiscipline() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingSecondaryIntelDisciplineAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer taskingSecondaryIntelDisciplineInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Mission sub category for secondary intelligence discipline to be collected.
   * Example: /// Example: Convoy
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingSecondarySubCategory() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingSecondarySubCategoryAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer taskingSecondarySubCategoryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * What is the primary objective(Role) of this task.
   * Example: /// Example: Provide Targeting of Lead Vehicle
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingRole() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingRoleAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer taskingRoleInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Tasking operation name.
   * Example: /// Example: OP-HONEY-BADGER
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingOperation() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingOperationAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer taskingOperationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Tasking Priority (1-n).
   * Example: /// Example: 10.23
   * Constraints: No constraints specified.
   */
  public double taskingPriority() { int o = __offset(26); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Military Base to transmit the dissemination of this data.
   * Example: /// Example: ENVOYS
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingSupportedUnit() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingSupportedUnitAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer taskingSupportedUnitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Tasking emphasis.
   * Example: /// Example: EMPHASIS
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingEmphasis() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingEmphasisAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer taskingEmphasisInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Time of retasking, in ISO 8601 UTC format.
   * Example: /// Example: 2021-01-19T01:01:15.001Z
   * Constraints: No constraints specified.
   */
  public String taskingRetaskTime() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingRetaskTimeAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer taskingRetaskTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * WGS-84 latitude of the start position, in degrees. -90 to 90 degrees (negative values south of equator).
   * Example: /// Example: 45.23
   * Constraints: No constraints specified.
   */
  public double taskingStartPointLat() { int o = __offset(34); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * WGS-84 longitude of the start position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
   * Example: /// Example: 45.23
   * Constraints: No constraints specified.
   */
  public double taskingStartPointLong() { int o = __offset(36); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Tasking geographical collection area.
   * Example: /// Example: AREA
   * Constraints: No constraints specified.
   */
  public String taskingCollectionArea() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingCollectionAreaAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer taskingCollectionAreaInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * Joint Operations Area.
   * Example: /// Example: AREA
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingJoa() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingJoaAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer taskingJoaInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * A synchronization matrix is used to organize the logistics synchronization process during a mission.
   * Example: /// Example: MATRIX
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingSyncMatrixBin() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingSyncMatrixBinAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer taskingSyncMatrixBinInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Country code of the tasking.  A Country may represent countries, multi-national consortiums, and international organizations.
   * Example: /// Example: CODE
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String taskingCountry() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingCountryAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer taskingCountryInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * Region of the tasking.
   * Example: /// Example: REGION
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingRegion() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingRegionAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer taskingRegionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * Subregion of the tasking.
   * Example: /// Example: SUBREGION
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String taskingSubRegion() { int o = __offset(48); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer taskingSubRegionAsByteBuffer() { return __vector_as_bytebuffer(48, 1); }
  public ByteBuffer taskingSubRegionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 48, 1); }
  /**
   * Value of the Sensitive Reconnaissance Operations Track.
   * Example: /// Example: SRO
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String sroTrack() { int o = __offset(50); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sroTrackAsByteBuffer() { return __vector_as_bytebuffer(50, 1); }
  public ByteBuffer sroTrackInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 50, 1); }
  /**
   * Free text field for the user to specify special instructions needed for this collection.
   * Example: /// Example: TEXT
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String specialComGuidance() { int o = __offset(52); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer specialComGuidanceAsByteBuffer() { return __vector_as_bytebuffer(52, 1); }
  public ByteBuffer specialComGuidanceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 52, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String collectionPeriods() { int o = __offset(54); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer collectionPeriodsAsByteBuffer() { return __vector_as_bytebuffer(54, 1); }
  public ByteBuffer collectionPeriodsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 54, 1); }
  /**
   * Tasking desired collection requirements.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String taskingCollectionRequirements(int j) { int o = __offset(56); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int taskingCollectionRequirementsLength() { int o = __offset(56); return o != 0 ? __vector_len(o) : 0; }
  public StringVector taskingCollectionRequirementsVector() { return taskingCollectionRequirementsVector(new StringVector()); }
  public StringVector taskingCollectionRequirementsVector(StringVector obj) { int o = __offset(56); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createISRCollectionTaskings_Abridged(FlatBufferBuilder builder,
      int idOffset,
      byte type,
      byte collectionType,
      int taskingAorOffset,
      int eightLineOffset,
      int taskingPrimaryIntelDisciplineOffset,
      int taskingPrimarySubCategoryOffset,
      int taskingSecondaryIntelDisciplineOffset,
      int taskingSecondarySubCategoryOffset,
      int taskingRoleOffset,
      int taskingOperationOffset,
      double taskingPriority,
      int taskingSupportedUnitOffset,
      int taskingEmphasisOffset,
      int taskingRetaskTimeOffset,
      double taskingStartPointLat,
      double taskingStartPointLong,
      int taskingCollectionAreaOffset,
      int taskingJoaOffset,
      int taskingSyncMatrixBinOffset,
      int taskingCountryOffset,
      int taskingRegionOffset,
      int taskingSubRegionOffset,
      int sroTrackOffset,
      int specialComGuidanceOffset,
      int collectionPeriodsOffset,
      int taskingCollectionRequirementsOffset) {
    builder.startTable(27);
    ISRCollectionTaskings_Abridged.addTaskingStartPointLong(builder, taskingStartPointLong);
    ISRCollectionTaskings_Abridged.addTaskingStartPointLat(builder, taskingStartPointLat);
    ISRCollectionTaskings_Abridged.addTaskingPriority(builder, taskingPriority);
    ISRCollectionTaskings_Abridged.addTaskingCollectionRequirements(builder, taskingCollectionRequirementsOffset);
    ISRCollectionTaskings_Abridged.addCollectionPeriods(builder, collectionPeriodsOffset);
    ISRCollectionTaskings_Abridged.addSpecialComGuidance(builder, specialComGuidanceOffset);
    ISRCollectionTaskings_Abridged.addSroTrack(builder, sroTrackOffset);
    ISRCollectionTaskings_Abridged.addTaskingSubRegion(builder, taskingSubRegionOffset);
    ISRCollectionTaskings_Abridged.addTaskingRegion(builder, taskingRegionOffset);
    ISRCollectionTaskings_Abridged.addTaskingCountry(builder, taskingCountryOffset);
    ISRCollectionTaskings_Abridged.addTaskingSyncMatrixBin(builder, taskingSyncMatrixBinOffset);
    ISRCollectionTaskings_Abridged.addTaskingJoa(builder, taskingJoaOffset);
    ISRCollectionTaskings_Abridged.addTaskingCollectionArea(builder, taskingCollectionAreaOffset);
    ISRCollectionTaskings_Abridged.addTaskingRetaskTime(builder, taskingRetaskTimeOffset);
    ISRCollectionTaskings_Abridged.addTaskingEmphasis(builder, taskingEmphasisOffset);
    ISRCollectionTaskings_Abridged.addTaskingSupportedUnit(builder, taskingSupportedUnitOffset);
    ISRCollectionTaskings_Abridged.addTaskingOperation(builder, taskingOperationOffset);
    ISRCollectionTaskings_Abridged.addTaskingRole(builder, taskingRoleOffset);
    ISRCollectionTaskings_Abridged.addTaskingSecondarySubCategory(builder, taskingSecondarySubCategoryOffset);
    ISRCollectionTaskings_Abridged.addTaskingSecondaryIntelDiscipline(builder, taskingSecondaryIntelDisciplineOffset);
    ISRCollectionTaskings_Abridged.addTaskingPrimarySubCategory(builder, taskingPrimarySubCategoryOffset);
    ISRCollectionTaskings_Abridged.addTaskingPrimaryIntelDiscipline(builder, taskingPrimaryIntelDisciplineOffset);
    ISRCollectionTaskings_Abridged.addEightLine(builder, eightLineOffset);
    ISRCollectionTaskings_Abridged.addTaskingAor(builder, taskingAorOffset);
    ISRCollectionTaskings_Abridged.addId(builder, idOffset);
    ISRCollectionTaskings_Abridged.addCollectionType(builder, collectionType);
    ISRCollectionTaskings_Abridged.addType(builder, type);
    return ISRCollectionTaskings_Abridged.endISRCollectionTaskings_Abridged(builder);
  }

  public static void startISRCollectionTaskings_Abridged(FlatBufferBuilder builder) { builder.startTable(27); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(1, type, 0); }
  public static void addCollectionType(FlatBufferBuilder builder, byte collectionType) { builder.addByte(2, collectionType, 0); }
  public static void addTaskingAor(FlatBufferBuilder builder, int taskingAorOffset) { builder.addOffset(3, taskingAorOffset, 0); }
  public static void addEightLine(FlatBufferBuilder builder, int eightLineOffset) { builder.addOffset(4, eightLineOffset, 0); }
  public static void addTaskingPrimaryIntelDiscipline(FlatBufferBuilder builder, int taskingPrimaryIntelDisciplineOffset) { builder.addOffset(5, taskingPrimaryIntelDisciplineOffset, 0); }
  public static void addTaskingPrimarySubCategory(FlatBufferBuilder builder, int taskingPrimarySubCategoryOffset) { builder.addOffset(6, taskingPrimarySubCategoryOffset, 0); }
  public static void addTaskingSecondaryIntelDiscipline(FlatBufferBuilder builder, int taskingSecondaryIntelDisciplineOffset) { builder.addOffset(7, taskingSecondaryIntelDisciplineOffset, 0); }
  public static void addTaskingSecondarySubCategory(FlatBufferBuilder builder, int taskingSecondarySubCategoryOffset) { builder.addOffset(8, taskingSecondarySubCategoryOffset, 0); }
  public static void addTaskingRole(FlatBufferBuilder builder, int taskingRoleOffset) { builder.addOffset(9, taskingRoleOffset, 0); }
  public static void addTaskingOperation(FlatBufferBuilder builder, int taskingOperationOffset) { builder.addOffset(10, taskingOperationOffset, 0); }
  public static void addTaskingPriority(FlatBufferBuilder builder, double taskingPriority) { builder.addDouble(11, taskingPriority, 0.0); }
  public static void addTaskingSupportedUnit(FlatBufferBuilder builder, int taskingSupportedUnitOffset) { builder.addOffset(12, taskingSupportedUnitOffset, 0); }
  public static void addTaskingEmphasis(FlatBufferBuilder builder, int taskingEmphasisOffset) { builder.addOffset(13, taskingEmphasisOffset, 0); }
  public static void addTaskingRetaskTime(FlatBufferBuilder builder, int taskingRetaskTimeOffset) { builder.addOffset(14, taskingRetaskTimeOffset, 0); }
  public static void addTaskingStartPointLat(FlatBufferBuilder builder, double taskingStartPointLat) { builder.addDouble(15, taskingStartPointLat, 0.0); }
  public static void addTaskingStartPointLong(FlatBufferBuilder builder, double taskingStartPointLong) { builder.addDouble(16, taskingStartPointLong, 0.0); }
  public static void addTaskingCollectionArea(FlatBufferBuilder builder, int taskingCollectionAreaOffset) { builder.addOffset(17, taskingCollectionAreaOffset, 0); }
  public static void addTaskingJoa(FlatBufferBuilder builder, int taskingJoaOffset) { builder.addOffset(18, taskingJoaOffset, 0); }
  public static void addTaskingSyncMatrixBin(FlatBufferBuilder builder, int taskingSyncMatrixBinOffset) { builder.addOffset(19, taskingSyncMatrixBinOffset, 0); }
  public static void addTaskingCountry(FlatBufferBuilder builder, int taskingCountryOffset) { builder.addOffset(20, taskingCountryOffset, 0); }
  public static void addTaskingRegion(FlatBufferBuilder builder, int taskingRegionOffset) { builder.addOffset(21, taskingRegionOffset, 0); }
  public static void addTaskingSubRegion(FlatBufferBuilder builder, int taskingSubRegionOffset) { builder.addOffset(22, taskingSubRegionOffset, 0); }
  public static void addSroTrack(FlatBufferBuilder builder, int sroTrackOffset) { builder.addOffset(23, sroTrackOffset, 0); }
  public static void addSpecialComGuidance(FlatBufferBuilder builder, int specialComGuidanceOffset) { builder.addOffset(24, specialComGuidanceOffset, 0); }
  public static void addCollectionPeriods(FlatBufferBuilder builder, int collectionPeriodsOffset) { builder.addOffset(25, collectionPeriodsOffset, 0); }
  public static void addTaskingCollectionRequirements(FlatBufferBuilder builder, int taskingCollectionRequirementsOffset) { builder.addOffset(26, taskingCollectionRequirementsOffset, 0); }
  public static int createTaskingCollectionRequirementsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startTaskingCollectionRequirementsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endISRCollectionTaskings_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishISRCollectionTaskings_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "ISRC"); }
  public static void finishSizePrefixedISRCollectionTaskings_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "ISRC"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ISRCollectionTaskings_Abridged get(int j) { return get(new ISRCollectionTaskings_Abridged(), j); }
    public ISRCollectionTaskings_Abridged get(ISRCollectionTaskings_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

