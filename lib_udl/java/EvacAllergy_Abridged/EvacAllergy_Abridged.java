// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Allergy information.
 */
@SuppressWarnings("unused")
public final class EvacAllergy_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static EvacAllergy_Abridged getRootAsEvacAllergy_Abridged(ByteBuffer _bb) { return getRootAsEvacAllergy_Abridged(_bb, new EvacAllergy_Abridged()); }
  public static EvacAllergy_Abridged getRootAsEvacAllergy_Abridged(ByteBuffer _bb, EvacAllergy_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean EvacAllergy_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "EVAC"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EvacAllergy_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Type of patient allergy (e.g.  PENICILLIN, SULFA, OTHER).
   * Example: /// Example: PENICILLIN
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String type() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Additional comments on the  patient's allergy information.
   * Example: /// Example: Comments on the patient's allergies.
   * Constraints: Minimum length = 0, Maximum length = 1024
   */
  public String comments() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer commentsAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer commentsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createEvacAllergy_Abridged(FlatBufferBuilder builder,
      int typeOffset,
      int commentsOffset) {
    builder.startTable(2);
    EvacAllergy_Abridged.addComments(builder, commentsOffset);
    EvacAllergy_Abridged.addType(builder, typeOffset);
    return EvacAllergy_Abridged.endEvacAllergy_Abridged(builder);
  }

  public static void startEvacAllergy_Abridged(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(0, typeOffset, 0); }
  public static void addComments(FlatBufferBuilder builder, int commentsOffset) { builder.addOffset(1, commentsOffset, 0); }
  public static int endEvacAllergy_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEvacAllergy_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "EVAC"); }
  public static void finishSizePrefixedEvacAllergy_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "EVAC"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EvacAllergy_Abridged get(int j) { return get(new EvacAllergy_Abridged(), j); }
    public EvacAllergy_Abridged get(EvacAllergy_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

