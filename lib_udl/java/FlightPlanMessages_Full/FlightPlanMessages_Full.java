// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.
 */
@SuppressWarnings("unused")
public final class FlightPlanMessages_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static FlightPlanMessages_Full getRootAsFlightPlanMessages_Full(ByteBuffer _bb) { return getRootAsFlightPlanMessages_Full(_bb, new FlightPlanMessages_Full()); }
  public static FlightPlanMessages_Full getRootAsFlightPlanMessages_Full(ByteBuffer _bb, FlightPlanMessages_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean FlightPlanMessages_FullBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "FLIG"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public FlightPlanMessages_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The severity of the message.
   * Example: /// Example: SEVERE
   * Constraints: Minimum length = 0, Maximum length = 16
   */
  public String severity() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer severityAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer severityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * The waypoint number for which the message was generated, or enter "PLAN" for a message impacting the entire route.
   * Example: /// Example: 20
   * Constraints: Minimum length = 0, Maximum length = 8
   */
  public String wpNum() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer wpNumAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer wpNumInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * The flight path that generated the message (PRIMARY, ALTERNATE, etc.).
   * Example: /// Example: PRIMARY
   * Constraints: Minimum length = 0, Maximum length = 16
   */
  public String routePath() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer routePathAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer routePathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * The text of the message.
   * Example: /// Example: Message text
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String msgText() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgTextAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer msgTextInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createFlightPlanMessages_Full(FlatBufferBuilder builder,
      int severityOffset,
      int wpNumOffset,
      int routePathOffset,
      int msgTextOffset) {
    builder.startTable(4);
    FlightPlanMessages_Full.addMsgText(builder, msgTextOffset);
    FlightPlanMessages_Full.addRoutePath(builder, routePathOffset);
    FlightPlanMessages_Full.addWpNum(builder, wpNumOffset);
    FlightPlanMessages_Full.addSeverity(builder, severityOffset);
    return FlightPlanMessages_Full.endFlightPlanMessages_Full(builder);
  }

  public static void startFlightPlanMessages_Full(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addSeverity(FlatBufferBuilder builder, int severityOffset) { builder.addOffset(0, severityOffset, 0); }
  public static void addWpNum(FlatBufferBuilder builder, int wpNumOffset) { builder.addOffset(1, wpNumOffset, 0); }
  public static void addRoutePath(FlatBufferBuilder builder, int routePathOffset) { builder.addOffset(2, routePathOffset, 0); }
  public static void addMsgText(FlatBufferBuilder builder, int msgTextOffset) { builder.addOffset(3, msgTextOffset, 0); }
  public static int endFlightPlanMessages_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishFlightPlanMessages_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "FLIG"); }
  public static void finishSizePrefixedFlightPlanMessages_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "FLIG"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public FlightPlanMessages_Full get(int j) { return get(new FlightPlanMessages_Full(), j); }
    public FlightPlanMessages_Full get(FlightPlanMessages_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

