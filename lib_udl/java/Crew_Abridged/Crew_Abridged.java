// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Crew Services.
 */
@SuppressWarnings("unused")
public final class Crew_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Crew_Abridged getRootAsCrew_Abridged(ByteBuffer _bb) { return getRootAsCrew_Abridged(_bb, new Crew_Abridged()); }
  public static Crew_Abridged getRootAsCrew_Abridged(ByteBuffer _bb, Crew_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean Crew_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "CREW"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Crew_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: bdad6945-c9e4-b829-f7be-1ad075541921
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Unique identifier of the formed crew provided by the originating source. Provided for systems that require tracking of an internal system generated ID.
   * Example: /// Example: JHJDHjhuu929o92
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String origCrewId() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origCrewIdAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer origCrewIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Name of the formed crew.
   * Example: /// Example: falcon
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String crewName() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer crewNameAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer crewNameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Crew Status (e.g. APPROVED, PENDING).
   * Example: /// Example: APPROVED
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String status() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer statusAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer statusInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Unique identifier of the Aircraft Sortie associated with this crew record.
   * Example: /// Example: 4ef3d1e8-ab08-ab70-498f-edc479734e5c
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idSortie() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idSortieAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer idSortieInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Time the crew is legal for alert, in ISO8601 UTC format, with millisecond precision.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String legalAlertTime() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer legalAlertTimeAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer legalAlertTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Time the crew is legal for bravo, in ISO8601 UTC format, with millisecond precision.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String legalBravoTime() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer legalBravoTimeAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer legalBravoTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Time the crew was alerted, in ISO8601 UTC format, with millisecond precision.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String alertedTime() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer alertedTimeAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer alertedTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Scheduled return time, in ISO8601 UTC format, with millisecond precision.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String returnTime() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer returnTimeAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer returnTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Crew Flight Duty Period (FDP) eligibility type.
   * Example: /// Example: A
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String fdpEligType() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fdpEligTypeAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer fdpEligTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Flight Duty Period (FDP) type.
   * Example: /// Example: A
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String fdpType() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer fdpTypeAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer fdpTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Crew type.
   * Example: /// Example: AIRLAND
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String crewType() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer crewTypeAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer crewTypeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * The crew's Aviation Resource Management System (ARMS) unit.  If multiple units exist, use the Aircraft Commander's Unit.
   * Example: /// Example: 00016ALSQ
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String armsCrewUnit() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer armsCrewUnitAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer armsCrewUnitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * CrewMembers Collection.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String crewMembers(int j) { int o = __offset(32); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int crewMembersLength() { int o = __offset(32); return o != 0 ? __vector_len(o) : 0; }
  public StringVector crewMembersVector() { return crewMembersVector(new StringVector()); }
  public StringVector crewMembersVector(StringVector obj) { int o = __offset(32); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2022-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: OPS1
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(48); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createCrew_Abridged(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int origCrewIdOffset,
      int crewNameOffset,
      int statusOffset,
      int idSortieOffset,
      int legalAlertTimeOffset,
      int legalBravoTimeOffset,
      int alertedTimeOffset,
      int returnTimeOffset,
      int fdpEligTypeOffset,
      int fdpTypeOffset,
      int crewTypeOffset,
      int armsCrewUnitOffset,
      int crewMembersOffset,
      int createdAtOffset,
      int createdByOffset,
      int updatedAtOffset,
      int updatedByOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode) {
    builder.startTable(23);
    Crew_Abridged.addOrigNetwork(builder, origNetworkOffset);
    Crew_Abridged.addOrigin(builder, originOffset);
    Crew_Abridged.addSource(builder, sourceOffset);
    Crew_Abridged.addUpdatedBy(builder, updatedByOffset);
    Crew_Abridged.addUpdatedAt(builder, updatedAtOffset);
    Crew_Abridged.addCreatedBy(builder, createdByOffset);
    Crew_Abridged.addCreatedAt(builder, createdAtOffset);
    Crew_Abridged.addCrewMembers(builder, crewMembersOffset);
    Crew_Abridged.addArmsCrewUnit(builder, armsCrewUnitOffset);
    Crew_Abridged.addCrewType(builder, crewTypeOffset);
    Crew_Abridged.addFdpType(builder, fdpTypeOffset);
    Crew_Abridged.addFdpEligType(builder, fdpEligTypeOffset);
    Crew_Abridged.addReturnTime(builder, returnTimeOffset);
    Crew_Abridged.addAlertedTime(builder, alertedTimeOffset);
    Crew_Abridged.addLegalBravoTime(builder, legalBravoTimeOffset);
    Crew_Abridged.addLegalAlertTime(builder, legalAlertTimeOffset);
    Crew_Abridged.addIdSortie(builder, idSortieOffset);
    Crew_Abridged.addStatus(builder, statusOffset);
    Crew_Abridged.addCrewName(builder, crewNameOffset);
    Crew_Abridged.addOrigCrewId(builder, origCrewIdOffset);
    Crew_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    Crew_Abridged.addId(builder, idOffset);
    Crew_Abridged.addDataMode(builder, dataMode);
    return Crew_Abridged.endCrew_Abridged(builder);
  }

  public static void startCrew_Abridged(FlatBufferBuilder builder) { builder.startTable(23); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addOrigCrewId(FlatBufferBuilder builder, int origCrewIdOffset) { builder.addOffset(2, origCrewIdOffset, 0); }
  public static void addCrewName(FlatBufferBuilder builder, int crewNameOffset) { builder.addOffset(3, crewNameOffset, 0); }
  public static void addStatus(FlatBufferBuilder builder, int statusOffset) { builder.addOffset(4, statusOffset, 0); }
  public static void addIdSortie(FlatBufferBuilder builder, int idSortieOffset) { builder.addOffset(5, idSortieOffset, 0); }
  public static void addLegalAlertTime(FlatBufferBuilder builder, int legalAlertTimeOffset) { builder.addOffset(6, legalAlertTimeOffset, 0); }
  public static void addLegalBravoTime(FlatBufferBuilder builder, int legalBravoTimeOffset) { builder.addOffset(7, legalBravoTimeOffset, 0); }
  public static void addAlertedTime(FlatBufferBuilder builder, int alertedTimeOffset) { builder.addOffset(8, alertedTimeOffset, 0); }
  public static void addReturnTime(FlatBufferBuilder builder, int returnTimeOffset) { builder.addOffset(9, returnTimeOffset, 0); }
  public static void addFdpEligType(FlatBufferBuilder builder, int fdpEligTypeOffset) { builder.addOffset(10, fdpEligTypeOffset, 0); }
  public static void addFdpType(FlatBufferBuilder builder, int fdpTypeOffset) { builder.addOffset(11, fdpTypeOffset, 0); }
  public static void addCrewType(FlatBufferBuilder builder, int crewTypeOffset) { builder.addOffset(12, crewTypeOffset, 0); }
  public static void addArmsCrewUnit(FlatBufferBuilder builder, int armsCrewUnitOffset) { builder.addOffset(13, armsCrewUnitOffset, 0); }
  public static void addCrewMembers(FlatBufferBuilder builder, int crewMembersOffset) { builder.addOffset(14, crewMembersOffset, 0); }
  public static int createCrewMembersVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startCrewMembersVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(15, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(16, createdByOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(17, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(18, updatedByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(19, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(20, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(21, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(22, dataMode, 0); }
  public static int endCrew_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishCrew_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "CREW"); }
  public static void finishSizePrefixedCrew_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "CREW"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Crew_Abridged get(int j) { return get(new Crew_Abridged(), j); }
    public Crew_Abridged get(Crew_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

