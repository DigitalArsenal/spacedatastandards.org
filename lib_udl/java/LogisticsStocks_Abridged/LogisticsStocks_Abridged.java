// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// The supply stocks for this support item.
 */
@SuppressWarnings("unused")
public final class LogisticsStocks_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static LogisticsStocks_Abridged getRootAsLogisticsStocks_Abridged(ByteBuffer _bb) { return getRootAsLogisticsStocks_Abridged(_bb, new LogisticsStocks_Abridged()); }
  public static LogisticsStocks_Abridged getRootAsLogisticsStocks_Abridged(ByteBuffer _bb, LogisticsStocks_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean LogisticsStocks_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "LOGI"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LogisticsStocks_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The ICAO code for the primary location with available parts.
   * Example: /// Example: PHIK
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String sourceIcao() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceIcaoAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer sourceIcaoInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * The quantity of available parts needed from sourceICAO.
   * Example: /// Example: 4
   * Constraints: No constraints specified.
   */
  public int quantity() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * The datetime when the parts were sourced, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-13T13:47:00.123Z
   * Constraints: No constraints specified.
   */
  public String stockCheckTime() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer stockCheckTimeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer stockCheckTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * The point of contact at the sourced location.
   * Example: /// Example: SMITH, JOHN J
   * Constraints: Minimum length = 0, Maximum length = 68
   */
  public String stockPoc() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer stockPocAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer stockPocInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createLogisticsStocks_Abridged(FlatBufferBuilder builder,
      int sourceIcaoOffset,
      int quantity,
      int stockCheckTimeOffset,
      int stockPocOffset) {
    builder.startTable(4);
    LogisticsStocks_Abridged.addStockPoc(builder, stockPocOffset);
    LogisticsStocks_Abridged.addStockCheckTime(builder, stockCheckTimeOffset);
    LogisticsStocks_Abridged.addQuantity(builder, quantity);
    LogisticsStocks_Abridged.addSourceIcao(builder, sourceIcaoOffset);
    return LogisticsStocks_Abridged.endLogisticsStocks_Abridged(builder);
  }

  public static void startLogisticsStocks_Abridged(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addSourceIcao(FlatBufferBuilder builder, int sourceIcaoOffset) { builder.addOffset(0, sourceIcaoOffset, 0); }
  public static void addQuantity(FlatBufferBuilder builder, int quantity) { builder.addInt(1, quantity, 0); }
  public static void addStockCheckTime(FlatBufferBuilder builder, int stockCheckTimeOffset) { builder.addOffset(2, stockCheckTimeOffset, 0); }
  public static void addStockPoc(FlatBufferBuilder builder, int stockPocOffset) { builder.addOffset(3, stockPocOffset, 0); }
  public static int endLogisticsStocks_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishLogisticsStocks_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "LOGI"); }
  public static void finishSizePrefixedLogisticsStocks_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "LOGI"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LogisticsStocks_Abridged get(int j) { return get(new LogisticsStocks_Abridged(), j); }
    public LogisticsStocks_Abridged get(LogisticsStocks_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

