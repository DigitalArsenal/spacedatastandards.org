// automatically generated by the FlatBuffers compiler, do not modify

package Entity_Abridged;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * An entity is a generic representation of any object within a space/SSA system such as sensors, on-orbit objects, RF Emitters, space craft buses, etc. An entity can have an operating unit, a location (if terrestrial), and statuses.
 */
@SuppressWarnings("unused")
public final class Entity_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Entity_Abridged getRootAsEntity_Abridged(ByteBuffer _bb) { return getRootAsEntity_Abridged(_bb, new Entity_Abridged()); }
  public static Entity_Abridged getRootAsEntity_Abridged(ByteBuffer _bb, Entity_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Entity_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record.
   * Example: ENTITY-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String idEntity() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idEntityAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idEntityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Unique entity name.
   * Example: Example name
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * The type of entity represented by this record (AIRCRAFT, BUS, COMM, IR, NAVIGATION, ONORBIT, RFEMITTER, SCIENTIFIC, SENSOR, SITE, VESSEL).
   * Example: ONORBIT
   * Constraints: Minimum length = 1, Maximum length = 45
   */
  public byte type() { int o = __offset(10); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Unique identifier of the entity location, if terrestrial/fixed.
   * Example: LOCATION-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idLocation() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idLocationAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer idLocationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDLâ€™s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.
   * Example: US
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String countryCode() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer countryCodeAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer countryCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Type of organization which owns this entity (e.g. Commercial, Government, Academic, Consortium, etc).
   * Example: Commercial
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public byte ownerType() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Boolean indicating if this entity is taskable.
   * Example: False
   * Constraints: No constraints specified.
   */
  public boolean taskable() { int o = __offset(18); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Source of the data.
   * Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
   * Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(28); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * No description provided.
   * Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String location() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer locationAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer locationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * No description provided.
   * Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String onOrbit() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer onOrbitAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer onOrbitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Onorbit identifier if this entity is part of an on-orbit object. For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites.
   * Example: ONORBIT-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idOnOrbit() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idOnOrbitAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer idOnOrbitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Unique identifier of the associated operating unit object.
   * Example: OPERATINGUNIT-ID
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idOperatingUnit() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idOperatingUnitAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer idOperatingUnitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: OPS1
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }

  public static int createEntity_Abridged(FlatBufferBuilder builder,
      int idEntityOffset,
      int nameOffset,
      int classificationMarkingOffset,
      byte type,
      int idLocationOffset,
      int countryCodeOffset,
      byte ownerType,
      boolean taskable,
      int createdAtOffset,
      int createdByOffset,
      int sourceOffset,
      int originOffset,
      byte dataMode,
      int locationOffset,
      int onOrbitOffset,
      int idOnOrbitOffset,
      int idOperatingUnitOffset,
      int origNetworkOffset) {
    builder.startTable(18);
    Entity_Abridged.addOrigNetwork(builder, origNetworkOffset);
    Entity_Abridged.addIdOperatingUnit(builder, idOperatingUnitOffset);
    Entity_Abridged.addIdOnOrbit(builder, idOnOrbitOffset);
    Entity_Abridged.addOnOrbit(builder, onOrbitOffset);
    Entity_Abridged.addLocation(builder, locationOffset);
    Entity_Abridged.addOrigin(builder, originOffset);
    Entity_Abridged.addSource(builder, sourceOffset);
    Entity_Abridged.addCreatedBy(builder, createdByOffset);
    Entity_Abridged.addCreatedAt(builder, createdAtOffset);
    Entity_Abridged.addCountryCode(builder, countryCodeOffset);
    Entity_Abridged.addIdLocation(builder, idLocationOffset);
    Entity_Abridged.addClassificationMarking(builder, classificationMarkingOffset);
    Entity_Abridged.addName(builder, nameOffset);
    Entity_Abridged.addIdEntity(builder, idEntityOffset);
    Entity_Abridged.addDataMode(builder, dataMode);
    Entity_Abridged.addTaskable(builder, taskable);
    Entity_Abridged.addOwnerType(builder, ownerType);
    Entity_Abridged.addType(builder, type);
    return Entity_Abridged.endEntity_Abridged(builder);
  }

  public static void startEntity_Abridged(FlatBufferBuilder builder) { builder.startTable(18); }
  public static void addIdEntity(FlatBufferBuilder builder, int idEntityOffset) { builder.addOffset(0, idEntityOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(2, classificationMarkingOffset, 0); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(3, type, 0); }
  public static void addIdLocation(FlatBufferBuilder builder, int idLocationOffset) { builder.addOffset(4, idLocationOffset, 0); }
  public static void addCountryCode(FlatBufferBuilder builder, int countryCodeOffset) { builder.addOffset(5, countryCodeOffset, 0); }
  public static void addOwnerType(FlatBufferBuilder builder, byte ownerType) { builder.addByte(6, ownerType, 0); }
  public static void addTaskable(FlatBufferBuilder builder, boolean taskable) { builder.addBoolean(7, taskable, false); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(8, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(9, createdByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(10, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(11, originOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(12, dataMode, 0); }
  public static void addLocation(FlatBufferBuilder builder, int locationOffset) { builder.addOffset(13, locationOffset, 0); }
  public static void addOnOrbit(FlatBufferBuilder builder, int onOrbitOffset) { builder.addOffset(14, onOrbitOffset, 0); }
  public static void addIdOnOrbit(FlatBufferBuilder builder, int idOnOrbitOffset) { builder.addOffset(15, idOnOrbitOffset, 0); }
  public static void addIdOperatingUnit(FlatBufferBuilder builder, int idOperatingUnitOffset) { builder.addOffset(16, idOperatingUnitOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(17, origNetworkOffset, 0); }
  public static int endEntity_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Entity_Abridged get(int j) { return get(new Entity_Abridged(), j); }
    public Entity_Abridged get(Entity_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

