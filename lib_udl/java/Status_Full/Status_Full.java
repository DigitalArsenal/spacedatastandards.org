// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Status for a particular Entity. An entity may have multiple status records collected by various sources.
 */
@SuppressWarnings("unused")
public final class Status_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static Status_Full getRootAsStatus_Full(ByteBuffer _bb) { return getRootAsStatus_Full(_bb, new Status_Full()); }
  public static Status_Full getRootAsStatus_Full(ByteBuffer _bb, Status_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean Status_FullBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "STAT"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Status_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: STATUS-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * The sources or SCG references from which the classification of this data is derived.
   * Example: /// Example: SOME_SOURCE
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String derivedFrom() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer derivedFromAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer derivedFromInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * The declassification date of this data, in ISO 8601 UTC format.
   * Example: /// Example: 2021-01-01T01:02:02.123Z
   * Constraints: No constraints specified.
   */
  public String declassificationDate() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer declassificationDateAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer declassificationDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Declassification string of this data.
   * Example: /// Example: U
   * Constraints: Minimum length = 0, Maximum length = 256
   */
  public String declassificationString() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer declassificationStringAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer declassificationStringInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Unique identifier of the parent entity.
   * Example: /// Example: ENTITY-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String idEntity() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idEntityAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer idEntityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Overall state of the entity, if applicable (e.g. UNKNOWN, DEAD, ACTIVE, RF ACTIVE, STANDBY).
   * Example: /// Example: ACTIVE
   * Constraints: Minimum length = 0, Maximum length = 16
   */
  public byte state() { int o = __offset(16); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * System capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).
   * Example: /// Example: FMC
   * Constraints: Minimum length = 0, Maximum length = 3
   */
  public byte sysCap() { int o = __offset(18); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Operation capability of the entity, if applicable (e.g. FMC, NMC, PMC, UNK).
   * Example: /// Example: FMC
   * Constraints: Minimum length = 0, Maximum length = 3
   */
  public byte opsCap() { int o = __offset(20); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * No description provided.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String subStatusCollection(int j) { int o = __offset(24); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int subStatusCollectionLength() { int o = __offset(24); return o != 0 ? __vector_len(o) : 0; }
  public StringVector subStatusCollectionVector() { return subStatusCollectionVector(new StringVector()); }
  public StringVector subStatusCollectionVector(StringVector obj) { int o = __offset(24); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(26); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Comments describing the status creation and or updates to an entity.
   * Example: /// Example: Example Notes
   * Constraints: No constraints specified.
   */
  public String notes() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer notesAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer notesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Time the row was last updated in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Application user who updated the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: TST1
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }

  public static int createStatus_Full(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int derivedFromOffset,
      int declassificationDateOffset,
      int declassificationStringOffset,
      int idEntityOffset,
      byte state,
      byte sysCap,
      byte opsCap,
      int sourceOffset,
      int subStatusCollectionOffset,
      byte dataMode,
      int notesOffset,
      int createdAtOffset,
      int createdByOffset,
      int updatedAtOffset,
      int updatedByOffset,
      int originOffset,
      int origNetworkOffset) {
    builder.startTable(19);
    Status_Full.addOrigNetwork(builder, origNetworkOffset);
    Status_Full.addOrigin(builder, originOffset);
    Status_Full.addUpdatedBy(builder, updatedByOffset);
    Status_Full.addUpdatedAt(builder, updatedAtOffset);
    Status_Full.addCreatedBy(builder, createdByOffset);
    Status_Full.addCreatedAt(builder, createdAtOffset);
    Status_Full.addNotes(builder, notesOffset);
    Status_Full.addSubStatusCollection(builder, subStatusCollectionOffset);
    Status_Full.addSource(builder, sourceOffset);
    Status_Full.addIdEntity(builder, idEntityOffset);
    Status_Full.addDeclassificationString(builder, declassificationStringOffset);
    Status_Full.addDeclassificationDate(builder, declassificationDateOffset);
    Status_Full.addDerivedFrom(builder, derivedFromOffset);
    Status_Full.addClassificationMarking(builder, classificationMarkingOffset);
    Status_Full.addId(builder, idOffset);
    Status_Full.addDataMode(builder, dataMode);
    Status_Full.addOpsCap(builder, opsCap);
    Status_Full.addSysCap(builder, sysCap);
    Status_Full.addState(builder, state);
    return Status_Full.endStatus_Full(builder);
  }

  public static void startStatus_Full(FlatBufferBuilder builder) { builder.startTable(19); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addDerivedFrom(FlatBufferBuilder builder, int derivedFromOffset) { builder.addOffset(2, derivedFromOffset, 0); }
  public static void addDeclassificationDate(FlatBufferBuilder builder, int declassificationDateOffset) { builder.addOffset(3, declassificationDateOffset, 0); }
  public static void addDeclassificationString(FlatBufferBuilder builder, int declassificationStringOffset) { builder.addOffset(4, declassificationStringOffset, 0); }
  public static void addIdEntity(FlatBufferBuilder builder, int idEntityOffset) { builder.addOffset(5, idEntityOffset, 0); }
  public static void addState(FlatBufferBuilder builder, byte state) { builder.addByte(6, state, 0); }
  public static void addSysCap(FlatBufferBuilder builder, byte sysCap) { builder.addByte(7, sysCap, 0); }
  public static void addOpsCap(FlatBufferBuilder builder, byte opsCap) { builder.addByte(8, opsCap, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(9, sourceOffset, 0); }
  public static void addSubStatusCollection(FlatBufferBuilder builder, int subStatusCollectionOffset) { builder.addOffset(10, subStatusCollectionOffset, 0); }
  public static int createSubStatusCollectionVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startSubStatusCollectionVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(11, dataMode, 0); }
  public static void addNotes(FlatBufferBuilder builder, int notesOffset) { builder.addOffset(12, notesOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(13, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(14, createdByOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(15, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(16, updatedByOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(17, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(18, origNetworkOffset, 0); }
  public static int endStatus_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishStatus_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "STAT"); }
  public static void finishSizePrefixedStatus_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "STAT"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Status_Full get(int j) { return get(new Status_Full(), j); }
    public Status_Full get(Status_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

