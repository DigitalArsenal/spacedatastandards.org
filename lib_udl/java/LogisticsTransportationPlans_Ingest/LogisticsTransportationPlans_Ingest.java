// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.
 */
@SuppressWarnings("unused")
public final class LogisticsTransportationPlans_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static LogisticsTransportationPlans_Ingest getRootAsLogisticsTransportationPlans_Ingest(ByteBuffer _bb) { return getRootAsLogisticsTransportationPlans_Ingest(_bb, new LogisticsTransportationPlans_Ingest()); }
  public static LogisticsTransportationPlans_Ingest getRootAsLogisticsTransportationPlans_Ingest(ByteBuffer _bb, LogisticsTransportationPlans_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean LogisticsTransportationPlans_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "LOGI"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LogisticsTransportationPlans_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.
   * Example: /// Example: T89002
   * Constraints: Minimum length = 0, Maximum length = 10
   */
  public String plansNumber() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer plansNumberAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer plansNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.
   * Example: /// Example: False
   * Constraints: No constraints specified.
   */
  public boolean missionChange() { int o = __offset(6); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  /**
   * Defines the transporation plan as either a deployment or redeployment.
   * Example: /// Example: DEPLOY
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String planDefinition() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer planDefinitionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer planDefinitionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.
   * Example: /// Example: N
   * Constraints: Minimum length = 1, Maximum length = 1
   */
  public String statusCode() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer statusCodeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer statusCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * The AMS username of the operator who alters the coordination status.  Automatically captured by the system.
   * Example: /// Example: SMITH, JOHN
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String coordinator() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer coordinatorAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer coordinatorInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.
   * Example: /// Example: TACC
   * Constraints: Minimum length = 0, Maximum length = 10
   */
  public String coordinatorUnit() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer coordinatorUnitAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer coordinatorUnitInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * The origin location.
   * Example: /// Example: KATL
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String originIcao() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originIcaoAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer originIcaoInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * ETD of the first segment, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-15T14:25:00.123Z
   * Constraints: No constraints specified.
   */
  public String estDepTime() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer estDepTimeAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer estDepTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * ETA of the final segment, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-15T14:25:00.123Z
   * Constraints: No constraints specified.
   */
  public String estArrTime() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer estArrTimeAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer estArrTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Destination location ICAO.
   * Example: /// Example: YBCS
   * Constraints: Minimum length = 0, Maximum length = 4
   */
  public String destinationIcao() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer destinationIcaoAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer destinationIcaoInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * The identifier that represents a Logistics Master Record.
   * Example: /// Example: L62126
   * Constraints: Minimum length = 0, Maximum length = 10
   */
  public String logisticMasterRecordId() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer logisticMasterRecordIdAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer logisticMasterRecordIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Contains the tail number displayed by GDSS2.
   * Example: /// Example: 99209
   * Constraints: Minimum length = 0, Maximum length = 7
   */
  public String tpTailNumber() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tpTailNumberAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer tpTailNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.
   * Example: /// Example: C17A
   * Constraints: Minimum length = 0, Maximum length = 8
   */
  public String tpAircraftMds() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer tpAircraftMdsAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer tpAircraftMdsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * The major command for the current unit.
   * Example: /// Example: HQAMC
   * Constraints: Minimum length = 0, Maximum length = 250
   */
  public String majcom() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer majcomAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer majcomInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-14T20:37:00.123Z
   * Constraints: No constraints specified.
   */
  public String approxArrTime() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer approxArrTimeAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer approxArrTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Transportation plan duration, expressed in the format MMM:SS.
   * Example: /// Example: 086:20
   * Constraints: Minimum length = 0, Maximum length = 6
   */
  public String duration() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer durationAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer durationInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-14T19:37:00.123Z
   * Constraints: No constraints specified.
   */
  public String actDepTime() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer actDepTimeAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer actDepTimeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-14T20:37:00.123Z
   * Constraints: No constraints specified.
   */
  public String closedDate() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer closedDateAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer closedDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-14T20:37:00.123Z
   * Constraints: No constraints specified.
   */
  public String cancelledDate() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer cancelledDateAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer cancelledDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.
   * Example: /// Example: NMCMU
   * Constraints: Minimum length = 0, Maximum length = 6
   */
  public String aircraftStatus() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer aircraftStatusAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer aircraftStatusInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * Transportation plan enroute stops.
   * Example: /// Example: 4
   * Constraints: No constraints specified.
   */
  public int numEnrouteStops() { int o = __offset(44); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.
   * Example: /// Example: 9009209
   * Constraints: Minimum length = 0, Maximum length = 30
   */
  public String serialNumber() { int o = __offset(46); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer serialNumberAsByteBuffer() { return __vector_as_bytebuffer(46, 1); }
  public ByteBuffer serialNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 46, 1); }
  /**
   * The number of transloads for this Transportation Plan.
   * Example: /// Example: 3
   * Constraints: No constraints specified.
   */
  public int numTransLoads() { int o = __offset(48); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  /**
   * Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.
   * Example: /// Example: 2023-07-14T20:37:00.123Z
   * Constraints: No constraints specified.
   */
  public String lastChangedDate() { int o = __offset(50); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lastChangedDateAsByteBuffer() { return __vector_as_bytebuffer(50, 1); }
  public ByteBuffer lastChangedDateInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 50, 1); }
  /**
   * The transportation segments associated with this transportation plan.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String logisticsSegments(int j) { int o = __offset(52); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int logisticsSegmentsLength() { int o = __offset(52); return o != 0 ? __vector_len(o) : 0; }
  public StringVector logisticsSegmentsVector() { return logisticsSegmentsVector(new StringVector()); }
  public StringVector logisticsSegmentsVector(StringVector obj) { int o = __offset(52); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }
  /**
   * Remarks associated with this transportation plan.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String logisticsTransportationPlansRemarks(int j) { int o = __offset(54); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int logisticsTransportationPlansRemarksLength() { int o = __offset(54); return o != 0 ? __vector_len(o) : 0; }
  public StringVector logisticsTransportationPlansRemarksVector() { return logisticsTransportationPlansRemarksVector(new StringVector()); }
  public StringVector logisticsTransportationPlansRemarksVector(StringVector obj) { int o = __offset(54); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createLogisticsTransportationPlans_Ingest(FlatBufferBuilder builder,
      int plansNumberOffset,
      boolean missionChange,
      int planDefinitionOffset,
      int statusCodeOffset,
      int coordinatorOffset,
      int coordinatorUnitOffset,
      int originIcaoOffset,
      int estDepTimeOffset,
      int estArrTimeOffset,
      int destinationIcaoOffset,
      int logisticMasterRecordIdOffset,
      int tpTailNumberOffset,
      int tpAircraftMdsOffset,
      int majcomOffset,
      int approxArrTimeOffset,
      int durationOffset,
      int actDepTimeOffset,
      int closedDateOffset,
      int cancelledDateOffset,
      int aircraftStatusOffset,
      int numEnrouteStops,
      int serialNumberOffset,
      int numTransLoads,
      int lastChangedDateOffset,
      int logisticsSegmentsOffset,
      int logisticsTransportationPlansRemarksOffset) {
    builder.startTable(26);
    LogisticsTransportationPlans_Ingest.addLogisticsTransportationPlansRemarks(builder, logisticsTransportationPlansRemarksOffset);
    LogisticsTransportationPlans_Ingest.addLogisticsSegments(builder, logisticsSegmentsOffset);
    LogisticsTransportationPlans_Ingest.addLastChangedDate(builder, lastChangedDateOffset);
    LogisticsTransportationPlans_Ingest.addNumTransLoads(builder, numTransLoads);
    LogisticsTransportationPlans_Ingest.addSerialNumber(builder, serialNumberOffset);
    LogisticsTransportationPlans_Ingest.addNumEnrouteStops(builder, numEnrouteStops);
    LogisticsTransportationPlans_Ingest.addAircraftStatus(builder, aircraftStatusOffset);
    LogisticsTransportationPlans_Ingest.addCancelledDate(builder, cancelledDateOffset);
    LogisticsTransportationPlans_Ingest.addClosedDate(builder, closedDateOffset);
    LogisticsTransportationPlans_Ingest.addActDepTime(builder, actDepTimeOffset);
    LogisticsTransportationPlans_Ingest.addDuration(builder, durationOffset);
    LogisticsTransportationPlans_Ingest.addApproxArrTime(builder, approxArrTimeOffset);
    LogisticsTransportationPlans_Ingest.addMajcom(builder, majcomOffset);
    LogisticsTransportationPlans_Ingest.addTpAircraftMds(builder, tpAircraftMdsOffset);
    LogisticsTransportationPlans_Ingest.addTpTailNumber(builder, tpTailNumberOffset);
    LogisticsTransportationPlans_Ingest.addLogisticMasterRecordId(builder, logisticMasterRecordIdOffset);
    LogisticsTransportationPlans_Ingest.addDestinationIcao(builder, destinationIcaoOffset);
    LogisticsTransportationPlans_Ingest.addEstArrTime(builder, estArrTimeOffset);
    LogisticsTransportationPlans_Ingest.addEstDepTime(builder, estDepTimeOffset);
    LogisticsTransportationPlans_Ingest.addOriginIcao(builder, originIcaoOffset);
    LogisticsTransportationPlans_Ingest.addCoordinatorUnit(builder, coordinatorUnitOffset);
    LogisticsTransportationPlans_Ingest.addCoordinator(builder, coordinatorOffset);
    LogisticsTransportationPlans_Ingest.addStatusCode(builder, statusCodeOffset);
    LogisticsTransportationPlans_Ingest.addPlanDefinition(builder, planDefinitionOffset);
    LogisticsTransportationPlans_Ingest.addPlansNumber(builder, plansNumberOffset);
    LogisticsTransportationPlans_Ingest.addMissionChange(builder, missionChange);
    return LogisticsTransportationPlans_Ingest.endLogisticsTransportationPlans_Ingest(builder);
  }

  public static void startLogisticsTransportationPlans_Ingest(FlatBufferBuilder builder) { builder.startTable(26); }
  public static void addPlansNumber(FlatBufferBuilder builder, int plansNumberOffset) { builder.addOffset(0, plansNumberOffset, 0); }
  public static void addMissionChange(FlatBufferBuilder builder, boolean missionChange) { builder.addBoolean(1, missionChange, false); }
  public static void addPlanDefinition(FlatBufferBuilder builder, int planDefinitionOffset) { builder.addOffset(2, planDefinitionOffset, 0); }
  public static void addStatusCode(FlatBufferBuilder builder, int statusCodeOffset) { builder.addOffset(3, statusCodeOffset, 0); }
  public static void addCoordinator(FlatBufferBuilder builder, int coordinatorOffset) { builder.addOffset(4, coordinatorOffset, 0); }
  public static void addCoordinatorUnit(FlatBufferBuilder builder, int coordinatorUnitOffset) { builder.addOffset(5, coordinatorUnitOffset, 0); }
  public static void addOriginIcao(FlatBufferBuilder builder, int originIcaoOffset) { builder.addOffset(6, originIcaoOffset, 0); }
  public static void addEstDepTime(FlatBufferBuilder builder, int estDepTimeOffset) { builder.addOffset(7, estDepTimeOffset, 0); }
  public static void addEstArrTime(FlatBufferBuilder builder, int estArrTimeOffset) { builder.addOffset(8, estArrTimeOffset, 0); }
  public static void addDestinationIcao(FlatBufferBuilder builder, int destinationIcaoOffset) { builder.addOffset(9, destinationIcaoOffset, 0); }
  public static void addLogisticMasterRecordId(FlatBufferBuilder builder, int logisticMasterRecordIdOffset) { builder.addOffset(10, logisticMasterRecordIdOffset, 0); }
  public static void addTpTailNumber(FlatBufferBuilder builder, int tpTailNumberOffset) { builder.addOffset(11, tpTailNumberOffset, 0); }
  public static void addTpAircraftMds(FlatBufferBuilder builder, int tpAircraftMdsOffset) { builder.addOffset(12, tpAircraftMdsOffset, 0); }
  public static void addMajcom(FlatBufferBuilder builder, int majcomOffset) { builder.addOffset(13, majcomOffset, 0); }
  public static void addApproxArrTime(FlatBufferBuilder builder, int approxArrTimeOffset) { builder.addOffset(14, approxArrTimeOffset, 0); }
  public static void addDuration(FlatBufferBuilder builder, int durationOffset) { builder.addOffset(15, durationOffset, 0); }
  public static void addActDepTime(FlatBufferBuilder builder, int actDepTimeOffset) { builder.addOffset(16, actDepTimeOffset, 0); }
  public static void addClosedDate(FlatBufferBuilder builder, int closedDateOffset) { builder.addOffset(17, closedDateOffset, 0); }
  public static void addCancelledDate(FlatBufferBuilder builder, int cancelledDateOffset) { builder.addOffset(18, cancelledDateOffset, 0); }
  public static void addAircraftStatus(FlatBufferBuilder builder, int aircraftStatusOffset) { builder.addOffset(19, aircraftStatusOffset, 0); }
  public static void addNumEnrouteStops(FlatBufferBuilder builder, int numEnrouteStops) { builder.addInt(20, numEnrouteStops, 0); }
  public static void addSerialNumber(FlatBufferBuilder builder, int serialNumberOffset) { builder.addOffset(21, serialNumberOffset, 0); }
  public static void addNumTransLoads(FlatBufferBuilder builder, int numTransLoads) { builder.addInt(22, numTransLoads, 0); }
  public static void addLastChangedDate(FlatBufferBuilder builder, int lastChangedDateOffset) { builder.addOffset(23, lastChangedDateOffset, 0); }
  public static void addLogisticsSegments(FlatBufferBuilder builder, int logisticsSegmentsOffset) { builder.addOffset(24, logisticsSegmentsOffset, 0); }
  public static int createLogisticsSegmentsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLogisticsSegmentsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static void addLogisticsTransportationPlansRemarks(FlatBufferBuilder builder, int logisticsTransportationPlansRemarksOffset) { builder.addOffset(25, logisticsTransportationPlansRemarksOffset, 0); }
  public static int createLogisticsTransportationPlansRemarksVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLogisticsTransportationPlansRemarksVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endLogisticsTransportationPlans_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishLogisticsTransportationPlans_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "LOGI"); }
  public static void finishSizePrefixedLogisticsTransportationPlans_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "LOGI"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LogisticsTransportationPlans_Ingest get(int j) { return get(new LogisticsTransportationPlans_Ingest(), j); }
    public LogisticsTransportationPlans_Ingest get(LogisticsTransportationPlans_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

