// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Minimum and maximum altitude bounds for the track.
 */
@SuppressWarnings("unused")
public final class AltitudeBlocks_Abridged extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static AltitudeBlocks_Abridged getRootAsAltitudeBlocks_Abridged(ByteBuffer _bb) { return getRootAsAltitudeBlocks_Abridged(_bb, new AltitudeBlocks_Abridged()); }
  public static AltitudeBlocks_Abridged getRootAsAltitudeBlocks_Abridged(ByteBuffer _bb, AltitudeBlocks_Abridged obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean AltitudeBlocks_AbridgedBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "ALTI"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public AltitudeBlocks_Abridged __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Sequencing field for the altitude block.
   * Example: /// Example: A1
   * Constraints: Minimum length = 0, Maximum length = 24
   */
  public String altitudeSequenceId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer altitudeSequenceIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer altitudeSequenceIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Lowest altitude of the track route altitude block above mean sea level in feet.
   * Example: /// Example: 27000.1
   * Constraints: No constraints specified.
   */
  public double lowerAltitude() { int o = __offset(6); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Highest altitude of the track route altitude block above mean sea level in feet.
   * Example: /// Example: 27200.5
   * Constraints: No constraints specified.
   */
  public double upperAltitude() { int o = __offset(8); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createAltitudeBlocks_Abridged(FlatBufferBuilder builder,
      int altitudeSequenceIdOffset,
      double lowerAltitude,
      double upperAltitude) {
    builder.startTable(3);
    AltitudeBlocks_Abridged.addUpperAltitude(builder, upperAltitude);
    AltitudeBlocks_Abridged.addLowerAltitude(builder, lowerAltitude);
    AltitudeBlocks_Abridged.addAltitudeSequenceId(builder, altitudeSequenceIdOffset);
    return AltitudeBlocks_Abridged.endAltitudeBlocks_Abridged(builder);
  }

  public static void startAltitudeBlocks_Abridged(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addAltitudeSequenceId(FlatBufferBuilder builder, int altitudeSequenceIdOffset) { builder.addOffset(0, altitudeSequenceIdOffset, 0); }
  public static void addLowerAltitude(FlatBufferBuilder builder, double lowerAltitude) { builder.addDouble(1, lowerAltitude, 0.0); }
  public static void addUpperAltitude(FlatBufferBuilder builder, double upperAltitude) { builder.addDouble(2, upperAltitude, 0.0); }
  public static int endAltitudeBlocks_Abridged(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishAltitudeBlocks_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "ALTI"); }
  public static void finishSizePrefixedAltitudeBlocks_AbridgedBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "ALTI"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public AltitudeBlocks_Abridged get(int j) { return get(new AltitudeBlocks_Abridged(), j); }
    public AltitudeBlocks_Abridged get(AltitudeBlocks_Abridged obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

