// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Collection of remarks associated with this data link message.
 */
@SuppressWarnings("unused")
public final class DataLinkRemarks_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static DataLinkRemarks_Ingest getRootAsDataLinkRemarks_Ingest(ByteBuffer _bb) { return getRootAsDataLinkRemarks_Ingest(_bb, new DataLinkRemarks_Ingest()); }
  public static DataLinkRemarks_Ingest getRootAsDataLinkRemarks_Ingest(ByteBuffer _bb, DataLinkRemarks_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean DataLinkRemarks_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "DATA"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public DataLinkRemarks_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Indicates the subject matter of the remark.
   * Example: /// Example: CONTINGENCY PROCEDURES
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String type() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Text of the remark.
   * Example: /// Example: Example data link remarks
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String text() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer textAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer textInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createDataLinkRemarks_Ingest(FlatBufferBuilder builder,
      int typeOffset,
      int textOffset) {
    builder.startTable(2);
    DataLinkRemarks_Ingest.addText(builder, textOffset);
    DataLinkRemarks_Ingest.addType(builder, typeOffset);
    return DataLinkRemarks_Ingest.endDataLinkRemarks_Ingest(builder);
  }

  public static void startDataLinkRemarks_Ingest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(0, typeOffset, 0); }
  public static void addText(FlatBufferBuilder builder, int textOffset) { builder.addOffset(1, textOffset, 0); }
  public static int endDataLinkRemarks_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishDataLinkRemarks_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "DATA"); }
  public static void finishSizePrefixedDataLinkRemarks_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "DATA"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public DataLinkRemarks_Ingest get(int j) { return get(new DataLinkRemarks_Ingest(), j); }
    public DataLinkRemarks_Ingest get(DataLinkRemarks_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

