// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Remarks associated with this LogisticsSupport record.
 */
@SuppressWarnings("unused")
public final class LogisticsRemarks_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static LogisticsRemarks_Full getRootAsLogisticsRemarks_Full(ByteBuffer _bb) { return getRootAsLogisticsRemarks_Full(_bb, new LogisticsRemarks_Full()); }
  public static LogisticsRemarks_Full getRootAsLogisticsRemarks_Full(ByteBuffer _bb, LogisticsRemarks_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean LogisticsRemarks_FullBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "LOGI"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LogisticsRemarks_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * User who published the remark.
   * Example: /// Example: JSMITH
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String username() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer usernameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer usernameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Text of the remark.
   * Example: /// Example: EXAMPLE REMARK
   * Constraints: Minimum length = 0, Maximum length = 4000
   */
  public String remark() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer remarkAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer remarkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.
   * Example: /// Example: 2023-07-17T10:30:00.123Z
   * Constraints: No constraints specified.
   */
  public String lastChanged() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer lastChangedAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer lastChangedInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createLogisticsRemarks_Full(FlatBufferBuilder builder,
      int usernameOffset,
      int remarkOffset,
      int lastChangedOffset) {
    builder.startTable(3);
    LogisticsRemarks_Full.addLastChanged(builder, lastChangedOffset);
    LogisticsRemarks_Full.addRemark(builder, remarkOffset);
    LogisticsRemarks_Full.addUsername(builder, usernameOffset);
    return LogisticsRemarks_Full.endLogisticsRemarks_Full(builder);
  }

  public static void startLogisticsRemarks_Full(FlatBufferBuilder builder) { builder.startTable(3); }
  public static void addUsername(FlatBufferBuilder builder, int usernameOffset) { builder.addOffset(0, usernameOffset, 0); }
  public static void addRemark(FlatBufferBuilder builder, int remarkOffset) { builder.addOffset(1, remarkOffset, 0); }
  public static void addLastChanged(FlatBufferBuilder builder, int lastChangedOffset) { builder.addOffset(2, lastChangedOffset, 0); }
  public static int endLogisticsRemarks_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishLogisticsRemarks_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "LOGI"); }
  public static void finishSizePrefixedLogisticsRemarks_FullBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "LOGI"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LogisticsRemarks_Full get(int j) { return get(new LogisticsRemarks_Full(), j); }
    public LogisticsRemarks_Full get(LogisticsRemarks_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

