// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Details for an early warning payload from  Seradata.
 */
@SuppressWarnings("unused")
public final class SeradataEarlyWarning_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static SeradataEarlyWarning_Ingest getRootAsSeradataEarlyWarning_Ingest(ByteBuffer _bb) { return getRootAsSeradataEarlyWarning_Ingest(_bb, new SeradataEarlyWarning_Ingest()); }
  public static SeradataEarlyWarning_Ingest getRootAsSeradataEarlyWarning_Ingest(ByteBuffer _bb, SeradataEarlyWarning_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean SeradataEarlyWarning_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "SERA"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public SeradataEarlyWarning_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: /// Example: SERADATAEARLYWARNING-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: /// Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * UUID of the parent IR record.
   * Example: /// Example: idIR
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idIr() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idIrAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer idIrInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
   * Example: /// Example: spacecraftId
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String spacecraftId() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer spacecraftIdAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer spacecraftIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Hosted for company/Organization Id.
   * Example: /// Example: hostedForCompanyOrgId
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String hostedForCompanyOrgId() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer hostedForCompanyOrgIdAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer hostedForCompanyOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Manufacturer Organization Id.
   * Example: /// Example: manufacturerOrgId
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String manufacturerOrgId() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer manufacturerOrgIdAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer manufacturerOrgIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Sensor name from Seradata, e.g. Infra red telescope, Schmidt Telescope, etc.
   * Example: /// Example: Infra red telescope
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String name() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Spectral Bands, e.g. Infra-Red.
   * Example: /// Example: Infra-Red
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String spectralBands() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer spectralBandsAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer spectralBandsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Frequency Limits for this IR.
   * Example: /// Example: frequencyLimits
   * Constraints: Minimum length = 0, Maximum length = 50
   */
  public String frequencyLimits() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer frequencyLimitsAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer frequencyLimitsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Best resolution for this IR in meters.
   * Example: /// Example: 1.23
   * Constraints: No constraints specified.
   */
  public double bestResolution() { int o = __offset(22); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }
  /**
   * Ground Station info for this IR.
   * Example: /// Example: groundStations
   * Constraints: Minimum length = 0, Maximum length = 128
   */
  public String groundStations() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer groundStationsAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer groundStationsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Ground Station Locations for this IR.
   * Example: /// Example: groundStationLocations
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String groundStationLocations() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer groundStationLocationsAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer groundStationLocationsInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Missile Launch Phase Detection Ability.
   * Example: /// Example: missileLaunchPhaseDetectionAbility
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String missileLaunchPhaseDetectionAbility() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer missileLaunchPhaseDetectionAbilityAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer missileLaunchPhaseDetectionAbilityInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * Is the sensor Earth Pointing.
   * Example: /// Example: True
   * Constraints: No constraints specified.
   */
  public boolean earthPointing() { int o = __offset(30); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  /**
   * Seradata ID of the spacecraft (SeradataSpacecraftDetails ID).
   * Example: /// Example: partnerSpacecraftId
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String partnerSpacecraftId() { int o = __offset(32); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer partnerSpacecraftIdAsByteBuffer() { return __vector_as_bytebuffer(32, 1); }
  public ByteBuffer partnerSpacecraftIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 32, 1); }
  /**
   * Payload notes.
   * Example: /// Example: Sample Notes
   * Constraints: Minimum length = 0, Maximum length = 2147483647
   */
  public String payloadNotes() { int o = __offset(34); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer payloadNotesAsByteBuffer() { return __vector_as_bytebuffer(34, 1); }
  public ByteBuffer payloadNotesInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 34, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: /// Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(36); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(36, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 36, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: /// Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(38); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(38, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 38, 1); }
  /**
   * Source of the data.
   * Example: /// Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(40); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(40, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 40, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: /// Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(42); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(42, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 42, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: /// Example: ORIG
   * Constraints: Minimum length = 0, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(44); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(44, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 44, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
   * Example: /// Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(46); return o != 0 ? bb.get(o + bb_pos) : 0; }

  public static int createSeradataEarlyWarning_Ingest(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int idIrOffset,
      int spacecraftIdOffset,
      int hostedForCompanyOrgIdOffset,
      int manufacturerOrgIdOffset,
      int nameOffset,
      int spectralBandsOffset,
      int frequencyLimitsOffset,
      double bestResolution,
      int groundStationsOffset,
      int groundStationLocationsOffset,
      int missileLaunchPhaseDetectionAbilityOffset,
      boolean earthPointing,
      int partnerSpacecraftIdOffset,
      int payloadNotesOffset,
      int createdAtOffset,
      int createdByOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode) {
    builder.startTable(22);
    SeradataEarlyWarning_Ingest.addBestResolution(builder, bestResolution);
    SeradataEarlyWarning_Ingest.addOrigNetwork(builder, origNetworkOffset);
    SeradataEarlyWarning_Ingest.addOrigin(builder, originOffset);
    SeradataEarlyWarning_Ingest.addSource(builder, sourceOffset);
    SeradataEarlyWarning_Ingest.addCreatedBy(builder, createdByOffset);
    SeradataEarlyWarning_Ingest.addCreatedAt(builder, createdAtOffset);
    SeradataEarlyWarning_Ingest.addPayloadNotes(builder, payloadNotesOffset);
    SeradataEarlyWarning_Ingest.addPartnerSpacecraftId(builder, partnerSpacecraftIdOffset);
    SeradataEarlyWarning_Ingest.addMissileLaunchPhaseDetectionAbility(builder, missileLaunchPhaseDetectionAbilityOffset);
    SeradataEarlyWarning_Ingest.addGroundStationLocations(builder, groundStationLocationsOffset);
    SeradataEarlyWarning_Ingest.addGroundStations(builder, groundStationsOffset);
    SeradataEarlyWarning_Ingest.addFrequencyLimits(builder, frequencyLimitsOffset);
    SeradataEarlyWarning_Ingest.addSpectralBands(builder, spectralBandsOffset);
    SeradataEarlyWarning_Ingest.addName(builder, nameOffset);
    SeradataEarlyWarning_Ingest.addManufacturerOrgId(builder, manufacturerOrgIdOffset);
    SeradataEarlyWarning_Ingest.addHostedForCompanyOrgId(builder, hostedForCompanyOrgIdOffset);
    SeradataEarlyWarning_Ingest.addSpacecraftId(builder, spacecraftIdOffset);
    SeradataEarlyWarning_Ingest.addIdIr(builder, idIrOffset);
    SeradataEarlyWarning_Ingest.addClassificationMarking(builder, classificationMarkingOffset);
    SeradataEarlyWarning_Ingest.addId(builder, idOffset);
    SeradataEarlyWarning_Ingest.addDataMode(builder, dataMode);
    SeradataEarlyWarning_Ingest.addEarthPointing(builder, earthPointing);
    return SeradataEarlyWarning_Ingest.endSeradataEarlyWarning_Ingest(builder);
  }

  public static void startSeradataEarlyWarning_Ingest(FlatBufferBuilder builder) { builder.startTable(22); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addIdIr(FlatBufferBuilder builder, int idIrOffset) { builder.addOffset(2, idIrOffset, 0); }
  public static void addSpacecraftId(FlatBufferBuilder builder, int spacecraftIdOffset) { builder.addOffset(3, spacecraftIdOffset, 0); }
  public static void addHostedForCompanyOrgId(FlatBufferBuilder builder, int hostedForCompanyOrgIdOffset) { builder.addOffset(4, hostedForCompanyOrgIdOffset, 0); }
  public static void addManufacturerOrgId(FlatBufferBuilder builder, int manufacturerOrgIdOffset) { builder.addOffset(5, manufacturerOrgIdOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(6, nameOffset, 0); }
  public static void addSpectralBands(FlatBufferBuilder builder, int spectralBandsOffset) { builder.addOffset(7, spectralBandsOffset, 0); }
  public static void addFrequencyLimits(FlatBufferBuilder builder, int frequencyLimitsOffset) { builder.addOffset(8, frequencyLimitsOffset, 0); }
  public static void addBestResolution(FlatBufferBuilder builder, double bestResolution) { builder.addDouble(9, bestResolution, 0.0); }
  public static void addGroundStations(FlatBufferBuilder builder, int groundStationsOffset) { builder.addOffset(10, groundStationsOffset, 0); }
  public static void addGroundStationLocations(FlatBufferBuilder builder, int groundStationLocationsOffset) { builder.addOffset(11, groundStationLocationsOffset, 0); }
  public static void addMissileLaunchPhaseDetectionAbility(FlatBufferBuilder builder, int missileLaunchPhaseDetectionAbilityOffset) { builder.addOffset(12, missileLaunchPhaseDetectionAbilityOffset, 0); }
  public static void addEarthPointing(FlatBufferBuilder builder, boolean earthPointing) { builder.addBoolean(13, earthPointing, false); }
  public static void addPartnerSpacecraftId(FlatBufferBuilder builder, int partnerSpacecraftIdOffset) { builder.addOffset(14, partnerSpacecraftIdOffset, 0); }
  public static void addPayloadNotes(FlatBufferBuilder builder, int payloadNotesOffset) { builder.addOffset(15, payloadNotesOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(16, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(17, createdByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(18, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(19, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(20, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(21, dataMode, 0); }
  public static int endSeradataEarlyWarning_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishSeradataEarlyWarning_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "SERA"); }
  public static void finishSizePrefixedSeradataEarlyWarning_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "SERA"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public SeradataEarlyWarning_Ingest get(int j) { return get(new SeradataEarlyWarning_Ingest(), j); }
    public SeradataEarlyWarning_Ingest get(SeradataEarlyWarning_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

