// automatically generated by the FlatBuffers compiler, do not modify

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * /// Related document ids.
 */
@SuppressWarnings("unused")
public final class RelatedDocument_Ingest extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static RelatedDocument_Ingest getRootAsRelatedDocument_Ingest(ByteBuffer _bb) { return getRootAsRelatedDocument_Ingest(_bb, new RelatedDocument_Ingest()); }
  public static RelatedDocument_Ingest getRootAsRelatedDocument_Ingest(ByteBuffer _bb, RelatedDocument_Ingest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public static boolean RelatedDocument_IngestBufferHasIdentifier(ByteBuffer _bb) { return __has_identifier(_bb, "RELA"); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public RelatedDocument_Ingest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * The document id of the related document.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String documentId() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer documentIdAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer documentIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * List of data sources related to this document.
   * Example: /// Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String dataSourceRefs(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int dataSourceRefsLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public StringVector dataSourceRefsVector() { return dataSourceRefsVector(new StringVector()); }
  public StringVector dataSourceRefsVector(StringVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createRelatedDocument_Ingest(FlatBufferBuilder builder,
      int documentIdOffset,
      int dataSourceRefsOffset) {
    builder.startTable(2);
    RelatedDocument_Ingest.addDataSourceRefs(builder, dataSourceRefsOffset);
    RelatedDocument_Ingest.addDocumentId(builder, documentIdOffset);
    return RelatedDocument_Ingest.endRelatedDocument_Ingest(builder);
  }

  public static void startRelatedDocument_Ingest(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addDocumentId(FlatBufferBuilder builder, int documentIdOffset) { builder.addOffset(0, documentIdOffset, 0); }
  public static void addDataSourceRefs(FlatBufferBuilder builder, int dataSourceRefsOffset) { builder.addOffset(1, dataSourceRefsOffset, 0); }
  public static int createDataSourceRefsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startDataSourceRefsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endRelatedDocument_Ingest(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishRelatedDocument_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset, "RELA"); }
  public static void finishSizePrefixedRelatedDocument_IngestBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset, "RELA"); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public RelatedDocument_Ingest get(int j) { return get(new RelatedDocument_Ingest(), j); }
    public RelatedDocument_Ingest get(RelatedDocument_Ingest obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

