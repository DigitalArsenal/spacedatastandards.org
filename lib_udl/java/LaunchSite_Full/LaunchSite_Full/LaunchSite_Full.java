// automatically generated by the FlatBuffers compiler, do not modify

package LaunchSite_Full;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

/**
 * Model representation of known launch sites.
 */
@SuppressWarnings("unused")
public final class LaunchSite_Full extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_24_3_25(); }
  public static LaunchSite_Full getRootAsLaunchSite_Full(ByteBuffer _bb) { return getRootAsLaunchSite_Full(_bb, new LaunchSite_Full()); }
  public static LaunchSite_Full getRootAsLaunchSite_Full(ByteBuffer _bb, LaunchSite_Full obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public LaunchSite_Full __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /**
   * Unique identifier of the record, auto-generated by the system.
   * Example: LAUNCHSITE-ID
   * Constraints: Minimum length = 1, Maximum length = 36
   */
  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   * Example: U
   * Constraints: Minimum length = 1, Maximum length = 128
   */
  public String classificationMarking() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer classificationMarkingAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer classificationMarkingInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  /**
   * Launch site code.
   * Example: SAN MARCO
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String code() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer codeAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer codeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  /**
   * Abbreviated short name for the launch site.
   * Example: SNMLP
   * Constraints: Minimum length = 0, Maximum length = 16
   */
  public String shortCode() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer shortCodeAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer shortCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  /**
   * Alternate launch site code.
   * Example: 35
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String altCode() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer altCodeAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer altCodeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  /**
   * Unique identifier of the parent site associated with this launch site.
   * Example: a150b3ee-884b-b9ac-60a0-6408b4b16088
   * Constraints: Minimum length = 0, Maximum length = 36
   */
  public String idSite() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idSiteAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer idSiteInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }
  /**
   * Launch site name.
   * Example: Example launch site name
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String name() { int o = __offset(16); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(16, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 16, 1); }
  /**
   * Time the row was created in the database, auto-populated by the system.
   * Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String createdAt() { int o = __offset(18); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdAtAsByteBuffer() { return __vector_as_bytebuffer(18, 1); }
  public ByteBuffer createdAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 18, 1); }
  /**
   * Application user who created the row in the database, auto-populated by the system.
   * Example: some.user
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String createdBy() { int o = __offset(20); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer createdByAsByteBuffer() { return __vector_as_bytebuffer(20, 1); }
  public ByteBuffer createdByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 20, 1); }
  /**
   * Time the row was last updated in the database, auto-populated by the system.
   * Example: 2018-01-01T16:00:00.123Z
   * Constraints: No constraints specified.
   */
  public String updatedAt() { int o = __offset(22); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedAtAsByteBuffer() { return __vector_as_bytebuffer(22, 1); }
  public ByteBuffer updatedAtInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 22, 1); }
  /**
   * Application user who updated the row in the database, auto-populated by the system.
   * Example: some.user
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String updatedBy() { int o = __offset(24); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer updatedByAsByteBuffer() { return __vector_as_bytebuffer(24, 1); }
  public ByteBuffer updatedByInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 24, 1); }
  /**
   * Source of the data.
   * Example: Bluestaq
   * Constraints: Minimum length = 1, Maximum length = 64
   */
  public String source() { int o = __offset(26); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer sourceAsByteBuffer() { return __vector_as_bytebuffer(26, 1); }
  public ByteBuffer sourceInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 26, 1); }
  /**
   * Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
   * Example: THIRD_PARTY_DATASOURCE
   * Constraints: Minimum length = 0, Maximum length = 64
   */
  public String origin() { int o = __offset(28); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer originAsByteBuffer() { return __vector_as_bytebuffer(28, 1); }
  public ByteBuffer originInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 28, 1); }
  /**
   * The originating source network on which this record was created, auto-populated by the system.
   * Example: ORIG
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public String origNetwork() { int o = __offset(30); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer origNetworkAsByteBuffer() { return __vector_as_bytebuffer(30, 1); }
  public ByteBuffer origNetworkInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 30, 1); }
  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
   * Example: TEST
   * Constraints: Minimum length = 1, Maximum length = 32
   */
  public byte dataMode() { int o = __offset(32); return o != 0 ? bb.get(o + bb_pos) : 0; }
  /**
   * Read-only collection of additional LaunchSiteDetails by various sources for this launch site, ignored on create/update. These details must be created separately via the /udl/launchsitedetails operations.
   * Example: No example provided.
   * Constraints: No constraints specified.
   */
  public String launchSiteDetails(int j) { int o = __offset(34); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int launchSiteDetailsLength() { int o = __offset(34); return o != 0 ? __vector_len(o) : 0; }
  public StringVector launchSiteDetails_vector() { return launchSiteDetails_vector(new StringVector()); }
  public StringVector launchSiteDetails_vector(StringVector obj) { int o = __offset(34); return o != 0 ? obj.__assign(__vector(o), 4, bb) : null; }

  public static int createLaunchSite_Full(FlatBufferBuilder builder,
      int idOffset,
      int classificationMarkingOffset,
      int codeOffset,
      int shortCodeOffset,
      int altCodeOffset,
      int idSiteOffset,
      int nameOffset,
      int createdAtOffset,
      int createdByOffset,
      int updatedAtOffset,
      int updatedByOffset,
      int sourceOffset,
      int originOffset,
      int origNetworkOffset,
      byte dataMode,
      int launchSiteDetailsOffset) {
    builder.startTable(16);
    LaunchSite_Full.addLaunchSiteDetails(builder, launchSiteDetailsOffset);
    LaunchSite_Full.addOrigNetwork(builder, origNetworkOffset);
    LaunchSite_Full.addOrigin(builder, originOffset);
    LaunchSite_Full.addSource(builder, sourceOffset);
    LaunchSite_Full.addUpdatedBy(builder, updatedByOffset);
    LaunchSite_Full.addUpdatedAt(builder, updatedAtOffset);
    LaunchSite_Full.addCreatedBy(builder, createdByOffset);
    LaunchSite_Full.addCreatedAt(builder, createdAtOffset);
    LaunchSite_Full.addName(builder, nameOffset);
    LaunchSite_Full.addIdSite(builder, idSiteOffset);
    LaunchSite_Full.addAltCode(builder, altCodeOffset);
    LaunchSite_Full.addShortCode(builder, shortCodeOffset);
    LaunchSite_Full.addCode(builder, codeOffset);
    LaunchSite_Full.addClassificationMarking(builder, classificationMarkingOffset);
    LaunchSite_Full.addId(builder, idOffset);
    LaunchSite_Full.addDataMode(builder, dataMode);
    return LaunchSite_Full.endLaunchSite_Full(builder);
  }

  public static void startLaunchSite_Full(FlatBufferBuilder builder) { builder.startTable(16); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addClassificationMarking(FlatBufferBuilder builder, int classificationMarkingOffset) { builder.addOffset(1, classificationMarkingOffset, 0); }
  public static void addCode(FlatBufferBuilder builder, int codeOffset) { builder.addOffset(2, codeOffset, 0); }
  public static void addShortCode(FlatBufferBuilder builder, int shortCodeOffset) { builder.addOffset(3, shortCodeOffset, 0); }
  public static void addAltCode(FlatBufferBuilder builder, int altCodeOffset) { builder.addOffset(4, altCodeOffset, 0); }
  public static void addIdSite(FlatBufferBuilder builder, int idSiteOffset) { builder.addOffset(5, idSiteOffset, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(6, nameOffset, 0); }
  public static void addCreatedAt(FlatBufferBuilder builder, int createdAtOffset) { builder.addOffset(7, createdAtOffset, 0); }
  public static void addCreatedBy(FlatBufferBuilder builder, int createdByOffset) { builder.addOffset(8, createdByOffset, 0); }
  public static void addUpdatedAt(FlatBufferBuilder builder, int updatedAtOffset) { builder.addOffset(9, updatedAtOffset, 0); }
  public static void addUpdatedBy(FlatBufferBuilder builder, int updatedByOffset) { builder.addOffset(10, updatedByOffset, 0); }
  public static void addSource(FlatBufferBuilder builder, int sourceOffset) { builder.addOffset(11, sourceOffset, 0); }
  public static void addOrigin(FlatBufferBuilder builder, int originOffset) { builder.addOffset(12, originOffset, 0); }
  public static void addOrigNetwork(FlatBufferBuilder builder, int origNetworkOffset) { builder.addOffset(13, origNetworkOffset, 0); }
  public static void addDataMode(FlatBufferBuilder builder, byte dataMode) { builder.addByte(14, dataMode, 0); }
  public static void addLaunchSiteDetails(FlatBufferBuilder builder, int launchSiteDetailsOffset) { builder.addOffset(15, launchSiteDetailsOffset, 0); }
  public static int createLaunchSiteDetailsVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startLaunchSiteDetailsVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endLaunchSite_Full(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public LaunchSite_Full get(int j) { return get(new LaunchSite_Full(), j); }
    public LaunchSite_Full get(LaunchSite_Full obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

