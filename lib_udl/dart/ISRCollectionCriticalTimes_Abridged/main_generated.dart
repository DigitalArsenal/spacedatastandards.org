// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// High priority time windows.
class IsrcollectionCriticalTimesAbridged {
  IsrcollectionCriticalTimesAbridged._(this._bc, this._bcOffset);
  factory IsrcollectionCriticalTimesAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IsrcollectionCriticalTimesAbridged> reader = _IsrcollectionCriticalTimesAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Critical start time to collect an image for this requirement.
  ///  Example: /// Example: 2021-01-19T01:01:15.001Z
  ///  Constraints: No constraints specified.
  String? get earliestImagingTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Critical stop time to collect an image for this requirement.
  ///  Example: /// Example: 2021-01-19T01:11:15.001Z
  ///  Constraints: No constraints specified.
  String? get latestImagingTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IsrcollectionCriticalTimesAbridged{earliestImagingTime: ${earliestImagingTime}, latestImagingTime: ${latestImagingTime}}';
  }
}

class _IsrcollectionCriticalTimesAbridgedReader extends fb.TableReader<IsrcollectionCriticalTimesAbridged> {
  const _IsrcollectionCriticalTimesAbridgedReader();

  @override
  IsrcollectionCriticalTimesAbridged createObject(fb.BufferContext bc, int offset) => 
    IsrcollectionCriticalTimesAbridged._(bc, offset);
}

class IsrcollectionCriticalTimesAbridgedBuilder {
  IsrcollectionCriticalTimesAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addEarliestImagingTimeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addLatestImagingTimeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IsrcollectionCriticalTimesAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _earliestImagingTime;
  final String? _latestImagingTime;

  IsrcollectionCriticalTimesAbridgedObjectBuilder({
    String? earliestImagingTime,
    String? latestImagingTime,
  })
      : _earliestImagingTime = earliestImagingTime,
        _latestImagingTime = latestImagingTime;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? earliestImagingTimeOffset = _earliestImagingTime == null ? null
        : fbBuilder.writeString(_earliestImagingTime!);
    final int? latestImagingTimeOffset = _latestImagingTime == null ? null
        : fbBuilder.writeString(_latestImagingTime!);
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, earliestImagingTimeOffset);
    fbBuilder.addOffset(1, latestImagingTimeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
