// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// The specialties required to implement this support item.
class LogisticsSpecialtiesIngest {
  LogisticsSpecialtiesIngest._(this._bc, this._bcOffset);
  factory LogisticsSpecialtiesIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<LogisticsSpecialtiesIngest> reader = _LogisticsSpecialtiesIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.
  ///  Example: /// Example: ELEN
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get specialty => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Skill level of the mission response team member.
  ///  Example: /// Example: 3
  ///  Constraints: No constraints specified.
  int get skillLevel => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 6, 0);
  ///  The first name of the specialist.
  ///  Example: /// Example: JOHN
  ///  Constraints: Minimum length = 0, Maximum length = 20
  String? get firstName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  The last name of the specialist.
  ///  Example: /// Example: SMITH
  ///  Constraints: Minimum length = 0, Maximum length = 30
  String? get lastName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Military service rank designation.
  ///  Example: /// Example: MAJ
  ///  Constraints: Minimum length = 0, Maximum length = 6
  String? get rankCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  The last four digits of the specialist's social security number.
  ///  Example: /// Example: 9999
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get last4Ssn => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.
  ///  Example: /// Example: TC
  ///  Constraints: Minimum length = 0, Maximum length = 2
  String? get roleTypeCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);

  @override
  String toString() {
    return 'LogisticsSpecialtiesIngest{specialty: ${specialty}, skillLevel: ${skillLevel}, firstName: ${firstName}, lastName: ${lastName}, rankCode: ${rankCode}, last4Ssn: ${last4Ssn}, roleTypeCode: ${roleTypeCode}}';
  }
}

class _LogisticsSpecialtiesIngestReader extends fb.TableReader<LogisticsSpecialtiesIngest> {
  const _LogisticsSpecialtiesIngestReader();

  @override
  LogisticsSpecialtiesIngest createObject(fb.BufferContext bc, int offset) => 
    LogisticsSpecialtiesIngest._(bc, offset);
}

class LogisticsSpecialtiesIngestBuilder {
  LogisticsSpecialtiesIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(7);
  }

  int addSpecialtyOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addSkillLevel(int? skillLevel) {
    fbBuilder.addInt32(1, skillLevel);
    return fbBuilder.offset;
  }
  int addFirstNameOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addLastNameOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addRankCodeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addLast4SsnOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addRoleTypeCodeOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class LogisticsSpecialtiesIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _specialty;
  final int? _skillLevel;
  final String? _firstName;
  final String? _lastName;
  final String? _rankCode;
  final String? _last4Ssn;
  final String? _roleTypeCode;

  LogisticsSpecialtiesIngestObjectBuilder({
    String? specialty,
    int? skillLevel,
    String? firstName,
    String? lastName,
    String? rankCode,
    String? last4Ssn,
    String? roleTypeCode,
  })
      : _specialty = specialty,
        _skillLevel = skillLevel,
        _firstName = firstName,
        _lastName = lastName,
        _rankCode = rankCode,
        _last4Ssn = last4Ssn,
        _roleTypeCode = roleTypeCode;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? specialtyOffset = _specialty == null ? null
        : fbBuilder.writeString(_specialty!);
    final int? firstNameOffset = _firstName == null ? null
        : fbBuilder.writeString(_firstName!);
    final int? lastNameOffset = _lastName == null ? null
        : fbBuilder.writeString(_lastName!);
    final int? rankCodeOffset = _rankCode == null ? null
        : fbBuilder.writeString(_rankCode!);
    final int? last4SsnOffset = _last4Ssn == null ? null
        : fbBuilder.writeString(_last4Ssn!);
    final int? roleTypeCodeOffset = _roleTypeCode == null ? null
        : fbBuilder.writeString(_roleTypeCode!);
    fbBuilder.startTable(7);
    fbBuilder.addOffset(0, specialtyOffset);
    fbBuilder.addInt32(1, _skillLevel);
    fbBuilder.addOffset(2, firstNameOffset);
    fbBuilder.addOffset(3, lastNameOffset);
    fbBuilder.addOffset(4, rankCodeOffset);
    fbBuilder.addOffset(5, last4SsnOffset);
    fbBuilder.addOffset(6, roleTypeCodeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
