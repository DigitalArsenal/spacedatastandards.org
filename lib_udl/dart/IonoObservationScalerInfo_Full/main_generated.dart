// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// The ScalerInfo record describes the person or system who interpreted the ionogram in IonoObservation.
class IonoObservationScalerInfoFull {
  IonoObservationScalerInfoFull._(this._bc, this._bcOffset);
  factory IonoObservationScalerInfoFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationScalerInfoFull> reader = _IonoObservationScalerInfoFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Scaler type (MANUAL, AUTOMATIC or UNKNOWN).
  ///  Example: /// Example: MANUAL
  ///  Constraints: Minimum length = 0, Maximum length = 9
  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Scaler name.
  ///  Example: /// Example: ARTIST-4
  ///  Constraints: Minimum length = 0, Maximum length = 20
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Scaler organization.
  ///  Example: /// Example: UML
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get organization => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Scaler version.
  ///  Example: /// Example: 500200.1
  ///  Constraints: No constraints specified.
  double get version => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 10, 0.0);
  ///  Scaler confidence score.
  ///  Example: /// Example: 75
  ///  Constraints: No constraints specified.
  int get confidenceScore => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 12, 0);
  ///  Scaler confidence level.
  ///  Example: /// Example: 11
  ///  Constraints: No constraints specified.
  int get confidenceLevel => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 14, 0);

  @override
  String toString() {
    return 'IonoObservationScalerInfoFull{type: ${type}, name: ${name}, organization: ${organization}, version: ${version}, confidenceScore: ${confidenceScore}, confidenceLevel: ${confidenceLevel}}';
  }
}

class _IonoObservationScalerInfoFullReader extends fb.TableReader<IonoObservationScalerInfoFull> {
  const _IonoObservationScalerInfoFullReader();

  @override
  IonoObservationScalerInfoFull createObject(fb.BufferContext bc, int offset) => 
    IonoObservationScalerInfoFull._(bc, offset);
}

class IonoObservationScalerInfoFullBuilder {
  IonoObservationScalerInfoFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addOrganizationOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addVersion(double? version) {
    fbBuilder.addFloat64(3, version);
    return fbBuilder.offset;
  }
  int addConfidenceScore(int? confidenceScore) {
    fbBuilder.addInt32(4, confidenceScore);
    return fbBuilder.offset;
  }
  int addConfidenceLevel(int? confidenceLevel) {
    fbBuilder.addInt32(5, confidenceLevel);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationScalerInfoFullObjectBuilder extends fb.ObjectBuilder {
  final String? _type;
  final String? _name;
  final String? _organization;
  final double? _version;
  final int? _confidenceScore;
  final int? _confidenceLevel;

  IonoObservationScalerInfoFullObjectBuilder({
    String? type,
    String? name,
    String? organization,
    double? version,
    int? confidenceScore,
    int? confidenceLevel,
  })
      : _type = type,
        _name = name,
        _organization = organization,
        _version = version,
        _confidenceScore = confidenceScore,
        _confidenceLevel = confidenceLevel;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? organizationOffset = _organization == null ? null
        : fbBuilder.writeString(_organization!);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, typeOffset);
    fbBuilder.addOffset(1, nameOffset);
    fbBuilder.addOffset(2, organizationOffset);
    fbBuilder.addFloat64(3, _version);
    fbBuilder.addInt32(4, _confidenceScore);
    fbBuilder.addInt32(5, _confidenceLevel);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
