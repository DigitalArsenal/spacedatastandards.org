// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Contains a list of common information across both Radar and EO observations.
class OnorbitSignatureAbridged {
  OnorbitSignatureAbridged._(this._bc, this._bcOffset);
  factory OnorbitSignatureAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<OnorbitSignatureAbridged> reader = _OnorbitSignatureAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get eoObservation => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get radarObservation => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get rfObservation => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'OnorbitSignatureAbridged{eoObservation: ${eoObservation}, radarObservation: ${radarObservation}, rfObservation: ${rfObservation}}';
  }
}

class _OnorbitSignatureAbridgedReader extends fb.TableReader<OnorbitSignatureAbridged> {
  const _OnorbitSignatureAbridgedReader();

  @override
  OnorbitSignatureAbridged createObject(fb.BufferContext bc, int offset) => 
    OnorbitSignatureAbridged._(bc, offset);
}

class OnorbitSignatureAbridgedBuilder {
  OnorbitSignatureAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addEoObservationOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addRadarObservationOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addRfObservationOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class OnorbitSignatureAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _eoObservation;
  final String? _radarObservation;
  final String? _rfObservation;

  OnorbitSignatureAbridgedObjectBuilder({
    String? eoObservation,
    String? radarObservation,
    String? rfObservation,
  })
      : _eoObservation = eoObservation,
        _radarObservation = radarObservation,
        _rfObservation = rfObservation;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? eoObservationOffset = _eoObservation == null ? null
        : fbBuilder.writeString(_eoObservation!);
    final int? radarObservationOffset = _radarObservation == null ? null
        : fbBuilder.writeString(_radarObservation!);
    final int? rfObservationOffset = _rfObservation == null ? null
        : fbBuilder.writeString(_rfObservation!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, eoObservationOffset);
    fbBuilder.addOffset(1, radarObservationOffset);
    fbBuilder.addOffset(2, rfObservationOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
