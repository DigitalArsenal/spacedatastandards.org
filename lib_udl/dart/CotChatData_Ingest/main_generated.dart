// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Schema for the CotChatData to post.
class CotChatDataIngest {
  CotChatDataIngest._(this._bc, this._bcOffset);
  factory CotChatDataIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CotChatDataIngest> reader = _CotChatDataIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Chat room name to send chat message to.
  ///  Example: /// Example: All Chat Rooms
  ///  Constraints: No constraints specified.
  String? get chatRoom => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Callsign of chat sender.
  ///  Example: /// Example: Pebble
  ///  Constraints: No constraints specified.
  String? get chatSenderCallSign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Contents of a chat message.
  ///  Example: /// Example: Mission is go
  ///  Constraints: No constraints specified.
  String? get chatMsg => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'CotChatDataIngest{chatRoom: ${chatRoom}, chatSenderCallSign: ${chatSenderCallSign}, chatMsg: ${chatMsg}}';
  }
}

class _CotChatDataIngestReader extends fb.TableReader<CotChatDataIngest> {
  const _CotChatDataIngestReader();

  @override
  CotChatDataIngest createObject(fb.BufferContext bc, int offset) => 
    CotChatDataIngest._(bc, offset);
}

class CotChatDataIngestBuilder {
  CotChatDataIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addChatRoomOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addChatSenderCallSignOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addChatMsgOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CotChatDataIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _chatRoom;
  final String? _chatSenderCallSign;
  final String? _chatMsg;

  CotChatDataIngestObjectBuilder({
    String? chatRoom,
    String? chatSenderCallSign,
    String? chatMsg,
  })
      : _chatRoom = chatRoom,
        _chatSenderCallSign = chatSenderCallSign,
        _chatMsg = chatMsg;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? chatRoomOffset = _chatRoom == null ? null
        : fbBuilder.writeString(_chatRoom!);
    final int? chatSenderCallSignOffset = _chatSenderCallSign == null ? null
        : fbBuilder.writeString(_chatSenderCallSign!);
    final int? chatMsgOffset = _chatMsg == null ? null
        : fbBuilder.writeString(_chatMsg!);
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, chatRoomOffset);
    fbBuilder.addOffset(1, chatSenderCallSignOffset);
    fbBuilder.addOffset(2, chatMsgOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
