// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// What it is that is trying to be exploited.
class IsrcollectionExploitationRequirementFull {
  IsrcollectionExploitationRequirementFull._(this._bc, this._bcOffset);
  factory IsrcollectionExploitationRequirementFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IsrcollectionExploitationRequirementFull> reader = _IsrcollectionExploitationRequirementFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Exploitation requirement id.
  ///  Example: /// Example: ISRCOLLECTIONEXPLOITATIONREQUIREMENT
  ///  Constraints: Minimum length = 0, Maximum length = 36
  String? get id => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Amplifying data for the exploitation requirement.
  ///  Example: /// Example: AMPLIFICATION
  ///  Constraints: Minimum length = 0, Maximum length = 256
  String? get amplification => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The reporting criteria of the collection requirement.
  ///  Example: /// Example: CRITERIA
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get reportingCriteria => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  List of e-mails to disseminate collection verification information.
  ///  Example: /// Example: EMAILS
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get dissemination => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Essential Elements of Information.
  ///  Example: /// Example: ESSENTIAL_ELEMENTS
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get eei => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get poc => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'IsrcollectionExploitationRequirementFull{id: ${id}, amplification: ${amplification}, reportingCriteria: ${reportingCriteria}, dissemination: ${dissemination}, eei: ${eei}, poc: ${poc}}';
  }
}

class _IsrcollectionExploitationRequirementFullReader extends fb.TableReader<IsrcollectionExploitationRequirementFull> {
  const _IsrcollectionExploitationRequirementFullReader();

  @override
  IsrcollectionExploitationRequirementFull createObject(fb.BufferContext bc, int offset) => 
    IsrcollectionExploitationRequirementFull._(bc, offset);
}

class IsrcollectionExploitationRequirementFullBuilder {
  IsrcollectionExploitationRequirementFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addIdOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addAmplificationOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addReportingCriteriaOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addDisseminationOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addEeiOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addPocOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IsrcollectionExploitationRequirementFullObjectBuilder extends fb.ObjectBuilder {
  final String? _id;
  final String? _amplification;
  final String? _reportingCriteria;
  final String? _dissemination;
  final String? _eei;
  final String? _poc;

  IsrcollectionExploitationRequirementFullObjectBuilder({
    String? id,
    String? amplification,
    String? reportingCriteria,
    String? dissemination,
    String? eei,
    String? poc,
  })
      : _id = id,
        _amplification = amplification,
        _reportingCriteria = reportingCriteria,
        _dissemination = dissemination,
        _eei = eei,
        _poc = poc;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? idOffset = _id == null ? null
        : fbBuilder.writeString(_id!);
    final int? amplificationOffset = _amplification == null ? null
        : fbBuilder.writeString(_amplification!);
    final int? reportingCriteriaOffset = _reportingCriteria == null ? null
        : fbBuilder.writeString(_reportingCriteria!);
    final int? disseminationOffset = _dissemination == null ? null
        : fbBuilder.writeString(_dissemination!);
    final int? eeiOffset = _eei == null ? null
        : fbBuilder.writeString(_eei!);
    final int? pocOffset = _poc == null ? null
        : fbBuilder.writeString(_poc!);
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, idOffset);
    fbBuilder.addOffset(1, amplificationOffset);
    fbBuilder.addOffset(2, reportingCriteriaOffset);
    fbBuilder.addOffset(3, disseminationOffset);
    fbBuilder.addOffset(4, eeiOffset);
    fbBuilder.addOffset(5, pocOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
