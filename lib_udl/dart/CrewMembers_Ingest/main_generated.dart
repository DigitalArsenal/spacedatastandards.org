// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Schema for Crew Member data.
class CrewMembersIngest {
  CrewMembersIngest._(this._bc, this._bcOffset);
  factory CrewMembersIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<CrewMembersIngest> reader = _CrewMembersIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  The last name of the crew member.
  ///  Example: /// Example: Smith
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get lastName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  The first name of the crew member.
  ///  Example: /// Example: Freddie
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get firstName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The middle initial of the crew member.
  ///  Example: /// Example: G
  ///  Constraints: Minimum length = 0, Maximum length = 1
  String? get middleInitial => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Unique identifier of the crew member assigned by the originating source.
  ///  Example: /// Example: 12345678abc
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get memberId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Flag indicating this crew member is a civilian or non-military person.
  ///  Example: /// Example: False
  ///  Constraints: No constraints specified.
  bool get civilian => const fb.BoolReader().vTableGet(_bc, _bcOffset, 12, false);
  ///  Flag indicating this person is the aircraft commander.
  ///  Example: /// Example: False
  ///  Constraints: No constraints specified.
  bool get commander => const fb.BoolReader().vTableGet(_bc, _bcOffset, 14, false);
  ///  Last four digits of the crew member's social security number.
  ///  Example: /// Example: 1234
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get last4Ssn => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  ///  The crew member's 10-digit DoD ID number.
  ///  Example: /// Example: 0123456789
  ///  Constraints: Minimum length = 0, Maximum length = 10
  String? get dodId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  The duty position of the crew member.
  ///  Example: /// Example: IP
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get dutyPosition => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  The crew position of the crew member.
  ///  Example: /// Example: EP A
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get crewPosition => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  Amplifying details about the crew member type (e.g. RAVEN, FCC, COMCAM, AIRCREW, MEP, OTHER, etc.).
  ///  Example: /// Example: AIRCREW
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get memberType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);
  ///  The military branch assignment of the crew member.
  ///  Example: /// Example: Air Force
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get branch => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 26);
  ///  The rank of the crew member.
  ///  Example: /// Example: Capt
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get rank => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 28);
  ///  The wing the crew member serves.
  ///  Example: /// Example: 60AMW
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get wing => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 30);
  ///  The squadron the crew member serves.
  ///  Example: /// Example: 21AS
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get squadron => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 32);
  ///  Remarks concerning the crew member.
  ///  Example: /// Example: Crew member remark
  ///  Constraints: Minimum length = 0, Maximum length = 512
  String? get memberRemarks => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 34);
  ///  The Mattermost username of this crew member.
  ///  Example: /// Example: fgsmith
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get username => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 36);

  @override
  String toString() {
    return 'CrewMembersIngest{lastName: ${lastName}, firstName: ${firstName}, middleInitial: ${middleInitial}, memberId: ${memberId}, civilian: ${civilian}, commander: ${commander}, last4Ssn: ${last4Ssn}, dodId: ${dodId}, dutyPosition: ${dutyPosition}, crewPosition: ${crewPosition}, memberType: ${memberType}, branch: ${branch}, rank: ${rank}, wing: ${wing}, squadron: ${squadron}, memberRemarks: ${memberRemarks}, username: ${username}}';
  }
}

class _CrewMembersIngestReader extends fb.TableReader<CrewMembersIngest> {
  const _CrewMembersIngestReader();

  @override
  CrewMembersIngest createObject(fb.BufferContext bc, int offset) => 
    CrewMembersIngest._(bc, offset);
}

class CrewMembersIngestBuilder {
  CrewMembersIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(17);
  }

  int addLastNameOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addFirstNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addMiddleInitialOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addMemberIdOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addCivilian(bool? civilian) {
    fbBuilder.addBool(4, civilian);
    return fbBuilder.offset;
  }
  int addCommander(bool? commander) {
    fbBuilder.addBool(5, commander);
    return fbBuilder.offset;
  }
  int addLast4SsnOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addDodIdOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addDutyPositionOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addCrewPositionOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addMemberTypeOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addBranchOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addRankOffset(int? offset) {
    fbBuilder.addOffset(12, offset);
    return fbBuilder.offset;
  }
  int addWingOffset(int? offset) {
    fbBuilder.addOffset(13, offset);
    return fbBuilder.offset;
  }
  int addSquadronOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }
  int addMemberRemarksOffset(int? offset) {
    fbBuilder.addOffset(15, offset);
    return fbBuilder.offset;
  }
  int addUsernameOffset(int? offset) {
    fbBuilder.addOffset(16, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class CrewMembersIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _lastName;
  final String? _firstName;
  final String? _middleInitial;
  final String? _memberId;
  final bool? _civilian;
  final bool? _commander;
  final String? _last4Ssn;
  final String? _dodId;
  final String? _dutyPosition;
  final String? _crewPosition;
  final String? _memberType;
  final String? _branch;
  final String? _rank;
  final String? _wing;
  final String? _squadron;
  final String? _memberRemarks;
  final String? _username;

  CrewMembersIngestObjectBuilder({
    String? lastName,
    String? firstName,
    String? middleInitial,
    String? memberId,
    bool? civilian,
    bool? commander,
    String? last4Ssn,
    String? dodId,
    String? dutyPosition,
    String? crewPosition,
    String? memberType,
    String? branch,
    String? rank,
    String? wing,
    String? squadron,
    String? memberRemarks,
    String? username,
  })
      : _lastName = lastName,
        _firstName = firstName,
        _middleInitial = middleInitial,
        _memberId = memberId,
        _civilian = civilian,
        _commander = commander,
        _last4Ssn = last4Ssn,
        _dodId = dodId,
        _dutyPosition = dutyPosition,
        _crewPosition = crewPosition,
        _memberType = memberType,
        _branch = branch,
        _rank = rank,
        _wing = wing,
        _squadron = squadron,
        _memberRemarks = memberRemarks,
        _username = username;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? lastNameOffset = _lastName == null ? null
        : fbBuilder.writeString(_lastName!);
    final int? firstNameOffset = _firstName == null ? null
        : fbBuilder.writeString(_firstName!);
    final int? middleInitialOffset = _middleInitial == null ? null
        : fbBuilder.writeString(_middleInitial!);
    final int? memberIdOffset = _memberId == null ? null
        : fbBuilder.writeString(_memberId!);
    final int? last4SsnOffset = _last4Ssn == null ? null
        : fbBuilder.writeString(_last4Ssn!);
    final int? dodIdOffset = _dodId == null ? null
        : fbBuilder.writeString(_dodId!);
    final int? dutyPositionOffset = _dutyPosition == null ? null
        : fbBuilder.writeString(_dutyPosition!);
    final int? crewPositionOffset = _crewPosition == null ? null
        : fbBuilder.writeString(_crewPosition!);
    final int? memberTypeOffset = _memberType == null ? null
        : fbBuilder.writeString(_memberType!);
    final int? branchOffset = _branch == null ? null
        : fbBuilder.writeString(_branch!);
    final int? rankOffset = _rank == null ? null
        : fbBuilder.writeString(_rank!);
    final int? wingOffset = _wing == null ? null
        : fbBuilder.writeString(_wing!);
    final int? squadronOffset = _squadron == null ? null
        : fbBuilder.writeString(_squadron!);
    final int? memberRemarksOffset = _memberRemarks == null ? null
        : fbBuilder.writeString(_memberRemarks!);
    final int? usernameOffset = _username == null ? null
        : fbBuilder.writeString(_username!);
    fbBuilder.startTable(17);
    fbBuilder.addOffset(0, lastNameOffset);
    fbBuilder.addOffset(1, firstNameOffset);
    fbBuilder.addOffset(2, middleInitialOffset);
    fbBuilder.addOffset(3, memberIdOffset);
    fbBuilder.addBool(4, _civilian);
    fbBuilder.addBool(5, _commander);
    fbBuilder.addOffset(6, last4SsnOffset);
    fbBuilder.addOffset(7, dodIdOffset);
    fbBuilder.addOffset(8, dutyPositionOffset);
    fbBuilder.addOffset(9, crewPositionOffset);
    fbBuilder.addOffset(10, memberTypeOffset);
    fbBuilder.addOffset(11, branchOffset);
    fbBuilder.addOffset(12, rankOffset);
    fbBuilder.addOffset(13, wingOffset);
    fbBuilder.addOffset(14, squadronOffset);
    fbBuilder.addOffset(15, memberRemarksOffset);
    fbBuilder.addOffset(16, usernameOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
