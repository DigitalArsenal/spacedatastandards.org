// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// No description available.
class SensortypeAbridged {
  SensortypeAbridged._(this._bc, this._bcOffset);
  factory SensortypeAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<SensortypeAbridged> reader = _SensortypeAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Unique identifier of the record, auto-generated by the system.
  ///  Example: /// Example: 12344411
  ///  Constraints: No constraints specified.
  int get id => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  ///  The specific sensor type and/or surveillance capability of this sensor.
  ///  Example: /// Example: Space Borne
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get type => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Time the row was created in the database, auto-populated by the system.
  ///  Example: /// Example: 2018-01-01T16:00:00.123Z
  ///  Constraints: No constraints specified.
  String? get createdAt => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Application user who created the row in the database, auto-populated by the system.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 1, Maximum length = 64
  String? get createdBy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  The originating source network on which this record was created, auto-populated by the system.
  ///  Example: /// Example: OPS1
  ///  Constraints: Minimum length = 1, Maximum length = 32
  String? get origNetwork => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'SensortypeAbridged{id: ${id}, type: ${type}, createdAt: ${createdAt}, createdBy: ${createdBy}, origNetwork: ${origNetwork}}';
  }
}

class _SensortypeAbridgedReader extends fb.TableReader<SensortypeAbridged> {
  const _SensortypeAbridgedReader();

  @override
  SensortypeAbridged createObject(fb.BufferContext bc, int offset) => 
    SensortypeAbridged._(bc, offset);
}

class SensortypeAbridgedBuilder {
  SensortypeAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addId(int? id) {
    fbBuilder.addInt32(0, id);
    return fbBuilder.offset;
  }
  int addTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCreatedAtOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addCreatedByOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addOrigNetworkOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class SensortypeAbridgedObjectBuilder extends fb.ObjectBuilder {
  final int? _id;
  final String? _type;
  final String? _createdAt;
  final String? _createdBy;
  final String? _origNetwork;

  SensortypeAbridgedObjectBuilder({
    int? id,
    String? type,
    String? createdAt,
    String? createdBy,
    String? origNetwork,
  })
      : _id = id,
        _type = type,
        _createdAt = createdAt,
        _createdBy = createdBy,
        _origNetwork = origNetwork;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? typeOffset = _type == null ? null
        : fbBuilder.writeString(_type!);
    final int? createdAtOffset = _createdAt == null ? null
        : fbBuilder.writeString(_createdAt!);
    final int? createdByOffset = _createdBy == null ? null
        : fbBuilder.writeString(_createdBy!);
    final int? origNetworkOffset = _origNetwork == null ? null
        : fbBuilder.writeString(_origNetwork!);
    fbBuilder.startTable(5);
    fbBuilder.addInt32(0, _id);
    fbBuilder.addOffset(1, typeOffset);
    fbBuilder.addOffset(2, createdAtOffset);
    fbBuilder.addOffset(3, createdByOffset);
    fbBuilder.addOffset(4, origNetworkOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
