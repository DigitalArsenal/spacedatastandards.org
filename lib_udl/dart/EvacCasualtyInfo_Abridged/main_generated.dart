// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Identity and medical information on the patient to be evacuated.
class EvacCasualtyInfoAbridged {
  EvacCasualtyInfoAbridged._(this._bc, this._bcOffset);
  factory EvacCasualtyInfoAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<EvacCasualtyInfoAbridged> reader = _EvacCasualtyInfoAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  The priority of the medevac mission for this patient (URGENT, PRIORITY, ROUTINE, URGENT SURGERY, CONVENIENCE).
  ///  Example: /// Example: ROUTINE
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get priority => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  The required evacuation method for this patient (AIR, GROUND, NOT EVACUATED).
  ///  Example: /// Example: GROUND
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get evacType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The type of medical issue resulting in the need to evacuate the patient (NON BATTLE, CUT, BURN, SICK, FRACTURE, AMPUTATION, PERFORATION, NUCLEAR, EXHAUSTION, BIOLOGICAL, CHEMICAL, SHOCK, PUNCTURE WOUND, OTHER CUT, WOUNDED IN ACTION, DENIAL, COMBAT STRESS).
  ///  Example: /// Example: DENTAL
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get casualtyType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  The body part involved for the patient (HEAD, NECK, ABDOMEN, UPPER EXTREMITIES, BACK, FACE, LOWER EXTREMITIES, FRONT, OBSTETRICAL GYNECOLOGICAL, OTHER BODY PART).
  ///  Example: /// Example: FACE
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get bodyPart => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  The contamination specified for the patient (NONE, RADIATION, BIOLOGICAL, CHEMICAL).
  ///  Example: /// Example: NONE
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get contamType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  Array specifying if any special equipment is need for each of the evacuation of this patient  (EXTRACTION EQUIPMENT, SEMI RIGID LITTER, BACKBOARD, CERVICAL COLLAR ,JUNGLE PENETRATOR, OXYGEN, WHOLE BLOOD, VENTILATOR, HOIST, NONE).
  ///  Example: /// Example: ['OXYGEN', 'HOIST']
  ///  Constraints: No constraints specified.
  List<String>? get specMedEquip => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 14);
  ///  Optional casualty key.
  ///  Example: /// Example: casualty-007
  ///  Constraints: Minimum length = 0, Maximum length = 36
  String? get casualtyKey => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  ///  The patient service status (US MILITARY, US CIVILIAN, NON US MILITARY, NON US CIVILIAN, ENEMY POW).
  ///  Example: /// Example: US CIVILIAN
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get patientStatus => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  The patient service identity (UNKNOWN MILITARY, UNKNOWN CIVILIAN, FRIEND MILITARY, FRIEND CIVILIAN, NEUTRAL MILITARY, NEUTRAL CIVILIAN, HOSTILE MILITARY, HOSTILE CIVILIAN).
  ///  Example: /// Example: FRIEND CIVILIAN
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get patientIdentity => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  The country code indicating the citizenship of the patient.
  ///  Example: /// Example: US
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get nationality => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  The patient pay grade or rank designation (O-10, O-9, O-8, O-7, O-6, O-5, O-4, O-3, O-2, O-1, CWO-5, CWO-4, CWO-2, CWO-1, E -9, E-8, E-7, E-6, E-5, E-4, E-3, E-2, E-1, NONE, CIVILIAN).
  ///  Example: /// Example: CIVILIAN
  ///  Constraints: Minimum length = 0, Maximum length = 16
  String? get payGrade => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);
  ///  The patient common or legal name.
  ///  Example: /// Example: John Smith
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 26);
  ///  The patient age, in years.
  ///  Example: /// Example: 35
  ///  Constraints: No constraints specified.
  int get age => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 28, 0);
  ///  The patient sex (MALE, FEMALE).
  ///  Example: /// Example: MALE
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get gender => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 30);
  ///  Last 4 characters of the patient social security code, or equivalent.
  ///  Example: /// Example: 1234
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get last4Ssn => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 32);
  ///  The patient blood type (A POS, B POS, AB POS, O POS, A NEG, B NEG, AB NEG, O NEG).
  ///  Example: /// Example: O NEG
  ///  Constraints: Minimum length = 0, Maximum length = 6
  String? get bloodType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 34);
  ///  The patient branch of service (AIR FORCE, ARMY, NAVY, MARINES, CIV, CONTR, UNKNOWN SERVICE).
  ///  Example: /// Example: CIV
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get service => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 36);
  ///  The call sign of this patient.
  ///  Example: /// Example: SHARK
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get callSign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 38);
  ///  The career field of this patient.
  ///  Example: /// Example: Healthcare
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get occSpeciality => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 40);
  ///  Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the burial location.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  ///  Example: /// Example: [-33.123, 150.33, 0.24]
  ///  Constraints: No constraints specified.
  List<String>? get burialLocation => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 42);
  ///  Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the collection point.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  ///  Example: /// Example: [12.44, 122.55, 0.98]
  ///  Constraints: No constraints specified.
  List<String>? get collectionPoint => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 44);
  ///  Unique identifier for the patient care provider.
  ///  Example: /// Example: CARE_PROVIDER-1
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get careProviderUrn => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 46);
  ///  The expected disposition of this patient (R T D, EVACUATE, EVACUATE TO FORWARD SURGICAL TEAM, EVACUATE TO COMBAT SUPPORT HOSPITAL, EVACUATE TO AERO MEDICAL STAGING FACILITY, EVACUATE TO SUSTAINING BASE MEDICAL TREATMENT FACILITY).
  ///  Example: /// Example: EVACUATE
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get dispositionType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 48);
  ///  The patient's general medical state (SICK IN QUARTERS, RETURN TO DUTY, EVACUATE WOUNDED, EVACUATE DECEASED, INTERRED).
  ///  Example: /// Example: EVACUATE WOUNDED
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get disposition => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 50);
  ///  The method used to generate this medevac report (DEVICE, GROUND COMBAT PERSONNEL, EVACUATION PERSONNEL, ECHELON1 PERSONNEL, ECHELON2 PERSONNEL).
  ///  Example: /// Example: DEVICE
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get reportGen => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 52);
  ///  Datetime of the compiling of the patients casualty report, in ISO 8601 UTC format.
  ///  Example: /// Example: 2021-10-15T16:00:00.123Z
  ///  Constraints: No constraints specified.
  String? get reportTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 54);
  ///  Additional comments on the  patient's casualty information.
  ///  Example: /// Example: Comments relating to this casualty info.
  ///  Constraints: Minimum length = 0, Maximum length = 1024
  String? get comments => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 56);
  ///  Medical condition causation information.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get etiology => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 58);
  ///  Treatment information.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get treatment => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 60);
  ///  Information obtained for vital signs.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get vitalSignData => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 62);
  ///  Health state information.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get healthState => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 64);
  ///  Health condition information.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get condition => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 66);
  ///  Medication specifics.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get medication => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 68);
  ///  Injury specifics.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get injury => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 70);
  ///  Allergy information.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get allergy => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 72);

  @override
  String toString() {
    return 'EvacCasualtyInfoAbridged{priority: ${priority}, evacType: ${evacType}, casualtyType: ${casualtyType}, bodyPart: ${bodyPart}, contamType: ${contamType}, specMedEquip: ${specMedEquip}, casualtyKey: ${casualtyKey}, patientStatus: ${patientStatus}, patientIdentity: ${patientIdentity}, nationality: ${nationality}, payGrade: ${payGrade}, name: ${name}, age: ${age}, gender: ${gender}, last4Ssn: ${last4Ssn}, bloodType: ${bloodType}, service: ${service}, callSign: ${callSign}, occSpeciality: ${occSpeciality}, burialLocation: ${burialLocation}, collectionPoint: ${collectionPoint}, careProviderUrn: ${careProviderUrn}, dispositionType: ${dispositionType}, disposition: ${disposition}, reportGen: ${reportGen}, reportTime: ${reportTime}, comments: ${comments}, etiology: ${etiology}, treatment: ${treatment}, vitalSignData: ${vitalSignData}, healthState: ${healthState}, condition: ${condition}, medication: ${medication}, injury: ${injury}, allergy: ${allergy}}';
  }
}

class _EvacCasualtyInfoAbridgedReader extends fb.TableReader<EvacCasualtyInfoAbridged> {
  const _EvacCasualtyInfoAbridgedReader();

  @override
  EvacCasualtyInfoAbridged createObject(fb.BufferContext bc, int offset) => 
    EvacCasualtyInfoAbridged._(bc, offset);
}

class EvacCasualtyInfoAbridgedBuilder {
  EvacCasualtyInfoAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(35);
  }

  int addPriorityOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addEvacTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCasualtyTypeOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addBodyPartOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addContamTypeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addSpecMedEquipOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addCasualtyKeyOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addPatientStatusOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addPatientIdentityOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addNationalityOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addPayGradeOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addAge(int? age) {
    fbBuilder.addInt32(12, age);
    return fbBuilder.offset;
  }
  int addGenderOffset(int? offset) {
    fbBuilder.addOffset(13, offset);
    return fbBuilder.offset;
  }
  int addLast4SsnOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }
  int addBloodTypeOffset(int? offset) {
    fbBuilder.addOffset(15, offset);
    return fbBuilder.offset;
  }
  int addServiceOffset(int? offset) {
    fbBuilder.addOffset(16, offset);
    return fbBuilder.offset;
  }
  int addCallSignOffset(int? offset) {
    fbBuilder.addOffset(17, offset);
    return fbBuilder.offset;
  }
  int addOccSpecialityOffset(int? offset) {
    fbBuilder.addOffset(18, offset);
    return fbBuilder.offset;
  }
  int addBurialLocationOffset(int? offset) {
    fbBuilder.addOffset(19, offset);
    return fbBuilder.offset;
  }
  int addCollectionPointOffset(int? offset) {
    fbBuilder.addOffset(20, offset);
    return fbBuilder.offset;
  }
  int addCareProviderUrnOffset(int? offset) {
    fbBuilder.addOffset(21, offset);
    return fbBuilder.offset;
  }
  int addDispositionTypeOffset(int? offset) {
    fbBuilder.addOffset(22, offset);
    return fbBuilder.offset;
  }
  int addDispositionOffset(int? offset) {
    fbBuilder.addOffset(23, offset);
    return fbBuilder.offset;
  }
  int addReportGenOffset(int? offset) {
    fbBuilder.addOffset(24, offset);
    return fbBuilder.offset;
  }
  int addReportTimeOffset(int? offset) {
    fbBuilder.addOffset(25, offset);
    return fbBuilder.offset;
  }
  int addCommentsOffset(int? offset) {
    fbBuilder.addOffset(26, offset);
    return fbBuilder.offset;
  }
  int addEtiologyOffset(int? offset) {
    fbBuilder.addOffset(27, offset);
    return fbBuilder.offset;
  }
  int addTreatmentOffset(int? offset) {
    fbBuilder.addOffset(28, offset);
    return fbBuilder.offset;
  }
  int addVitalSignDataOffset(int? offset) {
    fbBuilder.addOffset(29, offset);
    return fbBuilder.offset;
  }
  int addHealthStateOffset(int? offset) {
    fbBuilder.addOffset(30, offset);
    return fbBuilder.offset;
  }
  int addConditionOffset(int? offset) {
    fbBuilder.addOffset(31, offset);
    return fbBuilder.offset;
  }
  int addMedicationOffset(int? offset) {
    fbBuilder.addOffset(32, offset);
    return fbBuilder.offset;
  }
  int addInjuryOffset(int? offset) {
    fbBuilder.addOffset(33, offset);
    return fbBuilder.offset;
  }
  int addAllergyOffset(int? offset) {
    fbBuilder.addOffset(34, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class EvacCasualtyInfoAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _priority;
  final String? _evacType;
  final String? _casualtyType;
  final String? _bodyPart;
  final String? _contamType;
  final List<String>? _specMedEquip;
  final String? _casualtyKey;
  final String? _patientStatus;
  final String? _patientIdentity;
  final String? _nationality;
  final String? _payGrade;
  final String? _name;
  final int? _age;
  final String? _gender;
  final String? _last4Ssn;
  final String? _bloodType;
  final String? _service;
  final String? _callSign;
  final String? _occSpeciality;
  final List<String>? _burialLocation;
  final List<String>? _collectionPoint;
  final String? _careProviderUrn;
  final String? _dispositionType;
  final String? _disposition;
  final String? _reportGen;
  final String? _reportTime;
  final String? _comments;
  final List<String>? _etiology;
  final List<String>? _treatment;
  final List<String>? _vitalSignData;
  final List<String>? _healthState;
  final List<String>? _condition;
  final List<String>? _medication;
  final List<String>? _injury;
  final List<String>? _allergy;

  EvacCasualtyInfoAbridgedObjectBuilder({
    String? priority,
    String? evacType,
    String? casualtyType,
    String? bodyPart,
    String? contamType,
    List<String>? specMedEquip,
    String? casualtyKey,
    String? patientStatus,
    String? patientIdentity,
    String? nationality,
    String? payGrade,
    String? name,
    int? age,
    String? gender,
    String? last4Ssn,
    String? bloodType,
    String? service,
    String? callSign,
    String? occSpeciality,
    List<String>? burialLocation,
    List<String>? collectionPoint,
    String? careProviderUrn,
    String? dispositionType,
    String? disposition,
    String? reportGen,
    String? reportTime,
    String? comments,
    List<String>? etiology,
    List<String>? treatment,
    List<String>? vitalSignData,
    List<String>? healthState,
    List<String>? condition,
    List<String>? medication,
    List<String>? injury,
    List<String>? allergy,
  })
      : _priority = priority,
        _evacType = evacType,
        _casualtyType = casualtyType,
        _bodyPart = bodyPart,
        _contamType = contamType,
        _specMedEquip = specMedEquip,
        _casualtyKey = casualtyKey,
        _patientStatus = patientStatus,
        _patientIdentity = patientIdentity,
        _nationality = nationality,
        _payGrade = payGrade,
        _name = name,
        _age = age,
        _gender = gender,
        _last4Ssn = last4Ssn,
        _bloodType = bloodType,
        _service = service,
        _callSign = callSign,
        _occSpeciality = occSpeciality,
        _burialLocation = burialLocation,
        _collectionPoint = collectionPoint,
        _careProviderUrn = careProviderUrn,
        _dispositionType = dispositionType,
        _disposition = disposition,
        _reportGen = reportGen,
        _reportTime = reportTime,
        _comments = comments,
        _etiology = etiology,
        _treatment = treatment,
        _vitalSignData = vitalSignData,
        _healthState = healthState,
        _condition = condition,
        _medication = medication,
        _injury = injury,
        _allergy = allergy;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? priorityOffset = _priority == null ? null
        : fbBuilder.writeString(_priority!);
    final int? evacTypeOffset = _evacType == null ? null
        : fbBuilder.writeString(_evacType!);
    final int? casualtyTypeOffset = _casualtyType == null ? null
        : fbBuilder.writeString(_casualtyType!);
    final int? bodyPartOffset = _bodyPart == null ? null
        : fbBuilder.writeString(_bodyPart!);
    final int? contamTypeOffset = _contamType == null ? null
        : fbBuilder.writeString(_contamType!);
    final int? specMedEquipOffset = _specMedEquip == null ? null
        : fbBuilder.writeList(_specMedEquip!.map(fbBuilder.writeString).toList());
    final int? casualtyKeyOffset = _casualtyKey == null ? null
        : fbBuilder.writeString(_casualtyKey!);
    final int? patientStatusOffset = _patientStatus == null ? null
        : fbBuilder.writeString(_patientStatus!);
    final int? patientIdentityOffset = _patientIdentity == null ? null
        : fbBuilder.writeString(_patientIdentity!);
    final int? nationalityOffset = _nationality == null ? null
        : fbBuilder.writeString(_nationality!);
    final int? payGradeOffset = _payGrade == null ? null
        : fbBuilder.writeString(_payGrade!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? genderOffset = _gender == null ? null
        : fbBuilder.writeString(_gender!);
    final int? last4SsnOffset = _last4Ssn == null ? null
        : fbBuilder.writeString(_last4Ssn!);
    final int? bloodTypeOffset = _bloodType == null ? null
        : fbBuilder.writeString(_bloodType!);
    final int? serviceOffset = _service == null ? null
        : fbBuilder.writeString(_service!);
    final int? callSignOffset = _callSign == null ? null
        : fbBuilder.writeString(_callSign!);
    final int? occSpecialityOffset = _occSpeciality == null ? null
        : fbBuilder.writeString(_occSpeciality!);
    final int? burialLocationOffset = _burialLocation == null ? null
        : fbBuilder.writeList(_burialLocation!.map(fbBuilder.writeString).toList());
    final int? collectionPointOffset = _collectionPoint == null ? null
        : fbBuilder.writeList(_collectionPoint!.map(fbBuilder.writeString).toList());
    final int? careProviderUrnOffset = _careProviderUrn == null ? null
        : fbBuilder.writeString(_careProviderUrn!);
    final int? dispositionTypeOffset = _dispositionType == null ? null
        : fbBuilder.writeString(_dispositionType!);
    final int? dispositionOffset = _disposition == null ? null
        : fbBuilder.writeString(_disposition!);
    final int? reportGenOffset = _reportGen == null ? null
        : fbBuilder.writeString(_reportGen!);
    final int? reportTimeOffset = _reportTime == null ? null
        : fbBuilder.writeString(_reportTime!);
    final int? commentsOffset = _comments == null ? null
        : fbBuilder.writeString(_comments!);
    final int? etiologyOffset = _etiology == null ? null
        : fbBuilder.writeList(_etiology!.map(fbBuilder.writeString).toList());
    final int? treatmentOffset = _treatment == null ? null
        : fbBuilder.writeList(_treatment!.map(fbBuilder.writeString).toList());
    final int? vitalSignDataOffset = _vitalSignData == null ? null
        : fbBuilder.writeList(_vitalSignData!.map(fbBuilder.writeString).toList());
    final int? healthStateOffset = _healthState == null ? null
        : fbBuilder.writeList(_healthState!.map(fbBuilder.writeString).toList());
    final int? conditionOffset = _condition == null ? null
        : fbBuilder.writeList(_condition!.map(fbBuilder.writeString).toList());
    final int? medicationOffset = _medication == null ? null
        : fbBuilder.writeList(_medication!.map(fbBuilder.writeString).toList());
    final int? injuryOffset = _injury == null ? null
        : fbBuilder.writeList(_injury!.map(fbBuilder.writeString).toList());
    final int? allergyOffset = _allergy == null ? null
        : fbBuilder.writeList(_allergy!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(35);
    fbBuilder.addOffset(0, priorityOffset);
    fbBuilder.addOffset(1, evacTypeOffset);
    fbBuilder.addOffset(2, casualtyTypeOffset);
    fbBuilder.addOffset(3, bodyPartOffset);
    fbBuilder.addOffset(4, contamTypeOffset);
    fbBuilder.addOffset(5, specMedEquipOffset);
    fbBuilder.addOffset(6, casualtyKeyOffset);
    fbBuilder.addOffset(7, patientStatusOffset);
    fbBuilder.addOffset(8, patientIdentityOffset);
    fbBuilder.addOffset(9, nationalityOffset);
    fbBuilder.addOffset(10, payGradeOffset);
    fbBuilder.addOffset(11, nameOffset);
    fbBuilder.addInt32(12, _age);
    fbBuilder.addOffset(13, genderOffset);
    fbBuilder.addOffset(14, last4SsnOffset);
    fbBuilder.addOffset(15, bloodTypeOffset);
    fbBuilder.addOffset(16, serviceOffset);
    fbBuilder.addOffset(17, callSignOffset);
    fbBuilder.addOffset(18, occSpecialityOffset);
    fbBuilder.addOffset(19, burialLocationOffset);
    fbBuilder.addOffset(20, collectionPointOffset);
    fbBuilder.addOffset(21, careProviderUrnOffset);
    fbBuilder.addOffset(22, dispositionTypeOffset);
    fbBuilder.addOffset(23, dispositionOffset);
    fbBuilder.addOffset(24, reportGenOffset);
    fbBuilder.addOffset(25, reportTimeOffset);
    fbBuilder.addOffset(26, commentsOffset);
    fbBuilder.addOffset(27, etiologyOffset);
    fbBuilder.addOffset(28, treatmentOffset);
    fbBuilder.addOffset(29, vitalSignDataOffset);
    fbBuilder.addOffset(30, healthStateOffset);
    fbBuilder.addOffset(31, conditionOffset);
    fbBuilder.addOffset(32, medicationOffset);
    fbBuilder.addOffset(33, injuryOffset);
    fbBuilder.addOffset(34, allergyOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
