// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// No description available.
class ExportableEntities {
  ExportableEntities._(this._bc, this._bcOffset);
  factory ExportableEntities(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<ExportableEntities> reader = _ExportableEntitiesReader();

  final fb.BufferContext _bc;
  final int _bcOffset;


  @override
  String toString() {
    return 'ExportableEntities{}';
  }
}

class _ExportableEntitiesReader extends fb.TableReader<ExportableEntities> {
  const _ExportableEntitiesReader();

  @override
  ExportableEntities createObject(fb.BufferContext bc, int offset) => 
    ExportableEntities._(bc, offset);
}

class ExportableEntitiesObjectBuilder extends fb.ObjectBuilder {

  ExportableEntitiesObjectBuilder();

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    fbBuilder.startTable(0);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
