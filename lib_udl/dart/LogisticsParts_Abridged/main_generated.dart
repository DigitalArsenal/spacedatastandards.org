// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// The parts associated with this support item.
class LogisticsPartsAbridged {
  LogisticsPartsAbridged._(this._bc, this._bcOffset);
  factory LogisticsPartsAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<LogisticsPartsAbridged> reader = _LogisticsPartsAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Requested or supplied part number.
  ///  Example: /// Example: MS35338-42
  ///  Constraints: Minimum length = 0, Maximum length = 20
  String? get partNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  The National Stock Number of the part being requested or supplied.
  ///  Example: /// Example: 5310-00-045-3299
  ///  Constraints: Minimum length = 0, Maximum length = 20
  String? get nationalStockNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Code for a unit of measurement.
  ///  Example: /// Example: EA
  ///  Constraints: Minimum length = 0, Maximum length = 2
  String? get measurementUnitCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Work Unit Code (WUC), or for some aircraft types, the Reference Designator.
  ///  Example: /// Example: 5611UU001
  ///  Constraints: Minimum length = 0, Maximum length = 10
  String? get workUnitCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Indicates the specified Technical Order manual holding the aircraft information for use in diagnosing a problem or condition.
  ///  Example: /// Example: 1C-17A-4
  ///  Constraints: Minimum length = 0, Maximum length = 15
  String? get technicalOrderText => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  Technical order manual figure number for the requested / supplied part.
  ///  Example: /// Example: 3
  ///  Constraints: Minimum length = 0, Maximum length = 7
  String? get figureNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  Technical order manual index number for the requested part.
  ///  Example: /// Example: 4
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get indexNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  ///  The person who validated the request for parts.
  ///  Example: /// Example: JOHN SMITH
  ///  Constraints: Minimum length = 0, Maximum length = 25
  String? get requestVerifier => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  The person who validated that the sourced location has, and can supply, the requested parts.
  ///  Example: /// Example: JANE DOE
  ///  Constraints: Minimum length = 0, Maximum length = 25
  String? get locationVerifier => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  The supply document number.
  ///  Example: /// Example: J223FU31908300
  ///  Constraints: Minimum length = 0, Maximum length = 17
  String? get supplyDocumentNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  The supply stocks for this support item.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get logisticsStocks => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 24);

  @override
  String toString() {
    return 'LogisticsPartsAbridged{partNumber: ${partNumber}, nationalStockNumber: ${nationalStockNumber}, measurementUnitCode: ${measurementUnitCode}, workUnitCode: ${workUnitCode}, technicalOrderText: ${technicalOrderText}, figureNumber: ${figureNumber}, indexNumber: ${indexNumber}, requestVerifier: ${requestVerifier}, locationVerifier: ${locationVerifier}, supplyDocumentNumber: ${supplyDocumentNumber}, logisticsStocks: ${logisticsStocks}}';
  }
}

class _LogisticsPartsAbridgedReader extends fb.TableReader<LogisticsPartsAbridged> {
  const _LogisticsPartsAbridgedReader();

  @override
  LogisticsPartsAbridged createObject(fb.BufferContext bc, int offset) => 
    LogisticsPartsAbridged._(bc, offset);
}

class LogisticsPartsAbridgedBuilder {
  LogisticsPartsAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(11);
  }

  int addPartNumberOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNationalStockNumberOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addMeasurementUnitCodeOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addWorkUnitCodeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addTechnicalOrderTextOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addFigureNumberOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addIndexNumberOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addRequestVerifierOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addLocationVerifierOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addSupplyDocumentNumberOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addLogisticsStocksOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class LogisticsPartsAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _partNumber;
  final String? _nationalStockNumber;
  final String? _measurementUnitCode;
  final String? _workUnitCode;
  final String? _technicalOrderText;
  final String? _figureNumber;
  final String? _indexNumber;
  final String? _requestVerifier;
  final String? _locationVerifier;
  final String? _supplyDocumentNumber;
  final List<String>? _logisticsStocks;

  LogisticsPartsAbridgedObjectBuilder({
    String? partNumber,
    String? nationalStockNumber,
    String? measurementUnitCode,
    String? workUnitCode,
    String? technicalOrderText,
    String? figureNumber,
    String? indexNumber,
    String? requestVerifier,
    String? locationVerifier,
    String? supplyDocumentNumber,
    List<String>? logisticsStocks,
  })
      : _partNumber = partNumber,
        _nationalStockNumber = nationalStockNumber,
        _measurementUnitCode = measurementUnitCode,
        _workUnitCode = workUnitCode,
        _technicalOrderText = technicalOrderText,
        _figureNumber = figureNumber,
        _indexNumber = indexNumber,
        _requestVerifier = requestVerifier,
        _locationVerifier = locationVerifier,
        _supplyDocumentNumber = supplyDocumentNumber,
        _logisticsStocks = logisticsStocks;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? partNumberOffset = _partNumber == null ? null
        : fbBuilder.writeString(_partNumber!);
    final int? nationalStockNumberOffset = _nationalStockNumber == null ? null
        : fbBuilder.writeString(_nationalStockNumber!);
    final int? measurementUnitCodeOffset = _measurementUnitCode == null ? null
        : fbBuilder.writeString(_measurementUnitCode!);
    final int? workUnitCodeOffset = _workUnitCode == null ? null
        : fbBuilder.writeString(_workUnitCode!);
    final int? technicalOrderTextOffset = _technicalOrderText == null ? null
        : fbBuilder.writeString(_technicalOrderText!);
    final int? figureNumberOffset = _figureNumber == null ? null
        : fbBuilder.writeString(_figureNumber!);
    final int? indexNumberOffset = _indexNumber == null ? null
        : fbBuilder.writeString(_indexNumber!);
    final int? requestVerifierOffset = _requestVerifier == null ? null
        : fbBuilder.writeString(_requestVerifier!);
    final int? locationVerifierOffset = _locationVerifier == null ? null
        : fbBuilder.writeString(_locationVerifier!);
    final int? supplyDocumentNumberOffset = _supplyDocumentNumber == null ? null
        : fbBuilder.writeString(_supplyDocumentNumber!);
    final int? logisticsStocksOffset = _logisticsStocks == null ? null
        : fbBuilder.writeList(_logisticsStocks!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(11);
    fbBuilder.addOffset(0, partNumberOffset);
    fbBuilder.addOffset(1, nationalStockNumberOffset);
    fbBuilder.addOffset(2, measurementUnitCodeOffset);
    fbBuilder.addOffset(3, workUnitCodeOffset);
    fbBuilder.addOffset(4, technicalOrderTextOffset);
    fbBuilder.addOffset(5, figureNumberOffset);
    fbBuilder.addOffset(6, indexNumberOffset);
    fbBuilder.addOffset(7, requestVerifierOffset);
    fbBuilder.addOffset(8, locationVerifierOffset);
    fbBuilder.addOffset(9, supplyDocumentNumberOffset);
    fbBuilder.addOffset(10, logisticsStocksOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
