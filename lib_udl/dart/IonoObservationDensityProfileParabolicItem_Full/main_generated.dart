// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Describes the E, F1, and F2 layers as parabolic-shape segments.
class IonoObservationDensityProfileParabolicItemFull {
  IonoObservationDensityProfileParabolicItemFull._(this._bc, this._bcOffset);
  factory IonoObservationDensityProfileParabolicItemFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationDensityProfileParabolicItemFull> reader = _IonoObservationDensityProfileParabolicItemFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Ionospheric plasma layer (E, F1, or F2).
  ///  Example: /// Example: E
  ///  Constraints: No constraints specified.
  String? get layer => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Plasma frequency at the layer peak, in MHz.
  ///  Example: /// Example: 3.621
  ///  Constraints: No constraints specified.
  double get f => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  ///  Height of the layer peak, in kilometers.
  ///  Example: /// Example: 110.2
  ///  Constraints: No constraints specified.
  double get z => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 8, 0.0);
  ///  Half-thickness of the layer, in kilometers.
  ///  Example: /// Example: 11.1
  ///  Constraints: No constraints specified.
  double get y => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 10, 0.0);

  @override
  String toString() {
    return 'IonoObservationDensityProfileParabolicItemFull{layer: ${layer}, f: ${f}, z: ${z}, y: ${y}}';
  }
}

class _IonoObservationDensityProfileParabolicItemFullReader extends fb.TableReader<IonoObservationDensityProfileParabolicItemFull> {
  const _IonoObservationDensityProfileParabolicItemFullReader();

  @override
  IonoObservationDensityProfileParabolicItemFull createObject(fb.BufferContext bc, int offset) => 
    IonoObservationDensityProfileParabolicItemFull._(bc, offset);
}

class IonoObservationDensityProfileParabolicItemFullBuilder {
  IonoObservationDensityProfileParabolicItemFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(4);
  }

  int addLayerOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addF(double? f) {
    fbBuilder.addFloat64(1, f);
    return fbBuilder.offset;
  }
  int addZ(double? z) {
    fbBuilder.addFloat64(2, z);
    return fbBuilder.offset;
  }
  int addY(double? y) {
    fbBuilder.addFloat64(3, y);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationDensityProfileParabolicItemFullObjectBuilder extends fb.ObjectBuilder {
  final String? _layer;
  final double? _f;
  final double? _z;
  final double? _y;

  IonoObservationDensityProfileParabolicItemFullObjectBuilder({
    String? layer,
    double? f,
    double? z,
    double? y,
  })
      : _layer = layer,
        _f = f,
        _z = z,
        _y = y;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? layerOffset = _layer == null ? null
        : fbBuilder.writeString(_layer!);
    fbBuilder.startTable(4);
    fbBuilder.addOffset(0, layerOffset);
    fbBuilder.addFloat64(1, _f);
    fbBuilder.addFloat64(2, _z);
    fbBuilder.addFloat64(3, _y);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
