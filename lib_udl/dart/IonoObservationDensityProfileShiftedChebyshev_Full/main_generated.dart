// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Coefficients to describe either the E, F1, and bottomside F2 profile shapes or the height uncertainty boundaries.
class IonoObservationDensityProfileShiftedChebyshevFull {
  IonoObservationDensityProfileShiftedChebyshevFull._(this._bc, this._bcOffset);
  factory IonoObservationDensityProfileShiftedChebyshevFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationDensityProfileShiftedChebyshevFull> reader = _IonoObservationDensityProfileShiftedChebyshevFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Description of the computation technique.
  ///  Example: /// Example: Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion.
  ///  Constraints: No constraints specified.
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Up to 3 groups of coefficients, using “shiftedChebyshev” sub-field, to describe E, F1, and bottomside F2 profile shapes, or up to 6 groups of coefficients to describe height uncertainty boundaries (upper and lower).
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get shiftedChebyshevs => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 6);

  @override
  String toString() {
    return 'IonoObservationDensityProfileShiftedChebyshevFull{description: ${description}, shiftedChebyshevs: ${shiftedChebyshevs}}';
  }
}

class _IonoObservationDensityProfileShiftedChebyshevFullReader extends fb.TableReader<IonoObservationDensityProfileShiftedChebyshevFull> {
  const _IonoObservationDensityProfileShiftedChebyshevFullReader();

  @override
  IonoObservationDensityProfileShiftedChebyshevFull createObject(fb.BufferContext bc, int offset) => 
    IonoObservationDensityProfileShiftedChebyshevFull._(bc, offset);
}

class IonoObservationDensityProfileShiftedChebyshevFullBuilder {
  IonoObservationDensityProfileShiftedChebyshevFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(2);
  }

  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addShiftedChebyshevsOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationDensityProfileShiftedChebyshevFullObjectBuilder extends fb.ObjectBuilder {
  final String? _description;
  final List<String>? _shiftedChebyshevs;

  IonoObservationDensityProfileShiftedChebyshevFullObjectBuilder({
    String? description,
    List<String>? shiftedChebyshevs,
  })
      : _description = description,
        _shiftedChebyshevs = shiftedChebyshevs;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? shiftedChebyshevsOffset = _shiftedChebyshevs == null ? null
        : fbBuilder.writeList(_shiftedChebyshevs!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(2);
    fbBuilder.addOffset(0, descriptionOffset);
    fbBuilder.addOffset(1, shiftedChebyshevsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
