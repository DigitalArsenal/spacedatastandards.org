// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Full set of the IRI formalism coefficients.
class IonoObservationDensityProfileIriIngest {
  IonoObservationDensityProfileIriIngest._(this._bc, this._bcOffset);
  factory IonoObservationDensityProfileIriIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationDensityProfileIriIngest> reader = _IonoObservationDensityProfileIriIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Description of IRI implementation.
  ///  Example: /// Example: Full altitude range of 1D vertical plasma density profile for D, E, and F regions of the ionosphere provided by IRI, in which model parameters are replaced with observed ionogram-derived data where available.
  ///  Constraints: No constraints specified.
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Peak density of F2 layer, in grams per cubic centimeter.
  ///  Example: /// Example: 313283.1
  ///  Constraints: No constraints specified.
  double get nmF2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  ///  Peak height of F2 layer, in kilometers.
  ///  Example: /// Example: 265.42
  ///  Constraints: No constraints specified.
  double get hmF2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 8, 0.0);
  ///  B0 parameter of the F2 layer shape.
  ///  Example: /// Example: 245.1
  ///  Constraints: No constraints specified.
  double get b0 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 10, 0.0);
  ///  B1 parameter of the F2 layer shape.
  ///  Example: /// Example: 3.45
  ///  Constraints: No constraints specified.
  double get b1 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 12, 0.0);
  ///  Peak density of the F1 layer, in grams per cubic centimeter.
  ///  Example: /// Example: 210486
  ///  Constraints: No constraints specified.
  double get nmF1 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 14, 0.0);
  ///  Peak height of the F1 layer, in kilometers.
  ///  Example: /// Example: 210.3
  ///  Constraints: No constraints specified.
  double get hmF1 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 16, 0.0);
  ///  D1 parameter of the F1 layer shape.
  ///  Example: /// Example: 0
  ///  Constraints: No constraints specified.
  double get d1 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 18, 0.0);
  ///  Height HZ of the interim layer, in kilometers.
  ///  Example: /// Example: 142.7
  ///  Constraints: No constraints specified.
  double get hz => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 20, 0.0);
  ///  The valley height, in kilometers.
  ///  Example: /// Example: 116.2
  ///  Constraints: No constraints specified.
  double get hValTop => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 22, 0.0);
  ///  The valley depth, in grams per cubic centimeter.
  ///  Example: /// Example: 147025.1
  ///  Constraints: No constraints specified.
  double get nValB => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 24, 0.0);
  ///  Peak density of the E layer, in per cubic centimeter.
  ///  Example: /// Example: 154164.1
  ///  Constraints: No constraints specified.
  double get nmE => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 26, 0.0);
  ///  Peak height of the F2 layer, in kilometers.
  ///  Example: /// Example: 99.8
  ///  Constraints: No constraints specified.
  double get hmE => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 28, 0.0);
  ///  Height of the intermediate region at the top of D region, in kilometers.
  ///  Example: /// Example: 85.6
  ///  Constraints: No constraints specified.
  double get hdx => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 30, 0.0);
  ///  Peak density of the D layer, in per cubic centimeter.
  ///  Example: /// Example: 937543116.1
  ///  Constraints: No constraints specified.
  double get nmD => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 32, 0.0);
  ///  Peak height of the D layer, in kilometers.
  ///  Example: /// Example: 81.1
  ///  Constraints: No constraints specified.
  double get hmD => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 34, 0.0);
  ///  Starting height of the D layer, in kilometers.
  ///  Example: /// Example: 50.1
  ///  Constraints: No constraints specified.
  double get ha => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 36, 0.0);
  ///  TBD.
  ///  Example: /// Example: 0.0474732023322638
  ///  Constraints: No constraints specified.
  double get fp1 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 38, 0.0);
  ///  TBD.
  ///  Example: /// Example: -0.00112685246984002
  ///  Constraints: No constraints specified.
  double get fp2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 40, 0.0);
  ///  TBD.
  ///  Example: /// Example: 0.00827559450035957
  ///  Constraints: No constraints specified.
  double get fp30 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 42, 0.0);
  ///  TBD.
  ///  Example: /// Example: 0.000201178475411428
  ///  Constraints: No constraints specified.
  double get fp3U => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 44, 0.0);
  ///  Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
  ///  Example: /// Example: 35.1
  ///  Constraints: No constraints specified.
  double get chi => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 46, 0.0);

  @override
  String toString() {
    return 'IonoObservationDensityProfileIriIngest{description: ${description}, nmF2: ${nmF2}, hmF2: ${hmF2}, b0: ${b0}, b1: ${b1}, nmF1: ${nmF1}, hmF1: ${hmF1}, d1: ${d1}, hz: ${hz}, hValTop: ${hValTop}, nValB: ${nValB}, nmE: ${nmE}, hmE: ${hmE}, hdx: ${hdx}, nmD: ${nmD}, hmD: ${hmD}, ha: ${ha}, fp1: ${fp1}, fp2: ${fp2}, fp30: ${fp30}, fp3U: ${fp3U}, chi: ${chi}}';
  }
}

class _IonoObservationDensityProfileIriIngestReader extends fb.TableReader<IonoObservationDensityProfileIriIngest> {
  const _IonoObservationDensityProfileIriIngestReader();

  @override
  IonoObservationDensityProfileIriIngest createObject(fb.BufferContext bc, int offset) => 
    IonoObservationDensityProfileIriIngest._(bc, offset);
}

class IonoObservationDensityProfileIriIngestBuilder {
  IonoObservationDensityProfileIriIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(22);
  }

  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNmF2(double? nmF2) {
    fbBuilder.addFloat64(1, nmF2);
    return fbBuilder.offset;
  }
  int addHmF2(double? hmF2) {
    fbBuilder.addFloat64(2, hmF2);
    return fbBuilder.offset;
  }
  int addB0(double? b0) {
    fbBuilder.addFloat64(3, b0);
    return fbBuilder.offset;
  }
  int addB1(double? b1) {
    fbBuilder.addFloat64(4, b1);
    return fbBuilder.offset;
  }
  int addNmF1(double? nmF1) {
    fbBuilder.addFloat64(5, nmF1);
    return fbBuilder.offset;
  }
  int addHmF1(double? hmF1) {
    fbBuilder.addFloat64(6, hmF1);
    return fbBuilder.offset;
  }
  int addD1(double? d1) {
    fbBuilder.addFloat64(7, d1);
    return fbBuilder.offset;
  }
  int addHz(double? hz) {
    fbBuilder.addFloat64(8, hz);
    return fbBuilder.offset;
  }
  int addHValTop(double? hValTop) {
    fbBuilder.addFloat64(9, hValTop);
    return fbBuilder.offset;
  }
  int addNValB(double? nValB) {
    fbBuilder.addFloat64(10, nValB);
    return fbBuilder.offset;
  }
  int addNmE(double? nmE) {
    fbBuilder.addFloat64(11, nmE);
    return fbBuilder.offset;
  }
  int addHmE(double? hmE) {
    fbBuilder.addFloat64(12, hmE);
    return fbBuilder.offset;
  }
  int addHdx(double? hdx) {
    fbBuilder.addFloat64(13, hdx);
    return fbBuilder.offset;
  }
  int addNmD(double? nmD) {
    fbBuilder.addFloat64(14, nmD);
    return fbBuilder.offset;
  }
  int addHmD(double? hmD) {
    fbBuilder.addFloat64(15, hmD);
    return fbBuilder.offset;
  }
  int addHa(double? ha) {
    fbBuilder.addFloat64(16, ha);
    return fbBuilder.offset;
  }
  int addFp1(double? fp1) {
    fbBuilder.addFloat64(17, fp1);
    return fbBuilder.offset;
  }
  int addFp2(double? fp2) {
    fbBuilder.addFloat64(18, fp2);
    return fbBuilder.offset;
  }
  int addFp30(double? fp30) {
    fbBuilder.addFloat64(19, fp30);
    return fbBuilder.offset;
  }
  int addFp3U(double? fp3U) {
    fbBuilder.addFloat64(20, fp3U);
    return fbBuilder.offset;
  }
  int addChi(double? chi) {
    fbBuilder.addFloat64(21, chi);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationDensityProfileIriIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _description;
  final double? _nmF2;
  final double? _hmF2;
  final double? _b0;
  final double? _b1;
  final double? _nmF1;
  final double? _hmF1;
  final double? _d1;
  final double? _hz;
  final double? _hValTop;
  final double? _nValB;
  final double? _nmE;
  final double? _hmE;
  final double? _hdx;
  final double? _nmD;
  final double? _hmD;
  final double? _ha;
  final double? _fp1;
  final double? _fp2;
  final double? _fp30;
  final double? _fp3U;
  final double? _chi;

  IonoObservationDensityProfileIriIngestObjectBuilder({
    String? description,
    double? nmF2,
    double? hmF2,
    double? b0,
    double? b1,
    double? nmF1,
    double? hmF1,
    double? d1,
    double? hz,
    double? hValTop,
    double? nValB,
    double? nmE,
    double? hmE,
    double? hdx,
    double? nmD,
    double? hmD,
    double? ha,
    double? fp1,
    double? fp2,
    double? fp30,
    double? fp3U,
    double? chi,
  })
      : _description = description,
        _nmF2 = nmF2,
        _hmF2 = hmF2,
        _b0 = b0,
        _b1 = b1,
        _nmF1 = nmF1,
        _hmF1 = hmF1,
        _d1 = d1,
        _hz = hz,
        _hValTop = hValTop,
        _nValB = nValB,
        _nmE = nmE,
        _hmE = hmE,
        _hdx = hdx,
        _nmD = nmD,
        _hmD = hmD,
        _ha = ha,
        _fp1 = fp1,
        _fp2 = fp2,
        _fp30 = fp30,
        _fp3U = fp3U,
        _chi = chi;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    fbBuilder.startTable(22);
    fbBuilder.addOffset(0, descriptionOffset);
    fbBuilder.addFloat64(1, _nmF2);
    fbBuilder.addFloat64(2, _hmF2);
    fbBuilder.addFloat64(3, _b0);
    fbBuilder.addFloat64(4, _b1);
    fbBuilder.addFloat64(5, _nmF1);
    fbBuilder.addFloat64(6, _hmF1);
    fbBuilder.addFloat64(7, _d1);
    fbBuilder.addFloat64(8, _hz);
    fbBuilder.addFloat64(9, _hValTop);
    fbBuilder.addFloat64(10, _nValB);
    fbBuilder.addFloat64(11, _nmE);
    fbBuilder.addFloat64(12, _hmE);
    fbBuilder.addFloat64(13, _hdx);
    fbBuilder.addFloat64(14, _nmD);
    fbBuilder.addFloat64(15, _hmD);
    fbBuilder.addFloat64(16, _ha);
    fbBuilder.addFloat64(17, _fp1);
    fbBuilder.addFloat64(18, _fp2);
    fbBuilder.addFloat64(19, _fp30);
    fbBuilder.addFloat64(20, _fp3U);
    fbBuilder.addFloat64(21, _chi);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
