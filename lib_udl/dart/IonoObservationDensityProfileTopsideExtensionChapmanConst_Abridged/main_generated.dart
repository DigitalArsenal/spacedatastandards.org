// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Parameters of the constant-scale-height Chapman layer.
class IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged {
  IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged._(this._bc, this._bcOffset);
  factory IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged> reader = _IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Description of the Chapman computation technique.
  ///  Example: /// Example: Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height.
  ///  Constraints: No constraints specified.
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Peak density of F2 layer, in grams per cubic centimeter.
  ///  Example: /// Example: 313283.1
  ///  Constraints: No constraints specified.
  double get nmF2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  ///  Peak height of F2 layer, in kilometers.
  ///  Example: /// Example: 265.42
  ///  Constraints: No constraints specified.
  double get hmF2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 8, 0.0);
  ///  Scale height if F2 layer at the peak, in kilometers.
  ///  Example: /// Example: 45.191
  ///  Constraints: No constraints specified.
  double get scaleF2 => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 10, 0.0);
  ///  Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
  ///  Example: /// Example: 35.1
  ///  Constraints: No constraints specified.
  double get chi => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 12, 0.0);

  @override
  String toString() {
    return 'IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged{description: ${description}, nmF2: ${nmF2}, hmF2: ${hmF2}, scaleF2: ${scaleF2}, chi: ${chi}}';
  }
}

class _IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedReader extends fb.TableReader<IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged> {
  const _IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedReader();

  @override
  IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged createObject(fb.BufferContext bc, int offset) => 
    IonoObservationDensityProfileTopsideExtensionChapmanConstAbridged._(bc, offset);
}

class IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedBuilder {
  IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNmF2(double? nmF2) {
    fbBuilder.addFloat64(1, nmF2);
    return fbBuilder.offset;
  }
  int addHmF2(double? hmF2) {
    fbBuilder.addFloat64(2, hmF2);
    return fbBuilder.offset;
  }
  int addScaleF2(double? scaleF2) {
    fbBuilder.addFloat64(3, scaleF2);
    return fbBuilder.offset;
  }
  int addChi(double? chi) {
    fbBuilder.addFloat64(4, chi);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _description;
  final double? _nmF2;
  final double? _hmF2;
  final double? _scaleF2;
  final double? _chi;

  IonoObservationDensityProfileTopsideExtensionChapmanConstAbridgedObjectBuilder({
    String? description,
    double? nmF2,
    double? hmF2,
    double? scaleF2,
    double? chi,
  })
      : _description = description,
        _nmF2 = nmF2,
        _hmF2 = hmF2,
        _scaleF2 = scaleF2,
        _chi = chi;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, descriptionOffset);
    fbBuilder.addFloat64(1, _nmF2);
    fbBuilder.addFloat64(2, _hmF2);
    fbBuilder.addFloat64(3, _scaleF2);
    fbBuilder.addFloat64(4, _chi);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
