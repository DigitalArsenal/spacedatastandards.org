// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Objective Area Information.
class PersonnelRecoveryObjectiveAreaInfoAbridged {
  PersonnelRecoveryObjectiveAreaInfoAbridged._(this._bc, this._bcOffset);
  factory PersonnelRecoveryObjectiveAreaInfoAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<PersonnelRecoveryObjectiveAreaInfoAbridged> reader = _PersonnelRecoveryObjectiveAreaInfoAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the pz location.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  ///  Example: /// Example: [103.23, 30.445]
  ///  Constraints: No constraints specified.
  List<String>? get pzLocation => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  ///  Description of the pickup zone location.
  ///  Example: /// Example: Near the lake.
  ///  Constraints: Minimum length = 0, Maximum length = 1024
  String? get pzDesc => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The call sign of the on-scene commander.
  ///  Example: /// Example: STARFOX
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get oscCallSign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  The radio frequency of the on-scene commander.
  ///  Example: /// Example: 12.55
  ///  Constraints: No constraints specified.
  double get oscFreq => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 10, 0.0);
  ///  Information detailing knowledge of enemies in the area.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get enemyData => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 12);

  @override
  String toString() {
    return 'PersonnelRecoveryObjectiveAreaInfoAbridged{pzLocation: ${pzLocation}, pzDesc: ${pzDesc}, oscCallSign: ${oscCallSign}, oscFreq: ${oscFreq}, enemyData: ${enemyData}}';
  }
}

class _PersonnelRecoveryObjectiveAreaInfoAbridgedReader extends fb.TableReader<PersonnelRecoveryObjectiveAreaInfoAbridged> {
  const _PersonnelRecoveryObjectiveAreaInfoAbridgedReader();

  @override
  PersonnelRecoveryObjectiveAreaInfoAbridged createObject(fb.BufferContext bc, int offset) => 
    PersonnelRecoveryObjectiveAreaInfoAbridged._(bc, offset);
}

class PersonnelRecoveryObjectiveAreaInfoAbridgedBuilder {
  PersonnelRecoveryObjectiveAreaInfoAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(5);
  }

  int addPzLocationOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addPzDescOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addOscCallSignOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addOscFreq(double? oscFreq) {
    fbBuilder.addFloat64(3, oscFreq);
    return fbBuilder.offset;
  }
  int addEnemyDataOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class PersonnelRecoveryObjectiveAreaInfoAbridgedObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _pzLocation;
  final String? _pzDesc;
  final String? _oscCallSign;
  final double? _oscFreq;
  final List<String>? _enemyData;

  PersonnelRecoveryObjectiveAreaInfoAbridgedObjectBuilder({
    List<String>? pzLocation,
    String? pzDesc,
    String? oscCallSign,
    double? oscFreq,
    List<String>? enemyData,
  })
      : _pzLocation = pzLocation,
        _pzDesc = pzDesc,
        _oscCallSign = oscCallSign,
        _oscFreq = oscFreq,
        _enemyData = enemyData;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? pzLocationOffset = _pzLocation == null ? null
        : fbBuilder.writeList(_pzLocation!.map(fbBuilder.writeString).toList());
    final int? pzDescOffset = _pzDesc == null ? null
        : fbBuilder.writeString(_pzDesc!);
    final int? oscCallSignOffset = _oscCallSign == null ? null
        : fbBuilder.writeString(_oscCallSign!);
    final int? enemyDataOffset = _enemyData == null ? null
        : fbBuilder.writeList(_enemyData!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(5);
    fbBuilder.addOffset(0, pzLocationOffset);
    fbBuilder.addOffset(1, pzDescOffset);
    fbBuilder.addOffset(2, oscCallSignOffset);
    fbBuilder.addFloat64(3, _oscFreq);
    fbBuilder.addOffset(4, enemyDataOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
