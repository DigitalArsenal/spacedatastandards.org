// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Coefficients to describe profile shape as quasi-parabolic segments.
class IonoObservationDensityProfileQuasiParabolicIngest {
  IonoObservationDensityProfileQuasiParabolicIngest._(this._bc, this._bcOffset);
  factory IonoObservationDensityProfileQuasiParabolicIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IonoObservationDensityProfileQuasiParabolicIngest> reader = _IonoObservationDensityProfileQuasiParabolicIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  General description of the quasi-parabolic computation algorithm.
  ///  Example: /// Example: Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C
  ///  Constraints: No constraints specified.
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Value of the Earth's radius, in kilometers, used for computations.
  ///  Example: /// Example: 6370.1
  ///  Constraints: No constraints specified.
  double get earthRadius => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  ///  Array of quasi-parabolic segments. Each segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C‚Äù. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get quasiParabolicSegments => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 8);

  @override
  String toString() {
    return 'IonoObservationDensityProfileQuasiParabolicIngest{description: ${description}, earthRadius: ${earthRadius}, quasiParabolicSegments: ${quasiParabolicSegments}}';
  }
}

class _IonoObservationDensityProfileQuasiParabolicIngestReader extends fb.TableReader<IonoObservationDensityProfileQuasiParabolicIngest> {
  const _IonoObservationDensityProfileQuasiParabolicIngestReader();

  @override
  IonoObservationDensityProfileQuasiParabolicIngest createObject(fb.BufferContext bc, int offset) => 
    IonoObservationDensityProfileQuasiParabolicIngest._(bc, offset);
}

class IonoObservationDensityProfileQuasiParabolicIngestBuilder {
  IonoObservationDensityProfileQuasiParabolicIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(3);
  }

  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addEarthRadius(double? earthRadius) {
    fbBuilder.addFloat64(1, earthRadius);
    return fbBuilder.offset;
  }
  int addQuasiParabolicSegmentsOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IonoObservationDensityProfileQuasiParabolicIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _description;
  final double? _earthRadius;
  final List<String>? _quasiParabolicSegments;

  IonoObservationDensityProfileQuasiParabolicIngestObjectBuilder({
    String? description,
    double? earthRadius,
    List<String>? quasiParabolicSegments,
  })
      : _description = description,
        _earthRadius = earthRadius,
        _quasiParabolicSegments = quasiParabolicSegments;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? quasiParabolicSegmentsOffset = _quasiParabolicSegments == null ? null
        : fbBuilder.writeList(_quasiParabolicSegments!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(3);
    fbBuilder.addOffset(0, descriptionOffset);
    fbBuilder.addFloat64(1, _earthRadius);
    fbBuilder.addOffset(2, quasiParabolicSegmentsOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
