// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Collection that specifies the naval flight operations for this ATO.
class IndividualAircraftTaskingFull {
  IndividualAircraftTaskingFull._(this._bc, this._bcOffset);
  factory IndividualAircraftTaskingFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IndividualAircraftTaskingFull> reader = _IndividualAircraftTaskingFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  The number of aircraft participating in this mission.
  ///  Example: /// Example: 2
  ///  Constraints: No constraints specified.
  int get numAcft => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 4, 0);
  ///  The type and model number for the aircraft. The field may specify a value of an aircraft not yet assigned an aircraft code contained in the aircraft codes list.
  ///  Example: /// Example: F35A
  ///  Constraints: Minimum length = 1, Maximum length = 36
  String? get acftType => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The call sign assigned to this mission aircraft.
  ///  Example: /// Example: EAGLE47
  ///  Constraints: Minimum length = 0, Maximum length = 24
  String? get callSign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  The code that indicates the ordinance mix carried on this mission aircraft.
  ///  Example: /// Example: 6A2W3
  ///  Constraints: Minimum length = 0, Maximum length = 48
  String? get priConfigCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  The code for the secondary ordinance mix carried on this mission aircraft.
  ///  Example: /// Example: 2S2WG
  ///  Constraints: Minimum length = 0, Maximum length = 48
  String? get secConfigCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  The Link 16 abbreviated call sign assigned to the ACA. This is normally the first and last letter and the last two numbers of the call sign.
  ///  Example: /// Example: EE47
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get link16CallSign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  The TACAN channel assigned to this mission aircraft.
  ///  Example: /// Example: 123
  ///  Constraints: No constraints specified.
  int get tacanChan => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 16, 0);
  ///  An optional array of link 16 octal track numbers assigned as the primary JTIDS Unit (JU) address for the mission aircraft.
  ///  Example: /// Example: 12345
  ///  Constraints: No constraints specified.
  List<String>? get juAddress => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 18);
  ///  The mode 1 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).
  ///  Example: /// Example: 111
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get iffSifMode1Code => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  The mode 2 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).
  ///  Example: /// Example: 20147
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get iffSifMode2Code => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  The mode 3 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).
  ///  Example: /// Example: 30147
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get iffSifMode3Code => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);

  @override
  String toString() {
    return 'IndividualAircraftTaskingFull{numAcft: ${numAcft}, acftType: ${acftType}, callSign: ${callSign}, priConfigCode: ${priConfigCode}, secConfigCode: ${secConfigCode}, link16CallSign: ${link16CallSign}, tacanChan: ${tacanChan}, juAddress: ${juAddress}, iffSifMode1Code: ${iffSifMode1Code}, iffSifMode2Code: ${iffSifMode2Code}, iffSifMode3Code: ${iffSifMode3Code}}';
  }
}

class _IndividualAircraftTaskingFullReader extends fb.TableReader<IndividualAircraftTaskingFull> {
  const _IndividualAircraftTaskingFullReader();

  @override
  IndividualAircraftTaskingFull createObject(fb.BufferContext bc, int offset) => 
    IndividualAircraftTaskingFull._(bc, offset);
}

class IndividualAircraftTaskingFullBuilder {
  IndividualAircraftTaskingFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(11);
  }

  int addNumAcft(int? numAcft) {
    fbBuilder.addInt32(0, numAcft);
    return fbBuilder.offset;
  }
  int addAcftTypeOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCallSignOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addPriConfigCodeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addSecConfigCodeOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addLink16CallSignOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addTacanChan(int? tacanChan) {
    fbBuilder.addInt32(6, tacanChan);
    return fbBuilder.offset;
  }
  int addJuAddressOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addIffSifMode1CodeOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addIffSifMode2CodeOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addIffSifMode3CodeOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IndividualAircraftTaskingFullObjectBuilder extends fb.ObjectBuilder {
  final int? _numAcft;
  final String? _acftType;
  final String? _callSign;
  final String? _priConfigCode;
  final String? _secConfigCode;
  final String? _link16CallSign;
  final int? _tacanChan;
  final List<String>? _juAddress;
  final String? _iffSifMode1Code;
  final String? _iffSifMode2Code;
  final String? _iffSifMode3Code;

  IndividualAircraftTaskingFullObjectBuilder({
    int? numAcft,
    String? acftType,
    String? callSign,
    String? priConfigCode,
    String? secConfigCode,
    String? link16CallSign,
    int? tacanChan,
    List<String>? juAddress,
    String? iffSifMode1Code,
    String? iffSifMode2Code,
    String? iffSifMode3Code,
  })
      : _numAcft = numAcft,
        _acftType = acftType,
        _callSign = callSign,
        _priConfigCode = priConfigCode,
        _secConfigCode = secConfigCode,
        _link16CallSign = link16CallSign,
        _tacanChan = tacanChan,
        _juAddress = juAddress,
        _iffSifMode1Code = iffSifMode1Code,
        _iffSifMode2Code = iffSifMode2Code,
        _iffSifMode3Code = iffSifMode3Code;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? acftTypeOffset = _acftType == null ? null
        : fbBuilder.writeString(_acftType!);
    final int? callSignOffset = _callSign == null ? null
        : fbBuilder.writeString(_callSign!);
    final int? priConfigCodeOffset = _priConfigCode == null ? null
        : fbBuilder.writeString(_priConfigCode!);
    final int? secConfigCodeOffset = _secConfigCode == null ? null
        : fbBuilder.writeString(_secConfigCode!);
    final int? link16CallSignOffset = _link16CallSign == null ? null
        : fbBuilder.writeString(_link16CallSign!);
    final int? juAddressOffset = _juAddress == null ? null
        : fbBuilder.writeList(_juAddress!.map(fbBuilder.writeString).toList());
    final int? iffSifMode1CodeOffset = _iffSifMode1Code == null ? null
        : fbBuilder.writeString(_iffSifMode1Code!);
    final int? iffSifMode2CodeOffset = _iffSifMode2Code == null ? null
        : fbBuilder.writeString(_iffSifMode2Code!);
    final int? iffSifMode3CodeOffset = _iffSifMode3Code == null ? null
        : fbBuilder.writeString(_iffSifMode3Code!);
    fbBuilder.startTable(11);
    fbBuilder.addInt32(0, _numAcft);
    fbBuilder.addOffset(1, acftTypeOffset);
    fbBuilder.addOffset(2, callSignOffset);
    fbBuilder.addOffset(3, priConfigCodeOffset);
    fbBuilder.addOffset(4, secConfigCodeOffset);
    fbBuilder.addOffset(5, link16CallSignOffset);
    fbBuilder.addInt32(6, _tacanChan);
    fbBuilder.addOffset(7, juAddressOffset);
    fbBuilder.addOffset(8, iffSifMode1CodeOffset);
    fbBuilder.addOffset(9, iffSifMode2CodeOffset);
    fbBuilder.addOffset(10, iffSifMode3CodeOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
