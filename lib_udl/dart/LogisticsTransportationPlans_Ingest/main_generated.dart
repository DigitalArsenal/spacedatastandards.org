// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Transportation plans associated with this LogisticsSupport record, used to coordinate maintenance efforts.
class LogisticsTransportationPlansIngest {
  LogisticsTransportationPlansIngest._(this._bc, this._bcOffset);
  factory LogisticsTransportationPlansIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<LogisticsTransportationPlansIngest> reader = _LogisticsTransportationPlansIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  System generated reference id for the transportation plan.  Format: TXXXXXNNNN  T - Transportation, Sequence Number, Node Id.
  ///  Example: /// Example: T89002
  ///  Constraints: Minimum length = 0, Maximum length = 10
  String? get plansNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Indicates whether there have been changes to changes to ICAOs, estArrTime, or estDepTime since this Transportation Plan was last edited.
  ///  Example: /// Example: False
  ///  Constraints: No constraints specified.
  bool get missionChange => const fb.BoolReader().vTableGet(_bc, _bcOffset, 6, false);
  ///  Defines the transporation plan as either a deployment or redeployment.
  ///  Example: /// Example: DEPLOY
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get planDefinition => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Transporation Coordination status code. Cancel, Send to APCC, working, agree, disapprove or blank.
  ///  Example: /// Example: N
  ///  Constraints: Minimum length = 1, Maximum length = 1
  String? get statusCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  The AMS username of the operator who alters the coordination status.  Automatically captured by the system.
  ///  Example: /// Example: SMITH, JOHN
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get coordinator => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  The AMS user unit_id of the operator who alters the coordination status.  Automatically captured by the system from table AMS_USER.
  ///  Example: /// Example: TACC
  ///  Constraints: Minimum length = 0, Maximum length = 10
  String? get coordinatorUnit => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  The origin location.
  ///  Example: /// Example: KATL
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get originIcao => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  ///  ETD of the first segment, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-15T14:25:00.123Z
  ///  Constraints: No constraints specified.
  String? get estDepTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  ETA of the final segment, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-15T14:25:00.123Z
  ///  Constraints: No constraints specified.
  String? get estArrTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  Destination location ICAO.
  ///  Example: /// Example: YBCS
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get destinationIcao => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  The identifier that represents a Logistics Master Record.
  ///  Example: /// Example: L62126
  ///  Constraints: Minimum length = 0, Maximum length = 10
  String? get logisticMasterRecordId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);
  ///  Contains the tail number displayed by GDSS2.
  ///  Example: /// Example: 99209
  ///  Constraints: Minimum length = 0, Maximum length = 7
  String? get tpTailNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 26);
  ///  The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.
  ///  Example: /// Example: C17A
  ///  Constraints: Minimum length = 0, Maximum length = 8
  String? get tpAircraftMds => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 28);
  ///  The major command for the current unit.
  ///  Example: /// Example: HQAMC
  ///  Constraints: Minimum length = 0, Maximum length = 250
  String? get majcom => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 30);
  ///  Approximate time of arrival of final segement, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-14T20:37:00.123Z
  ///  Constraints: No constraints specified.
  String? get approxArrTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 32);
  ///  Transportation plan duration, expressed in the format MMM:SS.
  ///  Example: /// Example: 086:20
  ///  Constraints: Minimum length = 0, Maximum length = 6
  String? get duration => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 34);
  ///  Actual time of departure of first segment, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-14T19:37:00.123Z
  ///  Constraints: No constraints specified.
  String? get actDepTime => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 36);
  ///  GC. LGTP_CLSD_DT.  GD2:  Date when the transportation plan was closed, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-14T20:37:00.123Z
  ///  Constraints: No constraints specified.
  String? get closedDate => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 38);
  ///  GC. LGTP_CANX_DT.  GD2: Date when the transportation plan was cancelled, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-14T20:37:00.123Z
  ///  Constraints: No constraints specified.
  String? get cancelledDate => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 40);
  ///  These are the initial maintenance values entered based on the pilot descriptions or the official maintenance evaluation code.
  ///  Example: /// Example: NMCMU
  ///  Constraints: Minimum length = 0, Maximum length = 6
  String? get aircraftStatus => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 42);
  ///  Transportation plan enroute stops.
  ///  Example: /// Example: 4
  ///  Constraints: No constraints specified.
  int get numEnrouteStops => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 44, 0);
  ///  GDSS2 uses an 8 character serial number to uniquely identify the aircraft and MDS combination. This is a portion of the full manufacturer serial number.
  ///  Example: /// Example: 9009209
  ///  Constraints: Minimum length = 0, Maximum length = 30
  String? get serialNumber => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 46);
  ///  The number of transloads for this Transportation Plan.
  ///  Example: /// Example: 3
  ///  Constraints: No constraints specified.
  int get numTransLoads => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 48, 0);
  ///  Last time transportation plan was updated, in ISO 8601 UTC format with millisecond precision.
  ///  Example: /// Example: 2023-07-14T20:37:00.123Z
  ///  Constraints: No constraints specified.
  String? get lastChangedDate => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 50);
  ///  The transportation segments associated with this transportation plan.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get logisticsSegments => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 52);
  ///  Remarks associated with this transportation plan.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get logisticsTransportationPlansRemarks => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 54);

  @override
  String toString() {
    return 'LogisticsTransportationPlansIngest{plansNumber: ${plansNumber}, missionChange: ${missionChange}, planDefinition: ${planDefinition}, statusCode: ${statusCode}, coordinator: ${coordinator}, coordinatorUnit: ${coordinatorUnit}, originIcao: ${originIcao}, estDepTime: ${estDepTime}, estArrTime: ${estArrTime}, destinationIcao: ${destinationIcao}, logisticMasterRecordId: ${logisticMasterRecordId}, tpTailNumber: ${tpTailNumber}, tpAircraftMds: ${tpAircraftMds}, majcom: ${majcom}, approxArrTime: ${approxArrTime}, duration: ${duration}, actDepTime: ${actDepTime}, closedDate: ${closedDate}, cancelledDate: ${cancelledDate}, aircraftStatus: ${aircraftStatus}, numEnrouteStops: ${numEnrouteStops}, serialNumber: ${serialNumber}, numTransLoads: ${numTransLoads}, lastChangedDate: ${lastChangedDate}, logisticsSegments: ${logisticsSegments}, logisticsTransportationPlansRemarks: ${logisticsTransportationPlansRemarks}}';
  }
}

class _LogisticsTransportationPlansIngestReader extends fb.TableReader<LogisticsTransportationPlansIngest> {
  const _LogisticsTransportationPlansIngestReader();

  @override
  LogisticsTransportationPlansIngest createObject(fb.BufferContext bc, int offset) => 
    LogisticsTransportationPlansIngest._(bc, offset);
}

class LogisticsTransportationPlansIngestBuilder {
  LogisticsTransportationPlansIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(26);
  }

  int addPlansNumberOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addMissionChange(bool? missionChange) {
    fbBuilder.addBool(1, missionChange);
    return fbBuilder.offset;
  }
  int addPlanDefinitionOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addStatusCodeOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addCoordinatorOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addCoordinatorUnitOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addOriginIcaoOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addEstDepTimeOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addEstArrTimeOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addDestinationIcaoOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addLogisticMasterRecordIdOffset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addTpTailNumberOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addTpAircraftMdsOffset(int? offset) {
    fbBuilder.addOffset(12, offset);
    return fbBuilder.offset;
  }
  int addMajcomOffset(int? offset) {
    fbBuilder.addOffset(13, offset);
    return fbBuilder.offset;
  }
  int addApproxArrTimeOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }
  int addDurationOffset(int? offset) {
    fbBuilder.addOffset(15, offset);
    return fbBuilder.offset;
  }
  int addActDepTimeOffset(int? offset) {
    fbBuilder.addOffset(16, offset);
    return fbBuilder.offset;
  }
  int addClosedDateOffset(int? offset) {
    fbBuilder.addOffset(17, offset);
    return fbBuilder.offset;
  }
  int addCancelledDateOffset(int? offset) {
    fbBuilder.addOffset(18, offset);
    return fbBuilder.offset;
  }
  int addAircraftStatusOffset(int? offset) {
    fbBuilder.addOffset(19, offset);
    return fbBuilder.offset;
  }
  int addNumEnrouteStops(int? numEnrouteStops) {
    fbBuilder.addInt32(20, numEnrouteStops);
    return fbBuilder.offset;
  }
  int addSerialNumberOffset(int? offset) {
    fbBuilder.addOffset(21, offset);
    return fbBuilder.offset;
  }
  int addNumTransLoads(int? numTransLoads) {
    fbBuilder.addInt32(22, numTransLoads);
    return fbBuilder.offset;
  }
  int addLastChangedDateOffset(int? offset) {
    fbBuilder.addOffset(23, offset);
    return fbBuilder.offset;
  }
  int addLogisticsSegmentsOffset(int? offset) {
    fbBuilder.addOffset(24, offset);
    return fbBuilder.offset;
  }
  int addLogisticsTransportationPlansRemarksOffset(int? offset) {
    fbBuilder.addOffset(25, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class LogisticsTransportationPlansIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _plansNumber;
  final bool? _missionChange;
  final String? _planDefinition;
  final String? _statusCode;
  final String? _coordinator;
  final String? _coordinatorUnit;
  final String? _originIcao;
  final String? _estDepTime;
  final String? _estArrTime;
  final String? _destinationIcao;
  final String? _logisticMasterRecordId;
  final String? _tpTailNumber;
  final String? _tpAircraftMds;
  final String? _majcom;
  final String? _approxArrTime;
  final String? _duration;
  final String? _actDepTime;
  final String? _closedDate;
  final String? _cancelledDate;
  final String? _aircraftStatus;
  final int? _numEnrouteStops;
  final String? _serialNumber;
  final int? _numTransLoads;
  final String? _lastChangedDate;
  final List<String>? _logisticsSegments;
  final List<String>? _logisticsTransportationPlansRemarks;

  LogisticsTransportationPlansIngestObjectBuilder({
    String? plansNumber,
    bool? missionChange,
    String? planDefinition,
    String? statusCode,
    String? coordinator,
    String? coordinatorUnit,
    String? originIcao,
    String? estDepTime,
    String? estArrTime,
    String? destinationIcao,
    String? logisticMasterRecordId,
    String? tpTailNumber,
    String? tpAircraftMds,
    String? majcom,
    String? approxArrTime,
    String? duration,
    String? actDepTime,
    String? closedDate,
    String? cancelledDate,
    String? aircraftStatus,
    int? numEnrouteStops,
    String? serialNumber,
    int? numTransLoads,
    String? lastChangedDate,
    List<String>? logisticsSegments,
    List<String>? logisticsTransportationPlansRemarks,
  })
      : _plansNumber = plansNumber,
        _missionChange = missionChange,
        _planDefinition = planDefinition,
        _statusCode = statusCode,
        _coordinator = coordinator,
        _coordinatorUnit = coordinatorUnit,
        _originIcao = originIcao,
        _estDepTime = estDepTime,
        _estArrTime = estArrTime,
        _destinationIcao = destinationIcao,
        _logisticMasterRecordId = logisticMasterRecordId,
        _tpTailNumber = tpTailNumber,
        _tpAircraftMds = tpAircraftMds,
        _majcom = majcom,
        _approxArrTime = approxArrTime,
        _duration = duration,
        _actDepTime = actDepTime,
        _closedDate = closedDate,
        _cancelledDate = cancelledDate,
        _aircraftStatus = aircraftStatus,
        _numEnrouteStops = numEnrouteStops,
        _serialNumber = serialNumber,
        _numTransLoads = numTransLoads,
        _lastChangedDate = lastChangedDate,
        _logisticsSegments = logisticsSegments,
        _logisticsTransportationPlansRemarks = logisticsTransportationPlansRemarks;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? plansNumberOffset = _plansNumber == null ? null
        : fbBuilder.writeString(_plansNumber!);
    final int? planDefinitionOffset = _planDefinition == null ? null
        : fbBuilder.writeString(_planDefinition!);
    final int? statusCodeOffset = _statusCode == null ? null
        : fbBuilder.writeString(_statusCode!);
    final int? coordinatorOffset = _coordinator == null ? null
        : fbBuilder.writeString(_coordinator!);
    final int? coordinatorUnitOffset = _coordinatorUnit == null ? null
        : fbBuilder.writeString(_coordinatorUnit!);
    final int? originIcaoOffset = _originIcao == null ? null
        : fbBuilder.writeString(_originIcao!);
    final int? estDepTimeOffset = _estDepTime == null ? null
        : fbBuilder.writeString(_estDepTime!);
    final int? estArrTimeOffset = _estArrTime == null ? null
        : fbBuilder.writeString(_estArrTime!);
    final int? destinationIcaoOffset = _destinationIcao == null ? null
        : fbBuilder.writeString(_destinationIcao!);
    final int? logisticMasterRecordIdOffset = _logisticMasterRecordId == null ? null
        : fbBuilder.writeString(_logisticMasterRecordId!);
    final int? tpTailNumberOffset = _tpTailNumber == null ? null
        : fbBuilder.writeString(_tpTailNumber!);
    final int? tpAircraftMdsOffset = _tpAircraftMds == null ? null
        : fbBuilder.writeString(_tpAircraftMds!);
    final int? majcomOffset = _majcom == null ? null
        : fbBuilder.writeString(_majcom!);
    final int? approxArrTimeOffset = _approxArrTime == null ? null
        : fbBuilder.writeString(_approxArrTime!);
    final int? durationOffset = _duration == null ? null
        : fbBuilder.writeString(_duration!);
    final int? actDepTimeOffset = _actDepTime == null ? null
        : fbBuilder.writeString(_actDepTime!);
    final int? closedDateOffset = _closedDate == null ? null
        : fbBuilder.writeString(_closedDate!);
    final int? cancelledDateOffset = _cancelledDate == null ? null
        : fbBuilder.writeString(_cancelledDate!);
    final int? aircraftStatusOffset = _aircraftStatus == null ? null
        : fbBuilder.writeString(_aircraftStatus!);
    final int? serialNumberOffset = _serialNumber == null ? null
        : fbBuilder.writeString(_serialNumber!);
    final int? lastChangedDateOffset = _lastChangedDate == null ? null
        : fbBuilder.writeString(_lastChangedDate!);
    final int? logisticsSegmentsOffset = _logisticsSegments == null ? null
        : fbBuilder.writeList(_logisticsSegments!.map(fbBuilder.writeString).toList());
    final int? logisticsTransportationPlansRemarksOffset = _logisticsTransportationPlansRemarks == null ? null
        : fbBuilder.writeList(_logisticsTransportationPlansRemarks!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(26);
    fbBuilder.addOffset(0, plansNumberOffset);
    fbBuilder.addBool(1, _missionChange);
    fbBuilder.addOffset(2, planDefinitionOffset);
    fbBuilder.addOffset(3, statusCodeOffset);
    fbBuilder.addOffset(4, coordinatorOffset);
    fbBuilder.addOffset(5, coordinatorUnitOffset);
    fbBuilder.addOffset(6, originIcaoOffset);
    fbBuilder.addOffset(7, estDepTimeOffset);
    fbBuilder.addOffset(8, estArrTimeOffset);
    fbBuilder.addOffset(9, destinationIcaoOffset);
    fbBuilder.addOffset(10, logisticMasterRecordIdOffset);
    fbBuilder.addOffset(11, tpTailNumberOffset);
    fbBuilder.addOffset(12, tpAircraftMdsOffset);
    fbBuilder.addOffset(13, majcomOffset);
    fbBuilder.addOffset(14, approxArrTimeOffset);
    fbBuilder.addOffset(15, durationOffset);
    fbBuilder.addOffset(16, actDepTimeOffset);
    fbBuilder.addOffset(17, closedDateOffset);
    fbBuilder.addOffset(18, cancelledDateOffset);
    fbBuilder.addOffset(19, aircraftStatusOffset);
    fbBuilder.addInt32(20, _numEnrouteStops);
    fbBuilder.addOffset(21, serialNumberOffset);
    fbBuilder.addInt32(22, _numTransLoads);
    fbBuilder.addOffset(23, lastChangedDateOffset);
    fbBuilder.addOffset(24, logisticsSegmentsOffset);
    fbBuilder.addOffset(25, logisticsTransportationPlansRemarksOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
