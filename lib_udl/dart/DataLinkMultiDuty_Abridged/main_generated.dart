// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Collection of contact and identification information for designated multilink coordinator duty assignments. There can be 0 to many DataLinkMultiDuty collections within the datalink service.
class DataLinkMultiDutyAbridged {
  DataLinkMultiDutyAbridged._(this._bc, this._bcOffset);
  factory DataLinkMultiDutyAbridged(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<DataLinkMultiDutyAbridged> reader = _DataLinkMultiDutyAbridgedReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Designated force of unit specified by ship name, unit call sign, or unit designator.
  ///  Example: /// Example: SHIP:STENNIS
  ///  Constraints: Minimum length = 0, Maximum length = 38
  String? get unitDes => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  The name of the person to be contacted for multilink coordination.
  ///  Example: /// Example: POPOVICH
  ///  Constraints: Minimum length = 0, Maximum length = 20
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  The rank or position of the person to be contacted for multilink coordination.
  ///  Example: /// Example: LCDR
  ///  Constraints: Minimum length = 0, Maximum length = 16
  String? get rank => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Specific duties assigned for multilink coordination (e.g. ICO, RICO, SICO).
  ///  Example: /// Example: SICO
  ///  Constraints: Minimum length = 0, Maximum length = 4
  String? get duty => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Array of telephone numbers or the frequency values for radio transmission of the person to be contacted for multilink coordination.
  ///  Example: /// Example: ['TEL:804-555-4142', 'TEL:804-867-5309']
  ///  Constraints: No constraints specified.
  List<String>? get dutyTeleFreqNums => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 12);
  ///  Collection of information regarding the function, frequency, and priority of interface control and coordination nets for multilink coordination. There can be 0 to many DataLinkMultiVoiceCoord collections within a DataLinkMultiDuty collection.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  List<String>? get multiDutyVoiceCoord => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 14);

  @override
  String toString() {
    return 'DataLinkMultiDutyAbridged{unitDes: ${unitDes}, name: ${name}, rank: ${rank}, duty: ${duty}, dutyTeleFreqNums: ${dutyTeleFreqNums}, multiDutyVoiceCoord: ${multiDutyVoiceCoord}}';
  }
}

class _DataLinkMultiDutyAbridgedReader extends fb.TableReader<DataLinkMultiDutyAbridged> {
  const _DataLinkMultiDutyAbridgedReader();

  @override
  DataLinkMultiDutyAbridged createObject(fb.BufferContext bc, int offset) => 
    DataLinkMultiDutyAbridged._(bc, offset);
}

class DataLinkMultiDutyAbridgedBuilder {
  DataLinkMultiDutyAbridgedBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(6);
  }

  int addUnitDesOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addRankOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addDutyOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addDutyTeleFreqNumsOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addMultiDutyVoiceCoordOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class DataLinkMultiDutyAbridgedObjectBuilder extends fb.ObjectBuilder {
  final String? _unitDes;
  final String? _name;
  final String? _rank;
  final String? _duty;
  final List<String>? _dutyTeleFreqNums;
  final List<String>? _multiDutyVoiceCoord;

  DataLinkMultiDutyAbridgedObjectBuilder({
    String? unitDes,
    String? name,
    String? rank,
    String? duty,
    List<String>? dutyTeleFreqNums,
    List<String>? multiDutyVoiceCoord,
  })
      : _unitDes = unitDes,
        _name = name,
        _rank = rank,
        _duty = duty,
        _dutyTeleFreqNums = dutyTeleFreqNums,
        _multiDutyVoiceCoord = multiDutyVoiceCoord;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? unitDesOffset = _unitDes == null ? null
        : fbBuilder.writeString(_unitDes!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? rankOffset = _rank == null ? null
        : fbBuilder.writeString(_rank!);
    final int? dutyOffset = _duty == null ? null
        : fbBuilder.writeString(_duty!);
    final int? dutyTeleFreqNumsOffset = _dutyTeleFreqNums == null ? null
        : fbBuilder.writeList(_dutyTeleFreqNums!.map(fbBuilder.writeString).toList());
    final int? multiDutyVoiceCoordOffset = _multiDutyVoiceCoord == null ? null
        : fbBuilder.writeList(_multiDutyVoiceCoord!.map(fbBuilder.writeString).toList());
    fbBuilder.startTable(6);
    fbBuilder.addOffset(0, unitDesOffset);
    fbBuilder.addOffset(1, nameOffset);
    fbBuilder.addOffset(2, rankOffset);
    fbBuilder.addOffset(3, dutyOffset);
    fbBuilder.addOffset(4, dutyTeleFreqNumsOffset);
    fbBuilder.addOffset(5, multiDutyVoiceCoordOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
