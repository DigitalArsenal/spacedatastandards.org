// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Information about the Point of Contact (POC) for this ISR Collection.
class IsrcollectionPocIngest {
  IsrcollectionPocIngest._(this._bc, this._bcOffset);
  factory IsrcollectionPocIngest(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<IsrcollectionPocIngest> reader = _IsrcollectionPocIngestReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Unique identifier of the collection requirement POC.
  ///  Example: /// Example: ISRCOLLECTIONPOC-ID
  ///  Constraints: Minimum length = 0, Maximum length = 36
  String? get id => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Name of the POC.
  ///  Example: /// Example: NAME
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Callsign of the POC.
  ///  Example: /// Example: CALLSIGN
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get callsign => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Unit the POC belongs to.
  ///  Example: /// Example: UNIT
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get unit => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Email address of the POC.
  ///  Example: /// Example: EMAIL
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get email => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  Phone number of the POC.
  ///  Example: /// Example: PHONE
  ///  Constraints: Minimum length = 0, Maximum length = 45
  String? get phone => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  Radio Frequency the POC is on.
  ///  Example: /// Example: 123.23
  ///  Constraints: No constraints specified.
  double get radioFrequency => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 16, 0.0);
  ///  Chat system the POC is accessing.
  ///  Example: /// Example: CHAT
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get chatSystem => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  Chat name of the POC.
  ///  Example: /// Example: CHAT_NAME
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get chatName => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  Amplifying notes about the POC.
  ///  Example: /// Example: NOTES
  ///  Constraints: Minimum length = 0, Maximum length = 256
  String? get notes => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);

  @override
  String toString() {
    return 'IsrcollectionPocIngest{id: ${id}, name: ${name}, callsign: ${callsign}, unit: ${unit}, email: ${email}, phone: ${phone}, radioFrequency: ${radioFrequency}, chatSystem: ${chatSystem}, chatName: ${chatName}, notes: ${notes}}';
  }
}

class _IsrcollectionPocIngestReader extends fb.TableReader<IsrcollectionPocIngest> {
  const _IsrcollectionPocIngestReader();

  @override
  IsrcollectionPocIngest createObject(fb.BufferContext bc, int offset) => 
    IsrcollectionPocIngest._(bc, offset);
}

class IsrcollectionPocIngestBuilder {
  IsrcollectionPocIngestBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(10);
  }

  int addIdOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addCallsignOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addUnitOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addEmailOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addPhoneOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addRadioFrequency(double? radioFrequency) {
    fbBuilder.addFloat64(6, radioFrequency);
    return fbBuilder.offset;
  }
  int addChatSystemOffset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addChatNameOffset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addNotesOffset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class IsrcollectionPocIngestObjectBuilder extends fb.ObjectBuilder {
  final String? _id;
  final String? _name;
  final String? _callsign;
  final String? _unit;
  final String? _email;
  final String? _phone;
  final double? _radioFrequency;
  final String? _chatSystem;
  final String? _chatName;
  final String? _notes;

  IsrcollectionPocIngestObjectBuilder({
    String? id,
    String? name,
    String? callsign,
    String? unit,
    String? email,
    String? phone,
    double? radioFrequency,
    String? chatSystem,
    String? chatName,
    String? notes,
  })
      : _id = id,
        _name = name,
        _callsign = callsign,
        _unit = unit,
        _email = email,
        _phone = phone,
        _radioFrequency = radioFrequency,
        _chatSystem = chatSystem,
        _chatName = chatName,
        _notes = notes;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? idOffset = _id == null ? null
        : fbBuilder.writeString(_id!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? callsignOffset = _callsign == null ? null
        : fbBuilder.writeString(_callsign!);
    final int? unitOffset = _unit == null ? null
        : fbBuilder.writeString(_unit!);
    final int? emailOffset = _email == null ? null
        : fbBuilder.writeString(_email!);
    final int? phoneOffset = _phone == null ? null
        : fbBuilder.writeString(_phone!);
    final int? chatSystemOffset = _chatSystem == null ? null
        : fbBuilder.writeString(_chatSystem!);
    final int? chatNameOffset = _chatName == null ? null
        : fbBuilder.writeString(_chatName!);
    final int? notesOffset = _notes == null ? null
        : fbBuilder.writeString(_notes!);
    fbBuilder.startTable(10);
    fbBuilder.addOffset(0, idOffset);
    fbBuilder.addOffset(1, nameOffset);
    fbBuilder.addOffset(2, callsignOffset);
    fbBuilder.addOffset(3, unitOffset);
    fbBuilder.addOffset(4, emailOffset);
    fbBuilder.addOffset(5, phoneOffset);
    fbBuilder.addFloat64(6, _radioFrequency);
    fbBuilder.addOffset(7, chatSystemOffset);
    fbBuilder.addOffset(8, chatNameOffset);
    fbBuilder.addOffset(9, notesOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
