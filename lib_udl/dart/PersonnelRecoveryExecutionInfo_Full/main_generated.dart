// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


///  /// Information pertaining to the details of executing the recovery.
class PersonnelRecoveryExecutionInfoFull {
  PersonnelRecoveryExecutionInfoFull._(this._bc, this._bcOffset);
  factory PersonnelRecoveryExecutionInfoFull(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<PersonnelRecoveryExecutionInfoFull> reader = _PersonnelRecoveryExecutionInfoFullReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the initial location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  ///  Example: /// Example: [103.23, 30.445]
  ///  Constraints: No constraints specified.
  List<String>? get initialPoint => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 4);
  ///  The heading, in degrees clockwise from North, of entering the recovery zone.
  ///  Example: /// Example: 35.66
  ///  Constraints: No constraints specified.
  double get ingress => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 6, 0.0);
  ///  Description of the objective strategy plan.
  ///  Example: /// Example: Description of strategy plan.
  ///  Constraints: Minimum length = 0, Maximum length = 1024
  String? get objStrategy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the egress location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
  ///  Example: /// Example: [107.23, 30.455]
  ///  Constraints: No constraints specified.
  List<String>? get egressPoint => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 10);
  ///  The heading, in degrees, of leaving the recovery zone.
  ///  Example: /// Example: 66.53
  ///  Constraints: No constraints specified.
  double get egress => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 12, 0.0);
  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get recoveryVehicle => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  No description provided.
  ///  Example: /// Example: No example provided.
  ///  Constraints: No constraints specified.
  String? get escortVehicle => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);

  @override
  String toString() {
    return 'PersonnelRecoveryExecutionInfoFull{initialPoint: ${initialPoint}, ingress: ${ingress}, objStrategy: ${objStrategy}, egressPoint: ${egressPoint}, egress: ${egress}, recoveryVehicle: ${recoveryVehicle}, escortVehicle: ${escortVehicle}}';
  }
}

class _PersonnelRecoveryExecutionInfoFullReader extends fb.TableReader<PersonnelRecoveryExecutionInfoFull> {
  const _PersonnelRecoveryExecutionInfoFullReader();

  @override
  PersonnelRecoveryExecutionInfoFull createObject(fb.BufferContext bc, int offset) => 
    PersonnelRecoveryExecutionInfoFull._(bc, offset);
}

class PersonnelRecoveryExecutionInfoFullBuilder {
  PersonnelRecoveryExecutionInfoFullBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(7);
  }

  int addInitialPointOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addIngress(double? ingress) {
    fbBuilder.addFloat64(1, ingress);
    return fbBuilder.offset;
  }
  int addObjStrategyOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addEgressPointOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addEgress(double? egress) {
    fbBuilder.addFloat64(4, egress);
    return fbBuilder.offset;
  }
  int addRecoveryVehicleOffset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addEscortVehicleOffset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class PersonnelRecoveryExecutionInfoFullObjectBuilder extends fb.ObjectBuilder {
  final List<String>? _initialPoint;
  final double? _ingress;
  final String? _objStrategy;
  final List<String>? _egressPoint;
  final double? _egress;
  final String? _recoveryVehicle;
  final String? _escortVehicle;

  PersonnelRecoveryExecutionInfoFullObjectBuilder({
    List<String>? initialPoint,
    double? ingress,
    String? objStrategy,
    List<String>? egressPoint,
    double? egress,
    String? recoveryVehicle,
    String? escortVehicle,
  })
      : _initialPoint = initialPoint,
        _ingress = ingress,
        _objStrategy = objStrategy,
        _egressPoint = egressPoint,
        _egress = egress,
        _recoveryVehicle = recoveryVehicle,
        _escortVehicle = escortVehicle;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? initialPointOffset = _initialPoint == null ? null
        : fbBuilder.writeList(_initialPoint!.map(fbBuilder.writeString).toList());
    final int? objStrategyOffset = _objStrategy == null ? null
        : fbBuilder.writeString(_objStrategy!);
    final int? egressPointOffset = _egressPoint == null ? null
        : fbBuilder.writeList(_egressPoint!.map(fbBuilder.writeString).toList());
    final int? recoveryVehicleOffset = _recoveryVehicle == null ? null
        : fbBuilder.writeString(_recoveryVehicle!);
    final int? escortVehicleOffset = _escortVehicle == null ? null
        : fbBuilder.writeString(_escortVehicle!);
    fbBuilder.startTable(7);
    fbBuilder.addOffset(0, initialPointOffset);
    fbBuilder.addFloat64(1, _ingress);
    fbBuilder.addOffset(2, objStrategyOffset);
    fbBuilder.addOffset(3, egressPointOffset);
    fbBuilder.addFloat64(4, _egress);
    fbBuilder.addOffset(5, recoveryVehicleOffset);
    fbBuilder.addOffset(6, escortVehicleOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
