// automatically generated by the FlatBuffers compiler, do not modify
// ignore_for_file: unused_import, unused_field, unused_element, unused_local_variable

import 'dart:typed_data' show Uint8List;
import 'package:flat_buffers/flat_buffers.dart' as fb;


class OrganizationDetailsDataModeEnum {
  final int value;
  const OrganizationDetailsDataModeEnum._(this.value);

  factory OrganizationDetailsDataModeEnum.fromValue(int value) {
    final result = values[value];
    if (result == null) {
        throw StateError('Invalid value $value for bit flag enum OrganizationDetailsDataModeEnum');
    }
    return result;
  }

  static OrganizationDetailsDataModeEnum? _createOrNull(int? value) => 
      value == null ? null : OrganizationDetailsDataModeEnum.fromValue(value);

  static const int minValue = 0;
  static const int maxValue = 3;
  static bool containsValue(int value) => values.containsKey(value);

  ///  Data collected or produced that pertains to real-world objects, events, and analysis.
  static const OrganizationDetailsDataModeEnum REAL = OrganizationDetailsDataModeEnum._(0);

  ///  Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  static const OrganizationDetailsDataModeEnum TEST = OrganizationDetailsDataModeEnum._(1);

  ///  Synthetic data generated by a model to mimic real-world datasets.
  static const OrganizationDetailsDataModeEnum SIMULATED = OrganizationDetailsDataModeEnum._(2);

  ///  Data pertaining to a government or military exercise. The data may include both real and simulated data.
  static const OrganizationDetailsDataModeEnum EXERCISE = OrganizationDetailsDataModeEnum._(3);
  static const Map<int, OrganizationDetailsDataModeEnum> values = {
    0: REAL,
    1: TEST,
    2: SIMULATED,
    3: EXERCISE};

  static const fb.Reader<OrganizationDetailsDataModeEnum> reader = _OrganizationDetailsDataModeEnumReader();

  @override
  String toString() {
    return 'OrganizationDetailsDataModeEnum{value: $value}';
  }
}

class _OrganizationDetailsDataModeEnumReader extends fb.Reader<OrganizationDetailsDataModeEnum> {
  const _OrganizationDetailsDataModeEnumReader();

  @override
  int get size => 1;

  @override
  OrganizationDetailsDataModeEnum read(fb.BufferContext bc, int offset) =>
      OrganizationDetailsDataModeEnum.fromValue(const fb.Int8Reader().read(bc, offset));
}

///  /// Model representation of additional detailed organization data as collected by a particular source.
class OrganizationDetails {
  OrganizationDetails._(this._bc, this._bcOffset);
  factory OrganizationDetails(List<int> bytes) {
    final rootRef = fb.BufferContext.fromBytes(bytes);
    return reader.read(rootRef, 0);
  }

  static const fb.Reader<OrganizationDetails> reader = _OrganizationDetailsReader();

  final fb.BufferContext _bc;
  final int _bcOffset;

  ///  Unique identifier of the record, auto-generated by the system.
  ///  Example: /// Example: ORGANIZATIONDETAILS-ID
  ///  Constraints: Minimum length = 1, Maximum length = 36
  String? get id => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 4);
  ///  Unique identifier of the parent organization.
  ///  Example: /// Example: ORGANIZATION-ID
  ///  Constraints: Minimum length = 1, Maximum length = 36
  String? get idOrganization => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 6);
  ///  Classification marking of the data in IC/CAPCO Portion-marked format.
  ///  Example: /// Example: U
  ///  Constraints: Minimum length = 1, Maximum length = 128
  String? get classificationMarking => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 8);
  ///  Organization details name.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 1, Maximum length = 128
  String? get name => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 10);
  ///  Listed contact email address for the organization.
  ///  Example: /// Example: some_organization@organization.com
  ///  Constraints: Minimum length = 0, Maximum length = 320
  String? get email => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 12);
  ///  Street number of the organization.
  ///  Example: /// Example: 123 Main Street
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get address1 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 14);
  ///  Field for additional organization address information such as PO Box and unit number.
  ///  Example: /// Example: Apt 4B
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get address2 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 16);
  ///  Contains the third line of address information for an organization.
  ///  Example: /// Example: Colorado Springs CO, 80903
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get address3 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 18);
  ///  Administrative boundaries of the first sub-national level. Level 1 is simply the largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a state or province.
  ///  Example: /// Example: Colorado
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get geoAdminLevel1 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 20);
  ///  Administrative boundaries of the second sub-national level. Level 2 is simply the second largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a county or district.
  ///  Example: /// Example: El Paso County
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get geoAdminLevel2 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 22);
  ///  Administrative boundaries of the third sub-national level. Level 3 is simply the third largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a city or township.
  ///  Example: /// Example: Colorado Springs
  ///  Constraints: Minimum length = 0, Maximum length = 120
  String? get geoAdminLevel3 => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 24);
  ///  A postal code, such as PIN or ZIP Code, is a series of letters or digits or both included in the postal address of the organization.
  ///  Example: /// Example: 80903
  ///  Constraints: Minimum length = 0, Maximum length = 32
  String? get postalCode => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 26);
  ///  Organization description.
  ///  Example: /// Example: Example description
  ///  Constraints: Minimum length = 0, Maximum length = 2147483647
  String? get description => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 28);
  ///  Former organization ID (if this organization previously existed as another organization).
  ///  Example: /// Example: FORMERORG-ID
  ///  Constraints: Minimum length = 0, Maximum length = 36
  String? get formerOrgId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 30);
  ///  Parent organization ID of this organization if it is a child organization.
  ///  Example: /// Example: PARENTORG-ID
  ///  Constraints: Minimum length = 0, Maximum length = 36
  String? get parentOrgId => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 32);
  ///  For organizations of type CORPORATION, the effective financial year end date for revenue, EBITDA, and profit values.
  ///  Example: /// Example: 2021-01-01T01:01:01.123Z
  ///  Constraints: No constraints specified.
  String? get financialYearEndDate => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 34);
  ///  For organizations of type CORPORATION, total annual revenue as of financialYearEndDate in US Dollars.
  ///  Example: /// Example: 123.4
  ///  Constraints: No constraints specified.
  double get revenue => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 36, 0.0);
  ///  For organizations of type CORPORATION, total annual profit as of financialYearEndDate in US Dollars.
  ///  Example: /// Example: 123.4
  ///  Constraints: No constraints specified.
  double get profit => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 38, 0.0);
  ///  For organizations of type CORPORATION, the company EBITDA value as of financialYearEndDate in US Dollars.
  ///  Example: /// Example: 123.4
  ///  Constraints: No constraints specified.
  double get ebitda => const fb.Float64Reader().vTableGet(_bc, _bcOffset, 40, 0.0);
  ///  Total number of FTEs in this organization.
  ///  Example: /// Example: 123
  ///  Constraints: No constraints specified.
  int get ftes => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 42, 0);
  ///  Designated broker for this organization.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get broker => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 44);
  ///  For organizations of type CORPORATION, the name of the Chief Executive Officer.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get ceo => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 46);
  ///  For organizations of type CORPORATION, the name of the Chief Financial Officer.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get cfo => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 48);
  ///  For organizations of type CORPORATION, the name of the Chief Technology Officer.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get cto => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 50);
  ///  The name of the risk manager for the organization.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 128
  String? get riskManager => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 52);
  ///  Mass ranking for this organization.
  ///  Example: /// Example: 123
  ///  Constraints: No constraints specified.
  int get massRanking => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 54, 0);
  ///  Revenue ranking for this organization.
  ///  Example: /// Example: 123
  ///  Constraints: No constraints specified.
  int get revenueRanking => const fb.Int32Reader().vTableGet(_bc, _bcOffset, 56, 0);
  ///  For organizations of type CORPORATION, notes on company financials.
  ///  Example: /// Example: Example notes
  ///  Constraints: Minimum length = 0, Maximum length = 2147483647
  String? get financialNotes => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 58);
  ///  Notes on the services provided by the organization.
  ///  Example: /// Example: Example notes
  ///  Constraints: Minimum length = 0, Maximum length = 2147483647
  String? get servicesNotes => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 60);
  ///  Satellite fleet planning notes for this organization.
  ///  Example: /// Example: Example notes
  ///  Constraints: Minimum length = 0, Maximum length = 2147483647
  String? get fleetPlanNotes => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 62);
  ///  Source of the data.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 1, Maximum length = 64
  String? get source => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 64);
  ///  Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get origin => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 66);
  ///  Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
  ///  EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
  ///  REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
  ///  SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
  ///  TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
  ///  Example: /// Example: TEST
  ///  Constraints: Minimum length = 1, Maximum length = 32
  OrganizationDetailsDataModeEnum get dataMode => OrganizationDetailsDataModeEnum.fromValue(const fb.Int8Reader().vTableGet(_bc, _bcOffset, 68, 0));
  ///  Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
  ///  Example: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
  ///  Constraints: No constraints specified.
  List<String>? get tags => const fb.ListReader<String>(fb.StringReader()).vTableGetNullable(_bc, _bcOffset, 70);
  ///  Time the row was created in the database, auto-populated by the system.
  ///  Example: /// Example: 2018-01-01T16:00:00.123Z
  ///  Constraints: No constraints specified.
  String? get createdAt => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 72);
  ///  Application user who created the row in the database, auto-populated by the system.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 1, Maximum length = 64
  String? get createdBy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 74);
  ///  Time the row was last updated in the database, auto-populated by the system.
  ///  Example: /// Example: 2018-01-01T16:00:00.123Z
  ///  Constraints: No constraints specified.
  String? get updatedAt => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 76);
  ///  Application user who updated the row in the database, auto-populated by the system.
  ///  Example: /// Example: some.user
  ///  Constraints: Minimum length = 0, Maximum length = 64
  String? get updatedBy => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 78);
  ///  The originating source network on which this record was created, auto-populated by the system.
  ///  Example: /// Example: OPS1
  ///  Constraints: Minimum length = 1, Maximum length = 32
  String? get origNetwork => const fb.StringReader().vTableGetNullable(_bc, _bcOffset, 80);

  @override
  String toString() {
    return 'OrganizationDetails{id: ${id}, idOrganization: ${idOrganization}, classificationMarking: ${classificationMarking}, name: ${name}, email: ${email}, address1: ${address1}, address2: ${address2}, address3: ${address3}, geoAdminLevel1: ${geoAdminLevel1}, geoAdminLevel2: ${geoAdminLevel2}, geoAdminLevel3: ${geoAdminLevel3}, postalCode: ${postalCode}, description: ${description}, formerOrgId: ${formerOrgId}, parentOrgId: ${parentOrgId}, financialYearEndDate: ${financialYearEndDate}, revenue: ${revenue}, profit: ${profit}, ebitda: ${ebitda}, ftes: ${ftes}, broker: ${broker}, ceo: ${ceo}, cfo: ${cfo}, cto: ${cto}, riskManager: ${riskManager}, massRanking: ${massRanking}, revenueRanking: ${revenueRanking}, financialNotes: ${financialNotes}, servicesNotes: ${servicesNotes}, fleetPlanNotes: ${fleetPlanNotes}, source: ${source}, origin: ${origin}, dataMode: ${dataMode}, tags: ${tags}, createdAt: ${createdAt}, createdBy: ${createdBy}, updatedAt: ${updatedAt}, updatedBy: ${updatedBy}, origNetwork: ${origNetwork}}';
  }
}

class _OrganizationDetailsReader extends fb.TableReader<OrganizationDetails> {
  const _OrganizationDetailsReader();

  @override
  OrganizationDetails createObject(fb.BufferContext bc, int offset) => 
    OrganizationDetails._(bc, offset);
}

class OrganizationDetailsBuilder {
  OrganizationDetailsBuilder(this.fbBuilder);

  final fb.Builder fbBuilder;

  void begin() {
    fbBuilder.startTable(39);
  }

  int addIdOffset(int? offset) {
    fbBuilder.addOffset(0, offset);
    return fbBuilder.offset;
  }
  int addIdOrganizationOffset(int? offset) {
    fbBuilder.addOffset(1, offset);
    return fbBuilder.offset;
  }
  int addClassificationMarkingOffset(int? offset) {
    fbBuilder.addOffset(2, offset);
    return fbBuilder.offset;
  }
  int addNameOffset(int? offset) {
    fbBuilder.addOffset(3, offset);
    return fbBuilder.offset;
  }
  int addEmailOffset(int? offset) {
    fbBuilder.addOffset(4, offset);
    return fbBuilder.offset;
  }
  int addAddress1Offset(int? offset) {
    fbBuilder.addOffset(5, offset);
    return fbBuilder.offset;
  }
  int addAddress2Offset(int? offset) {
    fbBuilder.addOffset(6, offset);
    return fbBuilder.offset;
  }
  int addAddress3Offset(int? offset) {
    fbBuilder.addOffset(7, offset);
    return fbBuilder.offset;
  }
  int addGeoAdminLevel1Offset(int? offset) {
    fbBuilder.addOffset(8, offset);
    return fbBuilder.offset;
  }
  int addGeoAdminLevel2Offset(int? offset) {
    fbBuilder.addOffset(9, offset);
    return fbBuilder.offset;
  }
  int addGeoAdminLevel3Offset(int? offset) {
    fbBuilder.addOffset(10, offset);
    return fbBuilder.offset;
  }
  int addPostalCodeOffset(int? offset) {
    fbBuilder.addOffset(11, offset);
    return fbBuilder.offset;
  }
  int addDescriptionOffset(int? offset) {
    fbBuilder.addOffset(12, offset);
    return fbBuilder.offset;
  }
  int addFormerOrgIdOffset(int? offset) {
    fbBuilder.addOffset(13, offset);
    return fbBuilder.offset;
  }
  int addParentOrgIdOffset(int? offset) {
    fbBuilder.addOffset(14, offset);
    return fbBuilder.offset;
  }
  int addFinancialYearEndDateOffset(int? offset) {
    fbBuilder.addOffset(15, offset);
    return fbBuilder.offset;
  }
  int addRevenue(double? revenue) {
    fbBuilder.addFloat64(16, revenue);
    return fbBuilder.offset;
  }
  int addProfit(double? profit) {
    fbBuilder.addFloat64(17, profit);
    return fbBuilder.offset;
  }
  int addEbitda(double? ebitda) {
    fbBuilder.addFloat64(18, ebitda);
    return fbBuilder.offset;
  }
  int addFtes(int? ftes) {
    fbBuilder.addInt32(19, ftes);
    return fbBuilder.offset;
  }
  int addBrokerOffset(int? offset) {
    fbBuilder.addOffset(20, offset);
    return fbBuilder.offset;
  }
  int addCeoOffset(int? offset) {
    fbBuilder.addOffset(21, offset);
    return fbBuilder.offset;
  }
  int addCfoOffset(int? offset) {
    fbBuilder.addOffset(22, offset);
    return fbBuilder.offset;
  }
  int addCtoOffset(int? offset) {
    fbBuilder.addOffset(23, offset);
    return fbBuilder.offset;
  }
  int addRiskManagerOffset(int? offset) {
    fbBuilder.addOffset(24, offset);
    return fbBuilder.offset;
  }
  int addMassRanking(int? massRanking) {
    fbBuilder.addInt32(25, massRanking);
    return fbBuilder.offset;
  }
  int addRevenueRanking(int? revenueRanking) {
    fbBuilder.addInt32(26, revenueRanking);
    return fbBuilder.offset;
  }
  int addFinancialNotesOffset(int? offset) {
    fbBuilder.addOffset(27, offset);
    return fbBuilder.offset;
  }
  int addServicesNotesOffset(int? offset) {
    fbBuilder.addOffset(28, offset);
    return fbBuilder.offset;
  }
  int addFleetPlanNotesOffset(int? offset) {
    fbBuilder.addOffset(29, offset);
    return fbBuilder.offset;
  }
  int addSourceOffset(int? offset) {
    fbBuilder.addOffset(30, offset);
    return fbBuilder.offset;
  }
  int addOriginOffset(int? offset) {
    fbBuilder.addOffset(31, offset);
    return fbBuilder.offset;
  }
  int addDataMode(OrganizationDetailsDataModeEnum? dataMode) {
    fbBuilder.addInt8(32, dataMode?.value);
    return fbBuilder.offset;
  }
  int addTagsOffset(int? offset) {
    fbBuilder.addOffset(33, offset);
    return fbBuilder.offset;
  }
  int addCreatedAtOffset(int? offset) {
    fbBuilder.addOffset(34, offset);
    return fbBuilder.offset;
  }
  int addCreatedByOffset(int? offset) {
    fbBuilder.addOffset(35, offset);
    return fbBuilder.offset;
  }
  int addUpdatedAtOffset(int? offset) {
    fbBuilder.addOffset(36, offset);
    return fbBuilder.offset;
  }
  int addUpdatedByOffset(int? offset) {
    fbBuilder.addOffset(37, offset);
    return fbBuilder.offset;
  }
  int addOrigNetworkOffset(int? offset) {
    fbBuilder.addOffset(38, offset);
    return fbBuilder.offset;
  }

  int finish() {
    return fbBuilder.endTable();
  }
}

class OrganizationDetailsObjectBuilder extends fb.ObjectBuilder {
  final String? _id;
  final String? _idOrganization;
  final String? _classificationMarking;
  final String? _name;
  final String? _email;
  final String? _address1;
  final String? _address2;
  final String? _address3;
  final String? _geoAdminLevel1;
  final String? _geoAdminLevel2;
  final String? _geoAdminLevel3;
  final String? _postalCode;
  final String? _description;
  final String? _formerOrgId;
  final String? _parentOrgId;
  final String? _financialYearEndDate;
  final double? _revenue;
  final double? _profit;
  final double? _ebitda;
  final int? _ftes;
  final String? _broker;
  final String? _ceo;
  final String? _cfo;
  final String? _cto;
  final String? _riskManager;
  final int? _massRanking;
  final int? _revenueRanking;
  final String? _financialNotes;
  final String? _servicesNotes;
  final String? _fleetPlanNotes;
  final String? _source;
  final String? _origin;
  final OrganizationDetailsDataModeEnum? _dataMode;
  final List<String>? _tags;
  final String? _createdAt;
  final String? _createdBy;
  final String? _updatedAt;
  final String? _updatedBy;
  final String? _origNetwork;

  OrganizationDetailsObjectBuilder({
    String? id,
    String? idOrganization,
    String? classificationMarking,
    String? name,
    String? email,
    String? address1,
    String? address2,
    String? address3,
    String? geoAdminLevel1,
    String? geoAdminLevel2,
    String? geoAdminLevel3,
    String? postalCode,
    String? description,
    String? formerOrgId,
    String? parentOrgId,
    String? financialYearEndDate,
    double? revenue,
    double? profit,
    double? ebitda,
    int? ftes,
    String? broker,
    String? ceo,
    String? cfo,
    String? cto,
    String? riskManager,
    int? massRanking,
    int? revenueRanking,
    String? financialNotes,
    String? servicesNotes,
    String? fleetPlanNotes,
    String? source,
    String? origin,
    OrganizationDetailsDataModeEnum? dataMode,
    List<String>? tags,
    String? createdAt,
    String? createdBy,
    String? updatedAt,
    String? updatedBy,
    String? origNetwork,
  })
      : _id = id,
        _idOrganization = idOrganization,
        _classificationMarking = classificationMarking,
        _name = name,
        _email = email,
        _address1 = address1,
        _address2 = address2,
        _address3 = address3,
        _geoAdminLevel1 = geoAdminLevel1,
        _geoAdminLevel2 = geoAdminLevel2,
        _geoAdminLevel3 = geoAdminLevel3,
        _postalCode = postalCode,
        _description = description,
        _formerOrgId = formerOrgId,
        _parentOrgId = parentOrgId,
        _financialYearEndDate = financialYearEndDate,
        _revenue = revenue,
        _profit = profit,
        _ebitda = ebitda,
        _ftes = ftes,
        _broker = broker,
        _ceo = ceo,
        _cfo = cfo,
        _cto = cto,
        _riskManager = riskManager,
        _massRanking = massRanking,
        _revenueRanking = revenueRanking,
        _financialNotes = financialNotes,
        _servicesNotes = servicesNotes,
        _fleetPlanNotes = fleetPlanNotes,
        _source = source,
        _origin = origin,
        _dataMode = dataMode,
        _tags = tags,
        _createdAt = createdAt,
        _createdBy = createdBy,
        _updatedAt = updatedAt,
        _updatedBy = updatedBy,
        _origNetwork = origNetwork;

  /// Finish building, and store into the [fbBuilder].
  @override
  int finish(fb.Builder fbBuilder) {
    final int? idOffset = _id == null ? null
        : fbBuilder.writeString(_id!);
    final int? idOrganizationOffset = _idOrganization == null ? null
        : fbBuilder.writeString(_idOrganization!);
    final int? classificationMarkingOffset = _classificationMarking == null ? null
        : fbBuilder.writeString(_classificationMarking!);
    final int? nameOffset = _name == null ? null
        : fbBuilder.writeString(_name!);
    final int? emailOffset = _email == null ? null
        : fbBuilder.writeString(_email!);
    final int? address1Offset = _address1 == null ? null
        : fbBuilder.writeString(_address1!);
    final int? address2Offset = _address2 == null ? null
        : fbBuilder.writeString(_address2!);
    final int? address3Offset = _address3 == null ? null
        : fbBuilder.writeString(_address3!);
    final int? geoAdminLevel1Offset = _geoAdminLevel1 == null ? null
        : fbBuilder.writeString(_geoAdminLevel1!);
    final int? geoAdminLevel2Offset = _geoAdminLevel2 == null ? null
        : fbBuilder.writeString(_geoAdminLevel2!);
    final int? geoAdminLevel3Offset = _geoAdminLevel3 == null ? null
        : fbBuilder.writeString(_geoAdminLevel3!);
    final int? postalCodeOffset = _postalCode == null ? null
        : fbBuilder.writeString(_postalCode!);
    final int? descriptionOffset = _description == null ? null
        : fbBuilder.writeString(_description!);
    final int? formerOrgIdOffset = _formerOrgId == null ? null
        : fbBuilder.writeString(_formerOrgId!);
    final int? parentOrgIdOffset = _parentOrgId == null ? null
        : fbBuilder.writeString(_parentOrgId!);
    final int? financialYearEndDateOffset = _financialYearEndDate == null ? null
        : fbBuilder.writeString(_financialYearEndDate!);
    final int? brokerOffset = _broker == null ? null
        : fbBuilder.writeString(_broker!);
    final int? ceoOffset = _ceo == null ? null
        : fbBuilder.writeString(_ceo!);
    final int? cfoOffset = _cfo == null ? null
        : fbBuilder.writeString(_cfo!);
    final int? ctoOffset = _cto == null ? null
        : fbBuilder.writeString(_cto!);
    final int? riskManagerOffset = _riskManager == null ? null
        : fbBuilder.writeString(_riskManager!);
    final int? financialNotesOffset = _financialNotes == null ? null
        : fbBuilder.writeString(_financialNotes!);
    final int? servicesNotesOffset = _servicesNotes == null ? null
        : fbBuilder.writeString(_servicesNotes!);
    final int? fleetPlanNotesOffset = _fleetPlanNotes == null ? null
        : fbBuilder.writeString(_fleetPlanNotes!);
    final int? sourceOffset = _source == null ? null
        : fbBuilder.writeString(_source!);
    final int? originOffset = _origin == null ? null
        : fbBuilder.writeString(_origin!);
    final int? tagsOffset = _tags == null ? null
        : fbBuilder.writeList(_tags!.map(fbBuilder.writeString).toList());
    final int? createdAtOffset = _createdAt == null ? null
        : fbBuilder.writeString(_createdAt!);
    final int? createdByOffset = _createdBy == null ? null
        : fbBuilder.writeString(_createdBy!);
    final int? updatedAtOffset = _updatedAt == null ? null
        : fbBuilder.writeString(_updatedAt!);
    final int? updatedByOffset = _updatedBy == null ? null
        : fbBuilder.writeString(_updatedBy!);
    final int? origNetworkOffset = _origNetwork == null ? null
        : fbBuilder.writeString(_origNetwork!);
    fbBuilder.startTable(39);
    fbBuilder.addOffset(0, idOffset);
    fbBuilder.addOffset(1, idOrganizationOffset);
    fbBuilder.addOffset(2, classificationMarkingOffset);
    fbBuilder.addOffset(3, nameOffset);
    fbBuilder.addOffset(4, emailOffset);
    fbBuilder.addOffset(5, address1Offset);
    fbBuilder.addOffset(6, address2Offset);
    fbBuilder.addOffset(7, address3Offset);
    fbBuilder.addOffset(8, geoAdminLevel1Offset);
    fbBuilder.addOffset(9, geoAdminLevel2Offset);
    fbBuilder.addOffset(10, geoAdminLevel3Offset);
    fbBuilder.addOffset(11, postalCodeOffset);
    fbBuilder.addOffset(12, descriptionOffset);
    fbBuilder.addOffset(13, formerOrgIdOffset);
    fbBuilder.addOffset(14, parentOrgIdOffset);
    fbBuilder.addOffset(15, financialYearEndDateOffset);
    fbBuilder.addFloat64(16, _revenue);
    fbBuilder.addFloat64(17, _profit);
    fbBuilder.addFloat64(18, _ebitda);
    fbBuilder.addInt32(19, _ftes);
    fbBuilder.addOffset(20, brokerOffset);
    fbBuilder.addOffset(21, ceoOffset);
    fbBuilder.addOffset(22, cfoOffset);
    fbBuilder.addOffset(23, ctoOffset);
    fbBuilder.addOffset(24, riskManagerOffset);
    fbBuilder.addInt32(25, _massRanking);
    fbBuilder.addInt32(26, _revenueRanking);
    fbBuilder.addOffset(27, financialNotesOffset);
    fbBuilder.addOffset(28, servicesNotesOffset);
    fbBuilder.addOffset(29, fleetPlanNotesOffset);
    fbBuilder.addOffset(30, sourceOffset);
    fbBuilder.addOffset(31, originOffset);
    fbBuilder.addInt8(32, _dataMode?.value);
    fbBuilder.addOffset(33, tagsOffset);
    fbBuilder.addOffset(34, createdAtOffset);
    fbBuilder.addOffset(35, createdByOffset);
    fbBuilder.addOffset(36, updatedAtOffset);
    fbBuilder.addOffset(37, updatedByOffset);
    fbBuilder.addOffset(38, origNetworkOffset);
    return fbBuilder.endTable();
  }

  /// Convenience method to serialize to byte list.
  @override
  Uint8List toBytes([String? fileIdentifier]) {
    final fbBuilder = fb.Builder(deduplicateTables: false);
    fbBuilder.finish(finish(fbBuilder), fileIdentifier);
    return fbBuilder.buffer;
  }
}
