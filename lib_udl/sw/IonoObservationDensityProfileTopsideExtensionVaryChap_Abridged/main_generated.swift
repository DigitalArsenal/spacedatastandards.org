// automatically generated by the FlatBuffers compiler, do not modify
// swiftlint:disable all
// swiftformat:disable all

import FlatBuffers

///  /// Varying scale height Chapman topside layer.
public struct IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged: FlatBufferObject, Verifiable {

  static func validateVersion() { FlatBuffersVersion_24_3_25() }
  public var __buffer: ByteBuffer! { return _accessor.bb }
  private var _accessor: Table

  public static var id: String { "IONO" } 
  public static func finish(_ fbb: inout FlatBufferBuilder, end: Offset, prefix: Bool = false) { fbb.finish(offset: end, fileId: IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.id, addPrefix: prefix) }
  private init(_ t: Table) { _accessor = t }
  public init(_ bb: ByteBuffer, o: Int32) { _accessor = Table(bb: bb, position: o) }

  private enum VTOFFSET: VOffset {
    case description = 4
    case nmF2 = 6
    case hmF2 = 8
    case scaleF2 = 10
    case alpha = 12
    case beta = 14
    case ht = 16
    case chi = 18
    var v: Int32 { Int32(self.rawValue) }
    var p: VOffset { self.rawValue }
  }

  ///  Description of the Chapman computation technique.
  ///  Example: /// Example: Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height.
  ///  Constraints: No constraints specified.
  public var description: String? { let o = _accessor.offset(VTOFFSET.description.v); return o == 0 ? nil : _accessor.string(at: o) }
  public var descriptionSegmentArray: [UInt8]? { return _accessor.getVector(at: VTOFFSET.description.v) }
  ///  Peak density of F2 layer, in grams per cubic centimeter.
  ///  Example: /// Example: 313283.1
  ///  Constraints: No constraints specified.
  public var nmF2: Double { let o = _accessor.offset(VTOFFSET.nmF2.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Peak height of F2 layer, in kilometers.
  ///  Example: /// Example: 265.42
  ///  Constraints: No constraints specified.
  public var hmF2: Double { let o = _accessor.offset(VTOFFSET.hmF2.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Scale height if F2 layer at the peak, in kilometers.
  ///  Example: /// Example: 45.191
  ///  Constraints: No constraints specified.
  public var scaleF2: Double { let o = _accessor.offset(VTOFFSET.scaleF2.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Alpha parameter of the profile shape.
  ///  Example: /// Example: 30.1
  ///  Constraints: No constraints specified.
  public var alpha: Double { let o = _accessor.offset(VTOFFSET.alpha.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Beta parameter of the profile shape.
  ///  Example: /// Example: 30.1
  ///  Constraints: No constraints specified.
  public var beta: Double { let o = _accessor.offset(VTOFFSET.beta.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Transition height, in  kilometers.
  ///  Example: /// Example: 30.1
  ///  Constraints: No constraints specified.
  public var ht: Double { let o = _accessor.offset(VTOFFSET.ht.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  ///  Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
  ///  Example: /// Example: 30.1
  ///  Constraints: No constraints specified.
  public var chi: Double { let o = _accessor.offset(VTOFFSET.chi.v); return o == 0 ? 0.0 : _accessor.readBuffer(of: Double.self, at: o) }
  public static func startIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(_ fbb: inout FlatBufferBuilder) -> UOffset { fbb.startTable(with: 8) }
  public static func add(description: Offset, _ fbb: inout FlatBufferBuilder) { fbb.add(offset: description, at: VTOFFSET.description.p) }
  public static func add(nmF2: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: nmF2, def: 0.0, at: VTOFFSET.nmF2.p) }
  public static func add(hmF2: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: hmF2, def: 0.0, at: VTOFFSET.hmF2.p) }
  public static func add(scaleF2: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: scaleF2, def: 0.0, at: VTOFFSET.scaleF2.p) }
  public static func add(alpha: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: alpha, def: 0.0, at: VTOFFSET.alpha.p) }
  public static func add(beta: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: beta, def: 0.0, at: VTOFFSET.beta.p) }
  public static func add(ht: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: ht, def: 0.0, at: VTOFFSET.ht.p) }
  public static func add(chi: Double, _ fbb: inout FlatBufferBuilder) { fbb.add(element: chi, def: 0.0, at: VTOFFSET.chi.p) }
  public static func endIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(_ fbb: inout FlatBufferBuilder, start: UOffset) -> Offset { let end = Offset(offset: fbb.endTable(at: start)); return end }
  public static func createIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(
    _ fbb: inout FlatBufferBuilder,
    descriptionOffset description: Offset = Offset(),
    nmF2: Double = 0.0,
    hmF2: Double = 0.0,
    scaleF2: Double = 0.0,
    alpha: Double = 0.0,
    beta: Double = 0.0,
    ht: Double = 0.0,
    chi: Double = 0.0
  ) -> Offset {
    let __start = IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.startIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(&fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(description: description, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(nmF2: nmF2, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(hmF2: hmF2, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(scaleF2: scaleF2, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(alpha: alpha, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(beta: beta, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(ht: ht, &fbb)
    IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.add(chi: chi, &fbb)
    return IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged.endIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(&fbb, start: __start)
  }

  public static func verify<T>(_ verifier: inout Verifier, at position: Int, of type: T.Type) throws where T: Verifiable {
    var _v = try verifier.visitTable(at: position)
    try _v.visit(field: VTOFFSET.description.p, fieldName: "description", required: false, type: ForwardOffset<String>.self)
    try _v.visit(field: VTOFFSET.nmF2.p, fieldName: "nmF2", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.hmF2.p, fieldName: "hmF2", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.scaleF2.p, fieldName: "scaleF2", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.alpha.p, fieldName: "alpha", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.beta.p, fieldName: "beta", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.ht.p, fieldName: "ht", required: false, type: Double.self)
    try _v.visit(field: VTOFFSET.chi.p, fieldName: "chi", required: false, type: Double.self)
    _v.finish()
  }
}

