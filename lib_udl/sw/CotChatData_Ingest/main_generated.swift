// automatically generated by the FlatBuffers compiler, do not modify
// swiftlint:disable all
// swiftformat:disable all

import FlatBuffers

///  /// Schema for the CotChatData to post.
public struct CotChatData_Ingest: FlatBufferObject, Verifiable {

  static func validateVersion() { FlatBuffersVersion_24_3_25() }
  public var __buffer: ByteBuffer! { return _accessor.bb }
  private var _accessor: Table

  public static var id: String { "COTC" } 
  public static func finish(_ fbb: inout FlatBufferBuilder, end: Offset, prefix: Bool = false) { fbb.finish(offset: end, fileId: CotChatData_Ingest.id, addPrefix: prefix) }
  private init(_ t: Table) { _accessor = t }
  public init(_ bb: ByteBuffer, o: Int32) { _accessor = Table(bb: bb, position: o) }

  private enum VTOFFSET: VOffset {
    case chatRoom = 4
    case chatSenderCallSign = 6
    case chatMsg = 8
    var v: Int32 { Int32(self.rawValue) }
    var p: VOffset { self.rawValue }
  }

  ///  Chat room name to send chat message to.
  ///  Example: /// Example: All Chat Rooms
  ///  Constraints: No constraints specified.
  public var chatRoom: String? { let o = _accessor.offset(VTOFFSET.chatRoom.v); return o == 0 ? nil : _accessor.string(at: o) }
  public var chatRoomSegmentArray: [UInt8]? { return _accessor.getVector(at: VTOFFSET.chatRoom.v) }
  ///  Callsign of chat sender.
  ///  Example: /// Example: Pebble
  ///  Constraints: No constraints specified.
  public var chatSenderCallSign: String? { let o = _accessor.offset(VTOFFSET.chatSenderCallSign.v); return o == 0 ? nil : _accessor.string(at: o) }
  public var chatSenderCallSignSegmentArray: [UInt8]? { return _accessor.getVector(at: VTOFFSET.chatSenderCallSign.v) }
  ///  Contents of a chat message.
  ///  Example: /// Example: Mission is go
  ///  Constraints: No constraints specified.
  public var chatMsg: String? { let o = _accessor.offset(VTOFFSET.chatMsg.v); return o == 0 ? nil : _accessor.string(at: o) }
  public var chatMsgSegmentArray: [UInt8]? { return _accessor.getVector(at: VTOFFSET.chatMsg.v) }
  public static func startCotChatData_Ingest(_ fbb: inout FlatBufferBuilder) -> UOffset { fbb.startTable(with: 3) }
  public static func add(chatRoom: Offset, _ fbb: inout FlatBufferBuilder) { fbb.add(offset: chatRoom, at: VTOFFSET.chatRoom.p) }
  public static func add(chatSenderCallSign: Offset, _ fbb: inout FlatBufferBuilder) { fbb.add(offset: chatSenderCallSign, at: VTOFFSET.chatSenderCallSign.p) }
  public static func add(chatMsg: Offset, _ fbb: inout FlatBufferBuilder) { fbb.add(offset: chatMsg, at: VTOFFSET.chatMsg.p) }
  public static func endCotChatData_Ingest(_ fbb: inout FlatBufferBuilder, start: UOffset) -> Offset { let end = Offset(offset: fbb.endTable(at: start)); return end }
  public static func createCotChatData_Ingest(
    _ fbb: inout FlatBufferBuilder,
    chatRoomOffset chatRoom: Offset = Offset(),
    chatSenderCallSignOffset chatSenderCallSign: Offset = Offset(),
    chatMsgOffset chatMsg: Offset = Offset()
  ) -> Offset {
    let __start = CotChatData_Ingest.startCotChatData_Ingest(&fbb)
    CotChatData_Ingest.add(chatRoom: chatRoom, &fbb)
    CotChatData_Ingest.add(chatSenderCallSign: chatSenderCallSign, &fbb)
    CotChatData_Ingest.add(chatMsg: chatMsg, &fbb)
    return CotChatData_Ingest.endCotChatData_Ingest(&fbb, start: __start)
  }

  public static func verify<T>(_ verifier: inout Verifier, at position: Int, of type: T.Type) throws where T: Verifiable {
    var _v = try verifier.visitTable(at: position)
    try _v.visit(field: VTOFFSET.chatRoom.p, fieldName: "chatRoom", required: false, type: ForwardOffset<String>.self)
    try _v.visit(field: VTOFFSET.chatSenderCallSign.p, fieldName: "chatSenderCallSign", required: false, type: ForwardOffset<String>.self)
    try _v.visit(field: VTOFFSET.chatMsg.p, fieldName: "chatMsg", required: false, type: ForwardOffset<String>.self)
    _v.finish()
  }
}

