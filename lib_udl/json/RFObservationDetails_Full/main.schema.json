{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "RFObservationDetails_Full_polarityType_Enum" : {
      "type" : "string",
      "enum": ["H", "V", "R", "L"]
    },
    "RFObservationDetails_Full_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "RFObservationDetails_Full" : {
      "type" : "object",
      "description" : "/// Model representation of observation data for active/passive radio frequency (RF) based sensor phenomenologies. J2000 is the preferred coordinate frame for all observations, but in some cases observations may be in another frame depending on the provider. Please see the 'Discover' tab in the storefront to confirm coordinate frames by data provider. RF observations include several optional ordered arrays which are used to provide detailed information on recorded signals such as power spectral density lists or active signals (code taps/fills, etc). In these cases, the sizes of the arrays must match and can be assumed to have consistent indexing across arrays (e.g. powers[0] is the measured power at frequencies[0]).",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: RFOBSERVATION-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "obTime" : {
                "type" : "string",
                "description" : "Ob detection time in ISO 8601 UTC with microsecond precision.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the target on-orbit object, if correlated.\nExample: /// Example: ONORBIT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "idSensor" : {
                "type" : "string",
                "description" : "Unique identifier of the reporting sensor.\nExample: /// Example: SENSOR-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "type" : {
                "type" : "string",
                "description" : "Type of RF ob (e.g. RF, RF-SOSI, PSD, RFI, SPOOF, etc).\nExample: /// Example: RF\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/Catalog number of the target on-orbit object.\nExample: /// Example: 32258\nConstraints: No constraints specified."
              },
        "taskId" : {
                "type" : "string",
                "description" : "Optional identifier to indicate the specific tasking which produced this observation.\nExample: /// Example: TASK-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "transactionId" : {
                "type" : "string",
                "description" : "Optional identifier to track a commercial or marketplace transaction executed to produce this data.\nExample: /// Example: TRANSACTION-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "trackId" : {
                "type" : "string",
                "description" : "Optional identifier of the track to which this observation belongs.\nExample: /// Example: TRACK-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by observation source to indicate the target onorbit object of this observation. This may be an internal identifier and not necessarily a valid satellite number.\nExample: /// Example: ORIG-OBJECT-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origSensorId" : {
                "type" : "string",
                "description" : "Optional identifier provided by observation source to indicate the sensor identifier which produced this observation. This may be an internal identifier and not necessarily a valid sensor ID.\nExample: /// Example: ORIG-SENSOR-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "uct" : {
                "type" : "boolean",
                "description" : "Boolean indicating this observation is part of an uncorrelated track or was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an on-orbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "transponder" : {
                "type" : "string",
                "description" : "Optional identifier provided by observation source to indicate the transponder used for this measurement.\nExample: /// Example: TRANSPONDER-A\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "azimuth" : {
                "type" : "number",
                "description" : "azimuth angle in degrees and J2000 coordinate frame.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "azimuthUnc" : {
                "type" : "number",
                "description" : "One sigma uncertainty in the azimuth angle measurement, in degrees.\nExample: /// Example: 2.1\nConstraints: No constraints specified."
              },
        "azimuthRate" : {
                "type" : "number",
                "description" : "Rate of change of the azimuth in degrees per second.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "elevation" : {
                "type" : "number",
                "description" : "elevation in degrees and J2000 coordinate frame.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "elevationUnc" : {
                "type" : "number",
                "description" : "One sigma uncertainty in the elevation angle measurement, in degrees.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "elevationRate" : {
                "type" : "number",
                "description" : "Rate of change of the elevation in degrees per second.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "range" : {
                "type" : "number",
                "description" : "Target range in km.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "rangeUnc" : {
                "type" : "number",
                "description" : "One sigma uncertainty in the range measurement, in kilometers.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "rangeRate" : {
                "type" : "number",
                "description" : "Rate of change of the range in km/sec.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "rangeRateUnc" : {
                "type" : "number",
                "description" : "One sigma uncertainty in the range rate measurement, in kilometers/second.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "trackRange" : {
                "type" : "number",
                "description" : "Target track or apparent range in km.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "senlat" : {
                "type" : "number",
                "description" : "Sensor WGS84 latitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -90 to 90 degrees (negative values south of equator).\nExample: /// Example: 45.2\nConstraints: No constraints specified."
              },
        "senlon" : {
                "type" : "number",
                "description" : "Sensor WGS84 longitude at obTime (if mobile/onorbit) in degrees. If null, can be obtained from sensor info. -180 to 180 degrees (negative values west of Prime Meridian).\nExample: /// Example: 80.3\nConstraints: No constraints specified."
              },
        "senalt" : {
                "type" : "number",
                "description" : "Sensor altitude at obTime (if mobile/onorbit) in km. If null, can be obtained from sensor info.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "elnot" : {
                "type" : "string",
                "description" : "ELINT notation.\nExample: /// Example: Ex. ELINT\nConstraints: Minimum length = 0, Maximum length = 10"
              },
        "frequency" : {
                "type" : "number",
                "description" : "Center carrier frequency in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "nominalFrequency" : {
                "type" : "number",
                "description" : "Nominal or expected center carrier frequency in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "startFrequency" : {
                "type" : "number",
                "description" : "Start carrier frequency in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "endFrequency" : {
                "type" : "number",
                "description" : "End carrier frequency in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "relativeCarrierPower" : {
                "type" : "number",
                "description" : "Measured power of the center carrier frequency in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "spectrumAnalyzerPower" : {
                "type" : "number",
                "description" : "Measured spectrum analyzer power of the center carrier frequency in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "relativeNoiseFloor" : {
                "type" : "number",
                "description" : "The measure of the signal created from the sum of all the noise sources and unwanted signals within the measurement system, in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "referenceLevel" : {
                "type" : "number",
                "description" : "Reference signal level, in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "pgri" : {
                "type" : "number",
                "description" : "A pulse group repetition interval (PGRI) is a pulse train in which there are groups of closely spaced pulses separated by much longer times between these pulse groups.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "confidence" : {
                "type" : "number",
                "description" : "Confidence in the signal and its measurements and characterization.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "incoming" : {
                "type" : "boolean",
                "description" : "True if the signal is incoming, false if outgoing.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "switchPoint" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Switch Point of the RFObservation record.\nExample: /// Example: 10\nConstraints: No constraints specified."
              },
        "baudRate" : {
                "type" : "number",
                "description" : "Baud rate is the number of symbol changes, waveform changes, or signaling events, across the transmission medium per second.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "snr" : {
                "type" : "number",
                "description" : "Signal to noise ratio, in dB.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "nominalSnr" : {
                "type" : "number",
                "description" : "Nominal or expected signal to noise ratio, in dB.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "polarity" : {
                "type" : "number",
                "description" : "The antenna pointing dependent polarizer angle, in degrees.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "polarityType" : {
                "$ref" : "#/definitions/RFObservationDetails_Full_polarityType_Enum",
                "description" : "Transponder polarization e.g. H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized) Rotating left relative to the earth's surface, R - (Right Hand Circularly Polarized) Rotating right relative to the earth's surface.\nExample: /// Example: H\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "channel" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Channel of the RFObservation record.\nExample: /// Example: 10\nConstraints: No constraints specified."
              },
        "powerOverNoise" : {
                "type" : "number",
                "description" : "Measured carrier power over noise (dBW/Hz).\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "nominalPowerOverNoise" : {
                "type" : "number",
                "description" : "Expected carrier power over noise (dBW/Hz).\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "bandwidth" : {
                "type" : "number",
                "description" : "Measured bandwidth in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "nominalBandwidth" : {
                "type" : "number",
                "description" : "Expected bandwidth in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "resolutionBandwidth" : {
                "type" : "number",
                "description" : "Resolution bandwidth in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "videoBandwidth" : {
                "type" : "number",
                "description" : "Video bandwidth in Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "eirp" : {
                "type" : "number",
                "description" : "Measured Equivalent Isotopically Radiated Power in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "nominalEirp" : {
                "type" : "number",
                "description" : "Expected Equivalent Isotopically Radiated Power in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "minPSD" : {
                "type" : "number",
                "description" : "Minimum measured PSD value of the trace in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "maxPSD" : {
                "type" : "number",
                "description" : "Maximum measured PSD value of the trace in dBW.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "frequencyShift" : {
                "type" : "number",
                "description" : "Frequency Shift of the RFObservation record.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "peak" : {
                "type" : "boolean",
                "description" : "Peak of the RFObservation record.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "antennaName" : {
                "type" : "string",
                "description" : "Antenna name of the RFObservation record.\nExample: /// Example: Antenna1\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "detectionStatus" : {
                "type" : "string",
                "description" : "Detection status (e.g. DETECTED, CARRIER_ACQUIRING, CARRIER_DETECTED, NOT_DETECTED, etc).\nExample: /// Example: DETECTED\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "collectionMode" : {
                "type" : "string",
                "description" : "Collection mode (e.g. SURVEY, SPOT_SEARCH, NEIGHBORHOOD_WATCH, DIRECTED_SEARCH, MANUAL, etc).\nExample: /// Example: SURVEY\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "rawFileURI" : {
                "type" : "string",
                "description" : "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.\nExample: /// Example: Example URI\nConstraints: Minimum length = 0, Maximum length = 256"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "dataMode" : {
                "$ref" : "#/definitions/RFObservationDetails_Full_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "tags" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.\nExample: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "noisePwrDensity" : {
                "type" : "number",
                "description" : "Noise power density, in dBW-Hz.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "carrierStandard" : {
                "type" : "string",
                "description" : "Carrier standard (e.g. DVB-S2, 802.11g, etc.).\nExample: /// Example: DVB-S2\nConstraints: Minimum length = 0, Maximum length = 10"
              },
        "modulation" : {
                "type" : "string",
                "description" : "Transponder modulation (e.g. Auto, QPSK, 8PSK, etc).\nExample: /// Example: Auto\nConstraints: Minimum length = 0, Maximum length = 10"
              },
        "innerCodingRate" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Inner forward error correction rate:  0 = Auto, 1 = 1/2, 2 = 2/3, 3 = 3/4, 4 = 5/6, 5 = 7/8, 6 = 8/9, 7 = 3/5, 8 = 4/5, 9 = 9/10, 15 = None.\nExample: /// Example: 7\nConstraints: No constraints specified."
              },
        "outerCodingRate" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Outer forward error correction rate:  0 = Auto, 1 = 1/2, 2 = 2/3, 3 = 3/4, 4 = 5/6, 5 = 7/8, 6 = 8/9, 7 = 3/5, 8 = 4/5, 9 = 9/10, 15 = None.\nExample: /// Example: 4\nConstraints: No constraints specified."
              },
        "transmitFilterType" : {
                "type" : "string",
                "description" : "Transmit pulse shaping filter typ (e.g. RRC).\nExample: /// Example: RRC\nConstraints: Minimum length = 0, Maximum length = 10"
              },
        "transmitFilterRollOff" : {
                "type" : "number",
                "description" : "Transmit pulse shaping filter roll-off value.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "symbolToNoiseRatio" : {
                "type" : "number",
                "description" : "Symbol to noise ratio, in dB.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "bitErrorRate" : {
                "type" : "number",
                "description" : "The ratio of bit errors per number of received bits.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "sourceDL" : {
                "type" : "string",
                "description" : "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.\nExample: /// Example: AXE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "onOrbit" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "descriptor" : {
                "type" : "string",
                "description" : "Optional source-provided and searchable metadata or descriptor of the data.\nExample: /// Example: descriptor\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "url" : {
                "type" : "string",
                "description" : "Optional URL containing additional information on this observation.\nExample: /// Example: https://some-url\nConstraints: Minimum length = 0, Maximum length = 2048"
              },
        "frequencies" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of individual PSD frequencies of the signal in Hz. This array should correspond with the same-sized array of powers.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "powers" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of individual measured PSD powers of the signal in dBW. This array should correspond with the same-sized array of frequencies.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "snrs" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of signal to noise ratios of the signals, in dB.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "confidences" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of measurement confidences.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "detectionStatuses" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of detection statuses (e.g. DETECTED, CARRIER_DETECTED, NOT_DETECTED) for each measured signal.\nExample: /// Example: ['DETECTED']\nConstraints: No constraints specified."
              },
        "chipRates" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of chipRates.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "codeTaps" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of code taps.\nExample: /// Example: ['TAG1', 'TAG2']\nConstraints: No constraints specified."
              },
        "codeFills" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of code fills.\nExample: /// Example: ['TAG1', 'TAG2']\nConstraints: No constraints specified."
              },
        "codeLengths" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of code lengths.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "pnOrders" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of pnOrder.\nExample: /// Example: [1, 2]\nConstraints: No constraints specified."
              },
        "signalIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of optional source provided identifiers of the measurements/signals.\nExample: /// Example: ['ID1', 'ID2']\nConstraints: No constraints specified."
              },
        "baudRates" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of measured signal baud rates.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "telemetryIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of optional source provided telemetry identifiers of the measurements/signals.\nExample: /// Example: ['ID1', 'ID2']\nConstraints: No constraints specified."
              },
        "constellationXPoints" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of individual x-coordinates for demodulated signal constellation. This array should correspond with the same-sized array of constellationYPoints.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "constellationYPoints" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of individual y-coordinates for demodulated signal constellation. This array should correspond with the same-sized array of constellationXPoints.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/RFObservationDetails_Full"
}
