{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "AttitudeData_Full_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "AttitudeData_Full" : {
      "type" : "object",
      "description" : "/// These services provide operations for posting and querying attitude of on-orbit objects.  Attitude describes the orientation of an object, which can be represented by quaternions or euler angles.  The AttitudeSet ID (asId) identifies the 'AttitudeSet' record which contains details of the underlying data as well as a collection of attitude points. Points must be retrieved by first identifying a desired AttitudeSet and pulling its points by that AttitudeSet ID 'asId'.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: ATTITUDEDATA-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "asId" : {
                "type" : "string",
                "description" : "Unique identifier of the parent AttitudeSet associated with this record.\nExample: /// Example: 773c9887-e931-42eb-8155-f0fbd227b235\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the on-orbit satellite to which this attitude record applies.\nExample: /// Example: 41947\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/catalog number of the on-orbit object to which this attitude record applies.\nExample: /// Example: 41947\nConstraints: No constraints specified."
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the record source to indicate the target object of this attitude record. This may be an internal identifier and not necessarily map to a valid satellite number.\nExample: /// Example: D6593\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "ts" : {
                "type" : "string",
                "description" : "Time associated with this attitude record, in ISO 8601 UTC format, with microsecond precision.\nExample: /// Example: 2022-03-07T14:51:39.653043Z\nConstraints: No constraints specified."
              },
        "motionType" : {
                "type" : "string",
                "description" : "Label specifying type of rotational motion of target.\nExample: /// Example: PROSOL_MOTION\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "q1" : {
                "type" : "number",
                "description" : "Quaternion vector component 1.\nExample: /// Example: 0.0312\nConstraints: No constraints specified."
              },
        "q2" : {
                "type" : "number",
                "description" : "Quaternion vector component 2.\nExample: /// Example: 0.7854\nConstraints: No constraints specified."
              },
        "q3" : {
                "type" : "number",
                "description" : "Quaternion vector component 3.\nExample: /// Example: 0.3916\nConstraints: No constraints specified."
              },
        "qc" : {
                "type" : "number",
                "description" : "Quaternion scalar component.\nExample: /// Example: 0.4783\nConstraints: No constraints specified."
              },
        "q1Dot" : {
                "type" : "number",
                "description" : "Derivative of quaternion vector component 1.\nExample: /// Example: 0.0043\nConstraints: No constraints specified."
              },
        "q2Dot" : {
                "type" : "number",
                "description" : "Derivative of quaternion vector component 2.\nExample: /// Example: 0.06\nConstraints: No constraints specified."
              },
        "q3Dot" : {
                "type" : "number",
                "description" : "Derivative of quaternion vector component 3.\nExample: /// Example: 0.499\nConstraints: No constraints specified."
              },
        "qcDot" : {
                "type" : "number",
                "description" : "Derivative of quaternion scalar component.\nExample: /// Example: 0.011\nConstraints: No constraints specified."
              },
        "xAngle" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of X body rotation Euler angle(s), in degrees (-180 to 180).  For repeated axis rotations, the array elements should be placed in the order that the angles apply in the sequence.\nExample: /// Example: [139.753]\nConstraints: No constraints specified."
              },
        "yAngle" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of Y body rotation Euler angle(s), in degrees (-180 to 180).  For repeated axis rotations, the array elements should be placed in the order that the angles apply in the sequence.\nExample: /// Example: [25.066]\nConstraints: No constraints specified."
              },
        "zAngle" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of Z body rotation Euler angle(s), in degrees (-180 to 180).  For repeated axis rotations, the array elements should be placed in the order that the angles apply in the sequence.\nExample: /// Example: [-53.368]\nConstraints: No constraints specified."
              },
        "xRate" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of X body rotation rate(s), in degrees per second.  For repeated axis rotations, the array elements should be placed in the order that the rates apply in the sequence.  Attitude rates are expressed in frame1 with respect to frame2.\nExample: /// Example: [0.105]\nConstraints: No constraints specified."
              },
        "yRate" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of Y body rotation rate(s), in degrees per second.  For repeated axis rotations, the array elements should be placed in the order that the rates apply in the sequence.  Attitude rates are expressed in frame1 with respect to frame2.\nExample: /// Example: [0.032]\nConstraints: No constraints specified."
              },
        "zRate" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of Z body rotation rate(s), in degrees per second.  For repeated axis rotations, the array elements should be placed in the order that the rates apply in the sequence  Attitude rates are expressed in frame1 with respect to frame2.\nExample: /// Example: [0.022]\nConstraints: No constraints specified."
              },
        "ra" : {
                "type" : "number",
                "description" : "Precession axis right ascension (ECI J2000 frame) in degrees.\nExample: /// Example: -173.75\nConstraints: No constraints specified."
              },
        "declination" : {
                "type" : "number",
                "description" : "Precession axis declination (ECI J2000 frame) in degrees.\nExample: /// Example: 0.799\nConstraints: No constraints specified."
              },
        "coningAngle" : {
                "type" : "number",
                "description" : "Coning angle in degrees.\nExample: /// Example: 0.1\nConstraints: No constraints specified."
              },
        "precPeriod" : {
                "type" : "number",
                "description" : "Precession period in seconds.\nExample: /// Example: 36.1\nConstraints: No constraints specified."
              },
        "spinPeriod" : {
                "type" : "number",
                "description" : "Spin period in seconds.\nExample: /// Example: 0.1\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2022-07-05T12:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "dataMode" : {
                "$ref" : "#/definitions/AttitudeData_Full_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/AttitudeData_Full"
}
