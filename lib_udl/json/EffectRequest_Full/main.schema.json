{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "EffectRequest_Full_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "EffectRequest_Full" : {
      "type" : "object",
      "description" : "/// A request for various effects on a target.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: EFFECTREQUEST-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "externalRequestId" : {
                "type" : "string",
                "description" : "The extenal system identifier of this request. A human readable unique id.\nExample: /// Example: EXTERNALREQUEST-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "effectList" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "List of effects to be achieved on the target (e.g. COVER, DECEIVE, DEGRADE, DENY, DESTROY, DISRUPT, DIVERSION, DIVERT, FIX, INSPECT, INTERCEPT, ISOLATE, MANIPULATE, NEUTRALIZE, SHADOW, SUPPRESS, etc.).  The effects included in this list are connected by implied AND.\nExample: /// Example: ['COVER', 'DECEIVE']\nConstraints: No constraints specified."
              },
        "state" : {
                "type" : "string",
                "description" : "State of this effect request (e.g. CREATED, UPDATED, DELETED, etc.).\nExample: /// Example: CREATED\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "context" : {
                "type" : "string",
                "description" : "Specific descriptive instantiation of the effect, e.g., playbook to be used.\nExample: /// Example: Example Notes\nConstraints: Minimum length = 0, Maximum length = 256"
              },
        "startTime" : {
                "type" : "string",
                "description" : "The time the effect should start, in ISO8601 UTC format.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "endTime" : {
                "type" : "string",
                "description" : "The time the effect should end, in ISO8601 UTC format.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "deadlineType" : {
                "type" : "string",
                "description" : "The indicator of deadline of the bid request (e.g. BETWEEN, IMMEDIATE, NOEARLIERTHAN, NOLATERTHAN, etc.):\nBETWEEN:&nbsp;Produce effect any time between the given start and end times, equal penalty for being early or late\nIMMEDIATE:&nbsp;Start as soon as possible, earlier is always better\nNOEARLIERTHAN:&nbsp;Produce effect at this time or later. Large penalty for being earlier, no reward for being later\nNOLATERTHAN:&nbsp;Produce effect no later than the given startTime. Large penalty for being later, no reward for being even earlier as long as the effect starts by the given time.\nExample: /// Example: NoLaterThan\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "targetSrcType" : {
                "type" : "string",
                "description" : "The source type of the targetId identifier (POI, TRACK).\nExample: /// Example: POI\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "targetSrcId" : {
                "type" : "string",
                "description" : "The record ID, depending on the type identified in targetSrcType, of the requested target. This identifier corresponds to either poi.poiid or track.trkId from their respective schemas.\nExample: /// Example: TARGETSRC-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "priority" : {
                "type" : "string",
                "description" : "The priority (LOW, MEDIUM, HIGH) of this request.\nExample: /// Example: LOW\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "modelClass" : {
                "type" : "string",
                "description" : "The type or class of the preference model used to evaluate this offer.\nExample: /// Example: Preference model\nConstraints: Minimum length = 0, Maximum length = 256"
              },
        "metricTypes" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of the the metric classes to be evaluated (e.g. Cost, GoalAchievement, OpportunityCost, Risk, Timeliness, Unavailable, etc.).  See the associated 'metricWeights' array for the weighting values, positionally corresponding to these types.  The 'metricTypes' and 'metricWeights' arrays must match in size.\nExample: /// Example: ['COST', 'RISK']\nConstraints: No constraints specified."
              },
        "metricWeights" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of the weights for the metric in the final evaluation score. Normalized (0 to 1).  See the associated 'metricTypes' array for the metric classes, positionally corresponding to these values.  The 'metricTypes' and 'metricWeights' arrays must match in size.\nExample: /// Example: [0.5, 0.6]\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "dataMode" : {
                "$ref" : "#/definitions/EffectRequest_Full_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/EffectRequest_Full"
}
