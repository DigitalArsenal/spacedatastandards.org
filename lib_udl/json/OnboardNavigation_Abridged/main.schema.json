{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "OnboardNavigation_Abridged_referenceFrame_Enum" : {
      "type" : "string",
      "enum": ["J2000", "EFG_TDR", "ECR_ECEF", "TEME", "ITRF", "GCRF"]
    },
    "OnboardNavigation_Abridged_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "OnboardNavigation_Abridged" : {
      "type" : "object",
      "description" : "/// These services provide spacecraft positional data derived from on-board navigational sensors.  Navigational points are provided in kilometers and in a user specified reference frame, with ECI J2K being preferred.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: ONBOARD-NAVIGATION-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the primary satellite on-orbit object.\nExample: /// Example: ONORBIT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/catalog number of the target on-orbit object.\nExample: /// Example: 101\nConstraints: No constraints specified."
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the data source to indicate the target object of this record. This may be an internal identifier and not necessarily map to a valid satellite number.\nExample: /// Example: ORIGOBJECT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "startTime" : {
                "type" : "string",
                "description" : "Start time of the sensor data, in ISO 8601 UTC format.\nExample: /// Example: 2021-07-20T01:02:03.123456Z\nConstraints: No constraints specified."
              },
        "endTime" : {
                "type" : "string",
                "description" : "End time of the sensor data, in ISO 8601 UTC format.\nExample: /// Example: 2021-07-20T01:02:03.123456Z\nConstraints: No constraints specified."
              },
        "esId" : {
                "type" : "string",
                "description" : "Unique identifier of the parent EphemerisSet, if this data is correlated with an Ephemeris.  If multiple nav sensor records are required, this ID may be associated with each of those records if each is synced to the ephemeris points.\nExample: /// Example: EPHEMERISSET-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "starCatName" : {
                "type" : "string",
                "description" : "The name or identifier the star catalog in use.\nExample: /// Example: STAR-CAT-NAME\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "starCatLoadTime" : {
                "type" : "string",
                "description" : "The last load time of the current star catalog onboard this spacecraft.\nExample: /// Example: 2021-07-21T01:02:03.123Z\nConstraints: No constraints specified."
              },
        "idStateVector" : {
                "type" : "string",
                "description" : "Unique identifier of the last onboard state vector.\nExample: /// Example: STATE-VECTOR-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "ts" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of epochs of the observations, in ISO 8601 UTC format.  The epochs are assumed to correspond to all sensor data in this record.  If sensors do not share a common epoch then separate records should be generated.\nExample: /// Example: ['2021-07-21T01:02:03.120003Z']\nConstraints: No constraints specified."
              },
        "referenceFrame" : {
                "$ref" : "#/definitions/OnboardNavigation_Abridged_referenceFrame_Enum",
                "description" : "The reference frame in which the sensor derived positions are provided. If the referenceFrame is null it is assumed to be J2000.  Note that this frame is assumed to apply to all of the sensor data in this record.  If onboard sensors process positional estimates in different frames then separate records should be generated.\nExample: /// Example: J2000\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "sunSensor" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame, based on the onboard sun sensor, at each epoch.\nExample: /// Example: [[1.1, 2.2, 3.3]]\nConstraints: No constraints specified."
              },
        "mag" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame, based on the onboard magnetometer, at each epoch.\nExample: /// Example: [[1.1, 2.2, 3.3]]\nConstraints: No constraints specified."
              },
        "starTracker" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Arrays of spacecraft position (X, Y, Z), in km, in the specified referenceFrame, based on the onboard star tracker, at each epoch.\nExample: /// Example: [[1.1, 2.2, 3.3]]\nConstraints: No constraints specified."
              },
        "deltaPos" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Arrays of spacecraft delta position (X, Y, Z), in km, in the specified referenceFrame, between the onboard state and the last accepted sensor position.\nExample: /// Example: [[1.1, 2.2, 3.3]]\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "dataMode" : {
                "$ref" : "#/definitions/OnboardNavigation_Abridged_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 36"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/OnboardNavigation_Abridged"
}
