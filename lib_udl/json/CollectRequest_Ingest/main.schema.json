{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "CollectRequest_Ingest_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "CollectRequest_Ingest" : {
      "type" : "object",
      "description" : "/// Collect Requests support several types of individual requests, or planned/scheduled tasks on sensors and/or orbital objects. Options are provided to accomodate most common sensor contact and collection applications, including single sensor-object tasking, search operations, and TT&C support. Multiple requests originating from a plan or schedule may be associated to a sensor plan if desired.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: COLLECTREQUEST-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "idParentReq" : {
                "type" : "string",
                "description" : "The unique ID of the collect request record from which this request originated. This may be used for cases of sensor-to-sensor tasking, such as tip/cue operations.\nExample: /// Example: da98671b-34db-47bf-8c8d-7c668b92c800\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "msgType" : {
                "type" : "string",
                "description" : "The type of external message from which this request originated.\nExample: /// Example: SU67\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "msgCreateDate" : {
                "type" : "string",
                "description" : "The timestamp of the external message from which this request originated, if applicable, in ISO8601 UTC format with millisecond precision.\nExample: /// Example: 2024-04-25T08:17:01.346Z\nConstraints: No constraints specified."
              },
        "type" : {
                "type" : "string",
                "description" : "The type of this collect or contact request (DIRECTED SEARCH, DWELL, OBJECT, POL, RATE TRACK, SEARCH, SOI, STARE, TTC, VOLUME SEARCH, etc.).\nExample: /// Example: DWELL\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "idPlan" : {
                "type" : "string",
                "description" : "Unique identifier of the parent plan or schedule associated with this request.  If null, this request is assumed not associated with a plan or schedule.\nExample: /// Example: REF-PLAN-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "planIndex" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Index number (integer) for records within a collection plan or schedule.\nExample: /// Example: 8\nConstraints: No constraints specified."
              },
        "taskId" : {
                "type" : "string",
                "description" : "Task ID associated with this request.  A task ID may be associated with a single collect request or may be used to tie together the sub-requests of a full collect, for example a DWELL consisting of many dwell points.\nExample: /// Example: TASK-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "dwellId" : {
                "type" : "string",
                "description" : "The dwell ID associated with this request.  A dwell ID is dwell point specific and a DWELL request consist of many dwell point requests.\nExample: /// Example: DWELL-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "externalId" : {
                "type" : "string",
                "description" : "Optional ID from external systems.  This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.\nExample: /// Example: EXTERNAL-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "idSensor" : {
                "type" : "string",
                "description" : "Unique identifier of the requested/scheduled/planned sensor associated with this request.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType.\nExample: /// Example: REF-SENSOR-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "origSensorId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the source to indicate the sensor identifier requested/scheduled/planned for this request. This may be an internal identifier and not necessarily a valid sensor ID.  If both idSensor and origSensorId are null then the request is assumed to be a general request for observations or contact on an object, if specified, or an area/volume.  In this case, the requester may specify a desired obType.\nExample: /// Example: ORIGSENSOR-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "obType" : {
                "type" : "string",
                "description" : "Optional type of observation (EO, IR, RADAR, RF-ACTIVE, RF-PASSIVE, OTHER) requested.  This field may correspond to a request of a specific sensor, or to a general non sensor specific request.\nExample: /// Example: RADAR\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "priority" : {
                "type" : "string",
                "description" : "The priority of the collect request  (EMERGENCY, FLASH, IMMEDIATE, PRIORITY, ROUTINE).\nExample: /// Example: EMERGENCY\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "taskCategory" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The (SSN) tasking category (1-5) associated with this request.  The tasking category defines the priority of gathering and transmitting the requested observational data.  Note that category definitions are sensor type specific.\nExample: /// Example: 4\nConstraints: No constraints specified."
              },
        "suffix" : {
                "type" : "string",
                "description" : "The (SSN) tasking suffix (A-Z) associated with this request.  The suffix defines the amount of observational data and the frequency of collection.  Note that suffix definitions are sensor type specific.\nExample: /// Example: T\nConstraints: Minimum length = 0, Maximum length = 1"
              },
        "uctFollowUp" : {
                "type" : "boolean",
                "description" : "Boolean indicating that this collect request is UCT follow-up.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "startTime" : {
                "type" : "string",
                "description" : "The start time or earliest time of the collect or contact request window, in ISO 8601 UTC format.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "endTime" : {
                "type" : "string",
                "description" : "The end time of the collect or contact request window, in ISO 8601 UTC format.  If no endTime or duration is provided it is assumed the request is either ongoing or that the request is for a specified number of tracks (numTracks).  If both duration and endTime are provided, the endTime is assumed to take precedence.\nExample: /// Example: 2018-01-01T18:00:00.123456Z\nConstraints: No constraints specified."
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the target on-orbit object for this request.\nExample: /// Example: REF-ONORBIT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/catalog number of the target on-orbit object for this request.\nExample: /// Example: 101\nConstraints: No constraints specified."
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the data source to indicate the target object of this request. This may be an internal identifier and not necessarily map to a valid satellite number.\nExample: /// Example: ORIGOBJECT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "taskGroup" : {
                "type" : "string",
                "description" : "The tasking group to which the target object is assigned.\nExample: /// Example: 729\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "iron" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Inter-Range Operations Number.  Four-digit identifier used to schedule and identify AFSCN contact support for booster, launch, and on-orbit operations.\nExample: /// Example: 3\nConstraints: No constraints specified."
              },
        "orbitRegime" : {
                "type" : "string",
                "description" : "The orbit regime of the target (GEO, HEO, LAUNCH, LEO, MEO, OTHER).\nExample: /// Example: GEO\nConstraints: Minimum length = 0, Maximum length = 12"
              },
        "targetSize" : {
                "type" : "number",
                "description" : "The minimum object (diameter) size, in meters, to be reported.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "rcsMin" : {
                "type" : "number",
                "description" : "The minimum Radar Cross-Section of the target, in m^2.  If only minimum RCS is provided it is assumed to be minimum reportable RCS.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "rcs" : {
                "type" : "number",
                "description" : "The Radar Cross-Section of the target, in m^2.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "rcsMax" : {
                "type" : "number",
                "description" : "The maximum Radar Cross-Section of the target, in m^2.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "freqMin" : {
                "type" : "number",
                "description" : "The minimum frequency of interest, in MHz.  If only minimum frequency is provided it is assumed to be minimum reportable frequency.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "freq" : {
                "type" : "number",
                "description" : "The estimated or expected emission frequency of the target, in MHz.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "freqMax" : {
                "type" : "number",
                "description" : "The maximum frequency of interest, in MHz.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "polarization" : {
                "type" : "string",
                "description" : "The RF polarization (H, LHC, RHC, V).\nExample: /// Example: H\nConstraints: Minimum length = 0, Maximum length = 4"
              },
        "visMagMin" : {
                "type" : "number",
                "description" : "The minimum estimated or expected visual magnitude of the target, in Magnitudes (M).  If only minimum vismag is provided it is assumed to be minimum reportable vismag.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "visMag" : {
                "type" : "number",
                "description" : "The estimated or expected visual magnitude of the target, in Magnitudes (M).\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "visMagMax" : {
                "type" : "number",
                "description" : "The maximum estimated or expected visual magnitude of the target, in Magnitudes (M).\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "spectralModel" : {
                "type" : "string",
                "description" : "The spectral model used for the irradiance calculation.\nExample: /// Example: Example Model\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "reflectance" : {
                "type" : "number",
                "description" : "The fraction of solar energy reflected from target.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "irradiance" : {
                "type" : "number",
                "description" : "The target object irradiance value.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "numFrames" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "For optical sensors, the requested number of frames to capture at each sensor step.\nExample: /// Example: 6\nConstraints: No constraints specified."
              },
        "frameRate" : {
                "type" : "number",
                "description" : "For optical sensors, the frame rate of the camera, in Hz.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "integrationTime" : {
                "type" : "number",
                "description" : "For optical sensors, the integration time per camera frame, in milliseconds.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "numTracks" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of requested tracks on the target.  If numTracks is not provided it is assumed to indicate all possible observations every pass over the request duration or within the request start/end window.\nExample: /// Example: 3\nConstraints: No constraints specified."
              },
        "numObs" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of requested observations on the target.\nExample: /// Example: 9\nConstraints: No constraints specified."
              },
        "duration" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The duration of the collect request, in seconds.  If both duration and endTime are provided, the endTime is assumed to take precedence.\nExample: /// Example: 11\nConstraints: No constraints specified."
              },
        "srchPattern" : {
                "type" : "string",
                "description" : "The search pattern to be executed for this request (e.g. PICKET-FENCE, SCAN, etc.).\nExample: /// Example: SCAN\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "scenario" : {
                "type" : "string",
                "description" : "Pre-coordinated code, direction, or configuration to be executed by the sensor or site for this collect or contact.\nExample: /// Example: Example direction\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "idElset" : {
                "type" : "string",
                "description" : "ID of the UDL Elset of the object associated with this request.\nExample: /// Example: REF-ELSET-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "idManifold" : {
                "type" : "string",
                "description" : "ID of the UDL Manifold Elset of the object associated with this request.  A Manifold Elset provides theoretical Keplerian orbital elements belonging to an object of interest's manifold describing a possible/theoretical orbit for an object of interest for tasking purposes.\nExample: /// Example: REF-MANIFOLD-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "idStateVector" : {
                "type" : "string",
                "description" : "ID of the UDL State Vector of the object or central vector associated with this request.\nExample: /// Example: STATEVECTOR-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "esId" : {
                "type" : "string",
                "description" : "ID of the UDL Ephemeris Set of the object associated with this request.\nExample: /// Example: ES-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "epoch" : {
                "type" : "string",
                "description" : "Epoch time, in ISO 8601 UTC format, of the orbital elements.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "semiMajorAxis" : {
                "type" : "number",
                "description" : "The average of the periapsis and apoapsis distances, in kilometers. For circular orbits, the semimajor axis is the distance between the centers of the bodies.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "eccentricity" : {
                "type" : "number",
                "description" : "The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "inclination" : {
                "type" : "number",
                "description" : "The angle, in degrees, between the equator and the orbit plane when looking from the center of the Earth. Inclination ranges from 0-180 degrees, with 0-90 representing posigrade orbits and 90-180 representing retrograde orbits.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "raan" : {
                "type" : "number",
                "description" : "Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "argOfPerigee" : {
                "type" : "number",
                "description" : "The argument of perigee is the angle, in degrees, formed between the perigee and the ascending node.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "trueAnomoly" : {
                "type" : "number",
                "description" : "The true anomaly defines the angular position, in degrees, of the object on it's orbital path as measured from the orbit focal point at epoch.  The true anomaly is referenced from perigee.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "ra" : {
                "type" : "number",
                "description" : "The expected or directed right ascension angle, in degrees, for search or target acquisition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "dec" : {
                "type" : "number",
                "description" : "The expected or directed declination angle, in degrees, for search or target acquisition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "az" : {
                "type" : "number",
                "description" : "The expected or directed azimuth angle, in degrees, for search or target acquisition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "el" : {
                "type" : "number",
                "description" : "The expected or directed elevation angle, in degrees, for search or target acquisition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "range" : {
                "type" : "number",
                "description" : "The expected acquisition range or defined center range, in km.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "extentAz" : {
                "type" : "number",
                "description" : "The extent of the azimuth angle, in degrees, from center azimuth to define a spatial volume.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "extentEl" : {
                "type" : "number",
                "description" : "The extent of the elevation angle, in degrees, from center elevation to define a spatial volume.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "extentRange" : {
                "type" : "number",
                "description" : "The extent of the range, in km, from center range to define a spatial volume.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "lat" : {
                "type" : "number",
                "description" : "WGS-84 latitude, in degrees. -90 to 90 degrees (negative values south of equator).  If an accompanying stopLat is provided, then the lat value can be assumed to be the starting latitude of a volume definition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "lon" : {
                "type" : "number",
                "description" : "WGS-84 longitude, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).  If an accompanying stopLon is provided, then lon value can be assumed to be the starting longitude of a volume definition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "alt" : {
                "type" : "number",
                "description" : "Height above WGS-84 ellipsoid (HAE), in kilometers.  If an accompanying stopAlt is provided, then alt value can be assumed to be the starting altitude of a volume definition.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "stopLat" : {
                "type" : "number",
                "description" : "The stopping WGS-84 latitude of a volume definition, in degrees.  -90 to 90 degrees (negative values south of equator).  The stopLat value is only meaningful if a (starting) lat value is provided.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "stopLon" : {
                "type" : "number",
                "description" : "The stopping WGS-84 longitude of a volume definition, in degrees.  -180 to 180 degrees (negative values west of Prime Meridian).  The stopLon value is only meaningful if a (starting) lon value is provided.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "stopAlt" : {
                "type" : "number",
                "description" : "The stopping HAE WGS-84 height above ellipsoid (HAE), of a volume definition, in kilometers.  The stopAlt value is only meaningful if a (starting) alt value is provided.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "srchInc" : {
                "type" : "number",
                "description" : "The maximum inclination, in degrees, to be used in search operations.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "xAngle" : {
                "type" : "number",
                "description" : "The angular distance, in degrees, in the sensor-x direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "yAngle" : {
                "type" : "number",
                "description" : "The angular distance, in degrees, in the sensor-y direction from scan center defined by the central vector.  The specification of xAngle and yAngle defines a rectangle of width 2*xAngle and height 2*yAngle centered about the central vector.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "orientAngle" : {
                "type" : "number",
                "description" : "The magnitude of rotation, in degrees, between the xAngle direction and locally defined equinoctial plane.  A positive value indicates clockwise rotation about the sensor boresight vector.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "customer" : {
                "type" : "string",
                "description" : "The customer for this request.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "notes" : {
                "type" : "string",
                "description" : "Notes or comments associated with this request.\nExample: /// Example: Example notes\nConstraints: Minimum length = 0, Maximum length = 512"
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: Example source\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "dataMode" : {
                "$ref" : "#/definitions/CollectRequest_Ingest_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "stateVector" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "elset" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "tags" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.\nExample: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']\nConstraints: No constraints specified."
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/CollectRequest_Ingest"
}
