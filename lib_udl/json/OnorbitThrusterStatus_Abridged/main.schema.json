{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "OnorbitThrusterStatus_Abridged_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "OnorbitThrusterStatus_Abridged" : {
      "type" : "object",
      "description" : "/// Status information for OnorbitThruster objects.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: af103c-1f917dc-002c1bd\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "idOnorbitThruster" : {
                "type" : "string",
                "description" : "ID of the associated OnorbitThruster record. This ID can be used to obtain additional information on an onorbit thruster object using the 'get  by ID' operation (e.g. /udl/onorbitthruster/{id}). For example, the OnorbitThruster object with idOnorbitThruster = abc would be queried as /udl/onorbitthruster/abc.\nExample: /// Example: ff7dc909-e8b4-4a54-8529-1963d4e9b353\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "name" : {
                "type" : "string",
                "description" : "Identifier of this thruster.\nExample: /// Example: REA1\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "statusTime" : {
                "type" : "string",
                "description" : "Datetime of the thruster status observation in ISO 8601 UTC datetime format with millisecond precision.\nExample: /// Example: 2024-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "propMassMin" : {
                "type" : "number",
                "description" : "Minimum available propellant mass for this thruster's type, in kilograms.\nExample: /// Example: 0.1\nConstraints: No constraints specified."
              },
        "propMassAvg" : {
                "type" : "number",
                "description" : "Average available propellant mass for this thruster's type, in kilograms.\nExample: /// Example: 907.6\nConstraints: No constraints specified."
              },
        "propMassMedian" : {
                "type" : "number",
                "description" : "Median available propellant mass for this thruster's type, in kilograms.\nExample: /// Example: 200.1\nConstraints: No constraints specified."
              },
        "propMassMax" : {
                "type" : "number",
                "description" : "Maximum available propellant mass for this thruster's type, in kilograms.\nExample: /// Example: 2333.3\nConstraints: No constraints specified."
              },
        "fuelMass" : {
                "type" : "number",
                "description" : "Total fuel mass available for this thruster's type, in kilograms.\nExample: /// Example: 100.1\nConstraints: No constraints specified."
              },
        "fuelMassUnc" : {
                "type" : "number",
                "description" : "1-sigma uncertainty of the total fuel mass available for this thruster type, in kilograms.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "totalDeltaV" : {
                "type" : "number",
                "description" : "Total delta-velocity available for this thruster's type, in meters per second.\nExample: /// Example: 100.1\nConstraints: No constraints specified."
              },
        "minDeltaV" : {
                "type" : "number",
                "description" : "Minimum available delta-velocity for this thruster, in meters per second.\nExample: /// Example: 0.1\nConstraints: No constraints specified."
              },
        "estDeltaV" : {
                "type" : "number",
                "description" : "Estimated available delta-velocity for this thruster, in meters per second.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "maxDeltaV" : {
                "type" : "number",
                "description" : "Maximum available delta-velocity for this thruster, in meters per second.\nExample: /// Example: 100.1\nConstraints: No constraints specified."
              },
        "thrustMax" : {
                "type" : "number",
                "description" : "Maximum available thrust for this thruster, in newtons.\nExample: /// Example: 22.1\nConstraints: No constraints specified."
              },
        "isp" : {
                "type" : "number",
                "description" : "Specific impulse for this thruster, in seconds.\nExample: /// Example: 300.1\nConstraints: No constraints specified."
              },
        "operational" : {
                "type" : "boolean",
                "description" : "Flag indicating if this thruster is operational.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "dataMode" : {
                "$ref" : "#/definitions/OnorbitThrusterStatus_Abridged_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/OnorbitThrusterStatus_Abridged"
}
