{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "OrbitDetermination_Full_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "OrbitDetermination_Full" : {
      "type" : "object",
      "description" : "/// Model representation of orbit determination algorithm results describing General Perturbations or Special Perturbations orbital updates.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: 026dd511-8ba5-47d3-9909-836149f87686\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "startTime" : {
                "type" : "string",
                "description" : "Start time for OD solution in ISO 8601 UTC datetime format, with microsecond precision.\nExample: /// Example: 2023-08-28T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "endTime" : {
                "type" : "string",
                "description" : "End time for OD solution in ISO 8601 UTC datetime format, with microsecond precision.\nExample: /// Example: 2023-08-28T15:20:21.247192Z\nConstraints: No constraints specified."
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the target satellite on-orbit object. This ID can be used to obtain additional information on an OnOrbit object using the 'get by ID' operation (e.g. /udl/onorbit/{id}). For example, the OnOrbit with idOnOrbit = 25544 would be queried as /udl/onorbit/25544.\nExample: /// Example: 54741\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the OD source to indicate the target on-orbit object of this OD solution. This may be an internal identifier and not necessarily map to a valid satellite number.\nExample: /// Example: ORIGOBJECT-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/Catalog number of the target on-orbit object.\nExample: /// Example: 54741\nConstraints: No constraints specified."
              },
        "aprioriIdElset" : {
                "type" : "string",
                "description" : "Identifier of the element set used to seed this OD solution. This ID can be used to obtain additional information on an Elset object using the 'get by ID' operation (e.g. /udl/elset/{id}). For example, the Elset with idElset = abc would be queried as /udl/elset/abc.\nExample: /// Example: 80e544b7-6a17-4554-8abf-7301e98f8e5d\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "aprioriElset" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "aprioriIdStateVector" : {
                "type" : "string",
                "description" : "Identifier of the state vector used to seed this OD solution. This ID can be used to obtain additional information on a StateVector object using the 'get by ID' operation (e.g. /udl/statevector/{id}). For example, the StateVector with idStateVector = abc would be queried as /udl/statevector/abc.\nExample: /// Example: 6e291992-8ae3-4592-bb0f-055715bf4803\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "aprioriStateVector" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "initialOD" : {
                "type" : "boolean",
                "description" : "Flag indicating whether this is an initial orbit determination.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "lastObStart" : {
                "type" : "string",
                "description" : "The start of the time interval containing the time of the last accepted observation, in ISO 8601 UTC datetime format with microsecond precision. For an exact observation time, the lastObStart and lastObEnd are the same.\nExample: /// Example: 2023-08-28T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "lastObEnd" : {
                "type" : "string",
                "description" : "The end of the time interval containing the time of the last accepted observation, in ISO 8601 UTC datetime format with microsecond precision. For an exact observation time, the lastObStart and lastObEnd are the same.\nExample: /// Example: 2023-08-28T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "timeSpan" : {
                "type" : "number",
                "description" : "The time span used for the OD of the object, in days.\nExample: /// Example: 3.5\nConstraints: No constraints specified."
              },
        "effectiveFrom" : {
                "type" : "string",
                "description" : "Optional start time at which this OD solution is accurate, in ISO 8601 UTC datetime format with microsecond precision.\nExample: /// Example: 2023-08-28T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "effectiveUntil" : {
                "type" : "string",
                "description" : "Optional end time at which this OD solution may no longer be accurate, in ISO 8601 UTC datetime format with microsecond precision.\nExample: /// Example: 2023-08-30T08:15:00.123456Z\nConstraints: No constraints specified."
              },
        "wrms" : {
                "type" : "number",
                "description" : "The Weighted Root Mean Squared (RMS) of the differential correction of the target object that produced this OD state. WRMS is a quality indicator of the OD update, with a value of 1.00 being optimal. WRMS applies to batch least squares (BLS) processes.\nExample: /// Example: 0.991\nConstraints: No constraints specified."
              },
        "previousWrms" : {
                "type" : "number",
                "description" : "The Weighted Root Mean Squared (RMS) of the differential correction from the previous overhead pass of the satellite. Provides a point of comparison for assessing changes in the quality of the OD solution between consecutive passes.\nExample: /// Example: 1.02\nConstraints: No constraints specified."
              },
        "firstPassWrms" : {
                "type" : "number",
                "description" : "The Weighted Root Mean Squared (RMS) calculated for the first satellite pass in the observation span. Serves as the initial quality metric for the beginning of the observation period.\nExample: /// Example: 0.985\nConstraints: No constraints specified."
              },
        "bestPassWrms" : {
                "type" : "number",
                "description" : "Lowest Weighted Root Mean Squared (RMS) value achieved for any single satellite pass during the observation span, indicating the pass with the highest quality OD solution.\nExample: /// Example: 0.975\nConstraints: No constraints specified."
              },
        "errorGrowthRate" : {
                "type" : "number",
                "description" : "Error growth rate of the OD solution in kilometers per day.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "edr" : {
                "type" : "number",
                "description" : "Model parameter value for energy dissipation rate (EDR) in watts per kilogram.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "method" : {
                "type" : "string",
                "description" : "Orbit determination method used to produce this record (e.g. BLS, KF, UKF, etc.).\nExample: /// Example: BLS\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "methodSource" : {
                "type" : "string",
                "description" : "Source of orbit determination method used to produce this record (e.g. ASW, ACTRAC, FreeFlyer, GEODYNE, GDTS, etc.).\nExample: /// Example: ASW\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "fitSpan" : {
                "type" : "number",
                "description" : "The fit span, in days, used in a Batch Least Squares (BLS) OD.\nExample: /// Example: 0.6\nConstraints: No constraints specified."
              },
        "ballisticCoeffEst" : {
                "type" : "boolean",
                "description" : "Flag indicating whether the ballistic coefficient was estimated during this OD solution.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "ballisticCoeffModel" : {
                "type" : "string",
                "description" : "Model used to estimate the ballistic coefficient.\nExample: /// Example: GaussMarkov\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "agomEst" : {
                "type" : "boolean",
                "description" : "Flag indicating whether the AGOM was estimated during this OD solution.\nExample: /// Example: False\nConstraints: No constraints specified."
              },
        "agomModel" : {
                "type" : "string",
                "description" : "Model used to estimate the AGOM.\nExample: /// Example: RandomWalk\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "rmsConvergenceCriteria" : {
                "type" : "number",
                "description" : "OD parameter value for the Root Mean Square (RMS) convergence criteria to successfully close the OD solution.\nExample: /// Example: 0.001\nConstraints: No constraints specified."
              },
        "numIterations" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of iterations taken for the algorithm to converge on an OD solution.\nExample: /// Example: 8\nConstraints: No constraints specified."
              },
        "acceptedObTyps" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL observation types (e.g. DOA, EO, RADAR, RF) of the observations that were accepted in this OD solution. See the associated acceptedObIds array for the records UUID(s), positionally corresponding to the record types in this array. The acceptedObTyps and acceptedObIds arrays must match in size.\nExample: /// Example: ['EO', 'RADAR']\nConstraints: No constraints specified."
              },
        "acceptedObIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL data (observation) UUIDs that were accepted in this OD solution. See the associated acceptedObTyps array for the specific types of observations for the positionally corresponding UUIDs in this array (the two arrays must match in size).\nExample: /// Example: ['EOOBSERVATION-ID1', 'RADAROBSERVATION-ID1']\nConstraints: No constraints specified."
              },
        "rejectedObTyps" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL observation types (e.g. DOA, EO, RADAR, RF) of the observations that were rejected in this OD solution. See the associated rejectedObIds array for the records UUID(s), positionally corresponding to the record types in this array. The rejectedObTyps and rejectedObIds arrays must match in size.\nExample: /// Example: ['DOA', 'RF']\nConstraints: No constraints specified."
              },
        "rejectedObIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL data (observation) UUIDs that were rejected in this OD solution. See the associated rejectedObTyps array for the specific types of observations for the positionally corresponding UUIDs in this array (the two arrays must match in size).\nExample: /// Example: ['DIFFOFARRIVAL-ID2', 'RFOBSERVATION-ID2']\nConstraints: No constraints specified."
              },
        "sensorIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL UUIDs (idSensor) of the sensors that contributed observations in this OD solution.\nExample: /// Example: ['SENSOR-ID1', 'SENSOR-ID2']\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "sourceDL" : {
                "type" : "string",
                "description" : "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.\nExample: /// Example: AXE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: OPS1\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "dataMode" : {
                "$ref" : "#/definitions/OrbitDetermination_Full_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "onOrbit" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/OrbitDetermination_Full"
}
