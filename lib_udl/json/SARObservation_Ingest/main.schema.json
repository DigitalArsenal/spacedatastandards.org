{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "SARObservation_Ingest_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "SARObservation_Ingest" : {
      "type" : "object",
      "description" : "/// Model representation of observation data for SAR based sensor phenomenologies. J2000 is the preferred coordinate frame for all observations, but in some cases observations may be in another frame depending on the provider. Please see the 'Discover' tab in the storefront to confirm coordinate frames by data provider.",
      "properties" : {
        "id" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: SAROBSERVATION-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the spacecraft hosting the sensor associated with this collection.\nExample: /// Example: 36036\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/Catalog number of the spacecraft hosting the sensor associated with this collection.\nExample: /// Example: 36036\nConstraints: No constraints specified."
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the source to indicate the onorbit object hosting the sensor associated with this collection. This may be an internal identifier and not necessarily a valid satellite number.\nExample: /// Example: 36036\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "idSensor" : {
                "type" : "string",
                "description" : "Unique identifier of the reporting sensor.\nExample: /// Example: 36036-1L\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "origSensorId" : {
                "type" : "string",
                "description" : "Optional identifier provided by the source to indicate the sensor for this collection. This may be an internal identifier and not necessarily a valid sensor ID.\nExample: /// Example: SMOS-1L\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "externalId" : {
                "type" : "string",
                "description" : "Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.\nExample: /// Example: EXTERNAL-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "collectionId" : {
                "type" : "string",
                "description" : "Optional identifier to indicate the specific collection tasking which produced this observation.\nExample: /// Example: COLLECTION-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "detectionId" : {
                "type" : "string",
                "description" : "Identifier of the specific detection within a collection which produced this observation.\nExample: /// Example: DETECTION-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "collectionStart" : {
                "type" : "string",
                "description" : "Collection start time in ISO 8601 UTC format with microsecond precision.\nExample: /// Example: 2023-04-22T17:35:00.123456Z\nConstraints: No constraints specified."
              },
        "collectionEnd" : {
                "type" : "string",
                "description" : "Collection end time in ISO 8601 UTC format with microsecond precision.\nExample: /// Example: 2023-04-22T17:38:10.20177Z\nConstraints: No constraints specified."
              },
        "centerTime" : {
                "type" : "string",
                "description" : "The datetime at the center point of the collection in ISO 8601 UTC format with microsecond precision.\nExample: /// Example: 2023-04-22T17:36:35.100885Z\nConstraints: No constraints specified."
              },
        "detectionStart" : {
                "type" : "string",
                "description" : "The detection start time in ISO 8601 UTC format, with microsecond precision.\nExample: /// Example: 2023-07-08T17:35:01.615396Z\nConstraints: No constraints specified."
              },
        "detectionEnd" : {
                "type" : "string",
                "description" : "The detection end time in ISO 8601 UTC format, with microsecond precision.\nExample: /// Example: 2023-07-08T17:35:20.77219Z\nConstraints: No constraints specified."
              },
        "dwellTime" : {
                "type" : "number",
                "description" : "The duration, in seconds, of this detection.\nExample: /// Example: 79.156794\nConstraints: No constraints specified."
              },
        "orbitState" : {
                "type" : "string",
                "description" : "The orbital direction (ASCENDING, DESCENDING) of the platform during the collection.\nExample: /// Example: ASCENDING\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "sarMode" : {
                "type" : "string",
                "description" : "Collection mode setting for this collection (e.g. AREA, SPOTLIGHT, STRIP, etc.).\nExample: /// Example: SPOTLIGHT\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "operatingBand" : {
                "type" : "string",
                "description" : "Name of the band containing operating frequency for the collection (e.g. C, E, EHF, HF, K, Ka, Ku, L, Q, S, SHF, UNK, UHF, V, VHF, VLF, W, X). See RFBandType for more details and descriptions of each band name.\nExample: /// Example: L\nConstraints: Minimum length = 0, Maximum length = 5"
              },
        "operatingFreq" : {
                "type" : "number",
                "description" : "The operating frequency, in Mhz, for the collection.\nExample: /// Example: 2345.6\nConstraints: No constraints specified."
              },
        "snr" : {
                "type" : "number",
                "description" : "Signal to noise ratio, in dB.\nExample: /// Example: 10.1\nConstraints: No constraints specified."
              },
        "txPolarization" : {
                "type" : "string",
                "description" : "Transmit polarization e.g. H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized) Rotating left relative to the earth's surface, R - (Right Hand Circularly Polarized) Rotating right relative to the earth's surface.\nExample: /// Example: H\nConstraints: Minimum length = 0, Maximum length = 4"
              },
        "rxPolarization" : {
                "type" : "string",
                "description" : "Receive polarization e.g. H - (Horizontally Polarized) Perpendicular to Earth's surface, V - (Vertically Polarized) Parallel to Earth's surface, L - (Left Hand Circularly Polarized) Rotating left relative to the earth's surface, R - (Right Hand Circularly Polarized) Rotating right relative to the earth's surface.\nExample: /// Example: H\nConstraints: Minimum length = 0, Maximum length = 4"
              },
        "grazeAngle" : {
                "type" : "number",
                "description" : "The graze angle (also referred to as look angle) for the collection in degrees.\nExample: /// Example: 45.1\nConstraints: No constraints specified."
              },
        "incidenceAngle" : {
                "type" : "number",
                "description" : "The center incidence angle in degrees.\nExample: /// Example: 45.1\nConstraints: No constraints specified."
              },
        "squintAngle" : {
                "type" : "number",
                "description" : "The squint angle for the collection in degrees.\nExample: /// Example: 1.2\nConstraints: No constraints specified."
              },
        "pulseBandwidth" : {
                "type" : "number",
                "description" : "The bandwidth frequency of the pulse in Mhz.\nExample: /// Example: 500.1\nConstraints: No constraints specified."
              },
        "pulseDuration" : {
                "type" : "number",
                "description" : "The duration of a pulse in seconds.\nExample: /// Example: 1.1e-05\nConstraints: No constraints specified."
              },
        "continuousSpotAngle" : {
                "type" : "number",
                "description" : "Required sweep angle for the continuous spot scene in degrees.\nExample: /// Example: 45.1\nConstraints: No constraints specified."
              },
        "slantRange" : {
                "type" : "number",
                "description" : "Slant distance from sensor to center point of imaging event in kilometers.\nExample: /// Example: 60.1\nConstraints: No constraints specified."
              },
        "nearRange" : {
                "type" : "number",
                "description" : "Specifies the closest range, in kilometers, from the flight path to target during the collection.\nExample: /// Example: 12.1\nConstraints: No constraints specified."
              },
        "farRange" : {
                "type" : "number",
                "description" : "Specifies the farthest range, in kilometers, from the flight path to target during the collection.\nExample: /// Example: 34.1\nConstraints: No constraints specified."
              },
        "swathLength" : {
                "type" : "number",
                "description" : "The length of the collection as projected on the ground in kilometers.\nExample: /// Example: 12.1\nConstraints: No constraints specified."
              },
        "area" : {
                "type" : "string",
                "description" : "Optional geographical region or polygon (lat/lon pairs) of the area surrounding the image event as projected on the ground.\nExample: /// Example: POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))\nConstraints: No constraints specified."
              },
        "atext" : {
                "type" : "string",
                "description" : "Geographical region or polygon (lon/lat pairs), as depicted by the Well-Known Text representation of the geometry/geography, of the image as projected on the ground. WKT reference: https://www.opengeospatial.org/standards/wkt-crs. Ignored if included with a POST or PUT request that also specifies a valid 'area' field.\nExample: /// Example: POLYGON((67.3291113966927 26.156175339112,67.2580009640721 26.091022064271,67.1795862381682 26.6637992964562,67.2501237475598 26.730115808233,67.3291113966927 26.156175339112))\nConstraints: No constraints specified."
              },
        "agjson" : {
                "type" : "string",
                "description" : "Geographical region or polygon (lat/lon pairs), as depicted by the GeoJSON representation of the geometry/geography, of the image as projected on the ground. GeoJSON Reference: https://geojson.org/. Ignored if included with a POST or PUT request that also specifies a valid 'area' or 'atext' field.\nExample: /// Example: {\"type\":\"Polygon\",\"coordinates\":[[[67.3291113966927,26.156175339112],[67.2580009640721,26.091022064271],[67.1795862381682,26.6637992964562],[67.2501237475598,26.730115808233],[67.3291113966927,26.156175339112]]]}\nConstraints: No constraints specified."
              },
        "atype" : {
                "type" : "string",
                "description" : "Type of region as projected on the ground (POLYGON, POINT, LINE).\nExample: /// Example: POLYGON\nConstraints: Minimum length = 0, Maximum length = 128"
              },
        "andims" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Number of dimensions of the geometry depicted by region.\nExample: /// Example: 3\nConstraints: No constraints specified."
              },
        "asrid" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Geographical spatial_ref_sys for region.\nExample: /// Example: 3\nConstraints: No constraints specified."
              },
        "spacingRange" : {
                "type" : "number",
                "description" : "The pixel spacing in the range direction measured in meters.\nExample: /// Example: 0.123\nConstraints: No constraints specified."
              },
        "spacingAzimuth" : {
                "type" : "number",
                "description" : "The pixel spacing in the azimuth direction measured in meters.\nExample: /// Example: 0.123\nConstraints: No constraints specified."
              },
        "looksAzimuth" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of looks in the azimuth direction.\nExample: /// Example: 2\nConstraints: No constraints specified."
              },
        "looksRange" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of looks in the range direction.\nExample: /// Example: 1\nConstraints: No constraints specified."
              },
        "resolutionRange" : {
                "type" : "number",
                "description" : "The resolution in the range direction measured in meters.\nExample: /// Example: 0.123\nConstraints: No constraints specified."
              },
        "resolutionAzimuth" : {
                "type" : "number",
                "description" : "The resolution in the azimuth direction measured in meters.\nExample: /// Example: 0.123\nConstraints: No constraints specified."
              },
        "obDirection" : {
                "type" : "string",
                "description" : "The antenna pointing direction (LEFT, RIGHT).\nExample: /// Example: RIGHT\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "coordSys" : {
                "type" : "string",
                "description" : "The coordinate system used for the sensor velocity and target position vectors for the collection.\nExample: /// Example: ECEF\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "targetposx" : {
                "type" : "number",
                "description" : "The collection target X position in kilometers.\nExample: /// Example: 50.23\nConstraints: No constraints specified."
              },
        "targetposy" : {
                "type" : "number",
                "description" : "The collection target Y position in kilometers.\nExample: /// Example: 50.23\nConstraints: No constraints specified."
              },
        "targetposz" : {
                "type" : "number",
                "description" : "The collection target Z position in kilometers.\nExample: /// Example: 50.23\nConstraints: No constraints specified."
              },
        "senalt" : {
                "type" : "number",
                "description" : "Sensor altitude during collection in kilometers.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "senvelx" : {
                "type" : "number",
                "description" : "Sensor platform X-velocity during collection in kilometers/second.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "senvely" : {
                "type" : "number",
                "description" : "Sensor platform Y-velocity during collection in kilometers/second.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "senvelz" : {
                "type" : "number",
                "description" : "Sensor platform Z-velocity during collection in kilometers/second.\nExample: /// Example: 1.1\nConstraints: No constraints specified."
              },
        "senlatStart" : {
                "type" : "number",
                "description" : "WGS-84 sensor latitude sub-point at collect start time (collectionStart), represented as -90 to 90 degrees (negative values south of equator).\nExample: /// Example: 45.1\nConstraints: No constraints specified."
              },
        "senlonStart" : {
                "type" : "number",
                "description" : "WGS-84 sensor longitude sub-point at collect start time (collectionStart), represented as -180 to 180 degrees (negative values west of Prime Meridian).\nExample: /// Example: 179.1\nConstraints: No constraints specified."
              },
        "senlatEnd" : {
                "type" : "number",
                "description" : "WGS-84 sensor latitude sub-point at collect end time (collectionEnd), represented as -90 to 90 degrees (negative values south of equator).\nExample: /// Example: 45.1\nConstraints: No constraints specified."
              },
        "senlonEnd" : {
                "type" : "number",
                "description" : "WGS-84 sensor longitude sub-point at collect end time (collectionEnd), represented as -180 to 180 degrees (negative values west of Prime Meridian).\nExample: /// Example: 179.1\nConstraints: No constraints specified."
              },
        "transactionId" : {
                "type" : "string",
                "description" : "Optional identifier to track a commercial or marketplace transaction executed to produce this data.\nExample: /// Example: TRANSACTION-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "tags" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.\nExample: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']\nConstraints: No constraints specified."
              },
        "srcTyps" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UDL record types (e.g. ANALYTICMAGERY, ESID, GROUNDIMAGE, NOTIFICATION, POI, SV, TRACK) that are related to the SAR Observation. See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array. The 'srcTyps' and 'srcIds' arrays must match in size.\nExample: /// Example: ['ESID', 'GROUNDIMAGE']\nConstraints: No constraints specified."
              },
        "srcIds" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array of UUIDs of the UDL data records that are related to the SAR Observation. See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array. The 'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps array element for the data type of the UUID and use the appropriate API operation to retrieve that object (e.g. /udl/sarobservation/{uuid}).\nExample: /// Example: ['f7e01cd4-626b-441f-a423-17b160eb78ba', '223833c4-be0d-4fdb-a2e4-325a48eccced']\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2023-04-22T17:51:40.854Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: OPS1\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "sourceDL" : {
                "type" : "string",
                "description" : "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.\nExample: /// Example: AXE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "dataMode" : {
                "$ref" : "#/definitions/SARObservation_Ingest_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/SARObservation_Ingest"
}
