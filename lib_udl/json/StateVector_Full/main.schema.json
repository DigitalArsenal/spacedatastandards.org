{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "StateVector_Full_referenceFrame_Enum" : {
      "type" : "string",
      "enum": ["J2000", "EFG_TDR", "ECR_ECEF", "TEME", "ITRF", "GCRF"]
    },
    "StateVector_Full_covReferenceFrame_Enum" : {
      "type" : "string",
      "enum": ["J2000", "UVW"]
    },
    "StateVector_Full_dataMode_Enum" : {
      "type" : "string",
      "enum": ["REAL", "TEST", "SIMULATED", "EXERCISE"]
    },
    "StateVector_Full_sourcedDataTypes_Enum" : {
      "type" : "string",
      "enum": ["EO", "RADAR", "RF", "DOA", "ELSET", "SV"]
    },
    "StateVector_Full" : {
      "type" : "object",
      "description" : "/// This service provides operations for querying and manipulation of state vectors for OnOrbit objects. State vectors are cartesian vectors of position (r) and velocity (v) that, together with their time (epoch) (t), uniquely determine the trajectory of the orbiting body in space. J2000 is the preferred coordinate frame for all state vector positions/velocities in UDL, but in some cases data may be in another frame depending on the provider and/or datatype. Please see the 'Discover' tab in the storefront to confirm coordinate frames by data provider.",
      "properties" : {
        "idStateVector" : {
                "type" : "string",
                "description" : "Unique identifier of the record, auto-generated by the system.\nExample: /// Example: STATEVECTOR-ID\nConstraints: Minimum length = 1, Maximum length = 36"
              },
        "classificationMarking" : {
                "type" : "string",
                "description" : "Classification marking of the data in IC/CAPCO Portion-marked format.\nExample: /// Example: U\nConstraints: Minimum length = 1, Maximum length = 128"
              },
        "epoch" : {
                "type" : "string",
                "description" : "Time of validity for state vector in ISO 8601 UTC datetime format, with microsecond precision.\nExample: /// Example: 2018-01-01T16:00:00.123456Z\nConstraints: No constraints specified."
              },
        "pedigree" : {
                "type" : "string",
                "description" : "The pedigree of state vector, or methods used for its generation to include state update/orbit determination, propagation from another state, or a state from a calibration satellite (e.g. ORBIT_UPDATE, PROPAGATION, CALIBRATION, CONJUNCTION, FLIGHT_PLAN).\nExample: /// Example: CONJUNCTION\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "idOnOrbit" : {
                "type" : "string",
                "description" : "Unique identifier of the satellite on-orbit object, if correlated. For the public catalog, the idOnOrbit is typically the satellite number as a string, but may be a UUID for analyst or other unknown or untracked satellites.\nExample: /// Example: ONORBIT-ID\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "satNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Satellite/Catalog number of the target OnOrbit object.\nExample: /// Example: 12\nConstraints: No constraints specified."
              },
        "origObjectId" : {
                "type" : "string",
                "description" : "Optional identifier provided by state vector source to indicate the target onorbit object of this state vector. This may be an internal identifier and not necessarily map to a valid satellite number.\nExample: /// Example: ORIGOBJECT-ID\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "idOrbitDetermination" : {
                "type" : "string",
                "description" : "Unique identifier of the OD solution record that produced this state vector. This ID can be used to obtain additional information on an OrbitDetermination object using the 'get by ID' operation (e.g. /udl/orbitdetermination/{id}). For example, the OrbitDetermination with idOrbitDetermination = abc would be queries as /udl/orbitdetermination/abc.\nExample: /// Example: 026dd511-8ba5-47d3-9909-836149f87686\nConstraints: Minimum length = 0, Maximum length = 36"
              },
        "uct" : {
                "type" : "boolean",
                "description" : "Boolean indicating this state vector was unable to be correlated to a known object. This flag should only be set to true by data providers after an attempt to correlate to an OnOrbit object was made and failed. If unable to correlate, the 'origObjectId' field may be populated with an internal data provider specific identifier.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "xpos" : {
                "type" : "number",
                "description" : "Cartesian X position of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed.\nExample: /// Example: -1118.577381\nConstraints: No constraints specified."
              },
        "ypos" : {
                "type" : "number",
                "description" : "Cartesian Y position of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed.\nExample: /// Example: 3026.231084\nConstraints: No constraints specified."
              },
        "zpos" : {
                "type" : "number",
                "description" : "Cartesian Z position of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed.\nExample: /// Example: 6167.831808\nConstraints: No constraints specified."
              },
        "xvel" : {
                "type" : "number",
                "description" : "Cartesian X velocity of target, in kilometers/second, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed.\nExample: /// Example: -4.25242784\nConstraints: No constraints specified."
              },
        "yvel" : {
                "type" : "number",
                "description" : "Cartesian Y velocity of target, in kilometers/second, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.\nExample: /// Example: 5.291107434\nConstraints: No constraints specified."
              },
        "zvel" : {
                "type" : "number",
                "description" : "Cartesian Z velocity of target, in kilometers/second, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed.\nExample: /// Example: -3.356493869\nConstraints: No constraints specified."
              },
        "referenceFrame" : {
                "$ref" : "#/definitions/StateVector_Full_referenceFrame_Enum",
                "description" : "The reference frame of the cartesian orbital states. If the referenceFrame is null it is assumed to be J2000.\nExample: /// Example: J2000\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "cov" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Covariance matrix, in kilometer and second based units, in the specified covReferenceFrame.  If the covReferenceFrame is null it is assumed to be J2000.\nThe array values (1-21) represent the lower triangular half of the position-velocity covariance matrix. The size of the covariance matrix is dynamic, depending on whether the covariance for position only or position & velocity. The covariance elements are position dependent within the array with values ordered as follows:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR&nbsp;&nbsp;\nx&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1\ny&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;3\nz&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;6\nx'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;9&nbsp;&nbsp;&nbsp;10\ny'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;11&nbsp;&nbsp;12&nbsp;&nbsp;13&nbsp;&nbsp;14&nbsp;&nbsp;15\nz'&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;16&nbsp;&nbsp;17&nbsp;&nbsp;18&nbsp;&nbsp;19&nbsp;&nbsp;20&nbsp;&nbsp;&nbsp;21&nbsp;\nThe cov array should contain only the lower left triangle values from top left down to bottom right, in order.\nIf additional covariance terms are included for DRAG, SRP, and/or THRUST, the matrix can be extended with the following order of elements:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;&nbsp;&nbsp;&nbsp;z&nbsp;&nbsp;&nbsp;&nbsp;x'&nbsp;&nbsp;&nbsp;&nbsp;y'&nbsp;&nbsp;&nbsp;&nbsp;z'&nbsp;&nbsp;&nbsp;&nbsp;DRG&nbsp;&nbsp;&nbsp;&nbsp;SRP&nbsp;&nbsp;&nbsp;&nbsp;THR\nDRG&nbsp;&nbsp;&nbsp;22&nbsp;&nbsp;23&nbsp;&nbsp;24&nbsp;&nbsp;25&nbsp;&nbsp;26&nbsp;&nbsp;&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;28&nbsp;&nbsp;\nSRP&nbsp;&nbsp;&nbsp;29&nbsp;&nbsp;30&nbsp;&nbsp;31&nbsp;&nbsp;32&nbsp;&nbsp;33&nbsp;&nbsp;&nbsp;34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;36&nbsp;&nbsp;\nTHR&nbsp;&nbsp;&nbsp;37&nbsp;&nbsp;38&nbsp;&nbsp;39&nbsp;&nbsp;40&nbsp;&nbsp;41&nbsp;&nbsp;&nbsp;42&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;43&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;44&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;45&nbsp;\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "covReferenceFrame" : {
                "$ref" : "#/definitions/StateVector_Full_covReferenceFrame_Enum",
                "description" : "The reference frame of the covariance matrix elements. If the covReferenceFrame is null it is assumed to be J2000.\nExample: /// Example: J2000\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "covMethod" : {
                "type" : "string",
                "description" : "The method used to generate the covariance during the orbit determination (OD) that produced the state vector, or whether an arbitrary, non-calculated default value was used (CALCULATED, DEFAULT).\nExample: /// Example: CALCULATED\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "eqCov" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "The covariance matrix values represent the lower triangular half of the covariance matrix in terms of equinoctial elements.&nbsp; The size of the covariance matrix is dynamic.&nbsp; The values are outputted in order across each row, i.e.:\n1&nbsp;&nbsp; 2&nbsp;&nbsp; 3&nbsp;&nbsp; 4&nbsp;&nbsp; 5\n6&nbsp;&nbsp; 7&nbsp;&nbsp; 8&nbsp;&nbsp; 9&nbsp; 10\n:&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :\n:&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :\n51&nbsp; 52&nbsp; 53&nbsp; 54&nbsp; 55\n:&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :\n:&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :&nbsp;&nbsp; :\nThe ordering of values is as follows:\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Af&nbsp;&nbsp; Ag&nbsp;&nbsp; L&nbsp;&nbsp;&nbsp; N&nbsp;&nbsp; Chi&nbsp; Psi&nbsp;&nbsp; B&nbsp;&nbsp; BDOT AGOM&nbsp; T&nbsp;&nbsp; C1&nbsp;&nbsp; C2&nbsp; ...\nAf&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1\nAg&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp; 3\nL&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4&nbsp;&nbsp;&nbsp; 5&nbsp;&nbsp;&nbsp; 6\nN&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 7&nbsp;&nbsp;&nbsp; 8&nbsp;&nbsp;&nbsp; 9&nbsp;&nbsp; 10\nChi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 11&nbsp;&nbsp; 12&nbsp;&nbsp; 13&nbsp;&nbsp; 14&nbsp;&nbsp; 15\nPsi&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 16&nbsp;&nbsp; 17&nbsp;&nbsp; 18&nbsp;&nbsp; 19&nbsp;&nbsp; 20&nbsp;&nbsp; 21\nB&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 22&nbsp;&nbsp; 23&nbsp;&nbsp; 24 &nbsp;&nbsp;25&nbsp;&nbsp; 26&nbsp;&nbsp; 27&nbsp;&nbsp; 28\nBDOT&nbsp;&nbsp; 29&nbsp;&nbsp; 30&nbsp;&nbsp; 31&nbsp;&nbsp; 32&nbsp;&nbsp; 33&nbsp;&nbsp; 34&nbsp;&nbsp; 35&nbsp;&nbsp; 36\nAGOM&nbsp; 37&nbsp;&nbsp; 38&nbsp;&nbsp; 39&nbsp;&nbsp; 40&nbsp;&nbsp; 41&nbsp;&nbsp; 42&nbsp;&nbsp; 43&nbsp;&nbsp; 44&nbsp;&nbsp; 45\nT&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 46&nbsp;&nbsp; 47&nbsp;&nbsp; 48&nbsp;&nbsp; 49&nbsp;&nbsp; 50&nbsp;&nbsp; 51&nbsp;&nbsp; 52&nbsp;&nbsp; 53&nbsp;&nbsp; 54&nbsp;&nbsp; 55\nC1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp; 57&nbsp;&nbsp; 58&nbsp;&nbsp; 59&nbsp;&nbsp; 60&nbsp;&nbsp; 61&nbsp;&nbsp; 62&nbsp;&nbsp; 63&nbsp;&nbsp; 64&nbsp;&nbsp; 65&nbsp;&nbsp; 66\nC2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 67&nbsp;&nbsp; 68&nbsp;&nbsp; 69&nbsp;&nbsp; 70&nbsp;&nbsp; 71&nbsp; &nbsp;72&nbsp;&nbsp; 73&nbsp;&nbsp; 74&nbsp;&nbsp; 75&nbsp;&nbsp; 76&nbsp;&nbsp; 77&nbsp;&nbsp; 78\n:\n:\nwhere C1, C2, etc, are the \"consider parameters\" that may be added to the covariance matrix.&nbsp; The covariance matrix will be as large as the last element/model parameter needed.&nbsp; In other words, if the DC solved for all 6 elements plus AGOM, the covariance matrix will be 9x9 (and the rows for B and BDOT will be all zeros).&nbsp; If the covariance matrix is unavailable, the size will be set to 0x0, and no data will follow.&nbsp; The cov field should contain only the lower left triangle values from top left down to bottom right, in order.\nExample: /// Example: [1.1, 2.2]\nConstraints: No constraints specified."
              },
        "xposAlt1" : {
                "type" : "number",
                "description" : "Cartesian X position of the target, in kilometers, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -1145.688502\nConstraints: No constraints specified."
              },
        "yposAlt1" : {
                "type" : "number",
                "description" : "Cartesian Y position of the target, in kilometers, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: 3020.729572\nConstraints: No constraints specified."
              },
        "zposAlt1" : {
                "type" : "number",
                "description" : "Cartesian Z position of the target, in kilometers, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: 6165.55187\nConstraints: No constraints specified."
              },
        "xvelAlt1" : {
                "type" : "number",
                "description" : "Cartesian X velocity of the target, in kilometers/second, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -4.270832252\nConstraints: No constraints specified."
              },
        "yvelAlt1" : {
                "type" : "number",
                "description" : "Cartesian Y velocity of the target, in kilometers/second, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: 5.27074276\nConstraints: No constraints specified."
              },
        "zvelAlt1" : {
                "type" : "number",
                "description" : "Cartesian Z velocity of the target, in kilometers/second, in the specified alt1ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -3.365155181\nConstraints: No constraints specified."
              },
        "alt1ReferenceFrame" : {
                "type" : "string",
                "description" : "The reference frame of the alternate1 (Alt1) cartesian orbital state.\nExample: /// Example: TEME\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "xposAlt2" : {
                "type" : "number",
                "description" : "Cartesian X position of the target, in kilometers, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -1456.915926\nConstraints: No constraints specified."
              },
        "yposAlt2" : {
                "type" : "number",
                "description" : "Cartesian Y position of the target, in kilometers, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -2883.540406\nConstraints: No constraints specified."
              },
        "zposAlt2" : {
                "type" : "number",
                "description" : "Cartesian Z position of the target, in kilometers, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: 6165.55187\nConstraints: No constraints specified."
              },
        "xvelAlt2" : {
                "type" : "number",
                "description" : "Cartesian X velocity of the target, in kilometers/second, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -1.219814294\nConstraints: No constraints specified."
              },
        "yvelAlt2" : {
                "type" : "number",
                "description" : "Cartesian Y velocity of the target, in kilometers/second, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -6.602080212\nConstraints: No constraints specified."
              },
        "zvelAlt2" : {
                "type" : "number",
                "description" : "Cartesian Z velocity of the target, in kilometers/second, in the specified alt2ReferenceFrame. Alternate reference frames are optional and are intended to allow a data source to provide an equivalent vector in a different cartesian frame than the primary vector.\nExample: /// Example: -3.365155181\nConstraints: No constraints specified."
              },
        "alt2ReferenceFrame" : {
                "type" : "string",
                "description" : "The reference frame of the alternate2 (Alt2) cartesian orbital state.\nExample: /// Example: EFG/TDR\nConstraints: Minimum length = 0, Maximum length = 24"
              },
        "posUnc" : {
                "type" : "number",
                "description" : "One sigma position uncertainty, in kilometers.\nExample: /// Example: 0.333399744452\nConstraints: No constraints specified."
              },
        "velUnc" : {
                "type" : "number",
                "description" : "One sigma velocity uncertainty, in kilometers/second.\nExample: /// Example: 4e-06\nConstraints: No constraints specified."
              },
        "mass" : {
                "type" : "number",
                "description" : "The mass of the object, in kilograms.\nExample: /// Example: 164.5\nConstraints: No constraints specified."
              },
        "area" : {
                "type" : "number",
                "description" : "The actual area of the object at it's largest cross-section, expressed in meters^2.\nExample: /// Example: 5.065\nConstraints: No constraints specified."
              },
        "solarRadPressCoeff" : {
                "type" : "number",
                "description" : "Area-to-mass ratio coefficient for solar radiation pressure.\nExample: /// Example: 0.0244394\nConstraints: No constraints specified."
              },
        "dragCoeff" : {
                "type" : "number",
                "description" : "Area-to-mass ratio coefficient for atmospheric ballistic drag (m2/kg).\nExample: /// Example: 0.0224391269775\nConstraints: No constraints specified."
              },
        "dragArea" : {
                "type" : "number",
                "description" : "The effective area of the object exposed to atmospheric drag, expressed in meters^2.\nExample: /// Example: 4.739\nConstraints: No constraints specified."
              },
        "revNo" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Epoch revolution number.\nExample: /// Example: 7205\nConstraints: No constraints specified."
              },
        "geopotentialModel" : {
                "type" : "string",
                "description" : "Geopotential model used for this vector (e.g. EGM-96, WGS-84, WGS-72, JGM-2, or GEM-T3), including mm degree zonals, nn degree/order tesserals. E.g. EGM-96 24Z,24T.\nExample: /// Example: EGM-96\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "dragModel" : {
                "type" : "string",
                "description" : "The Drag Model used for this vector (e.g. HARRIS-PRIESTER, JAC70, JBH09, MSIS90, NONE, etc.).\nExample: /// Example: JAC70\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "lunarSolar" : {
                "type" : "boolean",
                "description" : "Boolean indicating use of lunar/solar perturbations for this vector.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "solarRadPress" : {
                "type" : "boolean",
                "description" : "Boolean indicating use of solar radiation pressure perturbations for this vector.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "srpArea" : {
                "type" : "number",
                "description" : "The effective area of the object exposed to solar radiation pressure, expressed in meters^2.\nExample: /// Example: 4.311\nConstraints: No constraints specified."
              },
        "solidEarthTides" : {
                "type" : "boolean",
                "description" : "Boolean indicating use of solid earth tide perturbations for this vector.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "inTrackThrust" : {
                "type" : "boolean",
                "description" : "Boolean indicating use of in-track thrust perturbations for this vector.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "bDot" : {
                "type" : "number",
                "description" : "First derivative of drag/ballistic coefficient (m2/kg-s).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "edr" : {
                "type" : "number",
                "description" : "Model parameter value for energy dissipation rate (EDR) (w/kg).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "thrustAccel" : {
                "type" : "number",
                "description" : "Model parameter value for thrust acceleration (m/s2).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "cmOffset" : {
                "type" : "number",
                "description" : "Model parameter value for center of mass offset (m).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "lastObStart" : {
                "type" : "string",
                "description" : "The start of the time interval containing the time of the last accepted observation, in ISO 8601 UTC format with microsecond precision.  For an exact observation time, the firstObTime and lastObTime are the same.\nExample: /// Example: 2022-11-09T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "lastObEnd" : {
                "type" : "string",
                "description" : "The end of the time interval containing the time of the last accepted observation, in ISO 8601 UTC format with microsecond precision.  For an exact observation time, the firstObTime and lastObTime are the same.\nExample: /// Example: 2022-11-09T11:20:21.247192Z\nConstraints: No constraints specified."
              },
        "obsAvailable" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of observations available for the OD of the object.\nExample: /// Example: 376\nConstraints: No constraints specified."
              },
        "obsUsed" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of observations accepted for the OD of the object.\nExample: /// Example: 374\nConstraints: No constraints specified."
              },
        "tracksAvail" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of sensor tracks available for the OD of the object.\nExample: /// Example: 163\nConstraints: No constraints specified."
              },
        "tracksUsed" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "The number of sensor tracks accepted for the OD of the object.\nExample: /// Example: 163\nConstraints: No constraints specified."
              },
        "recODSpan" : {
                "type" : "number",
                "description" : "The recommended OD time span calculated for the object, expressed in days.\nExample: /// Example: 3.5\nConstraints: No constraints specified."
              },
        "actualODSpan" : {
                "type" : "number",
                "description" : "The actual time span used for the OD of the object, expressed in days.\nExample: /// Example: 3.5\nConstraints: No constraints specified."
              },
        "residualsAcc" : {
                "type" : "number",
                "description" : "The percentage of residuals accepted in the OD of the object.\nExample: /// Example: 99.5\nConstraints: No constraints specified."
              },
        "solarFluxF10" : {
                "type" : "number",
                "description" : "F10 (10.7 cm) solar flux value.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "solarFluxF10Avg" : {
                "type" : "number",
                "description" : "F10 (10.7 cm) solar flux 81-day average value.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "solarFluxAPAvg" : {
                "type" : "number",
                "description" : "Average solar flux geomagnetic index.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "taiUtc" : {
                "type" : "number",
                "description" : "TAI (Temps Atomique International) minus UTC (Universal Time Coordinates) offset in seconds.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "ut1Utc" : {
                "type" : "number",
                "description" : "Universal Time-1 (UT1) minus UTC offset, in seconds.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "ut1Rate" : {
                "type" : "number",
                "description" : "Rate of change of UT1 (milliseconds/day) - first derivative of ut1Utc.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "polarMotionX" : {
                "type" : "number",
                "description" : "Polar Wander Motion X (arc seconds).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "polarMotionY" : {
                "type" : "number",
                "description" : "Polar Wander Motion Y (arc seconds).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "iau1980Terms" : {
                "type" : "integer", "minimum" : -2147483648, "maximum" : 2147483647,
                "description" : "Number of terms used in the IAU 1980 nutation model (4, 50, or 106).\nExample: /// Example: 4\nConstraints: No constraints specified."
              },
        "leapSecondTime" : {
                "type" : "string",
                "description" : "Time of the next leap second after epoch in ISO 8601 UTC time. If the next leap second is not known, the time of the previous leap second is used.\nExample: /// Example: 2021-01-01T01:01:01.123Z\nConstraints: No constraints specified."
              },
        "integratorMode" : {
                "type" : "string",
                "description" : "Integrator Mode.\nExample: /// Example: integratorMode\nConstraints: Minimum length = 0, Maximum length = 32"
              },
        "partials" : {
                "type" : "string",
                "description" : "Type of partial derivatives used (ANALYTIC, FULL NUM, or FAST NUM).\nExample: /// Example: ANALYTIC\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "stepMode" : {
                "type" : "string",
                "description" : "Integrator step mode (AUTO, TIME, or S).\nExample: /// Example: AUTO\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "fixedStep" : {
                "type" : "boolean",
                "description" : "Boolean indicating use of fixed step size for this vector.\nExample: /// Example: True\nConstraints: No constraints specified."
              },
        "stepSizeSelection" : {
                "type" : "string",
                "description" : "Initial step size selection (AUTO or MANUAL).\nExample: /// Example: AUTO\nConstraints: Minimum length = 0, Maximum length = 16"
              },
        "stepSize" : {
                "type" : "number",
                "description" : "Initial integration step size (seconds).\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "errorControl" : {
                "type" : "number",
                "description" : "Integrator error control.\nExample: /// Example: 1.23\nConstraints: No constraints specified."
              },
        "sigmaPosUVW" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array containing the standard deviation of error in target object position, U, V and W direction respectively (km).\nExample: /// Example: [1.23, 4.56]\nConstraints: No constraints specified."
              },
        "sigmaVelUVW" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Array containing the standard deviation of error in target object velocity, U, V and W direction respectively (km/sec).\nExample: /// Example: [1.23, 4.56]\nConstraints: No constraints specified."
              },
        "rms" : {
                "type" : "number",
                "description" : "The Weighted Root Mean Squared (RMS) of the differential correction on the target object that produced this vector.  WRMS is a quality indicator of the state vector update, with a value of 1.00 being optimal.  WRMS applies to Batch Least Squares (BLS) processes.\nExample: /// Example: 0.991\nConstraints: No constraints specified."
              },
        "effectiveFrom" : {
                "type" : "string",
                "description" : "Start time at which this state vector was the 'current' state vector for its satellite.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "effectiveUntil" : {
                "type" : "string",
                "description" : "End time at which this state vector was no longer the 'current' state vector for its satellite.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "rawFileURI" : {
                "type" : "string",
                "description" : "Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.\nExample: /// Example: rawFileURI\nConstraints: Minimum length = 0, Maximum length = 256"
              },
        "source" : {
                "type" : "string",
                "description" : "Source of the data.\nExample: /// Example: Bluestaq\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "origin" : {
                "type" : "string",
                "description" : "Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.\nExample: /// Example: THIRD_PARTY_DATASOURCE\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "dataMode" : {
                "$ref" : "#/definitions/StateVector_Full_dataMode_Enum",
                "description" : "Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.\nExample: /// Example: TEST\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "tags" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.\nExample: /// Example: ['TAG1', 'TAG2']\nConstraints: No constraints specified."
              },
        "algorithm" : {
                "type" : "string",
                "description" : "Optional algorithm used to produce this record.\nExample: /// Example: SAMPLE_ALGORITHM\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "sourcedData" : {
                "type" : "array", "items" : {"type" : "string"},
                "description" : "Optional array of UDL data (observation) UUIDs used to build this state vector. See the associated sourcedDataTypes array for the specific types of observations for the positionally corresponding UUIDs in this array (the two arrays must match in size).\nExample: /// Example: ['DATA1', 'DATA2']\nConstraints: No constraints specified."
              },
        "sourcedDataTypes" : {
                "$ref" : "#/definitions/StateVector_Full_sourcedDataTypes_Enum",
                "description" : "Optional array of UDL observation data types used to build this state vector (e.g. EO, RADAR, RF, DOA). See the associated sourcedData array for the specific UUIDs of observations for the positionally corresponding data types in this array (the two arrays must match in size).\nExample: /// Example: ['RADAR']\nConstraints: No constraints specified."
              },
        "createdAt" : {
                "type" : "string",
                "description" : "Time the row was created in the database, auto-populated by the system.\nExample: /// Example: 2018-01-01T16:00:00.123Z\nConstraints: No constraints specified."
              },
        "createdBy" : {
                "type" : "string",
                "description" : "Application user who created the row in the database, auto-populated by the system.\nExample: /// Example: some.user\nConstraints: Minimum length = 1, Maximum length = 64"
              },
        "onOrbit" : {
                "type" : "string",
                "description" : "No description provided.\nExample: /// Example: No example provided.\nConstraints: No constraints specified."
              },
        "descriptor" : {
                "type" : "string",
                "description" : "Optional source-provided and searchable metadata or descriptor of the data.\nExample: /// Example: descriptor\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "transactionId" : {
                "type" : "string",
                "description" : "Optional identifier to track a commercial or marketplace transaction executed to produce this data.\nExample: /// Example: transactionId\nConstraints: Minimum length = 0, Maximum length = 64"
              },
        "origNetwork" : {
                "type" : "string",
                "description" : "The originating source network on which this record was created, auto-populated by the system.\nExample: /// Example: ORIG\nConstraints: Minimum length = 1, Maximum length = 32"
              },
        "sourceDL" : {
                "type" : "string",
                "description" : "The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.\nExample: /// Example: AXE\nConstraints: Minimum length = 0, Maximum length = 64"
              }
      },
      "additionalProperties" : false
    }
  },
  "$ref" : "#/definitions/StateVector_Full"
}
