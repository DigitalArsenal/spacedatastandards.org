// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_MAIN_H_
#define FLATBUFFERS_GENERATED_MAIN_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

struct IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged;
struct IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuilder;

/// /// Varying scale height Chapman topside layer.
struct IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged FLATBUFFERS_FINAL_CLASS : private ::flatbuffers::Table {
  typedef IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuilder Builder;
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_DESCRIPTION = 4,
    VT_NMF2 = 6,
    VT_HMF2 = 8,
    VT_SCALEF2 = 10,
    VT_ALPHA = 12,
    VT_BETA = 14,
    VT_HT = 16,
    VT_CHI = 18
  };
  /// Description of the Chapman computation technique.
  /// Example: /// Example: Constant scale height Chapman topside layer determined using bottomside peak density parameters and placed chi km above the ionosonde-determined peak height.
  /// Constraints: No constraints specified.
  const ::flatbuffers::String *description() const {
    return GetPointer<const ::flatbuffers::String *>(VT_DESCRIPTION);
  }
  /// Peak density of F2 layer, in grams per cubic centimeter.
  /// Example: /// Example: 313283.1
  /// Constraints: No constraints specified.
  double nmF2() const {
    return GetField<double>(VT_NMF2, 0.0);
  }
  /// Peak height of F2 layer, in kilometers.
  /// Example: /// Example: 265.42
  /// Constraints: No constraints specified.
  double hmF2() const {
    return GetField<double>(VT_HMF2, 0.0);
  }
  /// Scale height if F2 layer at the peak, in kilometers.
  /// Example: /// Example: 45.191
  /// Constraints: No constraints specified.
  double scaleF2() const {
    return GetField<double>(VT_SCALEF2, 0.0);
  }
  /// Alpha parameter of the profile shape.
  /// Example: /// Example: 30.1
  /// Constraints: No constraints specified.
  double alpha() const {
    return GetField<double>(VT_ALPHA, 0.0);
  }
  /// Beta parameter of the profile shape.
  /// Example: /// Example: 30.1
  /// Constraints: No constraints specified.
  double beta() const {
    return GetField<double>(VT_BETA, 0.0);
  }
  /// Transition height, in  kilometers.
  /// Example: /// Example: 30.1
  /// Constraints: No constraints specified.
  double ht() const {
    return GetField<double>(VT_HT, 0.0);
  }
  /// Peak Density Thickness (PDT) for description of the flat-nose shape, in kilometers.
  /// Example: /// Example: 30.1
  /// Constraints: No constraints specified.
  double chi() const {
    return GetField<double>(VT_CHI, 0.0);
  }
  bool Verify(::flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffset(verifier, VT_DESCRIPTION) &&
           verifier.VerifyString(description()) &&
           VerifyField<double>(verifier, VT_NMF2, 8) &&
           VerifyField<double>(verifier, VT_HMF2, 8) &&
           VerifyField<double>(verifier, VT_SCALEF2, 8) &&
           VerifyField<double>(verifier, VT_ALPHA, 8) &&
           VerifyField<double>(verifier, VT_BETA, 8) &&
           VerifyField<double>(verifier, VT_HT, 8) &&
           VerifyField<double>(verifier, VT_CHI, 8) &&
           verifier.EndTable();
  }
};

struct IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuilder {
  typedef IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged Table;
  ::flatbuffers::FlatBufferBuilder &fbb_;
  ::flatbuffers::uoffset_t start_;
  void add_description(::flatbuffers::Offset<::flatbuffers::String> description) {
    fbb_.AddOffset(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_DESCRIPTION, description);
  }
  void add_nmF2(double nmF2) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_NMF2, nmF2, 0.0);
  }
  void add_hmF2(double hmF2) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_HMF2, hmF2, 0.0);
  }
  void add_scaleF2(double scaleF2) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_SCALEF2, scaleF2, 0.0);
  }
  void add_alpha(double alpha) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_ALPHA, alpha, 0.0);
  }
  void add_beta(double beta) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_BETA, beta, 0.0);
  }
  void add_ht(double ht) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_HT, ht, 0.0);
  }
  void add_chi(double chi) {
    fbb_.AddElement<double>(IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged::VT_CHI, chi, 0.0);
  }
  explicit IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuilder(::flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged>(end);
    return o;
  }
};

inline ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged> CreateIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    ::flatbuffers::Offset<::flatbuffers::String> description = 0,
    double nmF2 = 0.0,
    double hmF2 = 0.0,
    double scaleF2 = 0.0,
    double alpha = 0.0,
    double beta = 0.0,
    double ht = 0.0,
    double chi = 0.0) {
  IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuilder builder_(_fbb);
  builder_.add_chi(chi);
  builder_.add_ht(ht);
  builder_.add_beta(beta);
  builder_.add_alpha(alpha);
  builder_.add_scaleF2(scaleF2);
  builder_.add_hmF2(hmF2);
  builder_.add_nmF2(nmF2);
  builder_.add_description(description);
  return builder_.Finish();
}

inline ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged> CreateIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedDirect(
    ::flatbuffers::FlatBufferBuilder &_fbb,
    const char *description = nullptr,
    double nmF2 = 0.0,
    double hmF2 = 0.0,
    double scaleF2 = 0.0,
    double alpha = 0.0,
    double beta = 0.0,
    double ht = 0.0,
    double chi = 0.0) {
  auto description__ = description ? _fbb.CreateString(description) : 0;
  return CreateIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(
      _fbb,
      description__,
      nmF2,
      hmF2,
      scaleF2,
      alpha,
      beta,
      ht,
      chi);
}

inline const IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged *GetIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(const void *buf) {
  return ::flatbuffers::GetRoot<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged>(buf);
}

inline const IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged *GetSizePrefixedIonoObservationDensityProfileTopsideExtensionVaryChap_Abridged(const void *buf) {
  return ::flatbuffers::GetSizePrefixedRoot<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged>(buf);
}

inline const char *IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier() {
  return "IONO";
}

inline bool IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBufferHasIdentifier(const void *buf) {
  return ::flatbuffers::BufferHasIdentifier(
      buf, IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier());
}

inline bool SizePrefixedIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBufferHasIdentifier(const void *buf) {
  return ::flatbuffers::BufferHasIdentifier(
      buf, IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier(), true);
}

inline bool VerifyIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuffer(
    ::flatbuffers::Verifier &verifier) {
  return verifier.VerifyBuffer<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged>(IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier());
}

inline bool VerifySizePrefixedIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuffer(
    ::flatbuffers::Verifier &verifier) {
  return verifier.VerifySizePrefixedBuffer<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged>(IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier());
}

inline void FinishIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuffer(
    ::flatbuffers::FlatBufferBuilder &fbb,
    ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged> root) {
  fbb.Finish(root, IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier());
}

inline void FinishSizePrefixedIonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedBuffer(
    ::flatbuffers::FlatBufferBuilder &fbb,
    ::flatbuffers::Offset<IonoObservationDensityProfileTopsideExtensionVaryChap_Abridged> root) {
  fbb.FinishSizePrefixed(root, IonoObservationDensityProfileTopsideExtensionVaryChap_AbridgedIdentifier());
}

#endif  // FLATBUFFERS_GENERATED_MAIN_H_
