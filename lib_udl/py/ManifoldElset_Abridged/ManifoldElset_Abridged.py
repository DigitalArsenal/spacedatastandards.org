# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Theoretical Keplarian orbital elements belonging to an object of interest's manifold describing a possible/theoretical orbit for an object of interest for tasking purposes.
class ManifoldElset_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ManifoldElset_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsManifoldElset_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def ManifoldElset_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x41\x4E\x49", size_prefixed=size_prefixed)

    # ManifoldElset_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: MANIFOLDELSET-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # ManifoldElset_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Identifier of the parent Manifold record.
    # Example: /// Example: REF-MANIFOLD-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # ManifoldElset_Abridged
    def IdManifold(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # ManifoldElset_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # A placeholder satellite number and not a true NORAD catalog number.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def TmpSatNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Elset epoch time in ISO 8601 UTC format, with microsecond precision.
    # Example: /// Example: 2021-01-01T01:01:01.123456Z
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Epoch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The constant angular speed required for the body to complete one circular orbit in the same amount of time as the actual elliptical orbit with variable speed. Measured in revolutions per day.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def MeanMotion(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The orbital eccentricity of an astronomical object is a parameter that determines the amount by which its orbit around another body deviates from a perfect circle. A value of 0 is a circular orbit, values between 0 and 1 form an elliptic orbit, 1 is a parabolic escape orbit, and greater than 1 is a hyperbolic escape orbit.
    # Example: /// Example: 0.5
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Eccentricity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The angle between the equator and the orbit when looking from the center of the Earth. If the orbit went exactly around the equator from left to right, then the inclination would be 0. The inclination ranges from 0 to 180 degrees.
    # Example: /// Example: 90.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Inclination(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Right ascension of the ascending node, or RAAN is the angle as measured in degrees eastwards (or, as seen from the north, counterclockwise) from the First Point of Aries to the ascending node, which is where the orbit crosses the equator when traveling north.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Raan(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The argument of perigee is the angle in degrees formed between the perigee and the ascending node. If the perigee would occur at the ascending node, the argument of perigee would be 0.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def ArgOfPerigee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Where the satellite is in its orbital path. The mean anomaly ranges from 0 to 360 degrees. The mean anomaly is referenced to the perigee. If the satellite were at the perigee, the mean anomaly would be 0.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def MeanAnomaly(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The current revolution number. The value is incremented when a satellite crosses the equator on an ascending pass.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def RevNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The drag term for SGP4 orbital model, used for calculating decay constants for altitude, eccentricity etc, measured in inverse earth radii.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def BStar(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # 1st derivative of the mean motion with respect to time. Units are revolutions per day squared.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def MeanMotionDot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # 2nd derivative of the mean motion with respect to time. Units are revolutions per day cubed.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def MeanMotionDdot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The sum of the periapsis and apoapsis distances divided by two. For circular orbits, the semimajor axis is the distance between the centers of the bodies, not the distance of the bodies from the center of mass.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def SemiMajorAxis(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Period of the orbit equal to inverse of mean motion.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Period(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The Orbit point furthest from the center of the earth in kilometers.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Apogee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The orbit point nearest to the center of the earth in kilometers.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def Perigee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Read only derived/generated line1 of a legacy TLE (two line element set) format, ignored on create/edit operations.
    # Example: /// Example: No example provided.
    # Constraints: Minimum length = 0, Maximum length = 69
    # ManifoldElset_Abridged
    def Line1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Read only derived/generated line2 of a legacy TLE (two line element set) format, ignored on create/edit operations.
    # Example: /// Example: No example provided.
    # Constraints: Minimum length = 0, Maximum length = 69
    # ManifoldElset_Abridged
    def Line2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # ManifoldElset_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # ManifoldElset_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # ManifoldElset_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # ManifoldElset_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # ManifoldElset_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 0, Maximum length = 32
    # ManifoldElset_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ManifoldElset_AbridgedStart(builder):
    builder.StartObject(27)

def Start(builder):
    ManifoldElset_AbridgedStart(builder)

def ManifoldElset_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    ManifoldElset_AbridgedAddId(builder, id)

def ManifoldElset_AbridgedAddIdManifold(builder, idManifold):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(idManifold), 0)

def AddIdManifold(builder, idManifold):
    ManifoldElset_AbridgedAddIdManifold(builder, idManifold)

def ManifoldElset_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    ManifoldElset_AbridgedAddClassificationMarking(builder, classificationMarking)

def ManifoldElset_AbridgedAddTmpSatNo(builder, tmpSatNo):
    builder.PrependInt32Slot(3, tmpSatNo, 0)

def AddTmpSatNo(builder, tmpSatNo):
    ManifoldElset_AbridgedAddTmpSatNo(builder, tmpSatNo)

def ManifoldElset_AbridgedAddEpoch(builder, epoch):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(epoch), 0)

def AddEpoch(builder, epoch):
    ManifoldElset_AbridgedAddEpoch(builder, epoch)

def ManifoldElset_AbridgedAddMeanMotion(builder, meanMotion):
    builder.PrependFloat64Slot(5, meanMotion, 0.0)

def AddMeanMotion(builder, meanMotion):
    ManifoldElset_AbridgedAddMeanMotion(builder, meanMotion)

def ManifoldElset_AbridgedAddEccentricity(builder, eccentricity):
    builder.PrependFloat64Slot(6, eccentricity, 0.0)

def AddEccentricity(builder, eccentricity):
    ManifoldElset_AbridgedAddEccentricity(builder, eccentricity)

def ManifoldElset_AbridgedAddInclination(builder, inclination):
    builder.PrependFloat64Slot(7, inclination, 0.0)

def AddInclination(builder, inclination):
    ManifoldElset_AbridgedAddInclination(builder, inclination)

def ManifoldElset_AbridgedAddRaan(builder, raan):
    builder.PrependFloat64Slot(8, raan, 0.0)

def AddRaan(builder, raan):
    ManifoldElset_AbridgedAddRaan(builder, raan)

def ManifoldElset_AbridgedAddArgOfPerigee(builder, argOfPerigee):
    builder.PrependFloat64Slot(9, argOfPerigee, 0.0)

def AddArgOfPerigee(builder, argOfPerigee):
    ManifoldElset_AbridgedAddArgOfPerigee(builder, argOfPerigee)

def ManifoldElset_AbridgedAddMeanAnomaly(builder, meanAnomaly):
    builder.PrependFloat64Slot(10, meanAnomaly, 0.0)

def AddMeanAnomaly(builder, meanAnomaly):
    ManifoldElset_AbridgedAddMeanAnomaly(builder, meanAnomaly)

def ManifoldElset_AbridgedAddRevNo(builder, revNo):
    builder.PrependInt32Slot(11, revNo, 0)

def AddRevNo(builder, revNo):
    ManifoldElset_AbridgedAddRevNo(builder, revNo)

def ManifoldElset_AbridgedAddBStar(builder, bStar):
    builder.PrependFloat64Slot(12, bStar, 0.0)

def AddBStar(builder, bStar):
    ManifoldElset_AbridgedAddBStar(builder, bStar)

def ManifoldElset_AbridgedAddMeanMotionDot(builder, meanMotionDot):
    builder.PrependFloat64Slot(13, meanMotionDot, 0.0)

def AddMeanMotionDot(builder, meanMotionDot):
    ManifoldElset_AbridgedAddMeanMotionDot(builder, meanMotionDot)

def ManifoldElset_AbridgedAddMeanMotionDdot(builder, meanMotionDdot):
    builder.PrependFloat64Slot(14, meanMotionDdot, 0.0)

def AddMeanMotionDdot(builder, meanMotionDdot):
    ManifoldElset_AbridgedAddMeanMotionDdot(builder, meanMotionDdot)

def ManifoldElset_AbridgedAddSemiMajorAxis(builder, semiMajorAxis):
    builder.PrependFloat64Slot(15, semiMajorAxis, 0.0)

def AddSemiMajorAxis(builder, semiMajorAxis):
    ManifoldElset_AbridgedAddSemiMajorAxis(builder, semiMajorAxis)

def ManifoldElset_AbridgedAddPeriod(builder, period):
    builder.PrependFloat64Slot(16, period, 0.0)

def AddPeriod(builder, period):
    ManifoldElset_AbridgedAddPeriod(builder, period)

def ManifoldElset_AbridgedAddApogee(builder, apogee):
    builder.PrependFloat64Slot(17, apogee, 0.0)

def AddApogee(builder, apogee):
    ManifoldElset_AbridgedAddApogee(builder, apogee)

def ManifoldElset_AbridgedAddPerigee(builder, perigee):
    builder.PrependFloat64Slot(18, perigee, 0.0)

def AddPerigee(builder, perigee):
    ManifoldElset_AbridgedAddPerigee(builder, perigee)

def ManifoldElset_AbridgedAddLine1(builder, line1):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(line1), 0)

def AddLine1(builder, line1):
    ManifoldElset_AbridgedAddLine1(builder, line1)

def ManifoldElset_AbridgedAddLine2(builder, line2):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(line2), 0)

def AddLine2(builder, line2):
    ManifoldElset_AbridgedAddLine2(builder, line2)

def ManifoldElset_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    ManifoldElset_AbridgedAddCreatedAt(builder, createdAt)

def ManifoldElset_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    ManifoldElset_AbridgedAddCreatedBy(builder, createdBy)

def ManifoldElset_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    ManifoldElset_AbridgedAddSource(builder, source)

def ManifoldElset_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    ManifoldElset_AbridgedAddOrigin(builder, origin)

def ManifoldElset_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(25, dataMode, 0)

def AddDataMode(builder, dataMode):
    ManifoldElset_AbridgedAddDataMode(builder, dataMode)

def ManifoldElset_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    ManifoldElset_AbridgedAddOrigNetwork(builder, origNetwork)

def ManifoldElset_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return ManifoldElset_AbridgedEnd(builder)


class ManifoldElset_AbridgedT(object):

    # ManifoldElset_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.idManifold = None  # type: str
        self.classificationMarking = None  # type: str
        self.tmpSatNo = 0  # type: int
        self.epoch = None  # type: str
        self.meanMotion = 0.0  # type: float
        self.eccentricity = 0.0  # type: float
        self.inclination = 0.0  # type: float
        self.raan = 0.0  # type: float
        self.argOfPerigee = 0.0  # type: float
        self.meanAnomaly = 0.0  # type: float
        self.revNo = 0  # type: int
        self.bStar = 0.0  # type: float
        self.meanMotionDot = 0.0  # type: float
        self.meanMotionDdot = 0.0  # type: float
        self.semiMajorAxis = 0.0  # type: float
        self.period = 0.0  # type: float
        self.apogee = 0.0  # type: float
        self.perigee = 0.0  # type: float
        self.line1 = None  # type: str
        self.line2 = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.dataMode = 0  # type: int
        self.origNetwork = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        manifoldElsetAbridged = ManifoldElset_Abridged()
        manifoldElsetAbridged.Init(buf, pos)
        return cls.InitFromObj(manifoldElsetAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, manifoldElsetAbridged):
        x = ManifoldElset_AbridgedT()
        x._UnPack(manifoldElsetAbridged)
        return x

    # ManifoldElset_AbridgedT
    def _UnPack(self, manifoldElsetAbridged):
        if manifoldElsetAbridged is None:
            return
        self.id = manifoldElsetAbridged.Id()
        self.idManifold = manifoldElsetAbridged.IdManifold()
        self.classificationMarking = manifoldElsetAbridged.ClassificationMarking()
        self.tmpSatNo = manifoldElsetAbridged.TmpSatNo()
        self.epoch = manifoldElsetAbridged.Epoch()
        self.meanMotion = manifoldElsetAbridged.MeanMotion()
        self.eccentricity = manifoldElsetAbridged.Eccentricity()
        self.inclination = manifoldElsetAbridged.Inclination()
        self.raan = manifoldElsetAbridged.Raan()
        self.argOfPerigee = manifoldElsetAbridged.ArgOfPerigee()
        self.meanAnomaly = manifoldElsetAbridged.MeanAnomaly()
        self.revNo = manifoldElsetAbridged.RevNo()
        self.bStar = manifoldElsetAbridged.BStar()
        self.meanMotionDot = manifoldElsetAbridged.MeanMotionDot()
        self.meanMotionDdot = manifoldElsetAbridged.MeanMotionDdot()
        self.semiMajorAxis = manifoldElsetAbridged.SemiMajorAxis()
        self.period = manifoldElsetAbridged.Period()
        self.apogee = manifoldElsetAbridged.Apogee()
        self.perigee = manifoldElsetAbridged.Perigee()
        self.line1 = manifoldElsetAbridged.Line1()
        self.line2 = manifoldElsetAbridged.Line2()
        self.createdAt = manifoldElsetAbridged.CreatedAt()
        self.createdBy = manifoldElsetAbridged.CreatedBy()
        self.source = manifoldElsetAbridged.Source()
        self.origin = manifoldElsetAbridged.Origin()
        self.dataMode = manifoldElsetAbridged.DataMode()
        self.origNetwork = manifoldElsetAbridged.OrigNetwork()

    # ManifoldElset_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.idManifold is not None:
            idManifold = builder.CreateString(self.idManifold)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.epoch is not None:
            epoch = builder.CreateString(self.epoch)
        if self.line1 is not None:
            line1 = builder.CreateString(self.line1)
        if self.line2 is not None:
            line2 = builder.CreateString(self.line2)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        ManifoldElset_AbridgedStart(builder)
        if self.id is not None:
            ManifoldElset_AbridgedAddId(builder, id)
        if self.idManifold is not None:
            ManifoldElset_AbridgedAddIdManifold(builder, idManifold)
        if self.classificationMarking is not None:
            ManifoldElset_AbridgedAddClassificationMarking(builder, classificationMarking)
        ManifoldElset_AbridgedAddTmpSatNo(builder, self.tmpSatNo)
        if self.epoch is not None:
            ManifoldElset_AbridgedAddEpoch(builder, epoch)
        ManifoldElset_AbridgedAddMeanMotion(builder, self.meanMotion)
        ManifoldElset_AbridgedAddEccentricity(builder, self.eccentricity)
        ManifoldElset_AbridgedAddInclination(builder, self.inclination)
        ManifoldElset_AbridgedAddRaan(builder, self.raan)
        ManifoldElset_AbridgedAddArgOfPerigee(builder, self.argOfPerigee)
        ManifoldElset_AbridgedAddMeanAnomaly(builder, self.meanAnomaly)
        ManifoldElset_AbridgedAddRevNo(builder, self.revNo)
        ManifoldElset_AbridgedAddBStar(builder, self.bStar)
        ManifoldElset_AbridgedAddMeanMotionDot(builder, self.meanMotionDot)
        ManifoldElset_AbridgedAddMeanMotionDdot(builder, self.meanMotionDdot)
        ManifoldElset_AbridgedAddSemiMajorAxis(builder, self.semiMajorAxis)
        ManifoldElset_AbridgedAddPeriod(builder, self.period)
        ManifoldElset_AbridgedAddApogee(builder, self.apogee)
        ManifoldElset_AbridgedAddPerigee(builder, self.perigee)
        if self.line1 is not None:
            ManifoldElset_AbridgedAddLine1(builder, line1)
        if self.line2 is not None:
            ManifoldElset_AbridgedAddLine2(builder, line2)
        if self.createdAt is not None:
            ManifoldElset_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            ManifoldElset_AbridgedAddCreatedBy(builder, createdBy)
        if self.source is not None:
            ManifoldElset_AbridgedAddSource(builder, source)
        if self.origin is not None:
            ManifoldElset_AbridgedAddOrigin(builder, origin)
        ManifoldElset_AbridgedAddDataMode(builder, self.dataMode)
        if self.origNetwork is not None:
            ManifoldElset_AbridgedAddOrigNetwork(builder, origNetwork)
        manifoldElsetAbridged = ManifoldElset_AbridgedEnd(builder)
        return manifoldElsetAbridged
