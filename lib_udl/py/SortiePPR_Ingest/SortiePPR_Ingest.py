# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// SortiePPR is a regulatory requirement where operators must obtain permissions to full operational access to a runway, taxiway, or airport service.
class SortiePPR_Ingest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SortiePPR_Ingest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSortiePPR_Ingest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def SortiePPR_IngestBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x4F\x52\x54", size_prefixed=size_prefixed)

    # SortiePPR_Ingest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: SORTIEPPR-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # SortiePPR_Ingest
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # SortiePPR_Ingest
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.
    # Example: /// Example: 4ef3d1e8-ab08-ab70-498f-edc479734e5c
    # Constraints: Minimum length = 1, Maximum length = 36
    # SortiePPR_Ingest
    def IdSortie(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
    # Example: /// Example: aa714f4d52a37ab1a00b21af9566e379
    # Constraints: Minimum length = 0, Maximum length = 36
    # SortiePPR_Ingest
    def ExternalId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The prior permission required (PPR) number issued by the airfield for a sortie.
    # Example: /// Example: 07-21-07W
    # Constraints: Minimum length = 0, Maximum length = 16
    # SortiePPR_Ingest
    def Number(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.
    # Example: /// Example: 2024-01-01T01:01:01.123Z
    # Constraints: No constraints specified.
    # SortiePPR_Ingest
    def StartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.
    # Example: /// Example: 2024-01-01T01:01:01.123Z
    # Constraints: No constraints specified.
    # SortiePPR_Ingest
    def EndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The username of the prior permission required (PPR) requestor.
    # Example: /// Example: jsmith1
    # Constraints: Minimum length = 0, Maximum length = 32
    # SortiePPR_Ingest
    def Requestor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Identifier of the prior permission required (PPR) grantor.
    # Example: /// Example: SMITH
    # Constraints: Minimum length = 0, Maximum length = 32
    # SortiePPR_Ingest
    def Grantor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].
    # Example: /// Example: M
    # Constraints: Minimum length = 0, Maximum length = 1
    # SortiePPR_Ingest
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Remarks concerning the prior permission required (PPR) for a sortie.
    # Example: /// Example: PPR remark
    # Constraints: Minimum length = 0, Maximum length = 512
    # SortiePPR_Ingest
    def Remarks(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2022-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # SortiePPR_Ingest
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # SortiePPR_Ingest
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    # Example: /// Example: AXE
    # Constraints: Minimum length = 0, Maximum length = 64
    # SortiePPR_Ingest
    def SourceDl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # SortiePPR_Ingest
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # SortiePPR_Ingest
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: OPS1
    # Constraints: Minimum length = 1, Maximum length = 32
    # SortiePPR_Ingest
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # SortiePPR_Ingest
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def SortiePPR_IngestStart(builder):
    builder.StartObject(18)

def Start(builder):
    SortiePPR_IngestStart(builder)

def SortiePPR_IngestAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    SortiePPR_IngestAddId(builder, id)

def SortiePPR_IngestAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    SortiePPR_IngestAddClassificationMarking(builder, classificationMarking)

def SortiePPR_IngestAddIdSortie(builder, idSortie):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(idSortie), 0)

def AddIdSortie(builder, idSortie):
    SortiePPR_IngestAddIdSortie(builder, idSortie)

def SortiePPR_IngestAddExternalId(builder, externalId):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(externalId), 0)

def AddExternalId(builder, externalId):
    SortiePPR_IngestAddExternalId(builder, externalId)

def SortiePPR_IngestAddNumber(builder, number):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(number), 0)

def AddNumber(builder, number):
    SortiePPR_IngestAddNumber(builder, number)

def SortiePPR_IngestAddStartTime(builder, startTime):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(startTime), 0)

def AddStartTime(builder, startTime):
    SortiePPR_IngestAddStartTime(builder, startTime)

def SortiePPR_IngestAddEndTime(builder, endTime):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(endTime), 0)

def AddEndTime(builder, endTime):
    SortiePPR_IngestAddEndTime(builder, endTime)

def SortiePPR_IngestAddRequestor(builder, requestor):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(requestor), 0)

def AddRequestor(builder, requestor):
    SortiePPR_IngestAddRequestor(builder, requestor)

def SortiePPR_IngestAddGrantor(builder, grantor):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(grantor), 0)

def AddGrantor(builder, grantor):
    SortiePPR_IngestAddGrantor(builder, grantor)

def SortiePPR_IngestAddType(builder, type):
    builder.PrependInt8Slot(9, type, 0)

def AddType(builder, type):
    SortiePPR_IngestAddType(builder, type)

def SortiePPR_IngestAddRemarks(builder, remarks):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(remarks), 0)

def AddRemarks(builder, remarks):
    SortiePPR_IngestAddRemarks(builder, remarks)

def SortiePPR_IngestAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    SortiePPR_IngestAddCreatedAt(builder, createdAt)

def SortiePPR_IngestAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    SortiePPR_IngestAddCreatedBy(builder, createdBy)

def SortiePPR_IngestAddSourceDl(builder, sourceDl):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(sourceDl), 0)

def AddSourceDl(builder, sourceDl):
    SortiePPR_IngestAddSourceDl(builder, sourceDl)

def SortiePPR_IngestAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    SortiePPR_IngestAddSource(builder, source)

def SortiePPR_IngestAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    SortiePPR_IngestAddOrigin(builder, origin)

def SortiePPR_IngestAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    SortiePPR_IngestAddOrigNetwork(builder, origNetwork)

def SortiePPR_IngestAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(17, dataMode, 0)

def AddDataMode(builder, dataMode):
    SortiePPR_IngestAddDataMode(builder, dataMode)

def SortiePPR_IngestEnd(builder):
    return builder.EndObject()

def End(builder):
    return SortiePPR_IngestEnd(builder)


class SortiePPR_IngestT(object):

    # SortiePPR_IngestT
    def __init__(self):
        self.id = None  # type: str
        self.classificationMarking = None  # type: str
        self.idSortie = None  # type: str
        self.externalId = None  # type: str
        self.number = None  # type: str
        self.startTime = None  # type: str
        self.endTime = None  # type: str
        self.requestor = None  # type: str
        self.grantor = None  # type: str
        self.type = 0  # type: int
        self.remarks = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.sourceDl = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.origNetwork = None  # type: str
        self.dataMode = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        sortiePprIngest = SortiePPR_Ingest()
        sortiePprIngest.Init(buf, pos)
        return cls.InitFromObj(sortiePprIngest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, sortiePprIngest):
        x = SortiePPR_IngestT()
        x._UnPack(sortiePprIngest)
        return x

    # SortiePPR_IngestT
    def _UnPack(self, sortiePprIngest):
        if sortiePprIngest is None:
            return
        self.id = sortiePprIngest.Id()
        self.classificationMarking = sortiePprIngest.ClassificationMarking()
        self.idSortie = sortiePprIngest.IdSortie()
        self.externalId = sortiePprIngest.ExternalId()
        self.number = sortiePprIngest.Number()
        self.startTime = sortiePprIngest.StartTime()
        self.endTime = sortiePprIngest.EndTime()
        self.requestor = sortiePprIngest.Requestor()
        self.grantor = sortiePprIngest.Grantor()
        self.type = sortiePprIngest.Type()
        self.remarks = sortiePprIngest.Remarks()
        self.createdAt = sortiePprIngest.CreatedAt()
        self.createdBy = sortiePprIngest.CreatedBy()
        self.sourceDl = sortiePprIngest.SourceDl()
        self.source = sortiePprIngest.Source()
        self.origin = sortiePprIngest.Origin()
        self.origNetwork = sortiePprIngest.OrigNetwork()
        self.dataMode = sortiePprIngest.DataMode()

    # SortiePPR_IngestT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.idSortie is not None:
            idSortie = builder.CreateString(self.idSortie)
        if self.externalId is not None:
            externalId = builder.CreateString(self.externalId)
        if self.number is not None:
            number = builder.CreateString(self.number)
        if self.startTime is not None:
            startTime = builder.CreateString(self.startTime)
        if self.endTime is not None:
            endTime = builder.CreateString(self.endTime)
        if self.requestor is not None:
            requestor = builder.CreateString(self.requestor)
        if self.grantor is not None:
            grantor = builder.CreateString(self.grantor)
        if self.remarks is not None:
            remarks = builder.CreateString(self.remarks)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.sourceDl is not None:
            sourceDl = builder.CreateString(self.sourceDl)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        SortiePPR_IngestStart(builder)
        if self.id is not None:
            SortiePPR_IngestAddId(builder, id)
        if self.classificationMarking is not None:
            SortiePPR_IngestAddClassificationMarking(builder, classificationMarking)
        if self.idSortie is not None:
            SortiePPR_IngestAddIdSortie(builder, idSortie)
        if self.externalId is not None:
            SortiePPR_IngestAddExternalId(builder, externalId)
        if self.number is not None:
            SortiePPR_IngestAddNumber(builder, number)
        if self.startTime is not None:
            SortiePPR_IngestAddStartTime(builder, startTime)
        if self.endTime is not None:
            SortiePPR_IngestAddEndTime(builder, endTime)
        if self.requestor is not None:
            SortiePPR_IngestAddRequestor(builder, requestor)
        if self.grantor is not None:
            SortiePPR_IngestAddGrantor(builder, grantor)
        SortiePPR_IngestAddType(builder, self.type)
        if self.remarks is not None:
            SortiePPR_IngestAddRemarks(builder, remarks)
        if self.createdAt is not None:
            SortiePPR_IngestAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            SortiePPR_IngestAddCreatedBy(builder, createdBy)
        if self.sourceDl is not None:
            SortiePPR_IngestAddSourceDl(builder, sourceDl)
        if self.source is not None:
            SortiePPR_IngestAddSource(builder, source)
        if self.origin is not None:
            SortiePPR_IngestAddOrigin(builder, origin)
        if self.origNetwork is not None:
            SortiePPR_IngestAddOrigNetwork(builder, origNetwork)
        SortiePPR_IngestAddDataMode(builder, self.dataMode)
        sortiePprIngest = SortiePPR_IngestEnd(builder)
        return sortiePprIngest
