# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// No description available.
class Sensorobservationtype_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Sensorobservationtype_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSensorobservationtype_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def Sensorobservationtype_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x45\x4E\x53", size_prefixed=size_prefixed)

    # Sensorobservationtype_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: SENSOROBSERVATIONTYPE-ID
    # Constraints: Minimum length = 1, Maximum length = 2
    # Sensorobservationtype_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The observation measurement type produced by a sensor.
    # Example: /// Example: 5
    # Constraints: Minimum length = 0, Maximum length = 128
    # Sensorobservationtype_Abridged
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # Sensorobservationtype_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # Sensorobservationtype_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: OPS1
    # Constraints: Minimum length = 1, Maximum length = 32
    # Sensorobservationtype_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def Sensorobservationtype_AbridgedStart(builder):
    builder.StartObject(5)

def Start(builder):
    Sensorobservationtype_AbridgedStart(builder)

def Sensorobservationtype_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    Sensorobservationtype_AbridgedAddId(builder, id)

def Sensorobservationtype_AbridgedAddType(builder, type):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)

def AddType(builder, type):
    Sensorobservationtype_AbridgedAddType(builder, type)

def Sensorobservationtype_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    Sensorobservationtype_AbridgedAddCreatedAt(builder, createdAt)

def Sensorobservationtype_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    Sensorobservationtype_AbridgedAddCreatedBy(builder, createdBy)

def Sensorobservationtype_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    Sensorobservationtype_AbridgedAddOrigNetwork(builder, origNetwork)

def Sensorobservationtype_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return Sensorobservationtype_AbridgedEnd(builder)


class Sensorobservationtype_AbridgedT(object):

    # Sensorobservationtype_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.type = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.origNetwork = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        sensorobservationtypeAbridged = Sensorobservationtype_Abridged()
        sensorobservationtypeAbridged.Init(buf, pos)
        return cls.InitFromObj(sensorobservationtypeAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, sensorobservationtypeAbridged):
        x = Sensorobservationtype_AbridgedT()
        x._UnPack(sensorobservationtypeAbridged)
        return x

    # Sensorobservationtype_AbridgedT
    def _UnPack(self, sensorobservationtypeAbridged):
        if sensorobservationtypeAbridged is None:
            return
        self.id = sensorobservationtypeAbridged.Id()
        self.type = sensorobservationtypeAbridged.Type()
        self.createdAt = sensorobservationtypeAbridged.CreatedAt()
        self.createdBy = sensorobservationtypeAbridged.CreatedBy()
        self.origNetwork = sensorobservationtypeAbridged.OrigNetwork()

    # Sensorobservationtype_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.type is not None:
            type = builder.CreateString(self.type)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        Sensorobservationtype_AbridgedStart(builder)
        if self.id is not None:
            Sensorobservationtype_AbridgedAddId(builder, id)
        if self.type is not None:
            Sensorobservationtype_AbridgedAddType(builder, type)
        if self.createdAt is not None:
            Sensorobservationtype_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            Sensorobservationtype_AbridgedAddCreatedBy(builder, createdBy)
        if self.origNetwork is not None:
            Sensorobservationtype_AbridgedAddOrigNetwork(builder, origNetwork)
        sensorobservationtypeAbridged = Sensorobservationtype_AbridgedEnd(builder)
        return sensorobservationtypeAbridged
