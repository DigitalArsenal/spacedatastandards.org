# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Additional start and stop for the collection.
class ISRCollectionAdditional_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ISRCollectionAdditional_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsISRCollectionAdditional_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def ISRCollectionAdditional_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x53\x52\x43", size_prefixed=size_prefixed)

    # ISRCollectionAdditional_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique Identifier of additional collection period.
    # Example: /// Example: ISRCOLLECTIONADDITIONAL
    # Constraints: Minimum length = 0, Maximum length = 36
    # ISRCollectionAdditional_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Start time of collection, in ISO 8601 UTC format.
    # Example: /// Example: 2021-01-19T01:01:15.001Z
    # Constraints: No constraints specified.
    # ISRCollectionAdditional_Abridged
    def Start(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Stop time of collection, in ISO 8601 UTC format.
    # Example: /// Example: 2021-01-19T01:01:15.001Z
    # Constraints: No constraints specified.
    # ISRCollectionAdditional_Abridged
    def Stop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ISRCollectionAdditional_AbridgedStart(builder):
    builder.StartObject(3)

def Start(builder):
    ISRCollectionAdditional_AbridgedStart(builder)

def ISRCollectionAdditional_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    ISRCollectionAdditional_AbridgedAddId(builder, id)

def ISRCollectionAdditional_AbridgedAddStart(builder, start):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(start), 0)

def AddStart(builder, start):
    ISRCollectionAdditional_AbridgedAddStart(builder, start)

def ISRCollectionAdditional_AbridgedAddStop(builder, stop):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(stop), 0)

def AddStop(builder, stop):
    ISRCollectionAdditional_AbridgedAddStop(builder, stop)

def ISRCollectionAdditional_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return ISRCollectionAdditional_AbridgedEnd(builder)


class ISRCollectionAdditional_AbridgedT(object):

    # ISRCollectionAdditional_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.start = None  # type: str
        self.stop = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        isrcollectionAdditionalAbridged = ISRCollectionAdditional_Abridged()
        isrcollectionAdditionalAbridged.Init(buf, pos)
        return cls.InitFromObj(isrcollectionAdditionalAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, isrcollectionAdditionalAbridged):
        x = ISRCollectionAdditional_AbridgedT()
        x._UnPack(isrcollectionAdditionalAbridged)
        return x

    # ISRCollectionAdditional_AbridgedT
    def _UnPack(self, isrcollectionAdditionalAbridged):
        if isrcollectionAdditionalAbridged is None:
            return
        self.id = isrcollectionAdditionalAbridged.Id()
        self.start = isrcollectionAdditionalAbridged.Start()
        self.stop = isrcollectionAdditionalAbridged.Stop()

    # ISRCollectionAdditional_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.start is not None:
            start = builder.CreateString(self.start)
        if self.stop is not None:
            stop = builder.CreateString(self.stop)
        ISRCollectionAdditional_AbridgedStart(builder)
        if self.id is not None:
            ISRCollectionAdditional_AbridgedAddId(builder, id)
        if self.start is not None:
            ISRCollectionAdditional_AbridgedAddStart(builder, start)
        if self.stop is not None:
            ISRCollectionAdditional_AbridgedAddStop(builder, stop)
        isrcollectionAdditionalAbridged = ISRCollectionAdditional_AbridgedEnd(builder)
        return isrcollectionAdditionalAbridged
