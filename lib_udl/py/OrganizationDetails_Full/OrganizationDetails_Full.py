# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Model representation of additional detailed organization data as collected by a particular source.
class OrganizationDetails_Full(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OrganizationDetails_Full()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOrganizationDetails_Full(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def OrganizationDetails_FullBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4F\x52\x47\x41", size_prefixed=size_prefixed)

    # OrganizationDetails_Full
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: ORGANIZATIONDETAILS-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # OrganizationDetails_Full
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Unique identifier of the parent organization.
    # Example: /// Example: ORGANIZATION-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # OrganizationDetails_Full
    def IdOrganization(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # OrganizationDetails_Full
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Organization details name.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 128
    # OrganizationDetails_Full
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Listed contact email address for the organization.
    # Example: /// Example: some_organization@organization.com
    # Constraints: Minimum length = 0, Maximum length = 320
    # OrganizationDetails_Full
    def Email(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Street number of the organization.
    # Example: /// Example: 123 Main Street
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def Address1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Field for additional organization address information such as PO Box and unit number.
    # Example: /// Example: Apt 4B
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def Address2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Contains the third line of address information for an organization.
    # Example: /// Example: Colorado Springs CO, 80903
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def Address3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Administrative boundaries of the first sub-national level. Level 1 is simply the largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a state or province.
    # Example: /// Example: Colorado
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def GeoAdminLevel1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Administrative boundaries of the second sub-national level. Level 2 is simply the second largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a county or district.
    # Example: /// Example: El Paso County
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def GeoAdminLevel2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Administrative boundaries of the third sub-national level. Level 3 is simply the third largest demarcation under whatever demarcation criteria has been determined by the governing body. For example, this may be a city or township.
    # Example: /// Example: Colorado Springs
    # Constraints: Minimum length = 0, Maximum length = 120
    # OrganizationDetails_Full
    def GeoAdminLevel3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # A postal code, such as PIN or ZIP Code, is a series of letters or digits or both included in the postal address of the organization.
    # Example: /// Example: 80903
    # Constraints: Minimum length = 0, Maximum length = 32
    # OrganizationDetails_Full
    def PostalCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Organization description.
    # Example: /// Example: Example description
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # OrganizationDetails_Full
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Former organization ID (if this organization previously existed as another organization).
    # Example: /// Example: FORMERORG-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # OrganizationDetails_Full
    def FormerOrgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Parent organization ID of this organization if it is a child organization.
    # Example: /// Example: PARENTORG-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # OrganizationDetails_Full
    def ParentOrgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # For organizations of type CORPORATION, the effective financial year end date for revenue, EBITDA, and profit values.
    # Example: /// Example: 2021-01-01T01:01:01.123Z
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def FinancialYearEndDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # For organizations of type CORPORATION, total annual revenue as of financialYearEndDate in US Dollars.
    # Example: /// Example: 123.4
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def Revenue(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # For organizations of type CORPORATION, total annual profit as of financialYearEndDate in US Dollars.
    # Example: /// Example: 123.4
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def Profit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # For organizations of type CORPORATION, the company EBITDA value as of financialYearEndDate in US Dollars.
    # Example: /// Example: 123.4
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def Ebitda(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Total number of FTEs in this organization.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def Ftes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Designated broker for this organization.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 128
    # OrganizationDetails_Full
    def Broker(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # For organizations of type CORPORATION, the name of the Chief Executive Officer.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 128
    # OrganizationDetails_Full
    def Ceo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # For organizations of type CORPORATION, the name of the Chief Financial Officer.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 128
    # OrganizationDetails_Full
    def Cfo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # For organizations of type CORPORATION, the name of the Chief Technology Officer.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 128
    # OrganizationDetails_Full
    def Cto(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The name of the risk manager for the organization.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 128
    # OrganizationDetails_Full
    def RiskManager(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Mass ranking for this organization.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def MassRanking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Revenue ranking for this organization.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def RevenueRanking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # For organizations of type CORPORATION, notes on company financials.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # OrganizationDetails_Full
    def FinancialNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes on the services provided by the organization.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # OrganizationDetails_Full
    def ServicesNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Satellite fleet planning notes for this organization.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # OrganizationDetails_Full
    def FleetPlanNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # OrganizationDetails_Full
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 64
    # OrganizationDetails_Full
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # OrganizationDetails_Full
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
    # Example: /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def Tags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # OrganizationDetails_Full
    def TagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # OrganizationDetails_Full
    def TagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        return o == 0

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # OrganizationDetails_Full
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was last updated in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # OrganizationDetails_Full
    def UpdatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who updated the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 0, Maximum length = 64
    # OrganizationDetails_Full
    def UpdatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: OPS1
    # Constraints: Minimum length = 1, Maximum length = 32
    # OrganizationDetails_Full
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def OrganizationDetails_FullStart(builder):
    builder.StartObject(39)

def Start(builder):
    OrganizationDetails_FullStart(builder)

def OrganizationDetails_FullAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    OrganizationDetails_FullAddId(builder, id)

def OrganizationDetails_FullAddIdOrganization(builder, idOrganization):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(idOrganization), 0)

def AddIdOrganization(builder, idOrganization):
    OrganizationDetails_FullAddIdOrganization(builder, idOrganization)

def OrganizationDetails_FullAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    OrganizationDetails_FullAddClassificationMarking(builder, classificationMarking)

def OrganizationDetails_FullAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    OrganizationDetails_FullAddName(builder, name)

def OrganizationDetails_FullAddEmail(builder, email):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(email), 0)

def AddEmail(builder, email):
    OrganizationDetails_FullAddEmail(builder, email)

def OrganizationDetails_FullAddAddress1(builder, address1):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(address1), 0)

def AddAddress1(builder, address1):
    OrganizationDetails_FullAddAddress1(builder, address1)

def OrganizationDetails_FullAddAddress2(builder, address2):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(address2), 0)

def AddAddress2(builder, address2):
    OrganizationDetails_FullAddAddress2(builder, address2)

def OrganizationDetails_FullAddAddress3(builder, address3):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(address3), 0)

def AddAddress3(builder, address3):
    OrganizationDetails_FullAddAddress3(builder, address3)

def OrganizationDetails_FullAddGeoAdminLevel1(builder, geoAdminLevel1):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(geoAdminLevel1), 0)

def AddGeoAdminLevel1(builder, geoAdminLevel1):
    OrganizationDetails_FullAddGeoAdminLevel1(builder, geoAdminLevel1)

def OrganizationDetails_FullAddGeoAdminLevel2(builder, geoAdminLevel2):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(geoAdminLevel2), 0)

def AddGeoAdminLevel2(builder, geoAdminLevel2):
    OrganizationDetails_FullAddGeoAdminLevel2(builder, geoAdminLevel2)

def OrganizationDetails_FullAddGeoAdminLevel3(builder, geoAdminLevel3):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(geoAdminLevel3), 0)

def AddGeoAdminLevel3(builder, geoAdminLevel3):
    OrganizationDetails_FullAddGeoAdminLevel3(builder, geoAdminLevel3)

def OrganizationDetails_FullAddPostalCode(builder, postalCode):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(postalCode), 0)

def AddPostalCode(builder, postalCode):
    OrganizationDetails_FullAddPostalCode(builder, postalCode)

def OrganizationDetails_FullAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    OrganizationDetails_FullAddDescription(builder, description)

def OrganizationDetails_FullAddFormerOrgId(builder, formerOrgId):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(formerOrgId), 0)

def AddFormerOrgId(builder, formerOrgId):
    OrganizationDetails_FullAddFormerOrgId(builder, formerOrgId)

def OrganizationDetails_FullAddParentOrgId(builder, parentOrgId):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(parentOrgId), 0)

def AddParentOrgId(builder, parentOrgId):
    OrganizationDetails_FullAddParentOrgId(builder, parentOrgId)

def OrganizationDetails_FullAddFinancialYearEndDate(builder, financialYearEndDate):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(financialYearEndDate), 0)

def AddFinancialYearEndDate(builder, financialYearEndDate):
    OrganizationDetails_FullAddFinancialYearEndDate(builder, financialYearEndDate)

def OrganizationDetails_FullAddRevenue(builder, revenue):
    builder.PrependFloat64Slot(16, revenue, 0.0)

def AddRevenue(builder, revenue):
    OrganizationDetails_FullAddRevenue(builder, revenue)

def OrganizationDetails_FullAddProfit(builder, profit):
    builder.PrependFloat64Slot(17, profit, 0.0)

def AddProfit(builder, profit):
    OrganizationDetails_FullAddProfit(builder, profit)

def OrganizationDetails_FullAddEbitda(builder, ebitda):
    builder.PrependFloat64Slot(18, ebitda, 0.0)

def AddEbitda(builder, ebitda):
    OrganizationDetails_FullAddEbitda(builder, ebitda)

def OrganizationDetails_FullAddFtes(builder, ftes):
    builder.PrependInt32Slot(19, ftes, 0)

def AddFtes(builder, ftes):
    OrganizationDetails_FullAddFtes(builder, ftes)

def OrganizationDetails_FullAddBroker(builder, broker):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(broker), 0)

def AddBroker(builder, broker):
    OrganizationDetails_FullAddBroker(builder, broker)

def OrganizationDetails_FullAddCeo(builder, ceo):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(ceo), 0)

def AddCeo(builder, ceo):
    OrganizationDetails_FullAddCeo(builder, ceo)

def OrganizationDetails_FullAddCfo(builder, cfo):
    builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(cfo), 0)

def AddCfo(builder, cfo):
    OrganizationDetails_FullAddCfo(builder, cfo)

def OrganizationDetails_FullAddCto(builder, cto):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(cto), 0)

def AddCto(builder, cto):
    OrganizationDetails_FullAddCto(builder, cto)

def OrganizationDetails_FullAddRiskManager(builder, riskManager):
    builder.PrependUOffsetTRelativeSlot(24, flatbuffers.number_types.UOffsetTFlags.py_type(riskManager), 0)

def AddRiskManager(builder, riskManager):
    OrganizationDetails_FullAddRiskManager(builder, riskManager)

def OrganizationDetails_FullAddMassRanking(builder, massRanking):
    builder.PrependInt32Slot(25, massRanking, 0)

def AddMassRanking(builder, massRanking):
    OrganizationDetails_FullAddMassRanking(builder, massRanking)

def OrganizationDetails_FullAddRevenueRanking(builder, revenueRanking):
    builder.PrependInt32Slot(26, revenueRanking, 0)

def AddRevenueRanking(builder, revenueRanking):
    OrganizationDetails_FullAddRevenueRanking(builder, revenueRanking)

def OrganizationDetails_FullAddFinancialNotes(builder, financialNotes):
    builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(financialNotes), 0)

def AddFinancialNotes(builder, financialNotes):
    OrganizationDetails_FullAddFinancialNotes(builder, financialNotes)

def OrganizationDetails_FullAddServicesNotes(builder, servicesNotes):
    builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(servicesNotes), 0)

def AddServicesNotes(builder, servicesNotes):
    OrganizationDetails_FullAddServicesNotes(builder, servicesNotes)

def OrganizationDetails_FullAddFleetPlanNotes(builder, fleetPlanNotes):
    builder.PrependUOffsetTRelativeSlot(29, flatbuffers.number_types.UOffsetTFlags.py_type(fleetPlanNotes), 0)

def AddFleetPlanNotes(builder, fleetPlanNotes):
    OrganizationDetails_FullAddFleetPlanNotes(builder, fleetPlanNotes)

def OrganizationDetails_FullAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(30, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    OrganizationDetails_FullAddSource(builder, source)

def OrganizationDetails_FullAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    OrganizationDetails_FullAddOrigin(builder, origin)

def OrganizationDetails_FullAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(32, dataMode, 0)

def AddDataMode(builder, dataMode):
    OrganizationDetails_FullAddDataMode(builder, dataMode)

def OrganizationDetails_FullAddTags(builder, tags):
    builder.PrependUOffsetTRelativeSlot(33, flatbuffers.number_types.UOffsetTFlags.py_type(tags), 0)

def AddTags(builder, tags):
    OrganizationDetails_FullAddTags(builder, tags)

def OrganizationDetails_FullStartTagsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartTagsVector(builder, numElems):
    return OrganizationDetails_FullStartTagsVector(builder, numElems)

def OrganizationDetails_FullAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    OrganizationDetails_FullAddCreatedAt(builder, createdAt)

def OrganizationDetails_FullAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(35, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    OrganizationDetails_FullAddCreatedBy(builder, createdBy)

def OrganizationDetails_FullAddUpdatedAt(builder, updatedAt):
    builder.PrependUOffsetTRelativeSlot(36, flatbuffers.number_types.UOffsetTFlags.py_type(updatedAt), 0)

def AddUpdatedAt(builder, updatedAt):
    OrganizationDetails_FullAddUpdatedAt(builder, updatedAt)

def OrganizationDetails_FullAddUpdatedBy(builder, updatedBy):
    builder.PrependUOffsetTRelativeSlot(37, flatbuffers.number_types.UOffsetTFlags.py_type(updatedBy), 0)

def AddUpdatedBy(builder, updatedBy):
    OrganizationDetails_FullAddUpdatedBy(builder, updatedBy)

def OrganizationDetails_FullAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(38, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    OrganizationDetails_FullAddOrigNetwork(builder, origNetwork)

def OrganizationDetails_FullEnd(builder):
    return builder.EndObject()

def End(builder):
    return OrganizationDetails_FullEnd(builder)

try:
    from typing import List
except:
    pass

class OrganizationDetails_FullT(object):

    # OrganizationDetails_FullT
    def __init__(self):
        self.id = None  # type: str
        self.idOrganization = None  # type: str
        self.classificationMarking = None  # type: str
        self.name = None  # type: str
        self.email = None  # type: str
        self.address1 = None  # type: str
        self.address2 = None  # type: str
        self.address3 = None  # type: str
        self.geoAdminLevel1 = None  # type: str
        self.geoAdminLevel2 = None  # type: str
        self.geoAdminLevel3 = None  # type: str
        self.postalCode = None  # type: str
        self.description = None  # type: str
        self.formerOrgId = None  # type: str
        self.parentOrgId = None  # type: str
        self.financialYearEndDate = None  # type: str
        self.revenue = 0.0  # type: float
        self.profit = 0.0  # type: float
        self.ebitda = 0.0  # type: float
        self.ftes = 0  # type: int
        self.broker = None  # type: str
        self.ceo = None  # type: str
        self.cfo = None  # type: str
        self.cto = None  # type: str
        self.riskManager = None  # type: str
        self.massRanking = 0  # type: int
        self.revenueRanking = 0  # type: int
        self.financialNotes = None  # type: str
        self.servicesNotes = None  # type: str
        self.fleetPlanNotes = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.dataMode = 0  # type: int
        self.tags = None  # type: List[str]
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.updatedAt = None  # type: str
        self.updatedBy = None  # type: str
        self.origNetwork = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        organizationDetailsFull = OrganizationDetails_Full()
        organizationDetailsFull.Init(buf, pos)
        return cls.InitFromObj(organizationDetailsFull)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, organizationDetailsFull):
        x = OrganizationDetails_FullT()
        x._UnPack(organizationDetailsFull)
        return x

    # OrganizationDetails_FullT
    def _UnPack(self, organizationDetailsFull):
        if organizationDetailsFull is None:
            return
        self.id = organizationDetailsFull.Id()
        self.idOrganization = organizationDetailsFull.IdOrganization()
        self.classificationMarking = organizationDetailsFull.ClassificationMarking()
        self.name = organizationDetailsFull.Name()
        self.email = organizationDetailsFull.Email()
        self.address1 = organizationDetailsFull.Address1()
        self.address2 = organizationDetailsFull.Address2()
        self.address3 = organizationDetailsFull.Address3()
        self.geoAdminLevel1 = organizationDetailsFull.GeoAdminLevel1()
        self.geoAdminLevel2 = organizationDetailsFull.GeoAdminLevel2()
        self.geoAdminLevel3 = organizationDetailsFull.GeoAdminLevel3()
        self.postalCode = organizationDetailsFull.PostalCode()
        self.description = organizationDetailsFull.Description()
        self.formerOrgId = organizationDetailsFull.FormerOrgId()
        self.parentOrgId = organizationDetailsFull.ParentOrgId()
        self.financialYearEndDate = organizationDetailsFull.FinancialYearEndDate()
        self.revenue = organizationDetailsFull.Revenue()
        self.profit = organizationDetailsFull.Profit()
        self.ebitda = organizationDetailsFull.Ebitda()
        self.ftes = organizationDetailsFull.Ftes()
        self.broker = organizationDetailsFull.Broker()
        self.ceo = organizationDetailsFull.Ceo()
        self.cfo = organizationDetailsFull.Cfo()
        self.cto = organizationDetailsFull.Cto()
        self.riskManager = organizationDetailsFull.RiskManager()
        self.massRanking = organizationDetailsFull.MassRanking()
        self.revenueRanking = organizationDetailsFull.RevenueRanking()
        self.financialNotes = organizationDetailsFull.FinancialNotes()
        self.servicesNotes = organizationDetailsFull.ServicesNotes()
        self.fleetPlanNotes = organizationDetailsFull.FleetPlanNotes()
        self.source = organizationDetailsFull.Source()
        self.origin = organizationDetailsFull.Origin()
        self.dataMode = organizationDetailsFull.DataMode()
        if not organizationDetailsFull.TagsIsNone():
            self.tags = []
            for i in range(organizationDetailsFull.TagsLength()):
                self.tags.append(organizationDetailsFull.Tags(i))
        self.createdAt = organizationDetailsFull.CreatedAt()
        self.createdBy = organizationDetailsFull.CreatedBy()
        self.updatedAt = organizationDetailsFull.UpdatedAt()
        self.updatedBy = organizationDetailsFull.UpdatedBy()
        self.origNetwork = organizationDetailsFull.OrigNetwork()

    # OrganizationDetails_FullT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.idOrganization is not None:
            idOrganization = builder.CreateString(self.idOrganization)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.name is not None:
            name = builder.CreateString(self.name)
        if self.email is not None:
            email = builder.CreateString(self.email)
        if self.address1 is not None:
            address1 = builder.CreateString(self.address1)
        if self.address2 is not None:
            address2 = builder.CreateString(self.address2)
        if self.address3 is not None:
            address3 = builder.CreateString(self.address3)
        if self.geoAdminLevel1 is not None:
            geoAdminLevel1 = builder.CreateString(self.geoAdminLevel1)
        if self.geoAdminLevel2 is not None:
            geoAdminLevel2 = builder.CreateString(self.geoAdminLevel2)
        if self.geoAdminLevel3 is not None:
            geoAdminLevel3 = builder.CreateString(self.geoAdminLevel3)
        if self.postalCode is not None:
            postalCode = builder.CreateString(self.postalCode)
        if self.description is not None:
            description = builder.CreateString(self.description)
        if self.formerOrgId is not None:
            formerOrgId = builder.CreateString(self.formerOrgId)
        if self.parentOrgId is not None:
            parentOrgId = builder.CreateString(self.parentOrgId)
        if self.financialYearEndDate is not None:
            financialYearEndDate = builder.CreateString(self.financialYearEndDate)
        if self.broker is not None:
            broker = builder.CreateString(self.broker)
        if self.ceo is not None:
            ceo = builder.CreateString(self.ceo)
        if self.cfo is not None:
            cfo = builder.CreateString(self.cfo)
        if self.cto is not None:
            cto = builder.CreateString(self.cto)
        if self.riskManager is not None:
            riskManager = builder.CreateString(self.riskManager)
        if self.financialNotes is not None:
            financialNotes = builder.CreateString(self.financialNotes)
        if self.servicesNotes is not None:
            servicesNotes = builder.CreateString(self.servicesNotes)
        if self.fleetPlanNotes is not None:
            fleetPlanNotes = builder.CreateString(self.fleetPlanNotes)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.tags is not None:
            tagslist = []
            for i in range(len(self.tags)):
                tagslist.append(builder.CreateString(self.tags[i]))
            OrganizationDetails_FullStartTagsVector(builder, len(self.tags))
            for i in reversed(range(len(self.tags))):
                builder.PrependUOffsetTRelative(tagslist[i])
            tags = builder.EndVector()
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.updatedAt is not None:
            updatedAt = builder.CreateString(self.updatedAt)
        if self.updatedBy is not None:
            updatedBy = builder.CreateString(self.updatedBy)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        OrganizationDetails_FullStart(builder)
        if self.id is not None:
            OrganizationDetails_FullAddId(builder, id)
        if self.idOrganization is not None:
            OrganizationDetails_FullAddIdOrganization(builder, idOrganization)
        if self.classificationMarking is not None:
            OrganizationDetails_FullAddClassificationMarking(builder, classificationMarking)
        if self.name is not None:
            OrganizationDetails_FullAddName(builder, name)
        if self.email is not None:
            OrganizationDetails_FullAddEmail(builder, email)
        if self.address1 is not None:
            OrganizationDetails_FullAddAddress1(builder, address1)
        if self.address2 is not None:
            OrganizationDetails_FullAddAddress2(builder, address2)
        if self.address3 is not None:
            OrganizationDetails_FullAddAddress3(builder, address3)
        if self.geoAdminLevel1 is not None:
            OrganizationDetails_FullAddGeoAdminLevel1(builder, geoAdminLevel1)
        if self.geoAdminLevel2 is not None:
            OrganizationDetails_FullAddGeoAdminLevel2(builder, geoAdminLevel2)
        if self.geoAdminLevel3 is not None:
            OrganizationDetails_FullAddGeoAdminLevel3(builder, geoAdminLevel3)
        if self.postalCode is not None:
            OrganizationDetails_FullAddPostalCode(builder, postalCode)
        if self.description is not None:
            OrganizationDetails_FullAddDescription(builder, description)
        if self.formerOrgId is not None:
            OrganizationDetails_FullAddFormerOrgId(builder, formerOrgId)
        if self.parentOrgId is not None:
            OrganizationDetails_FullAddParentOrgId(builder, parentOrgId)
        if self.financialYearEndDate is not None:
            OrganizationDetails_FullAddFinancialYearEndDate(builder, financialYearEndDate)
        OrganizationDetails_FullAddRevenue(builder, self.revenue)
        OrganizationDetails_FullAddProfit(builder, self.profit)
        OrganizationDetails_FullAddEbitda(builder, self.ebitda)
        OrganizationDetails_FullAddFtes(builder, self.ftes)
        if self.broker is not None:
            OrganizationDetails_FullAddBroker(builder, broker)
        if self.ceo is not None:
            OrganizationDetails_FullAddCeo(builder, ceo)
        if self.cfo is not None:
            OrganizationDetails_FullAddCfo(builder, cfo)
        if self.cto is not None:
            OrganizationDetails_FullAddCto(builder, cto)
        if self.riskManager is not None:
            OrganizationDetails_FullAddRiskManager(builder, riskManager)
        OrganizationDetails_FullAddMassRanking(builder, self.massRanking)
        OrganizationDetails_FullAddRevenueRanking(builder, self.revenueRanking)
        if self.financialNotes is not None:
            OrganizationDetails_FullAddFinancialNotes(builder, financialNotes)
        if self.servicesNotes is not None:
            OrganizationDetails_FullAddServicesNotes(builder, servicesNotes)
        if self.fleetPlanNotes is not None:
            OrganizationDetails_FullAddFleetPlanNotes(builder, fleetPlanNotes)
        if self.source is not None:
            OrganizationDetails_FullAddSource(builder, source)
        if self.origin is not None:
            OrganizationDetails_FullAddOrigin(builder, origin)
        OrganizationDetails_FullAddDataMode(builder, self.dataMode)
        if self.tags is not None:
            OrganizationDetails_FullAddTags(builder, tags)
        if self.createdAt is not None:
            OrganizationDetails_FullAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            OrganizationDetails_FullAddCreatedBy(builder, createdBy)
        if self.updatedAt is not None:
            OrganizationDetails_FullAddUpdatedAt(builder, updatedAt)
        if self.updatedBy is not None:
            OrganizationDetails_FullAddUpdatedBy(builder, updatedBy)
        if self.origNetwork is not None:
            OrganizationDetails_FullAddOrigNetwork(builder, origNetwork)
        organizationDetailsFull = OrganizationDetails_FullEnd(builder)
        return organizationDetailsFull
