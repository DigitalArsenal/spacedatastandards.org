# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// The ScalerInfo record describes the person or system who interpreted the ionogram in IonoObservation.
class IonoObservationScalerInfo_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IonoObservationScalerInfo_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIonoObservationScalerInfo_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IonoObservationScalerInfo_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x4F\x4E\x4F", size_prefixed=size_prefixed)

    # IonoObservationScalerInfo_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Scaler type (MANUAL, AUTOMATIC or UNKNOWN).
    # Example: /// Example: MANUAL
    # Constraints: Minimum length = 0, Maximum length = 9
    # IonoObservationScalerInfo_Abridged
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Scaler name.
    # Example: /// Example: ARTIST-4
    # Constraints: Minimum length = 0, Maximum length = 20
    # IonoObservationScalerInfo_Abridged
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Scaler organization.
    # Example: /// Example: UML
    # Constraints: Minimum length = 0, Maximum length = 64
    # IonoObservationScalerInfo_Abridged
    def Organization(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Scaler version.
    # Example: /// Example: 500200.1
    # Constraints: No constraints specified.
    # IonoObservationScalerInfo_Abridged
    def Version(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Scaler confidence score.
    # Example: /// Example: 75
    # Constraints: No constraints specified.
    # IonoObservationScalerInfo_Abridged
    def ConfidenceScore(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Scaler confidence level.
    # Example: /// Example: 11
    # Constraints: No constraints specified.
    # IonoObservationScalerInfo_Abridged
    def ConfidenceLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def IonoObservationScalerInfo_AbridgedStart(builder):
    builder.StartObject(6)

def Start(builder):
    IonoObservationScalerInfo_AbridgedStart(builder)

def IonoObservationScalerInfo_AbridgedAddType(builder, type):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)

def AddType(builder, type):
    IonoObservationScalerInfo_AbridgedAddType(builder, type)

def IonoObservationScalerInfo_AbridgedAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    IonoObservationScalerInfo_AbridgedAddName(builder, name)

def IonoObservationScalerInfo_AbridgedAddOrganization(builder, organization):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(organization), 0)

def AddOrganization(builder, organization):
    IonoObservationScalerInfo_AbridgedAddOrganization(builder, organization)

def IonoObservationScalerInfo_AbridgedAddVersion(builder, version):
    builder.PrependFloat64Slot(3, version, 0.0)

def AddVersion(builder, version):
    IonoObservationScalerInfo_AbridgedAddVersion(builder, version)

def IonoObservationScalerInfo_AbridgedAddConfidenceScore(builder, confidenceScore):
    builder.PrependInt32Slot(4, confidenceScore, 0)

def AddConfidenceScore(builder, confidenceScore):
    IonoObservationScalerInfo_AbridgedAddConfidenceScore(builder, confidenceScore)

def IonoObservationScalerInfo_AbridgedAddConfidenceLevel(builder, confidenceLevel):
    builder.PrependInt32Slot(5, confidenceLevel, 0)

def AddConfidenceLevel(builder, confidenceLevel):
    IonoObservationScalerInfo_AbridgedAddConfidenceLevel(builder, confidenceLevel)

def IonoObservationScalerInfo_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return IonoObservationScalerInfo_AbridgedEnd(builder)


class IonoObservationScalerInfo_AbridgedT(object):

    # IonoObservationScalerInfo_AbridgedT
    def __init__(self):
        self.type = None  # type: str
        self.name = None  # type: str
        self.organization = None  # type: str
        self.version = 0.0  # type: float
        self.confidenceScore = 0  # type: int
        self.confidenceLevel = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        ionoObservationScalerInfoAbridged = IonoObservationScalerInfo_Abridged()
        ionoObservationScalerInfoAbridged.Init(buf, pos)
        return cls.InitFromObj(ionoObservationScalerInfoAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, ionoObservationScalerInfoAbridged):
        x = IonoObservationScalerInfo_AbridgedT()
        x._UnPack(ionoObservationScalerInfoAbridged)
        return x

    # IonoObservationScalerInfo_AbridgedT
    def _UnPack(self, ionoObservationScalerInfoAbridged):
        if ionoObservationScalerInfoAbridged is None:
            return
        self.type = ionoObservationScalerInfoAbridged.Type()
        self.name = ionoObservationScalerInfoAbridged.Name()
        self.organization = ionoObservationScalerInfoAbridged.Organization()
        self.version = ionoObservationScalerInfoAbridged.Version()
        self.confidenceScore = ionoObservationScalerInfoAbridged.ConfidenceScore()
        self.confidenceLevel = ionoObservationScalerInfoAbridged.ConfidenceLevel()

    # IonoObservationScalerInfo_AbridgedT
    def Pack(self, builder):
        if self.type is not None:
            type = builder.CreateString(self.type)
        if self.name is not None:
            name = builder.CreateString(self.name)
        if self.organization is not None:
            organization = builder.CreateString(self.organization)
        IonoObservationScalerInfo_AbridgedStart(builder)
        if self.type is not None:
            IonoObservationScalerInfo_AbridgedAddType(builder, type)
        if self.name is not None:
            IonoObservationScalerInfo_AbridgedAddName(builder, name)
        if self.organization is not None:
            IonoObservationScalerInfo_AbridgedAddOrganization(builder, organization)
        IonoObservationScalerInfo_AbridgedAddVersion(builder, self.version)
        IonoObservationScalerInfo_AbridgedAddConfidenceScore(builder, self.confidenceScore)
        IonoObservationScalerInfo_AbridgedAddConfidenceLevel(builder, self.confidenceLevel)
        ionoObservationScalerInfoAbridged = IonoObservationScalerInfo_AbridgedEnd(builder)
        return ionoObservationScalerInfoAbridged
