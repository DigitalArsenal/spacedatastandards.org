# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Coefficients to describe either the E, F1, and bottomside F2 profile shapes or the height uncertainty boundaries.
class IonoObservationDensityProfileShiftedChebyshev_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IonoObservationDensityProfileShiftedChebyshev_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIonoObservationDensityProfileShiftedChebyshev_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IonoObservationDensityProfileShiftedChebyshev_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x4F\x4E\x4F", size_prefixed=size_prefixed)

    # IonoObservationDensityProfileShiftedChebyshev_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Description of the computation technique.
    # Example: /// Example: Best-fit Huang-Reinisch formalism based on shifted Chebyshev expansion.
    # Constraints: No constraints specified.
    # IonoObservationDensityProfileShiftedChebyshev_Abridged
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Up to 3 groups of coefficients, using “shiftedChebyshev” sub-field, to describe E, F1, and bottomside F2 profile shapes, or up to 6 groups of coefficients to describe height uncertainty boundaries (upper and lower).
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # IonoObservationDensityProfileShiftedChebyshev_Abridged
    def ShiftedChebyshevs(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # IonoObservationDensityProfileShiftedChebyshev_Abridged
    def ShiftedChebyshevsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # IonoObservationDensityProfileShiftedChebyshev_Abridged
    def ShiftedChebyshevsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        return o == 0

def IonoObservationDensityProfileShiftedChebyshev_AbridgedStart(builder):
    builder.StartObject(2)

def Start(builder):
    IonoObservationDensityProfileShiftedChebyshev_AbridgedStart(builder)

def IonoObservationDensityProfileShiftedChebyshev_AbridgedAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    IonoObservationDensityProfileShiftedChebyshev_AbridgedAddDescription(builder, description)

def IonoObservationDensityProfileShiftedChebyshev_AbridgedAddShiftedChebyshevs(builder, shiftedChebyshevs):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(shiftedChebyshevs), 0)

def AddShiftedChebyshevs(builder, shiftedChebyshevs):
    IonoObservationDensityProfileShiftedChebyshev_AbridgedAddShiftedChebyshevs(builder, shiftedChebyshevs)

def IonoObservationDensityProfileShiftedChebyshev_AbridgedStartShiftedChebyshevsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartShiftedChebyshevsVector(builder, numElems):
    return IonoObservationDensityProfileShiftedChebyshev_AbridgedStartShiftedChebyshevsVector(builder, numElems)

def IonoObservationDensityProfileShiftedChebyshev_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return IonoObservationDensityProfileShiftedChebyshev_AbridgedEnd(builder)

try:
    from typing import List
except:
    pass

class IonoObservationDensityProfileShiftedChebyshev_AbridgedT(object):

    # IonoObservationDensityProfileShiftedChebyshev_AbridgedT
    def __init__(self):
        self.description = None  # type: str
        self.shiftedChebyshevs = None  # type: List[str]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        ionoObservationDensityProfileShiftedChebyshevAbridged = IonoObservationDensityProfileShiftedChebyshev_Abridged()
        ionoObservationDensityProfileShiftedChebyshevAbridged.Init(buf, pos)
        return cls.InitFromObj(ionoObservationDensityProfileShiftedChebyshevAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, ionoObservationDensityProfileShiftedChebyshevAbridged):
        x = IonoObservationDensityProfileShiftedChebyshev_AbridgedT()
        x._UnPack(ionoObservationDensityProfileShiftedChebyshevAbridged)
        return x

    # IonoObservationDensityProfileShiftedChebyshev_AbridgedT
    def _UnPack(self, ionoObservationDensityProfileShiftedChebyshevAbridged):
        if ionoObservationDensityProfileShiftedChebyshevAbridged is None:
            return
        self.description = ionoObservationDensityProfileShiftedChebyshevAbridged.Description()
        if not ionoObservationDensityProfileShiftedChebyshevAbridged.ShiftedChebyshevsIsNone():
            self.shiftedChebyshevs = []
            for i in range(ionoObservationDensityProfileShiftedChebyshevAbridged.ShiftedChebyshevsLength()):
                self.shiftedChebyshevs.append(ionoObservationDensityProfileShiftedChebyshevAbridged.ShiftedChebyshevs(i))

    # IonoObservationDensityProfileShiftedChebyshev_AbridgedT
    def Pack(self, builder):
        if self.description is not None:
            description = builder.CreateString(self.description)
        if self.shiftedChebyshevs is not None:
            shiftedChebyshevslist = []
            for i in range(len(self.shiftedChebyshevs)):
                shiftedChebyshevslist.append(builder.CreateString(self.shiftedChebyshevs[i]))
            IonoObservationDensityProfileShiftedChebyshev_AbridgedStartShiftedChebyshevsVector(builder, len(self.shiftedChebyshevs))
            for i in reversed(range(len(self.shiftedChebyshevs))):
                builder.PrependUOffsetTRelative(shiftedChebyshevslist[i])
            shiftedChebyshevs = builder.EndVector()
        IonoObservationDensityProfileShiftedChebyshev_AbridgedStart(builder)
        if self.description is not None:
            IonoObservationDensityProfileShiftedChebyshev_AbridgedAddDescription(builder, description)
        if self.shiftedChebyshevs is not None:
            IonoObservationDensityProfileShiftedChebyshev_AbridgedAddShiftedChebyshevs(builder, shiftedChebyshevs)
        ionoObservationDensityProfileShiftedChebyshevAbridged = IonoObservationDensityProfileShiftedChebyshev_AbridgedEnd(builder)
        return ionoObservationDensityProfileShiftedChebyshevAbridged
