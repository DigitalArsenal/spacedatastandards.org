# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// The means for the platform to pass information pertaining to the sensor job that will be performed and details of the location parameters (terrain elevation model and geoid model) used in the measurement.
class MtiJobDefinition_Ingest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MtiJobDefinition_Ingest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMtiJobDefinition_Ingest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def MtiJobDefinition_IngestBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x54\x49\x4A", size_prefixed=size_prefixed)

    # MtiJobDefinition_Ingest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # A platform assigned number identifying the specific request or task to which the specific dwell pertains.
    # Example: /// Example: 1234567890
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # The type of sensor or the platform.
    # Example: /// Example: TYPE
    # Constraints: Minimum length = 0, Maximum length = 32
    # MtiJobDefinition_Ingest
    def J2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Identifier of the particular variant of the sensor type.
    # Example: /// Example: J3-ID
    # Constraints: Minimum length = 0, Maximum length = 8
    # MtiJobDefinition_Ingest
    def J3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Flag field indicating whether filtering has been applied to the targets detected within the dwell area.
    # Example: /// Example: 3
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J4(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Priority of this tasking request relative to all other active tasking requests scheduled for execution on the specified platform.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J5(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # North-South position of the first corner (Point A) defining the area for sensor service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J6(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    #  East-West position of the first corner (Point A) defining the area for sensor service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J7(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    #  North-South position of the second corner (Point B) defining the area for sensor service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J8(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the second corner (Point B) defining the area for sensor service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J9(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # North-South position of the third corner (Point C) defining the area for sensor service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J10(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the third corner (Point C) defining the area for sensor service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J11(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # North-South position of the fourth corner (Point D) defining the area for sensor service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J12(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the fourth corner (Point D) defining the area for sensor service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J13(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Mode in which the radar will operate for the given job ID.
    # Example: /// Example: MODE
    # Constraints: Minimum length = 0, Maximum length = 32
    # MtiJobDefinition_Ingest
    def J14(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The nominal revisit interval for the job ID, expressed in deciseconds.  Value of zero, indicates that the sensor is not revisiting the previous area.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J15(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal estimate of the standard deviation in the estimated horizontal (along track) sensor location, expressed in decimeters.   measured along the sensor track direction defined in the Dwell segment.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J16(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal estimate of the standard deviation in the estimated horizontal sensor location, measured orthogonal to the track direction, expressed in decimeters.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J17(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal estimate of the standard deviation of the measured sensor altitude, expressed in decimeters.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J18(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Standard deviation of the estimate of sensor track heading, expressed in degrees.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J19(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal standard deviation of the estimate of sensor speed, expressed in millimeters per second.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J20(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal standard deviation of the slant range of the reported detection, expressed in centimeters.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J21(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal standard deviation of the measured cross angle to the reported detection, expressed in degrees.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J22(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Nominal standard deviation of the velocity line-of-sight component, expressed in centimeters per second.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J23(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal minimum velocity component along the line of sight, which can be detected by the sensor, expressed in decimeters per second.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J24(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Nominal probability that an unobscured ten square-meter target will be detected within the given area of surveillance.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J25(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The expected density of False Alarms (FA), expressed as the negative of the decibel value.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobDefinition_Ingest
    def J26(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The terrain elevation model used for developing the target reports.
    # Example: /// Example: MODEL
    # Constraints: Minimum length = 0, Maximum length = 64
    # MtiJobDefinition_Ingest
    def J27(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The geoid model used for developing the target reports.
    # Example: /// Example: MODEL
    # Constraints: Minimum length = 0, Maximum length = 64
    # MtiJobDefinition_Ingest
    def J28(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def MtiJobDefinition_IngestStart(builder):
    builder.StartObject(28)

def Start(builder):
    MtiJobDefinition_IngestStart(builder)

def MtiJobDefinition_IngestAddJ1(builder, j1):
    builder.PrependInt64Slot(0, j1, 0)

def AddJ1(builder, j1):
    MtiJobDefinition_IngestAddJ1(builder, j1)

def MtiJobDefinition_IngestAddJ2(builder, j2):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(j2), 0)

def AddJ2(builder, j2):
    MtiJobDefinition_IngestAddJ2(builder, j2)

def MtiJobDefinition_IngestAddJ3(builder, j3):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(j3), 0)

def AddJ3(builder, j3):
    MtiJobDefinition_IngestAddJ3(builder, j3)

def MtiJobDefinition_IngestAddJ4(builder, j4):
    builder.PrependInt32Slot(3, j4, 0)

def AddJ4(builder, j4):
    MtiJobDefinition_IngestAddJ4(builder, j4)

def MtiJobDefinition_IngestAddJ5(builder, j5):
    builder.PrependInt32Slot(4, j5, 0)

def AddJ5(builder, j5):
    MtiJobDefinition_IngestAddJ5(builder, j5)

def MtiJobDefinition_IngestAddJ6(builder, j6):
    builder.PrependFloat64Slot(5, j6, 0.0)

def AddJ6(builder, j6):
    MtiJobDefinition_IngestAddJ6(builder, j6)

def MtiJobDefinition_IngestAddJ7(builder, j7):
    builder.PrependFloat64Slot(6, j7, 0.0)

def AddJ7(builder, j7):
    MtiJobDefinition_IngestAddJ7(builder, j7)

def MtiJobDefinition_IngestAddJ8(builder, j8):
    builder.PrependFloat64Slot(7, j8, 0.0)

def AddJ8(builder, j8):
    MtiJobDefinition_IngestAddJ8(builder, j8)

def MtiJobDefinition_IngestAddJ9(builder, j9):
    builder.PrependFloat64Slot(8, j9, 0.0)

def AddJ9(builder, j9):
    MtiJobDefinition_IngestAddJ9(builder, j9)

def MtiJobDefinition_IngestAddJ10(builder, j10):
    builder.PrependFloat64Slot(9, j10, 0.0)

def AddJ10(builder, j10):
    MtiJobDefinition_IngestAddJ10(builder, j10)

def MtiJobDefinition_IngestAddJ11(builder, j11):
    builder.PrependFloat64Slot(10, j11, 0.0)

def AddJ11(builder, j11):
    MtiJobDefinition_IngestAddJ11(builder, j11)

def MtiJobDefinition_IngestAddJ12(builder, j12):
    builder.PrependFloat64Slot(11, j12, 0.0)

def AddJ12(builder, j12):
    MtiJobDefinition_IngestAddJ12(builder, j12)

def MtiJobDefinition_IngestAddJ13(builder, j13):
    builder.PrependFloat64Slot(12, j13, 0.0)

def AddJ13(builder, j13):
    MtiJobDefinition_IngestAddJ13(builder, j13)

def MtiJobDefinition_IngestAddJ14(builder, j14):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(j14), 0)

def AddJ14(builder, j14):
    MtiJobDefinition_IngestAddJ14(builder, j14)

def MtiJobDefinition_IngestAddJ15(builder, j15):
    builder.PrependInt32Slot(14, j15, 0)

def AddJ15(builder, j15):
    MtiJobDefinition_IngestAddJ15(builder, j15)

def MtiJobDefinition_IngestAddJ16(builder, j16):
    builder.PrependInt32Slot(15, j16, 0)

def AddJ16(builder, j16):
    MtiJobDefinition_IngestAddJ16(builder, j16)

def MtiJobDefinition_IngestAddJ17(builder, j17):
    builder.PrependInt32Slot(16, j17, 0)

def AddJ17(builder, j17):
    MtiJobDefinition_IngestAddJ17(builder, j17)

def MtiJobDefinition_IngestAddJ18(builder, j18):
    builder.PrependInt32Slot(17, j18, 0)

def AddJ18(builder, j18):
    MtiJobDefinition_IngestAddJ18(builder, j18)

def MtiJobDefinition_IngestAddJ19(builder, j19):
    builder.PrependInt32Slot(18, j19, 0)

def AddJ19(builder, j19):
    MtiJobDefinition_IngestAddJ19(builder, j19)

def MtiJobDefinition_IngestAddJ20(builder, j20):
    builder.PrependInt32Slot(19, j20, 0)

def AddJ20(builder, j20):
    MtiJobDefinition_IngestAddJ20(builder, j20)

def MtiJobDefinition_IngestAddJ21(builder, j21):
    builder.PrependInt32Slot(20, j21, 0)

def AddJ21(builder, j21):
    MtiJobDefinition_IngestAddJ21(builder, j21)

def MtiJobDefinition_IngestAddJ22(builder, j22):
    builder.PrependFloat64Slot(21, j22, 0.0)

def AddJ22(builder, j22):
    MtiJobDefinition_IngestAddJ22(builder, j22)

def MtiJobDefinition_IngestAddJ23(builder, j23):
    builder.PrependInt32Slot(22, j23, 0)

def AddJ23(builder, j23):
    MtiJobDefinition_IngestAddJ23(builder, j23)

def MtiJobDefinition_IngestAddJ24(builder, j24):
    builder.PrependInt32Slot(23, j24, 0)

def AddJ24(builder, j24):
    MtiJobDefinition_IngestAddJ24(builder, j24)

def MtiJobDefinition_IngestAddJ25(builder, j25):
    builder.PrependInt32Slot(24, j25, 0)

def AddJ25(builder, j25):
    MtiJobDefinition_IngestAddJ25(builder, j25)

def MtiJobDefinition_IngestAddJ26(builder, j26):
    builder.PrependInt32Slot(25, j26, 0)

def AddJ26(builder, j26):
    MtiJobDefinition_IngestAddJ26(builder, j26)

def MtiJobDefinition_IngestAddJ27(builder, j27):
    builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(j27), 0)

def AddJ27(builder, j27):
    MtiJobDefinition_IngestAddJ27(builder, j27)

def MtiJobDefinition_IngestAddJ28(builder, j28):
    builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(j28), 0)

def AddJ28(builder, j28):
    MtiJobDefinition_IngestAddJ28(builder, j28)

def MtiJobDefinition_IngestEnd(builder):
    return builder.EndObject()

def End(builder):
    return MtiJobDefinition_IngestEnd(builder)


class MtiJobDefinition_IngestT(object):

    # MtiJobDefinition_IngestT
    def __init__(self):
        self.j1 = 0  # type: int
        self.j2 = None  # type: str
        self.j3 = None  # type: str
        self.j4 = 0  # type: int
        self.j5 = 0  # type: int
        self.j6 = 0.0  # type: float
        self.j7 = 0.0  # type: float
        self.j8 = 0.0  # type: float
        self.j9 = 0.0  # type: float
        self.j10 = 0.0  # type: float
        self.j11 = 0.0  # type: float
        self.j12 = 0.0  # type: float
        self.j13 = 0.0  # type: float
        self.j14 = None  # type: str
        self.j15 = 0  # type: int
        self.j16 = 0  # type: int
        self.j17 = 0  # type: int
        self.j18 = 0  # type: int
        self.j19 = 0  # type: int
        self.j20 = 0  # type: int
        self.j21 = 0  # type: int
        self.j22 = 0.0  # type: float
        self.j23 = 0  # type: int
        self.j24 = 0  # type: int
        self.j25 = 0  # type: int
        self.j26 = 0  # type: int
        self.j27 = None  # type: str
        self.j28 = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        mtiJobDefinitionIngest = MtiJobDefinition_Ingest()
        mtiJobDefinitionIngest.Init(buf, pos)
        return cls.InitFromObj(mtiJobDefinitionIngest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, mtiJobDefinitionIngest):
        x = MtiJobDefinition_IngestT()
        x._UnPack(mtiJobDefinitionIngest)
        return x

    # MtiJobDefinition_IngestT
    def _UnPack(self, mtiJobDefinitionIngest):
        if mtiJobDefinitionIngest is None:
            return
        self.j1 = mtiJobDefinitionIngest.J1()
        self.j2 = mtiJobDefinitionIngest.J2()
        self.j3 = mtiJobDefinitionIngest.J3()
        self.j4 = mtiJobDefinitionIngest.J4()
        self.j5 = mtiJobDefinitionIngest.J5()
        self.j6 = mtiJobDefinitionIngest.J6()
        self.j7 = mtiJobDefinitionIngest.J7()
        self.j8 = mtiJobDefinitionIngest.J8()
        self.j9 = mtiJobDefinitionIngest.J9()
        self.j10 = mtiJobDefinitionIngest.J10()
        self.j11 = mtiJobDefinitionIngest.J11()
        self.j12 = mtiJobDefinitionIngest.J12()
        self.j13 = mtiJobDefinitionIngest.J13()
        self.j14 = mtiJobDefinitionIngest.J14()
        self.j15 = mtiJobDefinitionIngest.J15()
        self.j16 = mtiJobDefinitionIngest.J16()
        self.j17 = mtiJobDefinitionIngest.J17()
        self.j18 = mtiJobDefinitionIngest.J18()
        self.j19 = mtiJobDefinitionIngest.J19()
        self.j20 = mtiJobDefinitionIngest.J20()
        self.j21 = mtiJobDefinitionIngest.J21()
        self.j22 = mtiJobDefinitionIngest.J22()
        self.j23 = mtiJobDefinitionIngest.J23()
        self.j24 = mtiJobDefinitionIngest.J24()
        self.j25 = mtiJobDefinitionIngest.J25()
        self.j26 = mtiJobDefinitionIngest.J26()
        self.j27 = mtiJobDefinitionIngest.J27()
        self.j28 = mtiJobDefinitionIngest.J28()

    # MtiJobDefinition_IngestT
    def Pack(self, builder):
        if self.j2 is not None:
            j2 = builder.CreateString(self.j2)
        if self.j3 is not None:
            j3 = builder.CreateString(self.j3)
        if self.j14 is not None:
            j14 = builder.CreateString(self.j14)
        if self.j27 is not None:
            j27 = builder.CreateString(self.j27)
        if self.j28 is not None:
            j28 = builder.CreateString(self.j28)
        MtiJobDefinition_IngestStart(builder)
        MtiJobDefinition_IngestAddJ1(builder, self.j1)
        if self.j2 is not None:
            MtiJobDefinition_IngestAddJ2(builder, j2)
        if self.j3 is not None:
            MtiJobDefinition_IngestAddJ3(builder, j3)
        MtiJobDefinition_IngestAddJ4(builder, self.j4)
        MtiJobDefinition_IngestAddJ5(builder, self.j5)
        MtiJobDefinition_IngestAddJ6(builder, self.j6)
        MtiJobDefinition_IngestAddJ7(builder, self.j7)
        MtiJobDefinition_IngestAddJ8(builder, self.j8)
        MtiJobDefinition_IngestAddJ9(builder, self.j9)
        MtiJobDefinition_IngestAddJ10(builder, self.j10)
        MtiJobDefinition_IngestAddJ11(builder, self.j11)
        MtiJobDefinition_IngestAddJ12(builder, self.j12)
        MtiJobDefinition_IngestAddJ13(builder, self.j13)
        if self.j14 is not None:
            MtiJobDefinition_IngestAddJ14(builder, j14)
        MtiJobDefinition_IngestAddJ15(builder, self.j15)
        MtiJobDefinition_IngestAddJ16(builder, self.j16)
        MtiJobDefinition_IngestAddJ17(builder, self.j17)
        MtiJobDefinition_IngestAddJ18(builder, self.j18)
        MtiJobDefinition_IngestAddJ19(builder, self.j19)
        MtiJobDefinition_IngestAddJ20(builder, self.j20)
        MtiJobDefinition_IngestAddJ21(builder, self.j21)
        MtiJobDefinition_IngestAddJ22(builder, self.j22)
        MtiJobDefinition_IngestAddJ23(builder, self.j23)
        MtiJobDefinition_IngestAddJ24(builder, self.j24)
        MtiJobDefinition_IngestAddJ25(builder, self.j25)
        MtiJobDefinition_IngestAddJ26(builder, self.j26)
        if self.j27 is not None:
            MtiJobDefinition_IngestAddJ27(builder, j27)
        if self.j28 is not None:
            MtiJobDefinition_IngestAddJ28(builder, j28)
        mtiJobDefinitionIngest = MtiJobDefinition_IngestEnd(builder)
        return mtiJobDefinitionIngest
