# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Characteristic attributes of a IonoObservation.
class IonoObservationCharAtts_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IonoObservationCharAtts_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIonoObservationCharAtts_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IonoObservationCharAtts_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x4F\x4E\x4F", size_prefixed=size_prefixed)

    # IonoObservationCharAtts_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Characteristic's URSI ID. See the characteristic's description for its corresponding URSI ID.
    # Example: /// Example: 04
    # Constraints: Minimum length = 0, Maximum length = 3
    # IonoObservationCharAtts_Abridged
    def UrsiId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Characteristic name. This value should reflect the UDL field name for the corresponding characteristic.
    # Example: /// Example: hprimeF2
    # Constraints: Minimum length = 0, Maximum length = 16
    # IonoObservationCharAtts_Abridged
    def CharName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Specified characteristic's lower bound. Should be less than or equal to the characteristic's current value as set in this record.
    # Example: /// Example: 1.26
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def LowerBound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Specified characteristic's upper bound. Should be greater than or equal to the characteristic's current value as set in this record.
    # Example: /// Example: 2.57
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def UpperBound(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Qualifying letter (Q) for the characteristic specified by URSI ID. Describes specific ionospheric conditions, beyond numerical values.
    # Example: /// Example: T
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def Q(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Descriptive letter (D) for the characteristic specified by URSI ID. Describes specific ionospheric conditions, beyond numerical values.
    # Example: /// Example: K
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def D(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Name of the climate model.
    # Example: /// Example: IRI
    # Constraints: Minimum length = 0, Maximum length = 64
    # IonoObservationCharAtts_Abridged
    def ClimateModelName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # List of options for the climate model.
    # Example: /// Example: ['URSI-88', 'No storm']
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def ClimateModelOptions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # IonoObservationCharAtts_Abridged
    def ClimateModelOptionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # IonoObservationCharAtts_Abridged
    def ClimateModelOptionsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        return o == 0

    # Input parameters for the climate model.
    # Example: /// Example: ['ISSN1 88.1', 'Option 2']
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def ClimateModelInputParams(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # IonoObservationCharAtts_Abridged
    def ClimateModelInputParamsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # IonoObservationCharAtts_Abridged
    def ClimateModelInputParamsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        return o == 0

    # Uncertainty Bounds (lower and upper) define an interval around reported value that contains true value at the specified probability level. Probability levels are specified in terms of percentile (from 1 to 100) or the standard deviation, sigma (e.g. 1sigma, 2sigma, 3sigma, 5percentile, 10percentile, 25percentile).
    # Example: /// Example: 1sigma
    # Constraints: No constraints specified.
    # IonoObservationCharAtts_Abridged
    def UncertaintyBoundType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def IonoObservationCharAtts_AbridgedStart(builder):
    builder.StartObject(10)

def Start(builder):
    IonoObservationCharAtts_AbridgedStart(builder)

def IonoObservationCharAtts_AbridgedAddUrsiId(builder, ursiId):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(ursiId), 0)

def AddUrsiId(builder, ursiId):
    IonoObservationCharAtts_AbridgedAddUrsiId(builder, ursiId)

def IonoObservationCharAtts_AbridgedAddCharName(builder, charName):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(charName), 0)

def AddCharName(builder, charName):
    IonoObservationCharAtts_AbridgedAddCharName(builder, charName)

def IonoObservationCharAtts_AbridgedAddLowerBound(builder, lowerBound):
    builder.PrependFloat64Slot(2, lowerBound, 0.0)

def AddLowerBound(builder, lowerBound):
    IonoObservationCharAtts_AbridgedAddLowerBound(builder, lowerBound)

def IonoObservationCharAtts_AbridgedAddUpperBound(builder, upperBound):
    builder.PrependFloat64Slot(3, upperBound, 0.0)

def AddUpperBound(builder, upperBound):
    IonoObservationCharAtts_AbridgedAddUpperBound(builder, upperBound)

def IonoObservationCharAtts_AbridgedAddQ(builder, q):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(q), 0)

def AddQ(builder, q):
    IonoObservationCharAtts_AbridgedAddQ(builder, q)

def IonoObservationCharAtts_AbridgedAddD(builder, d):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(d), 0)

def AddD(builder, d):
    IonoObservationCharAtts_AbridgedAddD(builder, d)

def IonoObservationCharAtts_AbridgedAddClimateModelName(builder, climateModelName):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(climateModelName), 0)

def AddClimateModelName(builder, climateModelName):
    IonoObservationCharAtts_AbridgedAddClimateModelName(builder, climateModelName)

def IonoObservationCharAtts_AbridgedAddClimateModelOptions(builder, climateModelOptions):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(climateModelOptions), 0)

def AddClimateModelOptions(builder, climateModelOptions):
    IonoObservationCharAtts_AbridgedAddClimateModelOptions(builder, climateModelOptions)

def IonoObservationCharAtts_AbridgedStartClimateModelOptionsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartClimateModelOptionsVector(builder, numElems):
    return IonoObservationCharAtts_AbridgedStartClimateModelOptionsVector(builder, numElems)

def IonoObservationCharAtts_AbridgedAddClimateModelInputParams(builder, climateModelInputParams):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(climateModelInputParams), 0)

def AddClimateModelInputParams(builder, climateModelInputParams):
    IonoObservationCharAtts_AbridgedAddClimateModelInputParams(builder, climateModelInputParams)

def IonoObservationCharAtts_AbridgedStartClimateModelInputParamsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartClimateModelInputParamsVector(builder, numElems):
    return IonoObservationCharAtts_AbridgedStartClimateModelInputParamsVector(builder, numElems)

def IonoObservationCharAtts_AbridgedAddUncertaintyBoundType(builder, uncertaintyBoundType):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(uncertaintyBoundType), 0)

def AddUncertaintyBoundType(builder, uncertaintyBoundType):
    IonoObservationCharAtts_AbridgedAddUncertaintyBoundType(builder, uncertaintyBoundType)

def IonoObservationCharAtts_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return IonoObservationCharAtts_AbridgedEnd(builder)

try:
    from typing import List
except:
    pass

class IonoObservationCharAtts_AbridgedT(object):

    # IonoObservationCharAtts_AbridgedT
    def __init__(self):
        self.ursiId = None  # type: str
        self.charName = None  # type: str
        self.lowerBound = 0.0  # type: float
        self.upperBound = 0.0  # type: float
        self.q = None  # type: str
        self.d = None  # type: str
        self.climateModelName = None  # type: str
        self.climateModelOptions = None  # type: List[str]
        self.climateModelInputParams = None  # type: List[str]
        self.uncertaintyBoundType = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        ionoObservationCharAttsAbridged = IonoObservationCharAtts_Abridged()
        ionoObservationCharAttsAbridged.Init(buf, pos)
        return cls.InitFromObj(ionoObservationCharAttsAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, ionoObservationCharAttsAbridged):
        x = IonoObservationCharAtts_AbridgedT()
        x._UnPack(ionoObservationCharAttsAbridged)
        return x

    # IonoObservationCharAtts_AbridgedT
    def _UnPack(self, ionoObservationCharAttsAbridged):
        if ionoObservationCharAttsAbridged is None:
            return
        self.ursiId = ionoObservationCharAttsAbridged.UrsiId()
        self.charName = ionoObservationCharAttsAbridged.CharName()
        self.lowerBound = ionoObservationCharAttsAbridged.LowerBound()
        self.upperBound = ionoObservationCharAttsAbridged.UpperBound()
        self.q = ionoObservationCharAttsAbridged.Q()
        self.d = ionoObservationCharAttsAbridged.D()
        self.climateModelName = ionoObservationCharAttsAbridged.ClimateModelName()
        if not ionoObservationCharAttsAbridged.ClimateModelOptionsIsNone():
            self.climateModelOptions = []
            for i in range(ionoObservationCharAttsAbridged.ClimateModelOptionsLength()):
                self.climateModelOptions.append(ionoObservationCharAttsAbridged.ClimateModelOptions(i))
        if not ionoObservationCharAttsAbridged.ClimateModelInputParamsIsNone():
            self.climateModelInputParams = []
            for i in range(ionoObservationCharAttsAbridged.ClimateModelInputParamsLength()):
                self.climateModelInputParams.append(ionoObservationCharAttsAbridged.ClimateModelInputParams(i))
        self.uncertaintyBoundType = ionoObservationCharAttsAbridged.UncertaintyBoundType()

    # IonoObservationCharAtts_AbridgedT
    def Pack(self, builder):
        if self.ursiId is not None:
            ursiId = builder.CreateString(self.ursiId)
        if self.charName is not None:
            charName = builder.CreateString(self.charName)
        if self.q is not None:
            q = builder.CreateString(self.q)
        if self.d is not None:
            d = builder.CreateString(self.d)
        if self.climateModelName is not None:
            climateModelName = builder.CreateString(self.climateModelName)
        if self.climateModelOptions is not None:
            climateModelOptionslist = []
            for i in range(len(self.climateModelOptions)):
                climateModelOptionslist.append(builder.CreateString(self.climateModelOptions[i]))
            IonoObservationCharAtts_AbridgedStartClimateModelOptionsVector(builder, len(self.climateModelOptions))
            for i in reversed(range(len(self.climateModelOptions))):
                builder.PrependUOffsetTRelative(climateModelOptionslist[i])
            climateModelOptions = builder.EndVector()
        if self.climateModelInputParams is not None:
            climateModelInputParamslist = []
            for i in range(len(self.climateModelInputParams)):
                climateModelInputParamslist.append(builder.CreateString(self.climateModelInputParams[i]))
            IonoObservationCharAtts_AbridgedStartClimateModelInputParamsVector(builder, len(self.climateModelInputParams))
            for i in reversed(range(len(self.climateModelInputParams))):
                builder.PrependUOffsetTRelative(climateModelInputParamslist[i])
            climateModelInputParams = builder.EndVector()
        if self.uncertaintyBoundType is not None:
            uncertaintyBoundType = builder.CreateString(self.uncertaintyBoundType)
        IonoObservationCharAtts_AbridgedStart(builder)
        if self.ursiId is not None:
            IonoObservationCharAtts_AbridgedAddUrsiId(builder, ursiId)
        if self.charName is not None:
            IonoObservationCharAtts_AbridgedAddCharName(builder, charName)
        IonoObservationCharAtts_AbridgedAddLowerBound(builder, self.lowerBound)
        IonoObservationCharAtts_AbridgedAddUpperBound(builder, self.upperBound)
        if self.q is not None:
            IonoObservationCharAtts_AbridgedAddQ(builder, q)
        if self.d is not None:
            IonoObservationCharAtts_AbridgedAddD(builder, d)
        if self.climateModelName is not None:
            IonoObservationCharAtts_AbridgedAddClimateModelName(builder, climateModelName)
        if self.climateModelOptions is not None:
            IonoObservationCharAtts_AbridgedAddClimateModelOptions(builder, climateModelOptions)
        if self.climateModelInputParams is not None:
            IonoObservationCharAtts_AbridgedAddClimateModelInputParams(builder, climateModelInputParams)
        if self.uncertaintyBoundType is not None:
            IonoObservationCharAtts_AbridgedAddUncertaintyBoundType(builder, uncertaintyBoundType)
        ionoObservationCharAttsAbridged = IonoObservationCharAtts_AbridgedEnd(builder)
        return ionoObservationCharAttsAbridged
