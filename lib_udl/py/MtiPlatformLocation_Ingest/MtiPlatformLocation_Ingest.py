# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Provides information pertaining to the location of the sensor platform during periods when the sensor is not collecting data. It shall be sent as required during periods in which the sensor is not collecting data, such as enroute to an orbit location, during a turn, or any other time at which platform location is required.
class MtiPlatformLocation_Ingest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MtiPlatformLocation_Ingest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMtiPlatformLocation_Ingest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def MtiPlatformLocation_IngestBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x54\x49\x50", size_prefixed=size_prefixed)

    # MtiPlatformLocation_Ingest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Elapsed time, expressed in milliseconds, from midnight at the beginning of the day specified in the Reference Time fields of the Mission Segment to the time the report is prepared.
    # Example: /// Example: 1234567890
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # North-South position of the platform at the time the report is prepared, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 45.23
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the platform at the time the report is prepared, expressed as degrees East (positive) from the Prime Meridian.
    # Example: /// Example: 45.23
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Altitude of the platform at the time the report is prepared, referenced to its position above the WGS-84 ellipsoid, in centimeters.
    # Example: /// Example: 45
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L4(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Ground track of the platform at the time the report is prepared, expressed as the angle in degrees (clockwise) from True North.
    # Example: /// Example: 45.23
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L5(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Ground speed of the platform at the time the report is prepared, expressed as millimeters per second.
    # Example: /// Example: 50
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L6(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Velocity of the platform in the vertical direction, expressed as decimeters per second.
    # Example: /// Example: 82
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def L7(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Platform location timestamp in ISO8601 UTC format.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # MtiPlatformLocation_Ingest
    def Platlocts(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def MtiPlatformLocation_IngestStart(builder):
    builder.StartObject(8)

def Start(builder):
    MtiPlatformLocation_IngestStart(builder)

def MtiPlatformLocation_IngestAddL1(builder, l1):
    builder.PrependInt64Slot(0, l1, 0)

def AddL1(builder, l1):
    MtiPlatformLocation_IngestAddL1(builder, l1)

def MtiPlatformLocation_IngestAddL2(builder, l2):
    builder.PrependFloat64Slot(1, l2, 0.0)

def AddL2(builder, l2):
    MtiPlatformLocation_IngestAddL2(builder, l2)

def MtiPlatformLocation_IngestAddL3(builder, l3):
    builder.PrependFloat64Slot(2, l3, 0.0)

def AddL3(builder, l3):
    MtiPlatformLocation_IngestAddL3(builder, l3)

def MtiPlatformLocation_IngestAddL4(builder, l4):
    builder.PrependInt32Slot(3, l4, 0)

def AddL4(builder, l4):
    MtiPlatformLocation_IngestAddL4(builder, l4)

def MtiPlatformLocation_IngestAddL5(builder, l5):
    builder.PrependFloat64Slot(4, l5, 0.0)

def AddL5(builder, l5):
    MtiPlatformLocation_IngestAddL5(builder, l5)

def MtiPlatformLocation_IngestAddL6(builder, l6):
    builder.PrependInt32Slot(5, l6, 0)

def AddL6(builder, l6):
    MtiPlatformLocation_IngestAddL6(builder, l6)

def MtiPlatformLocation_IngestAddL7(builder, l7):
    builder.PrependInt32Slot(6, l7, 0)

def AddL7(builder, l7):
    MtiPlatformLocation_IngestAddL7(builder, l7)

def MtiPlatformLocation_IngestAddPlatlocts(builder, platlocts):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(platlocts), 0)

def AddPlatlocts(builder, platlocts):
    MtiPlatformLocation_IngestAddPlatlocts(builder, platlocts)

def MtiPlatformLocation_IngestEnd(builder):
    return builder.EndObject()

def End(builder):
    return MtiPlatformLocation_IngestEnd(builder)


class MtiPlatformLocation_IngestT(object):

    # MtiPlatformLocation_IngestT
    def __init__(self):
        self.l1 = 0  # type: int
        self.l2 = 0.0  # type: float
        self.l3 = 0.0  # type: float
        self.l4 = 0  # type: int
        self.l5 = 0.0  # type: float
        self.l6 = 0  # type: int
        self.l7 = 0  # type: int
        self.platlocts = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        mtiPlatformLocationIngest = MtiPlatformLocation_Ingest()
        mtiPlatformLocationIngest.Init(buf, pos)
        return cls.InitFromObj(mtiPlatformLocationIngest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, mtiPlatformLocationIngest):
        x = MtiPlatformLocation_IngestT()
        x._UnPack(mtiPlatformLocationIngest)
        return x

    # MtiPlatformLocation_IngestT
    def _UnPack(self, mtiPlatformLocationIngest):
        if mtiPlatformLocationIngest is None:
            return
        self.l1 = mtiPlatformLocationIngest.L1()
        self.l2 = mtiPlatformLocationIngest.L2()
        self.l3 = mtiPlatformLocationIngest.L3()
        self.l4 = mtiPlatformLocationIngest.L4()
        self.l5 = mtiPlatformLocationIngest.L5()
        self.l6 = mtiPlatformLocationIngest.L6()
        self.l7 = mtiPlatformLocationIngest.L7()
        self.platlocts = mtiPlatformLocationIngest.Platlocts()

    # MtiPlatformLocation_IngestT
    def Pack(self, builder):
        if self.platlocts is not None:
            platlocts = builder.CreateString(self.platlocts)
        MtiPlatformLocation_IngestStart(builder)
        MtiPlatformLocation_IngestAddL1(builder, self.l1)
        MtiPlatformLocation_IngestAddL2(builder, self.l2)
        MtiPlatformLocation_IngestAddL3(builder, self.l3)
        MtiPlatformLocation_IngestAddL4(builder, self.l4)
        MtiPlatformLocation_IngestAddL5(builder, self.l5)
        MtiPlatformLocation_IngestAddL6(builder, self.l6)
        MtiPlatformLocation_IngestAddL7(builder, self.l7)
        if self.platlocts is not None:
            MtiPlatformLocation_IngestAddPlatlocts(builder, platlocts)
        mtiPlatformLocationIngest = MtiPlatformLocation_IngestEnd(builder)
        return mtiPlatformLocationIngest
