# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.
class FlightPlanMessages_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FlightPlanMessages_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFlightPlanMessages_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def FlightPlanMessages_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x46\x4C\x49\x47", size_prefixed=size_prefixed)

    # FlightPlanMessages_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # The severity of the message.
    # Example: /// Example: SEVERE
    # Constraints: Minimum length = 0, Maximum length = 16
    # FlightPlanMessages_Abridged
    def Severity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The waypoint number for which the message was generated, or enter "PLAN" for a message impacting the entire route.
    # Example: /// Example: 20
    # Constraints: Minimum length = 0, Maximum length = 8
    # FlightPlanMessages_Abridged
    def WpNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The flight path that generated the message (PRIMARY, ALTERNATE, etc.).
    # Example: /// Example: PRIMARY
    # Constraints: Minimum length = 0, Maximum length = 16
    # FlightPlanMessages_Abridged
    def RoutePath(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The text of the message.
    # Example: /// Example: Message text
    # Constraints: Minimum length = 0, Maximum length = 256
    # FlightPlanMessages_Abridged
    def MsgText(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def FlightPlanMessages_AbridgedStart(builder):
    builder.StartObject(4)

def Start(builder):
    FlightPlanMessages_AbridgedStart(builder)

def FlightPlanMessages_AbridgedAddSeverity(builder, severity):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(severity), 0)

def AddSeverity(builder, severity):
    FlightPlanMessages_AbridgedAddSeverity(builder, severity)

def FlightPlanMessages_AbridgedAddWpNum(builder, wpNum):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(wpNum), 0)

def AddWpNum(builder, wpNum):
    FlightPlanMessages_AbridgedAddWpNum(builder, wpNum)

def FlightPlanMessages_AbridgedAddRoutePath(builder, routePath):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(routePath), 0)

def AddRoutePath(builder, routePath):
    FlightPlanMessages_AbridgedAddRoutePath(builder, routePath)

def FlightPlanMessages_AbridgedAddMsgText(builder, msgText):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(msgText), 0)

def AddMsgText(builder, msgText):
    FlightPlanMessages_AbridgedAddMsgText(builder, msgText)

def FlightPlanMessages_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return FlightPlanMessages_AbridgedEnd(builder)


class FlightPlanMessages_AbridgedT(object):

    # FlightPlanMessages_AbridgedT
    def __init__(self):
        self.severity = None  # type: str
        self.wpNum = None  # type: str
        self.routePath = None  # type: str
        self.msgText = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        flightPlanMessagesAbridged = FlightPlanMessages_Abridged()
        flightPlanMessagesAbridged.Init(buf, pos)
        return cls.InitFromObj(flightPlanMessagesAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, flightPlanMessagesAbridged):
        x = FlightPlanMessages_AbridgedT()
        x._UnPack(flightPlanMessagesAbridged)
        return x

    # FlightPlanMessages_AbridgedT
    def _UnPack(self, flightPlanMessagesAbridged):
        if flightPlanMessagesAbridged is None:
            return
        self.severity = flightPlanMessagesAbridged.Severity()
        self.wpNum = flightPlanMessagesAbridged.WpNum()
        self.routePath = flightPlanMessagesAbridged.RoutePath()
        self.msgText = flightPlanMessagesAbridged.MsgText()

    # FlightPlanMessages_AbridgedT
    def Pack(self, builder):
        if self.severity is not None:
            severity = builder.CreateString(self.severity)
        if self.wpNum is not None:
            wpNum = builder.CreateString(self.wpNum)
        if self.routePath is not None:
            routePath = builder.CreateString(self.routePath)
        if self.msgText is not None:
            msgText = builder.CreateString(self.msgText)
        FlightPlanMessages_AbridgedStart(builder)
        if self.severity is not None:
            FlightPlanMessages_AbridgedAddSeverity(builder, severity)
        if self.wpNum is not None:
            FlightPlanMessages_AbridgedAddWpNum(builder, wpNum)
        if self.routePath is not None:
            FlightPlanMessages_AbridgedAddRoutePath(builder, routePath)
        if self.msgText is not None:
            FlightPlanMessages_AbridgedAddMsgText(builder, msgText)
        flightPlanMessagesAbridged = FlightPlanMessages_AbridgedEnd(builder)
        return flightPlanMessagesAbridged
