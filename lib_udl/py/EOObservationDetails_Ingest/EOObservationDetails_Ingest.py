# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Model representation of additional detailed observation data for electro-optical based sensor phenomenologies.
class EOObservationDetails_Ingest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EOObservationDetails_Ingest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEOObservationDetails_Ingest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def EOObservationDetails_IngestBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x45\x4F\x4F\x42", size_prefixed=size_prefixed)

    # EOObservationDetails_Ingest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the parent EOObservation.
    # Example: /// Example: EOOBSERVATION-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # EOObservationDetails_Ingest
    def IdEoobservation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format, will be set to EOObservation classificationMarking if blank.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # EOObservationDetails_Ingest
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Ob detection time in ISO 8601 UTC with microsecond precision, will be set to EOObservation obTime if blank.
    # Example: /// Example: 2018-01-01T16:00:00.123456Z
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ObTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Predicted Right Ascension of the Target object from the frame of reference of the sensor (J2000, geocentric velocity aberration). SGP4 and VCMs produce geocentric origin and velocity aberration and subtracting the sensor geocentric position of the sensor places in its reference frame.
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedRa(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Predicted Declination of the Target object from the frame of reference of the sensor (J2000, geocentric velocity aberration). SGP4 and VCMs produce geocentric origin and velocity aberration and subtracting the sensor geocentric position of the sensor places in its reference frame.
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedDeclination(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Predicted Azimuth angle of the target object from a ground -based sensor (no atmospheric refraction correction required). AZ_EL implies apparent topocentric place in true of date reference frame as seen from the observer with aberration due to the observer velocity and light travel time applied.
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedAzimuth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Predicted elevation angle of the target object from a ground -based sensor (no atmospheric refraction correction required). AZ_EL implies apparent topocentric place in true of date reference frame as seen from the observer with aberration due to the observer velocity and light travel time applied.
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedElevation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Azimuth angle of the sun from a ground-based telescope (no atmospheric refraction correction required) the observer with aberration due to the observer velocity and light travel time applied.
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunAzimuth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Elevation angle of the sun from a ground-based telescope (no atmospheric refraction correction required).
    # Example: /// Example: 10.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunElevation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The value is the number of spectral filters used.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NumSpectralFilters(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Array of the SpectralFilters keywords, must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: ['Keyword1', 'Keyword2']
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SpectralFilters(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def SpectralFiltersLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def SpectralFiltersIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        return o == 0

    # This is the in-band average irradiance of a 0th mag source. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.  Units = W/m2/nm.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SpectralZmfl(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def SpectralZmflLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def SpectralZmflIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        return o == 0

    # This is the in-band solar magnitude at 1 A.U. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.  Units = mag.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SpectralFilterSolarMag(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def SpectralFilterSolarMagLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def SpectralFilterSolarMagIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        return o == 0

    # This is the value for the zero-point calculated for each filter denoted in spectralFilters. It is the difference between the catalog mag and instrumental mag for a set of standard stars. For use with All Sky photometry. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ZeroPoints(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def ZeroPointsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def ZeroPointsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        return o == 0

    # This is the uncertainty in the zero point for the filter denoted in spectralFilters. For use with All Sky photometry. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ZeroPointsUnc(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def ZeroPointsUncLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def ZeroPointsUncIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        return o == 0

    # The extinction coefficient computed for the nth filter. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n. Units = mag/airmass.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ExtinctionCoeffs(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def ExtinctionCoeffsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def ExtinctionCoeffsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        return o == 0

    # This is the uncertainty in the extinction coefficient for the nth filter. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n. -9999 for space-based sensors. Units = mag/airmass.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ExtinctionCoeffsUnc(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def ExtinctionCoeffsUncLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def ExtinctionCoeffsUncIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

    # Color coefficient for filter n for a space-based sensor where there is no atmospheric extinction. Must be present for all values n=1 to numSpectralFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ColorCoeffs(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def ColorCoeffsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def ColorCoeffsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        return o == 0

    # The value is the number of neutral density filters used.
    # Example: /// Example: 12
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NumNeutralDensityFilters(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Must be present for all values n=1 to numNeutralDensityFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: ['numNeutralDensityFilters1', 'numNeutralDensityFilters2']
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NeutralDensityFilterNames(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def NeutralDensityFilterNamesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def NeutralDensityFilterNamesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        return o == 0

    # The transmission of the nth neutral density filter. Must be present for all values n=1 to numNeutralDensityFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissions(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissionsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissionsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        return o == 0

    # This is the uncertainty in the transmission for the nth filter. Must be present for all values n=1 to numNeutralDensityFilters, in incrementing order of n, and for no other values of n.
    # Example: /// Example: [1.1, 2.1, 3.1]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissionsUnc(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissionsUncLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def NeutralDensityFilterTransmissionsUncIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        return o == 0

    # Some sensors have gain settings. This value is the gain used during the observation in units e-/ADU. If no gain is used, the value = 1.
    # Example: /// Example: 234.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def Gain(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sensor instantaneous field of view (ratio of pixel pitch to focal length).
    # Example: /// Example: 0.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def Ifov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Pixel array size (width) in pixels.
    # Example: /// Example: 12
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PixelArrayWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Pixel array size (height) in pixels.
    # Example: /// Example: 23
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PixelArrayHeight(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Minimum valid pixel value, this is typically 0.
    # Example: /// Example: 12
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PixelMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Maximum valid pixel value, this is defined as 2^(number of bits per pixel). For example, a CCD with 8-bitpixels, would have a maximum valid pixel value of 2^8 = 256. This can represent the saturation value of the detector, but some sensors will saturate at a value significantly lower than full well depth. This is the analog-to-digital conversion (ADC) saturation value.
    # Example: /// Example: 256
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PixelMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Observed centroid row number on the focal plane in pixels (0 is top edge, 0.5 is center of pixels along top of image).
    # Example: /// Example: 0.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CentroidRow(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Observed centroid column number on the focal plane in pixels (0 is left edge, 0.5 is center of pixels along left of image).
    # Example: /// Example: 0.5
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CentroidColumn(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spatial variance of image distribution in vertical direction measured in pixels squared.
    # Example: /// Example: 0.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def RowVariance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spatial variance of image distribution in horizontal direction measured in pixels squared.
    # Example: /// Example: 0.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ColumnVariance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spatial covariance of image distribution across horizontal and vertical directions measured in pixels squared.
    # Example: /// Example: 0.01
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def RowColCov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # An array of measurements that correspond to the distance from the streak center measured from the optical image in pixels that show change over an interval of time. The array length is dependent on the length of the streak. The distFromStreakCenter, surfBrightness, and surfBrightnessUnc arrays will match in size.
    # Example: /// Example: [-127.153, -126.153, -125.153]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def DistFromStreakCenter(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def DistFromStreakCenterLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def DistFromStreakCenterIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        return o == 0

    # An array of surface brightness measurements in magnitudes per square arcsecond from the optical image that show change over an interval of time. The array length is dependent on the length of the streak. The distFromStreakCenter, surfBrightness, and surfBrightnessUnc arrays will match in size.
    # Example: /// Example: [21.01, 21.382, 21.725]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SurfBrightness(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def SurfBrightnessLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def SurfBrightnessIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        return o == 0

    # An array of surface brightness uncertainty measurements in magnitudes per square arcsecond from the optical image that show change over an interval of time. The array length is dependent on the length of the streak. The distFromStreakCenter, surfBrightness, and surfBrightnessUnc arrays will match in size.
    # Example: /// Example: [0.165, 0.165, 0.165]
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SurfBrightnessUnc(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EOObservationDetails_Ingest
    def SurfBrightnessUncLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EOObservationDetails_Ingest
    def SurfBrightnessUncIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        return o == 0

    # Uncertainty in the times reported in UTC in seconds.
    # Example: /// Example: 13.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def TimesUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Operating temperature of CCD recorded during exposure or measured during calibrations in K.
    # Example: /// Example: 123.4
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CcdTemp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The reference number, x, where x ranges from 1 to n, where n is the number specified in spectralFilters that corresponds to the spectral filter given in the corresponding spectralFilterNames.
    # Example: /// Example: 23
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CurrentSpectralFilterNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The reference number n, in neutralDensityFilters for the currently used neutral density filter.
    # Example: /// Example: 3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CurrentNeutralDensityFilterNum(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The number of pixels binned horizontally.
    # Example: /// Example: 12
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def BinningHoriz(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The number of pixels binned vertically.
    # Example: /// Example: 14
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def BinningVert(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of stars used in photometric fit count.
    # Example: /// Example: 23
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PcalNumStars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The x centroid position on the CCD of the target object in pixels.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CcdObjPosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The y centroid position on the CCD of the target object in pixels.
    # Example: /// Example: 321.4
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CcdObjPosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # This is the pixel width of the target. This is either a frame-by-frame measurement or a constant point spread function or synthetic aperture used in the extraction.
    # Example: /// Example: 133.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CcdObjWidth(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # This is the background signal at or in the vicinity of the radiometric source position. Specifically, this is the average background count level (DN/pixel) divided by the exposure time in seconds of the background pixels used in the photometric extraction. DN/pixel/sec.
    # Example: /// Example: 4134.1
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def BackgroundSignal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Estimated 1-sigma uncertainty in the background signal at or in the vicinity of the radiometric source position. DN/pixel/sec.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def BackgroundSignalUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Peak Aperture Raw Counts is the value of the peak pixel in the real or synthetic aperture containing the target signal.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PeakApertureCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Peak Background Raw Counts is the largest pixel value used in background signal.
    # Example: /// Example: 321
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PeakBackgroundCount(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Estimated signal-to-noise ratio (SNR) for the total radiometric signal. Under some algorithms, this can be a constant per target (not per observation). Note: this SNR applies to the total signal of the radiometric source (i.e., Net_Obj_Sig with units DN/sec), not to be confused with the SNR of the signal in the peak pixel (i.e., DN/pixel/sec).
    # Example: /// Example: 13.4
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SnrEst(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Instrumental magnitude of a sensor before corrections are applied for atmosphere or to transform to standard magnitude scale.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def MagInstrumental(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Uncertainty in the instrumental magnitude.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def MagInstrumentalUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Optical Cross Section computed in units m(2)/ster.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def OpticalCrossSection(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Uncertainty in Optical Cross Section computed in units m(2)/ster.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def OpticalCrossSectionUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStatePosX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStatePosY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStatePosZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km/sec.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStateVelX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km/sec.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStateVelY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sun state vector in ECI J2000 coordinate frame in km/sec.
    # Example: /// Example: 123.3
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SunStateVelZ(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Number of catalog stars in the detector field of view (FOV) with the target object. Can be 0 for narrow FOV sensors.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NumCatalogStars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of detected stars in the FOV with the target object. Helps identify frames with clouds.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NumDetectedStars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of correlated stars in the FOV with the target object. Can be 0 for narrow FOV sensors.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def NumCorrelatedStars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Uncertainty of predicted Right Ascension of the Target object from the frame of reference of the sensor (J2000, geocentric velocity aberration). SGP4 and VCMs produce geocentric origin and velocity aberration and subtracting the sensor geocentric position of the sensor places in its reference frame.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedRaUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Uncertainty of Predicted Declination of the Target object from the frame of reference of the sensor (J2000, geocentric velocity aberration). SGP4 and VCMs produce geocentric origin and velocity aberration and subtracting the sensor geocentric position of the sensor places in its reference frame.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PredictedDeclinationUnc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Covariance (x^2) in measured Right Ascension (X) in deg^2.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def RaCov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Covariance (Y^2) in measured declination (Y) in deg^2.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def DeclinationCov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Covariance (XY) in measured ra/declination (XY) in deg^2.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def RaDeclinationCov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # World Coordinate System (WCS) X pixel origin in astrometric fit.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def AcalCrPixX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # World Coordinate System (WCS) Y pixel origin in astrometric fit.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def AcalCrPixY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # World Coordinate System (WCS) equatorial coordinate X origin corresponding to CRPIX in astrometric fit in degrees.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def AcalCrValX(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # World Coordinate System (WCS) equatorial coordinate Y origin corresponding to CRPIX in astrometric fit in degrees.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def AcalCrValY(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Number of stars used in astrometric fit.
    # Example: /// Example: 123
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def AcalNumStars(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Distance from the target object to the sun during the observation in meters.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def ObjSunRange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Solar phase angle bisector vector. The vector that bisects the solar phase angle. The phase angle bisector is the angle that is << of the value in #48. Then calculate the point on the RA/DEC (ECI J2000.0) sphere that a vector at this angle would intersect.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def PhaseAngBisect(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Fraction of the sun that is illuminating the target object. This indicates if the target is in the Earth’s penumbra or umbra. (It is 0 when object is in umbra and 1 when object is fully illuminated.).
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def SolarDiskFrac(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Time off element set.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def Toes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Degrees Off Element Set.
    # Example: /// Example: 123.2
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def Does(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Source of the data, will be set to EOObservation source if blank.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # EOObservationDetails_Ingest
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # , will be set to EOObservation dataMode if blank.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # EOObservationDetails_Ingest
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # EOObservationDetails_Ingest
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # EOObservationDetails_Ingest
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def EOObservationDetails_IngestStart(builder):
    builder.StartObject(83)

def Start(builder):
    EOObservationDetails_IngestStart(builder)

def EOObservationDetails_IngestAddIdEoobservation(builder, idEoobservation):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(idEoobservation), 0)

def AddIdEoobservation(builder, idEoobservation):
    EOObservationDetails_IngestAddIdEoobservation(builder, idEoobservation)

def EOObservationDetails_IngestAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    EOObservationDetails_IngestAddClassificationMarking(builder, classificationMarking)

def EOObservationDetails_IngestAddObTime(builder, obTime):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(obTime), 0)

def AddObTime(builder, obTime):
    EOObservationDetails_IngestAddObTime(builder, obTime)

def EOObservationDetails_IngestAddPredictedRa(builder, predictedRa):
    builder.PrependFloat64Slot(3, predictedRa, 0.0)

def AddPredictedRa(builder, predictedRa):
    EOObservationDetails_IngestAddPredictedRa(builder, predictedRa)

def EOObservationDetails_IngestAddPredictedDeclination(builder, predictedDeclination):
    builder.PrependFloat64Slot(4, predictedDeclination, 0.0)

def AddPredictedDeclination(builder, predictedDeclination):
    EOObservationDetails_IngestAddPredictedDeclination(builder, predictedDeclination)

def EOObservationDetails_IngestAddPredictedAzimuth(builder, predictedAzimuth):
    builder.PrependFloat64Slot(5, predictedAzimuth, 0.0)

def AddPredictedAzimuth(builder, predictedAzimuth):
    EOObservationDetails_IngestAddPredictedAzimuth(builder, predictedAzimuth)

def EOObservationDetails_IngestAddPredictedElevation(builder, predictedElevation):
    builder.PrependFloat64Slot(6, predictedElevation, 0.0)

def AddPredictedElevation(builder, predictedElevation):
    EOObservationDetails_IngestAddPredictedElevation(builder, predictedElevation)

def EOObservationDetails_IngestAddSunAzimuth(builder, sunAzimuth):
    builder.PrependFloat64Slot(7, sunAzimuth, 0.0)

def AddSunAzimuth(builder, sunAzimuth):
    EOObservationDetails_IngestAddSunAzimuth(builder, sunAzimuth)

def EOObservationDetails_IngestAddSunElevation(builder, sunElevation):
    builder.PrependFloat64Slot(8, sunElevation, 0.0)

def AddSunElevation(builder, sunElevation):
    EOObservationDetails_IngestAddSunElevation(builder, sunElevation)

def EOObservationDetails_IngestAddNumSpectralFilters(builder, numSpectralFilters):
    builder.PrependInt32Slot(9, numSpectralFilters, 0)

def AddNumSpectralFilters(builder, numSpectralFilters):
    EOObservationDetails_IngestAddNumSpectralFilters(builder, numSpectralFilters)

def EOObservationDetails_IngestAddSpectralFilters(builder, spectralFilters):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(spectralFilters), 0)

def AddSpectralFilters(builder, spectralFilters):
    EOObservationDetails_IngestAddSpectralFilters(builder, spectralFilters)

def EOObservationDetails_IngestStartSpectralFiltersVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSpectralFiltersVector(builder, numElems):
    return EOObservationDetails_IngestStartSpectralFiltersVector(builder, numElems)

def EOObservationDetails_IngestAddSpectralZmfl(builder, spectralZmfl):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(spectralZmfl), 0)

def AddSpectralZmfl(builder, spectralZmfl):
    EOObservationDetails_IngestAddSpectralZmfl(builder, spectralZmfl)

def EOObservationDetails_IngestStartSpectralZmflVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSpectralZmflVector(builder, numElems):
    return EOObservationDetails_IngestStartSpectralZmflVector(builder, numElems)

def EOObservationDetails_IngestAddSpectralFilterSolarMag(builder, spectralFilterSolarMag):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(spectralFilterSolarMag), 0)

def AddSpectralFilterSolarMag(builder, spectralFilterSolarMag):
    EOObservationDetails_IngestAddSpectralFilterSolarMag(builder, spectralFilterSolarMag)

def EOObservationDetails_IngestStartSpectralFilterSolarMagVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSpectralFilterSolarMagVector(builder, numElems):
    return EOObservationDetails_IngestStartSpectralFilterSolarMagVector(builder, numElems)

def EOObservationDetails_IngestAddZeroPoints(builder, zeroPoints):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(zeroPoints), 0)

def AddZeroPoints(builder, zeroPoints):
    EOObservationDetails_IngestAddZeroPoints(builder, zeroPoints)

def EOObservationDetails_IngestStartZeroPointsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartZeroPointsVector(builder, numElems):
    return EOObservationDetails_IngestStartZeroPointsVector(builder, numElems)

def EOObservationDetails_IngestAddZeroPointsUnc(builder, zeroPointsUnc):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(zeroPointsUnc), 0)

def AddZeroPointsUnc(builder, zeroPointsUnc):
    EOObservationDetails_IngestAddZeroPointsUnc(builder, zeroPointsUnc)

def EOObservationDetails_IngestStartZeroPointsUncVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartZeroPointsUncVector(builder, numElems):
    return EOObservationDetails_IngestStartZeroPointsUncVector(builder, numElems)

def EOObservationDetails_IngestAddExtinctionCoeffs(builder, extinctionCoeffs):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(extinctionCoeffs), 0)

def AddExtinctionCoeffs(builder, extinctionCoeffs):
    EOObservationDetails_IngestAddExtinctionCoeffs(builder, extinctionCoeffs)

def EOObservationDetails_IngestStartExtinctionCoeffsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartExtinctionCoeffsVector(builder, numElems):
    return EOObservationDetails_IngestStartExtinctionCoeffsVector(builder, numElems)

def EOObservationDetails_IngestAddExtinctionCoeffsUnc(builder, extinctionCoeffsUnc):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(extinctionCoeffsUnc), 0)

def AddExtinctionCoeffsUnc(builder, extinctionCoeffsUnc):
    EOObservationDetails_IngestAddExtinctionCoeffsUnc(builder, extinctionCoeffsUnc)

def EOObservationDetails_IngestStartExtinctionCoeffsUncVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartExtinctionCoeffsUncVector(builder, numElems):
    return EOObservationDetails_IngestStartExtinctionCoeffsUncVector(builder, numElems)

def EOObservationDetails_IngestAddColorCoeffs(builder, colorCoeffs):
    builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(colorCoeffs), 0)

def AddColorCoeffs(builder, colorCoeffs):
    EOObservationDetails_IngestAddColorCoeffs(builder, colorCoeffs)

def EOObservationDetails_IngestStartColorCoeffsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartColorCoeffsVector(builder, numElems):
    return EOObservationDetails_IngestStartColorCoeffsVector(builder, numElems)

def EOObservationDetails_IngestAddNumNeutralDensityFilters(builder, numNeutralDensityFilters):
    builder.PrependInt32Slot(18, numNeutralDensityFilters, 0)

def AddNumNeutralDensityFilters(builder, numNeutralDensityFilters):
    EOObservationDetails_IngestAddNumNeutralDensityFilters(builder, numNeutralDensityFilters)

def EOObservationDetails_IngestAddNeutralDensityFilterNames(builder, neutralDensityFilterNames):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(neutralDensityFilterNames), 0)

def AddNeutralDensityFilterNames(builder, neutralDensityFilterNames):
    EOObservationDetails_IngestAddNeutralDensityFilterNames(builder, neutralDensityFilterNames)

def EOObservationDetails_IngestStartNeutralDensityFilterNamesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartNeutralDensityFilterNamesVector(builder, numElems):
    return EOObservationDetails_IngestStartNeutralDensityFilterNamesVector(builder, numElems)

def EOObservationDetails_IngestAddNeutralDensityFilterTransmissions(builder, neutralDensityFilterTransmissions):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(neutralDensityFilterTransmissions), 0)

def AddNeutralDensityFilterTransmissions(builder, neutralDensityFilterTransmissions):
    EOObservationDetails_IngestAddNeutralDensityFilterTransmissions(builder, neutralDensityFilterTransmissions)

def EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartNeutralDensityFilterTransmissionsVector(builder, numElems):
    return EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsVector(builder, numElems)

def EOObservationDetails_IngestAddNeutralDensityFilterTransmissionsUnc(builder, neutralDensityFilterTransmissionsUnc):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(neutralDensityFilterTransmissionsUnc), 0)

def AddNeutralDensityFilterTransmissionsUnc(builder, neutralDensityFilterTransmissionsUnc):
    EOObservationDetails_IngestAddNeutralDensityFilterTransmissionsUnc(builder, neutralDensityFilterTransmissionsUnc)

def EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsUncVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartNeutralDensityFilterTransmissionsUncVector(builder, numElems):
    return EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsUncVector(builder, numElems)

def EOObservationDetails_IngestAddGain(builder, gain):
    builder.PrependFloat64Slot(22, gain, 0.0)

def AddGain(builder, gain):
    EOObservationDetails_IngestAddGain(builder, gain)

def EOObservationDetails_IngestAddIfov(builder, ifov):
    builder.PrependFloat64Slot(23, ifov, 0.0)

def AddIfov(builder, ifov):
    EOObservationDetails_IngestAddIfov(builder, ifov)

def EOObservationDetails_IngestAddPixelArrayWidth(builder, pixelArrayWidth):
    builder.PrependInt32Slot(24, pixelArrayWidth, 0)

def AddPixelArrayWidth(builder, pixelArrayWidth):
    EOObservationDetails_IngestAddPixelArrayWidth(builder, pixelArrayWidth)

def EOObservationDetails_IngestAddPixelArrayHeight(builder, pixelArrayHeight):
    builder.PrependInt32Slot(25, pixelArrayHeight, 0)

def AddPixelArrayHeight(builder, pixelArrayHeight):
    EOObservationDetails_IngestAddPixelArrayHeight(builder, pixelArrayHeight)

def EOObservationDetails_IngestAddPixelMin(builder, pixelMin):
    builder.PrependInt32Slot(26, pixelMin, 0)

def AddPixelMin(builder, pixelMin):
    EOObservationDetails_IngestAddPixelMin(builder, pixelMin)

def EOObservationDetails_IngestAddPixelMax(builder, pixelMax):
    builder.PrependInt32Slot(27, pixelMax, 0)

def AddPixelMax(builder, pixelMax):
    EOObservationDetails_IngestAddPixelMax(builder, pixelMax)

def EOObservationDetails_IngestAddCentroidRow(builder, centroidRow):
    builder.PrependFloat64Slot(28, centroidRow, 0.0)

def AddCentroidRow(builder, centroidRow):
    EOObservationDetails_IngestAddCentroidRow(builder, centroidRow)

def EOObservationDetails_IngestAddCentroidColumn(builder, centroidColumn):
    builder.PrependFloat64Slot(29, centroidColumn, 0.0)

def AddCentroidColumn(builder, centroidColumn):
    EOObservationDetails_IngestAddCentroidColumn(builder, centroidColumn)

def EOObservationDetails_IngestAddRowVariance(builder, rowVariance):
    builder.PrependFloat64Slot(30, rowVariance, 0.0)

def AddRowVariance(builder, rowVariance):
    EOObservationDetails_IngestAddRowVariance(builder, rowVariance)

def EOObservationDetails_IngestAddColumnVariance(builder, columnVariance):
    builder.PrependFloat64Slot(31, columnVariance, 0.0)

def AddColumnVariance(builder, columnVariance):
    EOObservationDetails_IngestAddColumnVariance(builder, columnVariance)

def EOObservationDetails_IngestAddRowColCov(builder, rowColCov):
    builder.PrependFloat64Slot(32, rowColCov, 0.0)

def AddRowColCov(builder, rowColCov):
    EOObservationDetails_IngestAddRowColCov(builder, rowColCov)

def EOObservationDetails_IngestAddDistFromStreakCenter(builder, distFromStreakCenter):
    builder.PrependUOffsetTRelativeSlot(33, flatbuffers.number_types.UOffsetTFlags.py_type(distFromStreakCenter), 0)

def AddDistFromStreakCenter(builder, distFromStreakCenter):
    EOObservationDetails_IngestAddDistFromStreakCenter(builder, distFromStreakCenter)

def EOObservationDetails_IngestStartDistFromStreakCenterVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartDistFromStreakCenterVector(builder, numElems):
    return EOObservationDetails_IngestStartDistFromStreakCenterVector(builder, numElems)

def EOObservationDetails_IngestAddSurfBrightness(builder, surfBrightness):
    builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(surfBrightness), 0)

def AddSurfBrightness(builder, surfBrightness):
    EOObservationDetails_IngestAddSurfBrightness(builder, surfBrightness)

def EOObservationDetails_IngestStartSurfBrightnessVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSurfBrightnessVector(builder, numElems):
    return EOObservationDetails_IngestStartSurfBrightnessVector(builder, numElems)

def EOObservationDetails_IngestAddSurfBrightnessUnc(builder, surfBrightnessUnc):
    builder.PrependUOffsetTRelativeSlot(35, flatbuffers.number_types.UOffsetTFlags.py_type(surfBrightnessUnc), 0)

def AddSurfBrightnessUnc(builder, surfBrightnessUnc):
    EOObservationDetails_IngestAddSurfBrightnessUnc(builder, surfBrightnessUnc)

def EOObservationDetails_IngestStartSurfBrightnessUncVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSurfBrightnessUncVector(builder, numElems):
    return EOObservationDetails_IngestStartSurfBrightnessUncVector(builder, numElems)

def EOObservationDetails_IngestAddTimesUnc(builder, timesUnc):
    builder.PrependFloat64Slot(36, timesUnc, 0.0)

def AddTimesUnc(builder, timesUnc):
    EOObservationDetails_IngestAddTimesUnc(builder, timesUnc)

def EOObservationDetails_IngestAddCcdTemp(builder, ccdTemp):
    builder.PrependFloat64Slot(37, ccdTemp, 0.0)

def AddCcdTemp(builder, ccdTemp):
    EOObservationDetails_IngestAddCcdTemp(builder, ccdTemp)

def EOObservationDetails_IngestAddCurrentSpectralFilterNum(builder, currentSpectralFilterNum):
    builder.PrependInt32Slot(38, currentSpectralFilterNum, 0)

def AddCurrentSpectralFilterNum(builder, currentSpectralFilterNum):
    EOObservationDetails_IngestAddCurrentSpectralFilterNum(builder, currentSpectralFilterNum)

def EOObservationDetails_IngestAddCurrentNeutralDensityFilterNum(builder, currentNeutralDensityFilterNum):
    builder.PrependInt32Slot(39, currentNeutralDensityFilterNum, 0)

def AddCurrentNeutralDensityFilterNum(builder, currentNeutralDensityFilterNum):
    EOObservationDetails_IngestAddCurrentNeutralDensityFilterNum(builder, currentNeutralDensityFilterNum)

def EOObservationDetails_IngestAddBinningHoriz(builder, binningHoriz):
    builder.PrependInt32Slot(40, binningHoriz, 0)

def AddBinningHoriz(builder, binningHoriz):
    EOObservationDetails_IngestAddBinningHoriz(builder, binningHoriz)

def EOObservationDetails_IngestAddBinningVert(builder, binningVert):
    builder.PrependInt32Slot(41, binningVert, 0)

def AddBinningVert(builder, binningVert):
    EOObservationDetails_IngestAddBinningVert(builder, binningVert)

def EOObservationDetails_IngestAddPcalNumStars(builder, pcalNumStars):
    builder.PrependInt32Slot(42, pcalNumStars, 0)

def AddPcalNumStars(builder, pcalNumStars):
    EOObservationDetails_IngestAddPcalNumStars(builder, pcalNumStars)

def EOObservationDetails_IngestAddCcdObjPosX(builder, ccdObjPosX):
    builder.PrependFloat64Slot(43, ccdObjPosX, 0.0)

def AddCcdObjPosX(builder, ccdObjPosX):
    EOObservationDetails_IngestAddCcdObjPosX(builder, ccdObjPosX)

def EOObservationDetails_IngestAddCcdObjPosY(builder, ccdObjPosY):
    builder.PrependFloat64Slot(44, ccdObjPosY, 0.0)

def AddCcdObjPosY(builder, ccdObjPosY):
    EOObservationDetails_IngestAddCcdObjPosY(builder, ccdObjPosY)

def EOObservationDetails_IngestAddCcdObjWidth(builder, ccdObjWidth):
    builder.PrependFloat64Slot(45, ccdObjWidth, 0.0)

def AddCcdObjWidth(builder, ccdObjWidth):
    EOObservationDetails_IngestAddCcdObjWidth(builder, ccdObjWidth)

def EOObservationDetails_IngestAddBackgroundSignal(builder, backgroundSignal):
    builder.PrependFloat64Slot(46, backgroundSignal, 0.0)

def AddBackgroundSignal(builder, backgroundSignal):
    EOObservationDetails_IngestAddBackgroundSignal(builder, backgroundSignal)

def EOObservationDetails_IngestAddBackgroundSignalUnc(builder, backgroundSignalUnc):
    builder.PrependFloat64Slot(47, backgroundSignalUnc, 0.0)

def AddBackgroundSignalUnc(builder, backgroundSignalUnc):
    EOObservationDetails_IngestAddBackgroundSignalUnc(builder, backgroundSignalUnc)

def EOObservationDetails_IngestAddPeakApertureCount(builder, peakApertureCount):
    builder.PrependFloat64Slot(48, peakApertureCount, 0.0)

def AddPeakApertureCount(builder, peakApertureCount):
    EOObservationDetails_IngestAddPeakApertureCount(builder, peakApertureCount)

def EOObservationDetails_IngestAddPeakBackgroundCount(builder, peakBackgroundCount):
    builder.PrependInt32Slot(49, peakBackgroundCount, 0)

def AddPeakBackgroundCount(builder, peakBackgroundCount):
    EOObservationDetails_IngestAddPeakBackgroundCount(builder, peakBackgroundCount)

def EOObservationDetails_IngestAddSnrEst(builder, snrEst):
    builder.PrependFloat64Slot(50, snrEst, 0.0)

def AddSnrEst(builder, snrEst):
    EOObservationDetails_IngestAddSnrEst(builder, snrEst)

def EOObservationDetails_IngestAddMagInstrumental(builder, magInstrumental):
    builder.PrependFloat64Slot(51, magInstrumental, 0.0)

def AddMagInstrumental(builder, magInstrumental):
    EOObservationDetails_IngestAddMagInstrumental(builder, magInstrumental)

def EOObservationDetails_IngestAddMagInstrumentalUnc(builder, magInstrumentalUnc):
    builder.PrependFloat64Slot(52, magInstrumentalUnc, 0.0)

def AddMagInstrumentalUnc(builder, magInstrumentalUnc):
    EOObservationDetails_IngestAddMagInstrumentalUnc(builder, magInstrumentalUnc)

def EOObservationDetails_IngestAddOpticalCrossSection(builder, opticalCrossSection):
    builder.PrependFloat64Slot(53, opticalCrossSection, 0.0)

def AddOpticalCrossSection(builder, opticalCrossSection):
    EOObservationDetails_IngestAddOpticalCrossSection(builder, opticalCrossSection)

def EOObservationDetails_IngestAddOpticalCrossSectionUnc(builder, opticalCrossSectionUnc):
    builder.PrependFloat64Slot(54, opticalCrossSectionUnc, 0.0)

def AddOpticalCrossSectionUnc(builder, opticalCrossSectionUnc):
    EOObservationDetails_IngestAddOpticalCrossSectionUnc(builder, opticalCrossSectionUnc)

def EOObservationDetails_IngestAddSunStatePosX(builder, sunStatePosX):
    builder.PrependFloat64Slot(55, sunStatePosX, 0.0)

def AddSunStatePosX(builder, sunStatePosX):
    EOObservationDetails_IngestAddSunStatePosX(builder, sunStatePosX)

def EOObservationDetails_IngestAddSunStatePosY(builder, sunStatePosY):
    builder.PrependFloat64Slot(56, sunStatePosY, 0.0)

def AddSunStatePosY(builder, sunStatePosY):
    EOObservationDetails_IngestAddSunStatePosY(builder, sunStatePosY)

def EOObservationDetails_IngestAddSunStatePosZ(builder, sunStatePosZ):
    builder.PrependFloat64Slot(57, sunStatePosZ, 0.0)

def AddSunStatePosZ(builder, sunStatePosZ):
    EOObservationDetails_IngestAddSunStatePosZ(builder, sunStatePosZ)

def EOObservationDetails_IngestAddSunStateVelX(builder, sunStateVelX):
    builder.PrependFloat64Slot(58, sunStateVelX, 0.0)

def AddSunStateVelX(builder, sunStateVelX):
    EOObservationDetails_IngestAddSunStateVelX(builder, sunStateVelX)

def EOObservationDetails_IngestAddSunStateVelY(builder, sunStateVelY):
    builder.PrependFloat64Slot(59, sunStateVelY, 0.0)

def AddSunStateVelY(builder, sunStateVelY):
    EOObservationDetails_IngestAddSunStateVelY(builder, sunStateVelY)

def EOObservationDetails_IngestAddSunStateVelZ(builder, sunStateVelZ):
    builder.PrependFloat64Slot(60, sunStateVelZ, 0.0)

def AddSunStateVelZ(builder, sunStateVelZ):
    EOObservationDetails_IngestAddSunStateVelZ(builder, sunStateVelZ)

def EOObservationDetails_IngestAddNumCatalogStars(builder, numCatalogStars):
    builder.PrependInt32Slot(61, numCatalogStars, 0)

def AddNumCatalogStars(builder, numCatalogStars):
    EOObservationDetails_IngestAddNumCatalogStars(builder, numCatalogStars)

def EOObservationDetails_IngestAddNumDetectedStars(builder, numDetectedStars):
    builder.PrependInt32Slot(62, numDetectedStars, 0)

def AddNumDetectedStars(builder, numDetectedStars):
    EOObservationDetails_IngestAddNumDetectedStars(builder, numDetectedStars)

def EOObservationDetails_IngestAddNumCorrelatedStars(builder, numCorrelatedStars):
    builder.PrependInt32Slot(63, numCorrelatedStars, 0)

def AddNumCorrelatedStars(builder, numCorrelatedStars):
    EOObservationDetails_IngestAddNumCorrelatedStars(builder, numCorrelatedStars)

def EOObservationDetails_IngestAddPredictedRaUnc(builder, predictedRaUnc):
    builder.PrependFloat64Slot(64, predictedRaUnc, 0.0)

def AddPredictedRaUnc(builder, predictedRaUnc):
    EOObservationDetails_IngestAddPredictedRaUnc(builder, predictedRaUnc)

def EOObservationDetails_IngestAddPredictedDeclinationUnc(builder, predictedDeclinationUnc):
    builder.PrependFloat64Slot(65, predictedDeclinationUnc, 0.0)

def AddPredictedDeclinationUnc(builder, predictedDeclinationUnc):
    EOObservationDetails_IngestAddPredictedDeclinationUnc(builder, predictedDeclinationUnc)

def EOObservationDetails_IngestAddRaCov(builder, raCov):
    builder.PrependFloat64Slot(66, raCov, 0.0)

def AddRaCov(builder, raCov):
    EOObservationDetails_IngestAddRaCov(builder, raCov)

def EOObservationDetails_IngestAddDeclinationCov(builder, declinationCov):
    builder.PrependFloat64Slot(67, declinationCov, 0.0)

def AddDeclinationCov(builder, declinationCov):
    EOObservationDetails_IngestAddDeclinationCov(builder, declinationCov)

def EOObservationDetails_IngestAddRaDeclinationCov(builder, raDeclinationCov):
    builder.PrependFloat64Slot(68, raDeclinationCov, 0.0)

def AddRaDeclinationCov(builder, raDeclinationCov):
    EOObservationDetails_IngestAddRaDeclinationCov(builder, raDeclinationCov)

def EOObservationDetails_IngestAddAcalCrPixX(builder, acalCrPixX):
    builder.PrependFloat64Slot(69, acalCrPixX, 0.0)

def AddAcalCrPixX(builder, acalCrPixX):
    EOObservationDetails_IngestAddAcalCrPixX(builder, acalCrPixX)

def EOObservationDetails_IngestAddAcalCrPixY(builder, acalCrPixY):
    builder.PrependFloat64Slot(70, acalCrPixY, 0.0)

def AddAcalCrPixY(builder, acalCrPixY):
    EOObservationDetails_IngestAddAcalCrPixY(builder, acalCrPixY)

def EOObservationDetails_IngestAddAcalCrValX(builder, acalCrValX):
    builder.PrependFloat64Slot(71, acalCrValX, 0.0)

def AddAcalCrValX(builder, acalCrValX):
    EOObservationDetails_IngestAddAcalCrValX(builder, acalCrValX)

def EOObservationDetails_IngestAddAcalCrValY(builder, acalCrValY):
    builder.PrependFloat64Slot(72, acalCrValY, 0.0)

def AddAcalCrValY(builder, acalCrValY):
    EOObservationDetails_IngestAddAcalCrValY(builder, acalCrValY)

def EOObservationDetails_IngestAddAcalNumStars(builder, acalNumStars):
    builder.PrependInt32Slot(73, acalNumStars, 0)

def AddAcalNumStars(builder, acalNumStars):
    EOObservationDetails_IngestAddAcalNumStars(builder, acalNumStars)

def EOObservationDetails_IngestAddObjSunRange(builder, objSunRange):
    builder.PrependFloat64Slot(74, objSunRange, 0.0)

def AddObjSunRange(builder, objSunRange):
    EOObservationDetails_IngestAddObjSunRange(builder, objSunRange)

def EOObservationDetails_IngestAddPhaseAngBisect(builder, phaseAngBisect):
    builder.PrependFloat64Slot(75, phaseAngBisect, 0.0)

def AddPhaseAngBisect(builder, phaseAngBisect):
    EOObservationDetails_IngestAddPhaseAngBisect(builder, phaseAngBisect)

def EOObservationDetails_IngestAddSolarDiskFrac(builder, solarDiskFrac):
    builder.PrependFloat64Slot(76, solarDiskFrac, 0.0)

def AddSolarDiskFrac(builder, solarDiskFrac):
    EOObservationDetails_IngestAddSolarDiskFrac(builder, solarDiskFrac)

def EOObservationDetails_IngestAddToes(builder, toes):
    builder.PrependFloat64Slot(77, toes, 0.0)

def AddToes(builder, toes):
    EOObservationDetails_IngestAddToes(builder, toes)

def EOObservationDetails_IngestAddDoes(builder, does):
    builder.PrependFloat64Slot(78, does, 0.0)

def AddDoes(builder, does):
    EOObservationDetails_IngestAddDoes(builder, does)

def EOObservationDetails_IngestAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(79, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    EOObservationDetails_IngestAddSource(builder, source)

def EOObservationDetails_IngestAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(80, dataMode, 0)

def AddDataMode(builder, dataMode):
    EOObservationDetails_IngestAddDataMode(builder, dataMode)

def EOObservationDetails_IngestAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(81, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    EOObservationDetails_IngestAddCreatedAt(builder, createdAt)

def EOObservationDetails_IngestAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(82, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    EOObservationDetails_IngestAddCreatedBy(builder, createdBy)

def EOObservationDetails_IngestEnd(builder):
    return builder.EndObject()

def End(builder):
    return EOObservationDetails_IngestEnd(builder)

try:
    from typing import List
except:
    pass

class EOObservationDetails_IngestT(object):

    # EOObservationDetails_IngestT
    def __init__(self):
        self.idEoobservation = None  # type: str
        self.classificationMarking = None  # type: str
        self.obTime = None  # type: str
        self.predictedRa = 0.0  # type: float
        self.predictedDeclination = 0.0  # type: float
        self.predictedAzimuth = 0.0  # type: float
        self.predictedElevation = 0.0  # type: float
        self.sunAzimuth = 0.0  # type: float
        self.sunElevation = 0.0  # type: float
        self.numSpectralFilters = 0  # type: int
        self.spectralFilters = None  # type: List[str]
        self.spectralZmfl = None  # type: List[str]
        self.spectralFilterSolarMag = None  # type: List[str]
        self.zeroPoints = None  # type: List[str]
        self.zeroPointsUnc = None  # type: List[str]
        self.extinctionCoeffs = None  # type: List[str]
        self.extinctionCoeffsUnc = None  # type: List[str]
        self.colorCoeffs = None  # type: List[str]
        self.numNeutralDensityFilters = 0  # type: int
        self.neutralDensityFilterNames = None  # type: List[str]
        self.neutralDensityFilterTransmissions = None  # type: List[str]
        self.neutralDensityFilterTransmissionsUnc = None  # type: List[str]
        self.gain = 0.0  # type: float
        self.ifov = 0.0  # type: float
        self.pixelArrayWidth = 0  # type: int
        self.pixelArrayHeight = 0  # type: int
        self.pixelMin = 0  # type: int
        self.pixelMax = 0  # type: int
        self.centroidRow = 0.0  # type: float
        self.centroidColumn = 0.0  # type: float
        self.rowVariance = 0.0  # type: float
        self.columnVariance = 0.0  # type: float
        self.rowColCov = 0.0  # type: float
        self.distFromStreakCenter = None  # type: List[str]
        self.surfBrightness = None  # type: List[str]
        self.surfBrightnessUnc = None  # type: List[str]
        self.timesUnc = 0.0  # type: float
        self.ccdTemp = 0.0  # type: float
        self.currentSpectralFilterNum = 0  # type: int
        self.currentNeutralDensityFilterNum = 0  # type: int
        self.binningHoriz = 0  # type: int
        self.binningVert = 0  # type: int
        self.pcalNumStars = 0  # type: int
        self.ccdObjPosX = 0.0  # type: float
        self.ccdObjPosY = 0.0  # type: float
        self.ccdObjWidth = 0.0  # type: float
        self.backgroundSignal = 0.0  # type: float
        self.backgroundSignalUnc = 0.0  # type: float
        self.peakApertureCount = 0.0  # type: float
        self.peakBackgroundCount = 0  # type: int
        self.snrEst = 0.0  # type: float
        self.magInstrumental = 0.0  # type: float
        self.magInstrumentalUnc = 0.0  # type: float
        self.opticalCrossSection = 0.0  # type: float
        self.opticalCrossSectionUnc = 0.0  # type: float
        self.sunStatePosX = 0.0  # type: float
        self.sunStatePosY = 0.0  # type: float
        self.sunStatePosZ = 0.0  # type: float
        self.sunStateVelX = 0.0  # type: float
        self.sunStateVelY = 0.0  # type: float
        self.sunStateVelZ = 0.0  # type: float
        self.numCatalogStars = 0  # type: int
        self.numDetectedStars = 0  # type: int
        self.numCorrelatedStars = 0  # type: int
        self.predictedRaUnc = 0.0  # type: float
        self.predictedDeclinationUnc = 0.0  # type: float
        self.raCov = 0.0  # type: float
        self.declinationCov = 0.0  # type: float
        self.raDeclinationCov = 0.0  # type: float
        self.acalCrPixX = 0.0  # type: float
        self.acalCrPixY = 0.0  # type: float
        self.acalCrValX = 0.0  # type: float
        self.acalCrValY = 0.0  # type: float
        self.acalNumStars = 0  # type: int
        self.objSunRange = 0.0  # type: float
        self.phaseAngBisect = 0.0  # type: float
        self.solarDiskFrac = 0.0  # type: float
        self.toes = 0.0  # type: float
        self.does = 0.0  # type: float
        self.source = None  # type: str
        self.dataMode = 0  # type: int
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        eoobservationDetailsIngest = EOObservationDetails_Ingest()
        eoobservationDetailsIngest.Init(buf, pos)
        return cls.InitFromObj(eoobservationDetailsIngest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, eoobservationDetailsIngest):
        x = EOObservationDetails_IngestT()
        x._UnPack(eoobservationDetailsIngest)
        return x

    # EOObservationDetails_IngestT
    def _UnPack(self, eoobservationDetailsIngest):
        if eoobservationDetailsIngest is None:
            return
        self.idEoobservation = eoobservationDetailsIngest.IdEoobservation()
        self.classificationMarking = eoobservationDetailsIngest.ClassificationMarking()
        self.obTime = eoobservationDetailsIngest.ObTime()
        self.predictedRa = eoobservationDetailsIngest.PredictedRa()
        self.predictedDeclination = eoobservationDetailsIngest.PredictedDeclination()
        self.predictedAzimuth = eoobservationDetailsIngest.PredictedAzimuth()
        self.predictedElevation = eoobservationDetailsIngest.PredictedElevation()
        self.sunAzimuth = eoobservationDetailsIngest.SunAzimuth()
        self.sunElevation = eoobservationDetailsIngest.SunElevation()
        self.numSpectralFilters = eoobservationDetailsIngest.NumSpectralFilters()
        if not eoobservationDetailsIngest.SpectralFiltersIsNone():
            self.spectralFilters = []
            for i in range(eoobservationDetailsIngest.SpectralFiltersLength()):
                self.spectralFilters.append(eoobservationDetailsIngest.SpectralFilters(i))
        if not eoobservationDetailsIngest.SpectralZmflIsNone():
            self.spectralZmfl = []
            for i in range(eoobservationDetailsIngest.SpectralZmflLength()):
                self.spectralZmfl.append(eoobservationDetailsIngest.SpectralZmfl(i))
        if not eoobservationDetailsIngest.SpectralFilterSolarMagIsNone():
            self.spectralFilterSolarMag = []
            for i in range(eoobservationDetailsIngest.SpectralFilterSolarMagLength()):
                self.spectralFilterSolarMag.append(eoobservationDetailsIngest.SpectralFilterSolarMag(i))
        if not eoobservationDetailsIngest.ZeroPointsIsNone():
            self.zeroPoints = []
            for i in range(eoobservationDetailsIngest.ZeroPointsLength()):
                self.zeroPoints.append(eoobservationDetailsIngest.ZeroPoints(i))
        if not eoobservationDetailsIngest.ZeroPointsUncIsNone():
            self.zeroPointsUnc = []
            for i in range(eoobservationDetailsIngest.ZeroPointsUncLength()):
                self.zeroPointsUnc.append(eoobservationDetailsIngest.ZeroPointsUnc(i))
        if not eoobservationDetailsIngest.ExtinctionCoeffsIsNone():
            self.extinctionCoeffs = []
            for i in range(eoobservationDetailsIngest.ExtinctionCoeffsLength()):
                self.extinctionCoeffs.append(eoobservationDetailsIngest.ExtinctionCoeffs(i))
        if not eoobservationDetailsIngest.ExtinctionCoeffsUncIsNone():
            self.extinctionCoeffsUnc = []
            for i in range(eoobservationDetailsIngest.ExtinctionCoeffsUncLength()):
                self.extinctionCoeffsUnc.append(eoobservationDetailsIngest.ExtinctionCoeffsUnc(i))
        if not eoobservationDetailsIngest.ColorCoeffsIsNone():
            self.colorCoeffs = []
            for i in range(eoobservationDetailsIngest.ColorCoeffsLength()):
                self.colorCoeffs.append(eoobservationDetailsIngest.ColorCoeffs(i))
        self.numNeutralDensityFilters = eoobservationDetailsIngest.NumNeutralDensityFilters()
        if not eoobservationDetailsIngest.NeutralDensityFilterNamesIsNone():
            self.neutralDensityFilterNames = []
            for i in range(eoobservationDetailsIngest.NeutralDensityFilterNamesLength()):
                self.neutralDensityFilterNames.append(eoobservationDetailsIngest.NeutralDensityFilterNames(i))
        if not eoobservationDetailsIngest.NeutralDensityFilterTransmissionsIsNone():
            self.neutralDensityFilterTransmissions = []
            for i in range(eoobservationDetailsIngest.NeutralDensityFilterTransmissionsLength()):
                self.neutralDensityFilterTransmissions.append(eoobservationDetailsIngest.NeutralDensityFilterTransmissions(i))
        if not eoobservationDetailsIngest.NeutralDensityFilterTransmissionsUncIsNone():
            self.neutralDensityFilterTransmissionsUnc = []
            for i in range(eoobservationDetailsIngest.NeutralDensityFilterTransmissionsUncLength()):
                self.neutralDensityFilterTransmissionsUnc.append(eoobservationDetailsIngest.NeutralDensityFilterTransmissionsUnc(i))
        self.gain = eoobservationDetailsIngest.Gain()
        self.ifov = eoobservationDetailsIngest.Ifov()
        self.pixelArrayWidth = eoobservationDetailsIngest.PixelArrayWidth()
        self.pixelArrayHeight = eoobservationDetailsIngest.PixelArrayHeight()
        self.pixelMin = eoobservationDetailsIngest.PixelMin()
        self.pixelMax = eoobservationDetailsIngest.PixelMax()
        self.centroidRow = eoobservationDetailsIngest.CentroidRow()
        self.centroidColumn = eoobservationDetailsIngest.CentroidColumn()
        self.rowVariance = eoobservationDetailsIngest.RowVariance()
        self.columnVariance = eoobservationDetailsIngest.ColumnVariance()
        self.rowColCov = eoobservationDetailsIngest.RowColCov()
        if not eoobservationDetailsIngest.DistFromStreakCenterIsNone():
            self.distFromStreakCenter = []
            for i in range(eoobservationDetailsIngest.DistFromStreakCenterLength()):
                self.distFromStreakCenter.append(eoobservationDetailsIngest.DistFromStreakCenter(i))
        if not eoobservationDetailsIngest.SurfBrightnessIsNone():
            self.surfBrightness = []
            for i in range(eoobservationDetailsIngest.SurfBrightnessLength()):
                self.surfBrightness.append(eoobservationDetailsIngest.SurfBrightness(i))
        if not eoobservationDetailsIngest.SurfBrightnessUncIsNone():
            self.surfBrightnessUnc = []
            for i in range(eoobservationDetailsIngest.SurfBrightnessUncLength()):
                self.surfBrightnessUnc.append(eoobservationDetailsIngest.SurfBrightnessUnc(i))
        self.timesUnc = eoobservationDetailsIngest.TimesUnc()
        self.ccdTemp = eoobservationDetailsIngest.CcdTemp()
        self.currentSpectralFilterNum = eoobservationDetailsIngest.CurrentSpectralFilterNum()
        self.currentNeutralDensityFilterNum = eoobservationDetailsIngest.CurrentNeutralDensityFilterNum()
        self.binningHoriz = eoobservationDetailsIngest.BinningHoriz()
        self.binningVert = eoobservationDetailsIngest.BinningVert()
        self.pcalNumStars = eoobservationDetailsIngest.PcalNumStars()
        self.ccdObjPosX = eoobservationDetailsIngest.CcdObjPosX()
        self.ccdObjPosY = eoobservationDetailsIngest.CcdObjPosY()
        self.ccdObjWidth = eoobservationDetailsIngest.CcdObjWidth()
        self.backgroundSignal = eoobservationDetailsIngest.BackgroundSignal()
        self.backgroundSignalUnc = eoobservationDetailsIngest.BackgroundSignalUnc()
        self.peakApertureCount = eoobservationDetailsIngest.PeakApertureCount()
        self.peakBackgroundCount = eoobservationDetailsIngest.PeakBackgroundCount()
        self.snrEst = eoobservationDetailsIngest.SnrEst()
        self.magInstrumental = eoobservationDetailsIngest.MagInstrumental()
        self.magInstrumentalUnc = eoobservationDetailsIngest.MagInstrumentalUnc()
        self.opticalCrossSection = eoobservationDetailsIngest.OpticalCrossSection()
        self.opticalCrossSectionUnc = eoobservationDetailsIngest.OpticalCrossSectionUnc()
        self.sunStatePosX = eoobservationDetailsIngest.SunStatePosX()
        self.sunStatePosY = eoobservationDetailsIngest.SunStatePosY()
        self.sunStatePosZ = eoobservationDetailsIngest.SunStatePosZ()
        self.sunStateVelX = eoobservationDetailsIngest.SunStateVelX()
        self.sunStateVelY = eoobservationDetailsIngest.SunStateVelY()
        self.sunStateVelZ = eoobservationDetailsIngest.SunStateVelZ()
        self.numCatalogStars = eoobservationDetailsIngest.NumCatalogStars()
        self.numDetectedStars = eoobservationDetailsIngest.NumDetectedStars()
        self.numCorrelatedStars = eoobservationDetailsIngest.NumCorrelatedStars()
        self.predictedRaUnc = eoobservationDetailsIngest.PredictedRaUnc()
        self.predictedDeclinationUnc = eoobservationDetailsIngest.PredictedDeclinationUnc()
        self.raCov = eoobservationDetailsIngest.RaCov()
        self.declinationCov = eoobservationDetailsIngest.DeclinationCov()
        self.raDeclinationCov = eoobservationDetailsIngest.RaDeclinationCov()
        self.acalCrPixX = eoobservationDetailsIngest.AcalCrPixX()
        self.acalCrPixY = eoobservationDetailsIngest.AcalCrPixY()
        self.acalCrValX = eoobservationDetailsIngest.AcalCrValX()
        self.acalCrValY = eoobservationDetailsIngest.AcalCrValY()
        self.acalNumStars = eoobservationDetailsIngest.AcalNumStars()
        self.objSunRange = eoobservationDetailsIngest.ObjSunRange()
        self.phaseAngBisect = eoobservationDetailsIngest.PhaseAngBisect()
        self.solarDiskFrac = eoobservationDetailsIngest.SolarDiskFrac()
        self.toes = eoobservationDetailsIngest.Toes()
        self.does = eoobservationDetailsIngest.Does()
        self.source = eoobservationDetailsIngest.Source()
        self.dataMode = eoobservationDetailsIngest.DataMode()
        self.createdAt = eoobservationDetailsIngest.CreatedAt()
        self.createdBy = eoobservationDetailsIngest.CreatedBy()

    # EOObservationDetails_IngestT
    def Pack(self, builder):
        if self.idEoobservation is not None:
            idEoobservation = builder.CreateString(self.idEoobservation)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.obTime is not None:
            obTime = builder.CreateString(self.obTime)
        if self.spectralFilters is not None:
            spectralFilterslist = []
            for i in range(len(self.spectralFilters)):
                spectralFilterslist.append(builder.CreateString(self.spectralFilters[i]))
            EOObservationDetails_IngestStartSpectralFiltersVector(builder, len(self.spectralFilters))
            for i in reversed(range(len(self.spectralFilters))):
                builder.PrependUOffsetTRelative(spectralFilterslist[i])
            spectralFilters = builder.EndVector()
        if self.spectralZmfl is not None:
            spectralZmfllist = []
            for i in range(len(self.spectralZmfl)):
                spectralZmfllist.append(builder.CreateString(self.spectralZmfl[i]))
            EOObservationDetails_IngestStartSpectralZmflVector(builder, len(self.spectralZmfl))
            for i in reversed(range(len(self.spectralZmfl))):
                builder.PrependUOffsetTRelative(spectralZmfllist[i])
            spectralZmfl = builder.EndVector()
        if self.spectralFilterSolarMag is not None:
            spectralFilterSolarMaglist = []
            for i in range(len(self.spectralFilterSolarMag)):
                spectralFilterSolarMaglist.append(builder.CreateString(self.spectralFilterSolarMag[i]))
            EOObservationDetails_IngestStartSpectralFilterSolarMagVector(builder, len(self.spectralFilterSolarMag))
            for i in reversed(range(len(self.spectralFilterSolarMag))):
                builder.PrependUOffsetTRelative(spectralFilterSolarMaglist[i])
            spectralFilterSolarMag = builder.EndVector()
        if self.zeroPoints is not None:
            zeroPointslist = []
            for i in range(len(self.zeroPoints)):
                zeroPointslist.append(builder.CreateString(self.zeroPoints[i]))
            EOObservationDetails_IngestStartZeroPointsVector(builder, len(self.zeroPoints))
            for i in reversed(range(len(self.zeroPoints))):
                builder.PrependUOffsetTRelative(zeroPointslist[i])
            zeroPoints = builder.EndVector()
        if self.zeroPointsUnc is not None:
            zeroPointsUnclist = []
            for i in range(len(self.zeroPointsUnc)):
                zeroPointsUnclist.append(builder.CreateString(self.zeroPointsUnc[i]))
            EOObservationDetails_IngestStartZeroPointsUncVector(builder, len(self.zeroPointsUnc))
            for i in reversed(range(len(self.zeroPointsUnc))):
                builder.PrependUOffsetTRelative(zeroPointsUnclist[i])
            zeroPointsUnc = builder.EndVector()
        if self.extinctionCoeffs is not None:
            extinctionCoeffslist = []
            for i in range(len(self.extinctionCoeffs)):
                extinctionCoeffslist.append(builder.CreateString(self.extinctionCoeffs[i]))
            EOObservationDetails_IngestStartExtinctionCoeffsVector(builder, len(self.extinctionCoeffs))
            for i in reversed(range(len(self.extinctionCoeffs))):
                builder.PrependUOffsetTRelative(extinctionCoeffslist[i])
            extinctionCoeffs = builder.EndVector()
        if self.extinctionCoeffsUnc is not None:
            extinctionCoeffsUnclist = []
            for i in range(len(self.extinctionCoeffsUnc)):
                extinctionCoeffsUnclist.append(builder.CreateString(self.extinctionCoeffsUnc[i]))
            EOObservationDetails_IngestStartExtinctionCoeffsUncVector(builder, len(self.extinctionCoeffsUnc))
            for i in reversed(range(len(self.extinctionCoeffsUnc))):
                builder.PrependUOffsetTRelative(extinctionCoeffsUnclist[i])
            extinctionCoeffsUnc = builder.EndVector()
        if self.colorCoeffs is not None:
            colorCoeffslist = []
            for i in range(len(self.colorCoeffs)):
                colorCoeffslist.append(builder.CreateString(self.colorCoeffs[i]))
            EOObservationDetails_IngestStartColorCoeffsVector(builder, len(self.colorCoeffs))
            for i in reversed(range(len(self.colorCoeffs))):
                builder.PrependUOffsetTRelative(colorCoeffslist[i])
            colorCoeffs = builder.EndVector()
        if self.neutralDensityFilterNames is not None:
            neutralDensityFilterNameslist = []
            for i in range(len(self.neutralDensityFilterNames)):
                neutralDensityFilterNameslist.append(builder.CreateString(self.neutralDensityFilterNames[i]))
            EOObservationDetails_IngestStartNeutralDensityFilterNamesVector(builder, len(self.neutralDensityFilterNames))
            for i in reversed(range(len(self.neutralDensityFilterNames))):
                builder.PrependUOffsetTRelative(neutralDensityFilterNameslist[i])
            neutralDensityFilterNames = builder.EndVector()
        if self.neutralDensityFilterTransmissions is not None:
            neutralDensityFilterTransmissionslist = []
            for i in range(len(self.neutralDensityFilterTransmissions)):
                neutralDensityFilterTransmissionslist.append(builder.CreateString(self.neutralDensityFilterTransmissions[i]))
            EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsVector(builder, len(self.neutralDensityFilterTransmissions))
            for i in reversed(range(len(self.neutralDensityFilterTransmissions))):
                builder.PrependUOffsetTRelative(neutralDensityFilterTransmissionslist[i])
            neutralDensityFilterTransmissions = builder.EndVector()
        if self.neutralDensityFilterTransmissionsUnc is not None:
            neutralDensityFilterTransmissionsUnclist = []
            for i in range(len(self.neutralDensityFilterTransmissionsUnc)):
                neutralDensityFilterTransmissionsUnclist.append(builder.CreateString(self.neutralDensityFilterTransmissionsUnc[i]))
            EOObservationDetails_IngestStartNeutralDensityFilterTransmissionsUncVector(builder, len(self.neutralDensityFilterTransmissionsUnc))
            for i in reversed(range(len(self.neutralDensityFilterTransmissionsUnc))):
                builder.PrependUOffsetTRelative(neutralDensityFilterTransmissionsUnclist[i])
            neutralDensityFilterTransmissionsUnc = builder.EndVector()
        if self.distFromStreakCenter is not None:
            distFromStreakCenterlist = []
            for i in range(len(self.distFromStreakCenter)):
                distFromStreakCenterlist.append(builder.CreateString(self.distFromStreakCenter[i]))
            EOObservationDetails_IngestStartDistFromStreakCenterVector(builder, len(self.distFromStreakCenter))
            for i in reversed(range(len(self.distFromStreakCenter))):
                builder.PrependUOffsetTRelative(distFromStreakCenterlist[i])
            distFromStreakCenter = builder.EndVector()
        if self.surfBrightness is not None:
            surfBrightnesslist = []
            for i in range(len(self.surfBrightness)):
                surfBrightnesslist.append(builder.CreateString(self.surfBrightness[i]))
            EOObservationDetails_IngestStartSurfBrightnessVector(builder, len(self.surfBrightness))
            for i in reversed(range(len(self.surfBrightness))):
                builder.PrependUOffsetTRelative(surfBrightnesslist[i])
            surfBrightness = builder.EndVector()
        if self.surfBrightnessUnc is not None:
            surfBrightnessUnclist = []
            for i in range(len(self.surfBrightnessUnc)):
                surfBrightnessUnclist.append(builder.CreateString(self.surfBrightnessUnc[i]))
            EOObservationDetails_IngestStartSurfBrightnessUncVector(builder, len(self.surfBrightnessUnc))
            for i in reversed(range(len(self.surfBrightnessUnc))):
                builder.PrependUOffsetTRelative(surfBrightnessUnclist[i])
            surfBrightnessUnc = builder.EndVector()
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        EOObservationDetails_IngestStart(builder)
        if self.idEoobservation is not None:
            EOObservationDetails_IngestAddIdEoobservation(builder, idEoobservation)
        if self.classificationMarking is not None:
            EOObservationDetails_IngestAddClassificationMarking(builder, classificationMarking)
        if self.obTime is not None:
            EOObservationDetails_IngestAddObTime(builder, obTime)
        EOObservationDetails_IngestAddPredictedRa(builder, self.predictedRa)
        EOObservationDetails_IngestAddPredictedDeclination(builder, self.predictedDeclination)
        EOObservationDetails_IngestAddPredictedAzimuth(builder, self.predictedAzimuth)
        EOObservationDetails_IngestAddPredictedElevation(builder, self.predictedElevation)
        EOObservationDetails_IngestAddSunAzimuth(builder, self.sunAzimuth)
        EOObservationDetails_IngestAddSunElevation(builder, self.sunElevation)
        EOObservationDetails_IngestAddNumSpectralFilters(builder, self.numSpectralFilters)
        if self.spectralFilters is not None:
            EOObservationDetails_IngestAddSpectralFilters(builder, spectralFilters)
        if self.spectralZmfl is not None:
            EOObservationDetails_IngestAddSpectralZmfl(builder, spectralZmfl)
        if self.spectralFilterSolarMag is not None:
            EOObservationDetails_IngestAddSpectralFilterSolarMag(builder, spectralFilterSolarMag)
        if self.zeroPoints is not None:
            EOObservationDetails_IngestAddZeroPoints(builder, zeroPoints)
        if self.zeroPointsUnc is not None:
            EOObservationDetails_IngestAddZeroPointsUnc(builder, zeroPointsUnc)
        if self.extinctionCoeffs is not None:
            EOObservationDetails_IngestAddExtinctionCoeffs(builder, extinctionCoeffs)
        if self.extinctionCoeffsUnc is not None:
            EOObservationDetails_IngestAddExtinctionCoeffsUnc(builder, extinctionCoeffsUnc)
        if self.colorCoeffs is not None:
            EOObservationDetails_IngestAddColorCoeffs(builder, colorCoeffs)
        EOObservationDetails_IngestAddNumNeutralDensityFilters(builder, self.numNeutralDensityFilters)
        if self.neutralDensityFilterNames is not None:
            EOObservationDetails_IngestAddNeutralDensityFilterNames(builder, neutralDensityFilterNames)
        if self.neutralDensityFilterTransmissions is not None:
            EOObservationDetails_IngestAddNeutralDensityFilterTransmissions(builder, neutralDensityFilterTransmissions)
        if self.neutralDensityFilterTransmissionsUnc is not None:
            EOObservationDetails_IngestAddNeutralDensityFilterTransmissionsUnc(builder, neutralDensityFilterTransmissionsUnc)
        EOObservationDetails_IngestAddGain(builder, self.gain)
        EOObservationDetails_IngestAddIfov(builder, self.ifov)
        EOObservationDetails_IngestAddPixelArrayWidth(builder, self.pixelArrayWidth)
        EOObservationDetails_IngestAddPixelArrayHeight(builder, self.pixelArrayHeight)
        EOObservationDetails_IngestAddPixelMin(builder, self.pixelMin)
        EOObservationDetails_IngestAddPixelMax(builder, self.pixelMax)
        EOObservationDetails_IngestAddCentroidRow(builder, self.centroidRow)
        EOObservationDetails_IngestAddCentroidColumn(builder, self.centroidColumn)
        EOObservationDetails_IngestAddRowVariance(builder, self.rowVariance)
        EOObservationDetails_IngestAddColumnVariance(builder, self.columnVariance)
        EOObservationDetails_IngestAddRowColCov(builder, self.rowColCov)
        if self.distFromStreakCenter is not None:
            EOObservationDetails_IngestAddDistFromStreakCenter(builder, distFromStreakCenter)
        if self.surfBrightness is not None:
            EOObservationDetails_IngestAddSurfBrightness(builder, surfBrightness)
        if self.surfBrightnessUnc is not None:
            EOObservationDetails_IngestAddSurfBrightnessUnc(builder, surfBrightnessUnc)
        EOObservationDetails_IngestAddTimesUnc(builder, self.timesUnc)
        EOObservationDetails_IngestAddCcdTemp(builder, self.ccdTemp)
        EOObservationDetails_IngestAddCurrentSpectralFilterNum(builder, self.currentSpectralFilterNum)
        EOObservationDetails_IngestAddCurrentNeutralDensityFilterNum(builder, self.currentNeutralDensityFilterNum)
        EOObservationDetails_IngestAddBinningHoriz(builder, self.binningHoriz)
        EOObservationDetails_IngestAddBinningVert(builder, self.binningVert)
        EOObservationDetails_IngestAddPcalNumStars(builder, self.pcalNumStars)
        EOObservationDetails_IngestAddCcdObjPosX(builder, self.ccdObjPosX)
        EOObservationDetails_IngestAddCcdObjPosY(builder, self.ccdObjPosY)
        EOObservationDetails_IngestAddCcdObjWidth(builder, self.ccdObjWidth)
        EOObservationDetails_IngestAddBackgroundSignal(builder, self.backgroundSignal)
        EOObservationDetails_IngestAddBackgroundSignalUnc(builder, self.backgroundSignalUnc)
        EOObservationDetails_IngestAddPeakApertureCount(builder, self.peakApertureCount)
        EOObservationDetails_IngestAddPeakBackgroundCount(builder, self.peakBackgroundCount)
        EOObservationDetails_IngestAddSnrEst(builder, self.snrEst)
        EOObservationDetails_IngestAddMagInstrumental(builder, self.magInstrumental)
        EOObservationDetails_IngestAddMagInstrumentalUnc(builder, self.magInstrumentalUnc)
        EOObservationDetails_IngestAddOpticalCrossSection(builder, self.opticalCrossSection)
        EOObservationDetails_IngestAddOpticalCrossSectionUnc(builder, self.opticalCrossSectionUnc)
        EOObservationDetails_IngestAddSunStatePosX(builder, self.sunStatePosX)
        EOObservationDetails_IngestAddSunStatePosY(builder, self.sunStatePosY)
        EOObservationDetails_IngestAddSunStatePosZ(builder, self.sunStatePosZ)
        EOObservationDetails_IngestAddSunStateVelX(builder, self.sunStateVelX)
        EOObservationDetails_IngestAddSunStateVelY(builder, self.sunStateVelY)
        EOObservationDetails_IngestAddSunStateVelZ(builder, self.sunStateVelZ)
        EOObservationDetails_IngestAddNumCatalogStars(builder, self.numCatalogStars)
        EOObservationDetails_IngestAddNumDetectedStars(builder, self.numDetectedStars)
        EOObservationDetails_IngestAddNumCorrelatedStars(builder, self.numCorrelatedStars)
        EOObservationDetails_IngestAddPredictedRaUnc(builder, self.predictedRaUnc)
        EOObservationDetails_IngestAddPredictedDeclinationUnc(builder, self.predictedDeclinationUnc)
        EOObservationDetails_IngestAddRaCov(builder, self.raCov)
        EOObservationDetails_IngestAddDeclinationCov(builder, self.declinationCov)
        EOObservationDetails_IngestAddRaDeclinationCov(builder, self.raDeclinationCov)
        EOObservationDetails_IngestAddAcalCrPixX(builder, self.acalCrPixX)
        EOObservationDetails_IngestAddAcalCrPixY(builder, self.acalCrPixY)
        EOObservationDetails_IngestAddAcalCrValX(builder, self.acalCrValX)
        EOObservationDetails_IngestAddAcalCrValY(builder, self.acalCrValY)
        EOObservationDetails_IngestAddAcalNumStars(builder, self.acalNumStars)
        EOObservationDetails_IngestAddObjSunRange(builder, self.objSunRange)
        EOObservationDetails_IngestAddPhaseAngBisect(builder, self.phaseAngBisect)
        EOObservationDetails_IngestAddSolarDiskFrac(builder, self.solarDiskFrac)
        EOObservationDetails_IngestAddToes(builder, self.toes)
        EOObservationDetails_IngestAddDoes(builder, self.does)
        if self.source is not None:
            EOObservationDetails_IngestAddSource(builder, source)
        EOObservationDetails_IngestAddDataMode(builder, self.dataMode)
        if self.createdAt is not None:
            EOObservationDetails_IngestAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            EOObservationDetails_IngestAddCreatedBy(builder, createdBy)
        eoobservationDetailsIngest = EOObservationDetails_IngestEnd(builder)
        return eoobservationDetailsIngest
