# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Model representation of launch vehicle details and characteristics, compiled by a particular source. A vehicle may have multiple details records from various sources.
class LaunchVehicleDetails_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = LaunchVehicleDetails_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsLaunchVehicleDetails_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def LaunchVehicleDetails_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4C\x41\x55\x4E", size_prefixed=size_prefixed)

    # LaunchVehicleDetails_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: LAUNCHVEHICLEDETAILS-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # LaunchVehicleDetails_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Identifier of the parent launch vehicle record.
    # Example: /// Example: LAUNCHVEHICLE-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # LaunchVehicleDetails_Abridged
    def IdLaunchVehicle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # LaunchVehicleDetails_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle variant.
    # Example: /// Example: Example-variant
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Variant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle minor variant.
    # Example: /// Example: Example-minor-variant
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def MinorVariant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle category.
    # Example: /// Example: Example-category
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ID of the organization that manufactures the launch vehicle.
    # Example: /// Example: MANUFACTURERORG-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # LaunchVehicleDetails_Abridged
    def ManufacturerOrgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle launch prefix.
    # Example: /// Example: AX011
    # Constraints: Minimum length = 0, Maximum length = 8
    # LaunchVehicleDetails_Abridged
    def LaunchPrefix(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle family.
    # Example: /// Example: Example-family
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Family(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Propellant type.
    # Example: /// Example: Nitrogen
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Propellant(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Oxidizer type.
    # Example: /// Example: Bromine
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Oxidizer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle length in meters.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def Length(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle diameter in meters.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def Diameter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle total mass at launch time in kg (including all boosters).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def LaunchMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Maximum vehicle payload mass to GEO orbit in kg.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GeoPayloadMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Max vehicle payload mass to Geo-Transfer Orbit in kg.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoPayloadMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Max vehicle payload mass to LEO orbit in kg.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def LeoPayloadMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Max vehicle payload mass to Sun-Synchronous Orbit in kg.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def SsoPayloadMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle fairing length in meters.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def FairingLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Name of the fairing.
    # Example: /// Example: Example-fairing-name
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def FairingName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle fairing maximum external diameter in meters.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def FairingExternalDiameter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle fairing maximum internal diameter in meters.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def FairingInternalDiameter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle fairing mass in kg.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def FairingMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Fairing material.
    # Example: /// Example: Example-fairing-material
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def FairingMaterial(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Vehicle maximum acceleration load in g.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxAccelLoad(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum payload lateral frequency in Hz.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxPayloadFreqLat(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum payload longitudinal frequency in Hz.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxPayloadFreqLon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum acoustic level in dB.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxAcousticLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum acoustic level range in Hz.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxAcousticLevelRange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle overall sound pressure level in dB.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def SoundPressureLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum flight shock force in g.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxFlightShockForce(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle maximum flight shock frequency in Hz.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxFlightShockFreq(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vehicle fairing maximum pressure change in kPa/sec.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def MaxFairingPressureChange(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle estimated launch price in US dollars.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def EstLaunchPrice(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle typical estimated launch price in US dollars.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def EstLaunchPriceTypical(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Apogee Target (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyApogeeTarget(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Apogee Margin (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyApogeeMargin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Perigee Target (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyPerigeeTarget(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Perigee Margin (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyPerigeeMargin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Inclination Target (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyInclinationTarget(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle GTO Injection 3 Sigma Accuracy Inclination Margin (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def GtoInj3SigAccuracyInclinationMargin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle attitude accuracy (degrees).
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def AttitudeAccuracy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle payload separation rate in m/s.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def PayloadSeparationRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Launch vehicle deployment rotation rate in RPM.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def DeploymentRotationRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Optional URL for additional information on the vehicle.
    # Example: /// Example: Example URL
    # Constraints: Minimum length = 0, Maximum length = 256
    # LaunchVehicleDetails_Abridged
    def SourceUrl(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes/Description of the launch vehicle.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 512
    # LaunchVehicleDetails_Abridged
    def Notes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes/Description of the launch vehicle fairing.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 512
    # LaunchVehicleDetails_Abridged
    def FairingNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes/Description of the launch vehicle payload.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 512
    # LaunchVehicleDetails_Abridged
    def PayloadNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # LaunchVehicleDetails_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # LaunchVehicleDetails_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 1, Maximum length = 32
    # LaunchVehicleDetails_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # LaunchVehicleDetails_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def LaunchVehicleDetails_AbridgedStart(builder):
    builder.StartObject(54)

def Start(builder):
    LaunchVehicleDetails_AbridgedStart(builder)

def LaunchVehicleDetails_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    LaunchVehicleDetails_AbridgedAddId(builder, id)

def LaunchVehicleDetails_AbridgedAddIdLaunchVehicle(builder, idLaunchVehicle):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(idLaunchVehicle), 0)

def AddIdLaunchVehicle(builder, idLaunchVehicle):
    LaunchVehicleDetails_AbridgedAddIdLaunchVehicle(builder, idLaunchVehicle)

def LaunchVehicleDetails_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    LaunchVehicleDetails_AbridgedAddClassificationMarking(builder, classificationMarking)

def LaunchVehicleDetails_AbridgedAddVariant(builder, variant):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(variant), 0)

def AddVariant(builder, variant):
    LaunchVehicleDetails_AbridgedAddVariant(builder, variant)

def LaunchVehicleDetails_AbridgedAddMinorVariant(builder, minorVariant):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(minorVariant), 0)

def AddMinorVariant(builder, minorVariant):
    LaunchVehicleDetails_AbridgedAddMinorVariant(builder, minorVariant)

def LaunchVehicleDetails_AbridgedAddCategory(builder, category):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(category), 0)

def AddCategory(builder, category):
    LaunchVehicleDetails_AbridgedAddCategory(builder, category)

def LaunchVehicleDetails_AbridgedAddManufacturerOrgId(builder, manufacturerOrgId):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(manufacturerOrgId), 0)

def AddManufacturerOrgId(builder, manufacturerOrgId):
    LaunchVehicleDetails_AbridgedAddManufacturerOrgId(builder, manufacturerOrgId)

def LaunchVehicleDetails_AbridgedAddLaunchPrefix(builder, launchPrefix):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(launchPrefix), 0)

def AddLaunchPrefix(builder, launchPrefix):
    LaunchVehicleDetails_AbridgedAddLaunchPrefix(builder, launchPrefix)

def LaunchVehicleDetails_AbridgedAddFamily(builder, family):
    builder.PrependUOffsetTRelativeSlot(8, flatbuffers.number_types.UOffsetTFlags.py_type(family), 0)

def AddFamily(builder, family):
    LaunchVehicleDetails_AbridgedAddFamily(builder, family)

def LaunchVehicleDetails_AbridgedAddPropellant(builder, propellant):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(propellant), 0)

def AddPropellant(builder, propellant):
    LaunchVehicleDetails_AbridgedAddPropellant(builder, propellant)

def LaunchVehicleDetails_AbridgedAddOxidizer(builder, oxidizer):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(oxidizer), 0)

def AddOxidizer(builder, oxidizer):
    LaunchVehicleDetails_AbridgedAddOxidizer(builder, oxidizer)

def LaunchVehicleDetails_AbridgedAddLength(builder, length):
    builder.PrependFloat64Slot(11, length, 0.0)

def AddLength(builder, length):
    LaunchVehicleDetails_AbridgedAddLength(builder, length)

def LaunchVehicleDetails_AbridgedAddDiameter(builder, diameter):
    builder.PrependFloat64Slot(12, diameter, 0.0)

def AddDiameter(builder, diameter):
    LaunchVehicleDetails_AbridgedAddDiameter(builder, diameter)

def LaunchVehicleDetails_AbridgedAddLaunchMass(builder, launchMass):
    builder.PrependFloat64Slot(13, launchMass, 0.0)

def AddLaunchMass(builder, launchMass):
    LaunchVehicleDetails_AbridgedAddLaunchMass(builder, launchMass)

def LaunchVehicleDetails_AbridgedAddGeoPayloadMass(builder, geoPayloadMass):
    builder.PrependFloat64Slot(14, geoPayloadMass, 0.0)

def AddGeoPayloadMass(builder, geoPayloadMass):
    LaunchVehicleDetails_AbridgedAddGeoPayloadMass(builder, geoPayloadMass)

def LaunchVehicleDetails_AbridgedAddGtoPayloadMass(builder, gtoPayloadMass):
    builder.PrependFloat64Slot(15, gtoPayloadMass, 0.0)

def AddGtoPayloadMass(builder, gtoPayloadMass):
    LaunchVehicleDetails_AbridgedAddGtoPayloadMass(builder, gtoPayloadMass)

def LaunchVehicleDetails_AbridgedAddLeoPayloadMass(builder, leoPayloadMass):
    builder.PrependFloat64Slot(16, leoPayloadMass, 0.0)

def AddLeoPayloadMass(builder, leoPayloadMass):
    LaunchVehicleDetails_AbridgedAddLeoPayloadMass(builder, leoPayloadMass)

def LaunchVehicleDetails_AbridgedAddSsoPayloadMass(builder, ssoPayloadMass):
    builder.PrependFloat64Slot(17, ssoPayloadMass, 0.0)

def AddSsoPayloadMass(builder, ssoPayloadMass):
    LaunchVehicleDetails_AbridgedAddSsoPayloadMass(builder, ssoPayloadMass)

def LaunchVehicleDetails_AbridgedAddFairingLength(builder, fairingLength):
    builder.PrependFloat64Slot(18, fairingLength, 0.0)

def AddFairingLength(builder, fairingLength):
    LaunchVehicleDetails_AbridgedAddFairingLength(builder, fairingLength)

def LaunchVehicleDetails_AbridgedAddFairingName(builder, fairingName):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(fairingName), 0)

def AddFairingName(builder, fairingName):
    LaunchVehicleDetails_AbridgedAddFairingName(builder, fairingName)

def LaunchVehicleDetails_AbridgedAddFairingExternalDiameter(builder, fairingExternalDiameter):
    builder.PrependFloat64Slot(20, fairingExternalDiameter, 0.0)

def AddFairingExternalDiameter(builder, fairingExternalDiameter):
    LaunchVehicleDetails_AbridgedAddFairingExternalDiameter(builder, fairingExternalDiameter)

def LaunchVehicleDetails_AbridgedAddFairingInternalDiameter(builder, fairingInternalDiameter):
    builder.PrependFloat64Slot(21, fairingInternalDiameter, 0.0)

def AddFairingInternalDiameter(builder, fairingInternalDiameter):
    LaunchVehicleDetails_AbridgedAddFairingInternalDiameter(builder, fairingInternalDiameter)

def LaunchVehicleDetails_AbridgedAddFairingMass(builder, fairingMass):
    builder.PrependFloat64Slot(22, fairingMass, 0.0)

def AddFairingMass(builder, fairingMass):
    LaunchVehicleDetails_AbridgedAddFairingMass(builder, fairingMass)

def LaunchVehicleDetails_AbridgedAddFairingMaterial(builder, fairingMaterial):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(fairingMaterial), 0)

def AddFairingMaterial(builder, fairingMaterial):
    LaunchVehicleDetails_AbridgedAddFairingMaterial(builder, fairingMaterial)

def LaunchVehicleDetails_AbridgedAddMaxAccelLoad(builder, maxAccelLoad):
    builder.PrependFloat64Slot(24, maxAccelLoad, 0.0)

def AddMaxAccelLoad(builder, maxAccelLoad):
    LaunchVehicleDetails_AbridgedAddMaxAccelLoad(builder, maxAccelLoad)

def LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLat(builder, maxPayloadFreqLat):
    builder.PrependFloat64Slot(25, maxPayloadFreqLat, 0.0)

def AddMaxPayloadFreqLat(builder, maxPayloadFreqLat):
    LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLat(builder, maxPayloadFreqLat)

def LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLon(builder, maxPayloadFreqLon):
    builder.PrependFloat64Slot(26, maxPayloadFreqLon, 0.0)

def AddMaxPayloadFreqLon(builder, maxPayloadFreqLon):
    LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLon(builder, maxPayloadFreqLon)

def LaunchVehicleDetails_AbridgedAddMaxAcousticLevel(builder, maxAcousticLevel):
    builder.PrependFloat64Slot(27, maxAcousticLevel, 0.0)

def AddMaxAcousticLevel(builder, maxAcousticLevel):
    LaunchVehicleDetails_AbridgedAddMaxAcousticLevel(builder, maxAcousticLevel)

def LaunchVehicleDetails_AbridgedAddMaxAcousticLevelRange(builder, maxAcousticLevelRange):
    builder.PrependFloat64Slot(28, maxAcousticLevelRange, 0.0)

def AddMaxAcousticLevelRange(builder, maxAcousticLevelRange):
    LaunchVehicleDetails_AbridgedAddMaxAcousticLevelRange(builder, maxAcousticLevelRange)

def LaunchVehicleDetails_AbridgedAddSoundPressureLevel(builder, soundPressureLevel):
    builder.PrependFloat64Slot(29, soundPressureLevel, 0.0)

def AddSoundPressureLevel(builder, soundPressureLevel):
    LaunchVehicleDetails_AbridgedAddSoundPressureLevel(builder, soundPressureLevel)

def LaunchVehicleDetails_AbridgedAddMaxFlightShockForce(builder, maxFlightShockForce):
    builder.PrependFloat64Slot(30, maxFlightShockForce, 0.0)

def AddMaxFlightShockForce(builder, maxFlightShockForce):
    LaunchVehicleDetails_AbridgedAddMaxFlightShockForce(builder, maxFlightShockForce)

def LaunchVehicleDetails_AbridgedAddMaxFlightShockFreq(builder, maxFlightShockFreq):
    builder.PrependFloat64Slot(31, maxFlightShockFreq, 0.0)

def AddMaxFlightShockFreq(builder, maxFlightShockFreq):
    LaunchVehicleDetails_AbridgedAddMaxFlightShockFreq(builder, maxFlightShockFreq)

def LaunchVehicleDetails_AbridgedAddMaxFairingPressureChange(builder, maxFairingPressureChange):
    builder.PrependFloat64Slot(32, maxFairingPressureChange, 0.0)

def AddMaxFairingPressureChange(builder, maxFairingPressureChange):
    LaunchVehicleDetails_AbridgedAddMaxFairingPressureChange(builder, maxFairingPressureChange)

def LaunchVehicleDetails_AbridgedAddEstLaunchPrice(builder, estLaunchPrice):
    builder.PrependFloat64Slot(33, estLaunchPrice, 0.0)

def AddEstLaunchPrice(builder, estLaunchPrice):
    LaunchVehicleDetails_AbridgedAddEstLaunchPrice(builder, estLaunchPrice)

def LaunchVehicleDetails_AbridgedAddEstLaunchPriceTypical(builder, estLaunchPriceTypical):
    builder.PrependFloat64Slot(34, estLaunchPriceTypical, 0.0)

def AddEstLaunchPriceTypical(builder, estLaunchPriceTypical):
    LaunchVehicleDetails_AbridgedAddEstLaunchPriceTypical(builder, estLaunchPriceTypical)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeTarget(builder, gtoInj3SigAccuracyApogeeTarget):
    builder.PrependFloat64Slot(35, gtoInj3SigAccuracyApogeeTarget, 0.0)

def AddGtoInj3SigAccuracyApogeeTarget(builder, gtoInj3SigAccuracyApogeeTarget):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeTarget(builder, gtoInj3SigAccuracyApogeeTarget)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeMargin(builder, gtoInj3SigAccuracyApogeeMargin):
    builder.PrependFloat64Slot(36, gtoInj3SigAccuracyApogeeMargin, 0.0)

def AddGtoInj3SigAccuracyApogeeMargin(builder, gtoInj3SigAccuracyApogeeMargin):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeMargin(builder, gtoInj3SigAccuracyApogeeMargin)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeTarget(builder, gtoInj3SigAccuracyPerigeeTarget):
    builder.PrependFloat64Slot(37, gtoInj3SigAccuracyPerigeeTarget, 0.0)

def AddGtoInj3SigAccuracyPerigeeTarget(builder, gtoInj3SigAccuracyPerigeeTarget):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeTarget(builder, gtoInj3SigAccuracyPerigeeTarget)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeMargin(builder, gtoInj3SigAccuracyPerigeeMargin):
    builder.PrependFloat64Slot(38, gtoInj3SigAccuracyPerigeeMargin, 0.0)

def AddGtoInj3SigAccuracyPerigeeMargin(builder, gtoInj3SigAccuracyPerigeeMargin):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeMargin(builder, gtoInj3SigAccuracyPerigeeMargin)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationTarget(builder, gtoInj3SigAccuracyInclinationTarget):
    builder.PrependFloat64Slot(39, gtoInj3SigAccuracyInclinationTarget, 0.0)

def AddGtoInj3SigAccuracyInclinationTarget(builder, gtoInj3SigAccuracyInclinationTarget):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationTarget(builder, gtoInj3SigAccuracyInclinationTarget)

def LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationMargin(builder, gtoInj3SigAccuracyInclinationMargin):
    builder.PrependFloat64Slot(40, gtoInj3SigAccuracyInclinationMargin, 0.0)

def AddGtoInj3SigAccuracyInclinationMargin(builder, gtoInj3SigAccuracyInclinationMargin):
    LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationMargin(builder, gtoInj3SigAccuracyInclinationMargin)

def LaunchVehicleDetails_AbridgedAddAttitudeAccuracy(builder, attitudeAccuracy):
    builder.PrependFloat64Slot(41, attitudeAccuracy, 0.0)

def AddAttitudeAccuracy(builder, attitudeAccuracy):
    LaunchVehicleDetails_AbridgedAddAttitudeAccuracy(builder, attitudeAccuracy)

def LaunchVehicleDetails_AbridgedAddPayloadSeparationRate(builder, payloadSeparationRate):
    builder.PrependFloat64Slot(42, payloadSeparationRate, 0.0)

def AddPayloadSeparationRate(builder, payloadSeparationRate):
    LaunchVehicleDetails_AbridgedAddPayloadSeparationRate(builder, payloadSeparationRate)

def LaunchVehicleDetails_AbridgedAddDeploymentRotationRate(builder, deploymentRotationRate):
    builder.PrependFloat64Slot(43, deploymentRotationRate, 0.0)

def AddDeploymentRotationRate(builder, deploymentRotationRate):
    LaunchVehicleDetails_AbridgedAddDeploymentRotationRate(builder, deploymentRotationRate)

def LaunchVehicleDetails_AbridgedAddSourceUrl(builder, sourceUrl):
    builder.PrependUOffsetTRelativeSlot(44, flatbuffers.number_types.UOffsetTFlags.py_type(sourceUrl), 0)

def AddSourceUrl(builder, sourceUrl):
    LaunchVehicleDetails_AbridgedAddSourceUrl(builder, sourceUrl)

def LaunchVehicleDetails_AbridgedAddNotes(builder, notes):
    builder.PrependUOffsetTRelativeSlot(45, flatbuffers.number_types.UOffsetTFlags.py_type(notes), 0)

def AddNotes(builder, notes):
    LaunchVehicleDetails_AbridgedAddNotes(builder, notes)

def LaunchVehicleDetails_AbridgedAddFairingNotes(builder, fairingNotes):
    builder.PrependUOffsetTRelativeSlot(46, flatbuffers.number_types.UOffsetTFlags.py_type(fairingNotes), 0)

def AddFairingNotes(builder, fairingNotes):
    LaunchVehicleDetails_AbridgedAddFairingNotes(builder, fairingNotes)

def LaunchVehicleDetails_AbridgedAddPayloadNotes(builder, payloadNotes):
    builder.PrependUOffsetTRelativeSlot(47, flatbuffers.number_types.UOffsetTFlags.py_type(payloadNotes), 0)

def AddPayloadNotes(builder, payloadNotes):
    LaunchVehicleDetails_AbridgedAddPayloadNotes(builder, payloadNotes)

def LaunchVehicleDetails_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(48, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    LaunchVehicleDetails_AbridgedAddCreatedAt(builder, createdAt)

def LaunchVehicleDetails_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(49, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    LaunchVehicleDetails_AbridgedAddCreatedBy(builder, createdBy)

def LaunchVehicleDetails_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(50, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    LaunchVehicleDetails_AbridgedAddSource(builder, source)

def LaunchVehicleDetails_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(51, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    LaunchVehicleDetails_AbridgedAddOrigin(builder, origin)

def LaunchVehicleDetails_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(52, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    LaunchVehicleDetails_AbridgedAddOrigNetwork(builder, origNetwork)

def LaunchVehicleDetails_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(53, dataMode, 0)

def AddDataMode(builder, dataMode):
    LaunchVehicleDetails_AbridgedAddDataMode(builder, dataMode)

def LaunchVehicleDetails_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return LaunchVehicleDetails_AbridgedEnd(builder)


class LaunchVehicleDetails_AbridgedT(object):

    # LaunchVehicleDetails_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.idLaunchVehicle = None  # type: str
        self.classificationMarking = None  # type: str
        self.variant = None  # type: str
        self.minorVariant = None  # type: str
        self.category = None  # type: str
        self.manufacturerOrgId = None  # type: str
        self.launchPrefix = None  # type: str
        self.family = None  # type: str
        self.propellant = None  # type: str
        self.oxidizer = None  # type: str
        self.length = 0.0  # type: float
        self.diameter = 0.0  # type: float
        self.launchMass = 0.0  # type: float
        self.geoPayloadMass = 0.0  # type: float
        self.gtoPayloadMass = 0.0  # type: float
        self.leoPayloadMass = 0.0  # type: float
        self.ssoPayloadMass = 0.0  # type: float
        self.fairingLength = 0.0  # type: float
        self.fairingName = None  # type: str
        self.fairingExternalDiameter = 0.0  # type: float
        self.fairingInternalDiameter = 0.0  # type: float
        self.fairingMass = 0.0  # type: float
        self.fairingMaterial = None  # type: str
        self.maxAccelLoad = 0.0  # type: float
        self.maxPayloadFreqLat = 0.0  # type: float
        self.maxPayloadFreqLon = 0.0  # type: float
        self.maxAcousticLevel = 0.0  # type: float
        self.maxAcousticLevelRange = 0.0  # type: float
        self.soundPressureLevel = 0.0  # type: float
        self.maxFlightShockForce = 0.0  # type: float
        self.maxFlightShockFreq = 0.0  # type: float
        self.maxFairingPressureChange = 0.0  # type: float
        self.estLaunchPrice = 0.0  # type: float
        self.estLaunchPriceTypical = 0.0  # type: float
        self.gtoInj3SigAccuracyApogeeTarget = 0.0  # type: float
        self.gtoInj3SigAccuracyApogeeMargin = 0.0  # type: float
        self.gtoInj3SigAccuracyPerigeeTarget = 0.0  # type: float
        self.gtoInj3SigAccuracyPerigeeMargin = 0.0  # type: float
        self.gtoInj3SigAccuracyInclinationTarget = 0.0  # type: float
        self.gtoInj3SigAccuracyInclinationMargin = 0.0  # type: float
        self.attitudeAccuracy = 0.0  # type: float
        self.payloadSeparationRate = 0.0  # type: float
        self.deploymentRotationRate = 0.0  # type: float
        self.sourceUrl = None  # type: str
        self.notes = None  # type: str
        self.fairingNotes = None  # type: str
        self.payloadNotes = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.origNetwork = None  # type: str
        self.dataMode = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        launchVehicleDetailsAbridged = LaunchVehicleDetails_Abridged()
        launchVehicleDetailsAbridged.Init(buf, pos)
        return cls.InitFromObj(launchVehicleDetailsAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, launchVehicleDetailsAbridged):
        x = LaunchVehicleDetails_AbridgedT()
        x._UnPack(launchVehicleDetailsAbridged)
        return x

    # LaunchVehicleDetails_AbridgedT
    def _UnPack(self, launchVehicleDetailsAbridged):
        if launchVehicleDetailsAbridged is None:
            return
        self.id = launchVehicleDetailsAbridged.Id()
        self.idLaunchVehicle = launchVehicleDetailsAbridged.IdLaunchVehicle()
        self.classificationMarking = launchVehicleDetailsAbridged.ClassificationMarking()
        self.variant = launchVehicleDetailsAbridged.Variant()
        self.minorVariant = launchVehicleDetailsAbridged.MinorVariant()
        self.category = launchVehicleDetailsAbridged.Category()
        self.manufacturerOrgId = launchVehicleDetailsAbridged.ManufacturerOrgId()
        self.launchPrefix = launchVehicleDetailsAbridged.LaunchPrefix()
        self.family = launchVehicleDetailsAbridged.Family()
        self.propellant = launchVehicleDetailsAbridged.Propellant()
        self.oxidizer = launchVehicleDetailsAbridged.Oxidizer()
        self.length = launchVehicleDetailsAbridged.Length()
        self.diameter = launchVehicleDetailsAbridged.Diameter()
        self.launchMass = launchVehicleDetailsAbridged.LaunchMass()
        self.geoPayloadMass = launchVehicleDetailsAbridged.GeoPayloadMass()
        self.gtoPayloadMass = launchVehicleDetailsAbridged.GtoPayloadMass()
        self.leoPayloadMass = launchVehicleDetailsAbridged.LeoPayloadMass()
        self.ssoPayloadMass = launchVehicleDetailsAbridged.SsoPayloadMass()
        self.fairingLength = launchVehicleDetailsAbridged.FairingLength()
        self.fairingName = launchVehicleDetailsAbridged.FairingName()
        self.fairingExternalDiameter = launchVehicleDetailsAbridged.FairingExternalDiameter()
        self.fairingInternalDiameter = launchVehicleDetailsAbridged.FairingInternalDiameter()
        self.fairingMass = launchVehicleDetailsAbridged.FairingMass()
        self.fairingMaterial = launchVehicleDetailsAbridged.FairingMaterial()
        self.maxAccelLoad = launchVehicleDetailsAbridged.MaxAccelLoad()
        self.maxPayloadFreqLat = launchVehicleDetailsAbridged.MaxPayloadFreqLat()
        self.maxPayloadFreqLon = launchVehicleDetailsAbridged.MaxPayloadFreqLon()
        self.maxAcousticLevel = launchVehicleDetailsAbridged.MaxAcousticLevel()
        self.maxAcousticLevelRange = launchVehicleDetailsAbridged.MaxAcousticLevelRange()
        self.soundPressureLevel = launchVehicleDetailsAbridged.SoundPressureLevel()
        self.maxFlightShockForce = launchVehicleDetailsAbridged.MaxFlightShockForce()
        self.maxFlightShockFreq = launchVehicleDetailsAbridged.MaxFlightShockFreq()
        self.maxFairingPressureChange = launchVehicleDetailsAbridged.MaxFairingPressureChange()
        self.estLaunchPrice = launchVehicleDetailsAbridged.EstLaunchPrice()
        self.estLaunchPriceTypical = launchVehicleDetailsAbridged.EstLaunchPriceTypical()
        self.gtoInj3SigAccuracyApogeeTarget = launchVehicleDetailsAbridged.GtoInj3SigAccuracyApogeeTarget()
        self.gtoInj3SigAccuracyApogeeMargin = launchVehicleDetailsAbridged.GtoInj3SigAccuracyApogeeMargin()
        self.gtoInj3SigAccuracyPerigeeTarget = launchVehicleDetailsAbridged.GtoInj3SigAccuracyPerigeeTarget()
        self.gtoInj3SigAccuracyPerigeeMargin = launchVehicleDetailsAbridged.GtoInj3SigAccuracyPerigeeMargin()
        self.gtoInj3SigAccuracyInclinationTarget = launchVehicleDetailsAbridged.GtoInj3SigAccuracyInclinationTarget()
        self.gtoInj3SigAccuracyInclinationMargin = launchVehicleDetailsAbridged.GtoInj3SigAccuracyInclinationMargin()
        self.attitudeAccuracy = launchVehicleDetailsAbridged.AttitudeAccuracy()
        self.payloadSeparationRate = launchVehicleDetailsAbridged.PayloadSeparationRate()
        self.deploymentRotationRate = launchVehicleDetailsAbridged.DeploymentRotationRate()
        self.sourceUrl = launchVehicleDetailsAbridged.SourceUrl()
        self.notes = launchVehicleDetailsAbridged.Notes()
        self.fairingNotes = launchVehicleDetailsAbridged.FairingNotes()
        self.payloadNotes = launchVehicleDetailsAbridged.PayloadNotes()
        self.createdAt = launchVehicleDetailsAbridged.CreatedAt()
        self.createdBy = launchVehicleDetailsAbridged.CreatedBy()
        self.source = launchVehicleDetailsAbridged.Source()
        self.origin = launchVehicleDetailsAbridged.Origin()
        self.origNetwork = launchVehicleDetailsAbridged.OrigNetwork()
        self.dataMode = launchVehicleDetailsAbridged.DataMode()

    # LaunchVehicleDetails_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.idLaunchVehicle is not None:
            idLaunchVehicle = builder.CreateString(self.idLaunchVehicle)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.variant is not None:
            variant = builder.CreateString(self.variant)
        if self.minorVariant is not None:
            minorVariant = builder.CreateString(self.minorVariant)
        if self.category is not None:
            category = builder.CreateString(self.category)
        if self.manufacturerOrgId is not None:
            manufacturerOrgId = builder.CreateString(self.manufacturerOrgId)
        if self.launchPrefix is not None:
            launchPrefix = builder.CreateString(self.launchPrefix)
        if self.family is not None:
            family = builder.CreateString(self.family)
        if self.propellant is not None:
            propellant = builder.CreateString(self.propellant)
        if self.oxidizer is not None:
            oxidizer = builder.CreateString(self.oxidizer)
        if self.fairingName is not None:
            fairingName = builder.CreateString(self.fairingName)
        if self.fairingMaterial is not None:
            fairingMaterial = builder.CreateString(self.fairingMaterial)
        if self.sourceUrl is not None:
            sourceUrl = builder.CreateString(self.sourceUrl)
        if self.notes is not None:
            notes = builder.CreateString(self.notes)
        if self.fairingNotes is not None:
            fairingNotes = builder.CreateString(self.fairingNotes)
        if self.payloadNotes is not None:
            payloadNotes = builder.CreateString(self.payloadNotes)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        LaunchVehicleDetails_AbridgedStart(builder)
        if self.id is not None:
            LaunchVehicleDetails_AbridgedAddId(builder, id)
        if self.idLaunchVehicle is not None:
            LaunchVehicleDetails_AbridgedAddIdLaunchVehicle(builder, idLaunchVehicle)
        if self.classificationMarking is not None:
            LaunchVehicleDetails_AbridgedAddClassificationMarking(builder, classificationMarking)
        if self.variant is not None:
            LaunchVehicleDetails_AbridgedAddVariant(builder, variant)
        if self.minorVariant is not None:
            LaunchVehicleDetails_AbridgedAddMinorVariant(builder, minorVariant)
        if self.category is not None:
            LaunchVehicleDetails_AbridgedAddCategory(builder, category)
        if self.manufacturerOrgId is not None:
            LaunchVehicleDetails_AbridgedAddManufacturerOrgId(builder, manufacturerOrgId)
        if self.launchPrefix is not None:
            LaunchVehicleDetails_AbridgedAddLaunchPrefix(builder, launchPrefix)
        if self.family is not None:
            LaunchVehicleDetails_AbridgedAddFamily(builder, family)
        if self.propellant is not None:
            LaunchVehicleDetails_AbridgedAddPropellant(builder, propellant)
        if self.oxidizer is not None:
            LaunchVehicleDetails_AbridgedAddOxidizer(builder, oxidizer)
        LaunchVehicleDetails_AbridgedAddLength(builder, self.length)
        LaunchVehicleDetails_AbridgedAddDiameter(builder, self.diameter)
        LaunchVehicleDetails_AbridgedAddLaunchMass(builder, self.launchMass)
        LaunchVehicleDetails_AbridgedAddGeoPayloadMass(builder, self.geoPayloadMass)
        LaunchVehicleDetails_AbridgedAddGtoPayloadMass(builder, self.gtoPayloadMass)
        LaunchVehicleDetails_AbridgedAddLeoPayloadMass(builder, self.leoPayloadMass)
        LaunchVehicleDetails_AbridgedAddSsoPayloadMass(builder, self.ssoPayloadMass)
        LaunchVehicleDetails_AbridgedAddFairingLength(builder, self.fairingLength)
        if self.fairingName is not None:
            LaunchVehicleDetails_AbridgedAddFairingName(builder, fairingName)
        LaunchVehicleDetails_AbridgedAddFairingExternalDiameter(builder, self.fairingExternalDiameter)
        LaunchVehicleDetails_AbridgedAddFairingInternalDiameter(builder, self.fairingInternalDiameter)
        LaunchVehicleDetails_AbridgedAddFairingMass(builder, self.fairingMass)
        if self.fairingMaterial is not None:
            LaunchVehicleDetails_AbridgedAddFairingMaterial(builder, fairingMaterial)
        LaunchVehicleDetails_AbridgedAddMaxAccelLoad(builder, self.maxAccelLoad)
        LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLat(builder, self.maxPayloadFreqLat)
        LaunchVehicleDetails_AbridgedAddMaxPayloadFreqLon(builder, self.maxPayloadFreqLon)
        LaunchVehicleDetails_AbridgedAddMaxAcousticLevel(builder, self.maxAcousticLevel)
        LaunchVehicleDetails_AbridgedAddMaxAcousticLevelRange(builder, self.maxAcousticLevelRange)
        LaunchVehicleDetails_AbridgedAddSoundPressureLevel(builder, self.soundPressureLevel)
        LaunchVehicleDetails_AbridgedAddMaxFlightShockForce(builder, self.maxFlightShockForce)
        LaunchVehicleDetails_AbridgedAddMaxFlightShockFreq(builder, self.maxFlightShockFreq)
        LaunchVehicleDetails_AbridgedAddMaxFairingPressureChange(builder, self.maxFairingPressureChange)
        LaunchVehicleDetails_AbridgedAddEstLaunchPrice(builder, self.estLaunchPrice)
        LaunchVehicleDetails_AbridgedAddEstLaunchPriceTypical(builder, self.estLaunchPriceTypical)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeTarget(builder, self.gtoInj3SigAccuracyApogeeTarget)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyApogeeMargin(builder, self.gtoInj3SigAccuracyApogeeMargin)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeTarget(builder, self.gtoInj3SigAccuracyPerigeeTarget)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyPerigeeMargin(builder, self.gtoInj3SigAccuracyPerigeeMargin)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationTarget(builder, self.gtoInj3SigAccuracyInclinationTarget)
        LaunchVehicleDetails_AbridgedAddGtoInj3SigAccuracyInclinationMargin(builder, self.gtoInj3SigAccuracyInclinationMargin)
        LaunchVehicleDetails_AbridgedAddAttitudeAccuracy(builder, self.attitudeAccuracy)
        LaunchVehicleDetails_AbridgedAddPayloadSeparationRate(builder, self.payloadSeparationRate)
        LaunchVehicleDetails_AbridgedAddDeploymentRotationRate(builder, self.deploymentRotationRate)
        if self.sourceUrl is not None:
            LaunchVehicleDetails_AbridgedAddSourceUrl(builder, sourceUrl)
        if self.notes is not None:
            LaunchVehicleDetails_AbridgedAddNotes(builder, notes)
        if self.fairingNotes is not None:
            LaunchVehicleDetails_AbridgedAddFairingNotes(builder, fairingNotes)
        if self.payloadNotes is not None:
            LaunchVehicleDetails_AbridgedAddPayloadNotes(builder, payloadNotes)
        if self.createdAt is not None:
            LaunchVehicleDetails_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            LaunchVehicleDetails_AbridgedAddCreatedBy(builder, createdBy)
        if self.source is not None:
            LaunchVehicleDetails_AbridgedAddSource(builder, source)
        if self.origin is not None:
            LaunchVehicleDetails_AbridgedAddOrigin(builder, origin)
        if self.origNetwork is not None:
            LaunchVehicleDetails_AbridgedAddOrigNetwork(builder, origNetwork)
        LaunchVehicleDetails_AbridgedAddDataMode(builder, self.dataMode)
        launchVehicleDetailsAbridged = LaunchVehicleDetails_AbridgedEnd(builder)
        return launchVehicleDetailsAbridged
