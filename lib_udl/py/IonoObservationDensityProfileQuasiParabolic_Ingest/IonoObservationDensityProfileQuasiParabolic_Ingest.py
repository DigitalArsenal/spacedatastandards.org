# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Coefficients to describe profile shape as quasi-parabolic segments.
class IonoObservationDensityProfileQuasiParabolic_Ingest(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IonoObservationDensityProfileQuasiParabolic_Ingest()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsIonoObservationDensityProfileQuasiParabolic_Ingest(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def IonoObservationDensityProfileQuasiParabolic_IngestBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x49\x4F\x4E\x4F", size_prefixed=size_prefixed)

    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # General description of the quasi-parabolic computation algorithm.
    # Example: /// Example: Array of the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C
    # Constraints: No constraints specified.
    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Value of the Earth's radius, in kilometers, used for computations.
    # Example: /// Example: 6370.1
    # Constraints: No constraints specified.
    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def EarthRadius(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Array of quasi-parabolic segments. Each segment is the best-fit 3-parameter quasi-parabolas defined via A, B, C coefficients, f^2=A/r^2+B/r+C‚Äù. Usually 3 groups for E, F1, and F2 layers, but additional segments may be used to improve accuracy.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def QuasiParabolicSegments(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def QuasiParabolicSegmentsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # IonoObservationDensityProfileQuasiParabolic_Ingest
    def QuasiParabolicSegmentsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        return o == 0

def IonoObservationDensityProfileQuasiParabolic_IngestStart(builder):
    builder.StartObject(3)

def Start(builder):
    IonoObservationDensityProfileQuasiParabolic_IngestStart(builder)

def IonoObservationDensityProfileQuasiParabolic_IngestAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    IonoObservationDensityProfileQuasiParabolic_IngestAddDescription(builder, description)

def IonoObservationDensityProfileQuasiParabolic_IngestAddEarthRadius(builder, earthRadius):
    builder.PrependFloat64Slot(1, earthRadius, 0.0)

def AddEarthRadius(builder, earthRadius):
    IonoObservationDensityProfileQuasiParabolic_IngestAddEarthRadius(builder, earthRadius)

def IonoObservationDensityProfileQuasiParabolic_IngestAddQuasiParabolicSegments(builder, quasiParabolicSegments):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(quasiParabolicSegments), 0)

def AddQuasiParabolicSegments(builder, quasiParabolicSegments):
    IonoObservationDensityProfileQuasiParabolic_IngestAddQuasiParabolicSegments(builder, quasiParabolicSegments)

def IonoObservationDensityProfileQuasiParabolic_IngestStartQuasiParabolicSegmentsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartQuasiParabolicSegmentsVector(builder, numElems):
    return IonoObservationDensityProfileQuasiParabolic_IngestStartQuasiParabolicSegmentsVector(builder, numElems)

def IonoObservationDensityProfileQuasiParabolic_IngestEnd(builder):
    return builder.EndObject()

def End(builder):
    return IonoObservationDensityProfileQuasiParabolic_IngestEnd(builder)

try:
    from typing import List
except:
    pass

class IonoObservationDensityProfileQuasiParabolic_IngestT(object):

    # IonoObservationDensityProfileQuasiParabolic_IngestT
    def __init__(self):
        self.description = None  # type: str
        self.earthRadius = 0.0  # type: float
        self.quasiParabolicSegments = None  # type: List[str]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        ionoObservationDensityProfileQuasiParabolicIngest = IonoObservationDensityProfileQuasiParabolic_Ingest()
        ionoObservationDensityProfileQuasiParabolicIngest.Init(buf, pos)
        return cls.InitFromObj(ionoObservationDensityProfileQuasiParabolicIngest)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, ionoObservationDensityProfileQuasiParabolicIngest):
        x = IonoObservationDensityProfileQuasiParabolic_IngestT()
        x._UnPack(ionoObservationDensityProfileQuasiParabolicIngest)
        return x

    # IonoObservationDensityProfileQuasiParabolic_IngestT
    def _UnPack(self, ionoObservationDensityProfileQuasiParabolicIngest):
        if ionoObservationDensityProfileQuasiParabolicIngest is None:
            return
        self.description = ionoObservationDensityProfileQuasiParabolicIngest.Description()
        self.earthRadius = ionoObservationDensityProfileQuasiParabolicIngest.EarthRadius()
        if not ionoObservationDensityProfileQuasiParabolicIngest.QuasiParabolicSegmentsIsNone():
            self.quasiParabolicSegments = []
            for i in range(ionoObservationDensityProfileQuasiParabolicIngest.QuasiParabolicSegmentsLength()):
                self.quasiParabolicSegments.append(ionoObservationDensityProfileQuasiParabolicIngest.QuasiParabolicSegments(i))

    # IonoObservationDensityProfileQuasiParabolic_IngestT
    def Pack(self, builder):
        if self.description is not None:
            description = builder.CreateString(self.description)
        if self.quasiParabolicSegments is not None:
            quasiParabolicSegmentslist = []
            for i in range(len(self.quasiParabolicSegments)):
                quasiParabolicSegmentslist.append(builder.CreateString(self.quasiParabolicSegments[i]))
            IonoObservationDensityProfileQuasiParabolic_IngestStartQuasiParabolicSegmentsVector(builder, len(self.quasiParabolicSegments))
            for i in reversed(range(len(self.quasiParabolicSegments))):
                builder.PrependUOffsetTRelative(quasiParabolicSegmentslist[i])
            quasiParabolicSegments = builder.EndVector()
        IonoObservationDensityProfileQuasiParabolic_IngestStart(builder)
        if self.description is not None:
            IonoObservationDensityProfileQuasiParabolic_IngestAddDescription(builder, description)
        IonoObservationDensityProfileQuasiParabolic_IngestAddEarthRadius(builder, self.earthRadius)
        if self.quasiParabolicSegments is not None:
            IonoObservationDensityProfileQuasiParabolic_IngestAddQuasiParabolicSegments(builder, quasiParabolicSegments)
        ionoObservationDensityProfileQuasiParabolicIngest = IonoObservationDensityProfileQuasiParabolic_IngestEnd(builder)
        return ionoObservationDensityProfileQuasiParabolicIngest
