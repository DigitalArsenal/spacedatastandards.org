# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Contains a list of common information across both Radar and EO observations.
class OnorbitSignature_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = OnorbitSignature_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOnorbitSignature_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def OnorbitSignature_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4F\x4E\x4F\x52", size_prefixed=size_prefixed)

    # OnorbitSignature_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # No description provided.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # OnorbitSignature_Abridged
    def EoObservation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # No description provided.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # OnorbitSignature_Abridged
    def RadarObservation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # No description provided.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # OnorbitSignature_Abridged
    def RfObservation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def OnorbitSignature_AbridgedStart(builder):
    builder.StartObject(3)

def Start(builder):
    OnorbitSignature_AbridgedStart(builder)

def OnorbitSignature_AbridgedAddEoObservation(builder, eoObservation):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(eoObservation), 0)

def AddEoObservation(builder, eoObservation):
    OnorbitSignature_AbridgedAddEoObservation(builder, eoObservation)

def OnorbitSignature_AbridgedAddRadarObservation(builder, radarObservation):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(radarObservation), 0)

def AddRadarObservation(builder, radarObservation):
    OnorbitSignature_AbridgedAddRadarObservation(builder, radarObservation)

def OnorbitSignature_AbridgedAddRfObservation(builder, rfObservation):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(rfObservation), 0)

def AddRfObservation(builder, rfObservation):
    OnorbitSignature_AbridgedAddRfObservation(builder, rfObservation)

def OnorbitSignature_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return OnorbitSignature_AbridgedEnd(builder)


class OnorbitSignature_AbridgedT(object):

    # OnorbitSignature_AbridgedT
    def __init__(self):
        self.eoObservation = None  # type: str
        self.radarObservation = None  # type: str
        self.rfObservation = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        onorbitSignatureAbridged = OnorbitSignature_Abridged()
        onorbitSignatureAbridged.Init(buf, pos)
        return cls.InitFromObj(onorbitSignatureAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, onorbitSignatureAbridged):
        x = OnorbitSignature_AbridgedT()
        x._UnPack(onorbitSignatureAbridged)
        return x

    # OnorbitSignature_AbridgedT
    def _UnPack(self, onorbitSignatureAbridged):
        if onorbitSignatureAbridged is None:
            return
        self.eoObservation = onorbitSignatureAbridged.EoObservation()
        self.radarObservation = onorbitSignatureAbridged.RadarObservation()
        self.rfObservation = onorbitSignatureAbridged.RfObservation()

    # OnorbitSignature_AbridgedT
    def Pack(self, builder):
        if self.eoObservation is not None:
            eoObservation = builder.CreateString(self.eoObservation)
        if self.radarObservation is not None:
            radarObservation = builder.CreateString(self.radarObservation)
        if self.rfObservation is not None:
            rfObservation = builder.CreateString(self.rfObservation)
        OnorbitSignature_AbridgedStart(builder)
        if self.eoObservation is not None:
            OnorbitSignature_AbridgedAddEoObservation(builder, eoObservation)
        if self.radarObservation is not None:
            OnorbitSignature_AbridgedAddRadarObservation(builder, radarObservation)
        if self.rfObservation is not None:
            OnorbitSignature_AbridgedAddRfObservation(builder, rfObservation)
        onorbitSignatureAbridged = OnorbitSignature_AbridgedEnd(builder)
        return onorbitSignatureAbridged
