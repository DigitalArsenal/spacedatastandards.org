# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// EphemerisSet represents a wrapper or collection of Ephemeris 'points' and meta data indicating the specifics of the propagation of an on-orbit object. Ephemeris is typically distributed in a flat file containing details of the ephemeris generation as well as a large collection of individual points at varying time steps. EphemerisSet is analogous to this flat file.
class EphemerisSet_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EphemerisSet_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEphemerisSet_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def EphemerisSet_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x45\x50\x48\x45", size_prefixed=size_prefixed)

    # EphemerisSet_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: EPHEMERISSET-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # EphemerisSet_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # EphemerisSet_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Unique identifier of the primary satellite on-orbit object.
    # Example: /// Example: ONORBIT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # EphemerisSet_Abridged
    def IdOnOrbit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional identifier provided by ephemeris source to indicate the target object of this ephemeris. This may be an internal identifier and not necessarily map to a valid satellite number.
    # Example: /// Example: ORIGOBJECT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # EphemerisSet_Abridged
    def OrigObjectId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Start time/first time point of the ephemeris, in ISO 8601 UTC format.
    # Example: /// Example: 2018-01-01T16:00:00.123456Z
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def PointStartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional start time of the usable time span for the ephemeris data, in ISO 8601 UTC format with microsecond precision.
    # Example: /// Example: 2018-01-01T16:10:00.123456Z
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def UsableStartTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # End time/last time point of the ephemeris, in ISO 8601 UTC format.
    # Example: /// Example: 2018-01-01T16:00:00.123456Z
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def PointEndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional end time of the usable time span for the ephemeris data, in ISO 8601 UTC format with microsecond precision.
    # Example: /// Example: 2018-01-01T20:50:00.123456Z
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def UsableEndTime(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Ephemeris step size, in seconds.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def StepSize(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of points contained in the ephemeris.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def NumPoints(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The type/purpose of the ephemeris (e.g., CALIBRATION, LAUNCH, MNVR_PLAN, ROUTINE, SCREENING).
    # Example: /// Example: LAUNCH
    # Constraints: Minimum length = 1, Maximum length = 24
    # EphemerisSet_Abridged
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The pedigree of the ephemeris or source data used for ephemeris generation (e.g.  GPS, SLR, RANGING, PROPAGATED, HYBRID).
    # Example: /// Example: PROPAGATED
    # Constraints: Minimum length = 0, Maximum length = 24
    # EphemerisSet_Abridged
    def Pedigree(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The source category of the ephemeris (e.g. OWNER_OPERATOR, ANALYST, EXTERNAL).
    # Example: /// Example: ANALYST
    # Constraints: Minimum length = 1, Maximum length = 24
    # EphemerisSet_Abridged
    def Category(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # ID of the State Vector used to generate the ephemeris.
    # Example: /// Example: STATEVECTOR-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # EphemerisSet_Abridged
    def IdStateVector(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Boolean indicating whether maneuver(s) are incorporated into the ephemeris.
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def HasMnvr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Array of the maneuver IDs of all maneuvers incorporated in the ephemeris.
    # Example: /// Example: ['EXAMPLE_ID1', 'EXAMPLE_ID2']
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def IdManeuvers(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # EphemerisSet_Abridged
    def IdManeuversLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # EphemerisSet_Abridged
    def IdManeuversIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        return o == 0

    # Boolean indicating whether covariance data is provided with the ephemeris.
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def HasCov(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Boolean indicating whether acceleration data is provided with the ephemeris.
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def HasAccel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # The Central Body of the ephemeris.  Assumed to be Earth, unless otherwise indicated.
    # Example: /// Example: Earth
    # Constraints: Minimum length = 0, Maximum length = 32
    # EphemerisSet_Abridged
    def CentBody(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Integrator used in ephemeris generation (e.g. RK7(8), RK8(9), COWELL, TWO-BODY).
    # Example: /// Example: COWELL
    # Constraints: Minimum length = 0, Maximum length = 24
    # EphemerisSet_Abridged
    def Integrator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Geopotential model used in ephemeris generation (e.g. EGM-96, WGS-84, WGS-72, JGM-2, GEM-T3), including mm degree zonals, nn degree/order tesserals (e.g. EGM-96 24Z,24T).
    # Example: /// Example: GEM-T3
    # Constraints: Minimum length = 0, Maximum length = 32
    # EphemerisSet_Abridged
    def GeopotentialModel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Drag model used in ephemeris generation (e.g. JAC70, MSIS90, NONE, etc.).
    # Example: /// Example: JAC70
    # Constraints: Minimum length = 0, Maximum length = 32
    # EphemerisSet_Abridged
    def DragModel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Boolean indicating use of lunar/solar data in ephemeris generation.
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def LunarSolar(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Boolean indicating use of solid earth tide data in ephemeris generation.
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def SolidEarthTides(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # First derivative of ballistic coefficient (m^2/kg-s).
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def BDot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Model parameter value for energy dissipation rate (EDR), expressed in w/kg.
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def Edr(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The recommended interpolation method for the ephemeris data.
    # Example: /// Example: LINEAR
    # Constraints: Minimum length = 0, Maximum length = 16
    # EphemerisSet_Abridged
    def Interpolation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The recommended interpolation degree for the ephemeris data.
    # Example: /// Example: 5
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def InterpolationDegree(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Filename of the raw file used to provide the ephemeris data including filetype extension, if applicable. This file may be retrieved using the 'getFile' operation as specified in the 'EphemerisSet' OpenAPI docs.
    # Example: /// Example: Example file name
    # Constraints: Minimum length = 0, Maximum length = 128
    # EphemerisSet_Abridged
    def Filename(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Additional source provided comments associated with the ephemeris.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 512
    # EphemerisSet_Abridged
    def Comments(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes/description of the provided ephemeris. A value of DSTOP signifies the ephemeris were generated using the last observation available.
    # Example: /// Example: Example notes
    # Constraints: Minimum length = 0, Maximum length = 512
    # EphemerisSet_Abridged
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional source-provided and searchable metadata or descriptor of the data.
    # Example: /// Example: Example descriptor
    # Constraints: Minimum length = 0, Maximum length = 64
    # EphemerisSet_Abridged
    def Descriptor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The reference frame of the cartesian orbital states. If the referenceFrame is null it is assumed to be J2000.
    # Example: /// Example: J2000
    # Constraints: Minimum length = 0, Maximum length = 24
    # EphemerisSet_Abridged
    def ReferenceFrame(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # The reference frame of the covariance matrix elements. If the covReferenceFrame is null it is assumed to be J2000.
    # Example: /// Example: J2000
    # Constraints: Minimum length = 0, Maximum length = 24
    # EphemerisSet_Abridged
    def CovReferenceFrame(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Time the row was created in the database, in UTC.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # EphemerisSet_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # EphemerisSet_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # EphemerisSet_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # EphemerisSet_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Satellite/catalog number of the target on-orbit object.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # EphemerisSet_Abridged
    def SatNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Optional identifier to track a commercial or marketplace transaction executed to produce this data.
    # Example: /// Example: TRANSACTION-ID
    # Constraints: Minimum length = 0, Maximum length = 64
    # EphemerisSet_Abridged
    def TransactionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 1, Maximum length = 32
    # EphemerisSet_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def EphemerisSet_AbridgedStart(builder):
    builder.StartObject(42)

def Start(builder):
    EphemerisSet_AbridgedStart(builder)

def EphemerisSet_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    EphemerisSet_AbridgedAddId(builder, id)

def EphemerisSet_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    EphemerisSet_AbridgedAddClassificationMarking(builder, classificationMarking)

def EphemerisSet_AbridgedAddIdOnOrbit(builder, idOnOrbit):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(idOnOrbit), 0)

def AddIdOnOrbit(builder, idOnOrbit):
    EphemerisSet_AbridgedAddIdOnOrbit(builder, idOnOrbit)

def EphemerisSet_AbridgedAddOrigObjectId(builder, origObjectId):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(origObjectId), 0)

def AddOrigObjectId(builder, origObjectId):
    EphemerisSet_AbridgedAddOrigObjectId(builder, origObjectId)

def EphemerisSet_AbridgedAddPointStartTime(builder, pointStartTime):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(pointStartTime), 0)

def AddPointStartTime(builder, pointStartTime):
    EphemerisSet_AbridgedAddPointStartTime(builder, pointStartTime)

def EphemerisSet_AbridgedAddUsableStartTime(builder, usableStartTime):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(usableStartTime), 0)

def AddUsableStartTime(builder, usableStartTime):
    EphemerisSet_AbridgedAddUsableStartTime(builder, usableStartTime)

def EphemerisSet_AbridgedAddPointEndTime(builder, pointEndTime):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(pointEndTime), 0)

def AddPointEndTime(builder, pointEndTime):
    EphemerisSet_AbridgedAddPointEndTime(builder, pointEndTime)

def EphemerisSet_AbridgedAddUsableEndTime(builder, usableEndTime):
    builder.PrependUOffsetTRelativeSlot(7, flatbuffers.number_types.UOffsetTFlags.py_type(usableEndTime), 0)

def AddUsableEndTime(builder, usableEndTime):
    EphemerisSet_AbridgedAddUsableEndTime(builder, usableEndTime)

def EphemerisSet_AbridgedAddStepSize(builder, stepSize):
    builder.PrependInt32Slot(8, stepSize, 0)

def AddStepSize(builder, stepSize):
    EphemerisSet_AbridgedAddStepSize(builder, stepSize)

def EphemerisSet_AbridgedAddNumPoints(builder, numPoints):
    builder.PrependInt32Slot(9, numPoints, 0)

def AddNumPoints(builder, numPoints):
    EphemerisSet_AbridgedAddNumPoints(builder, numPoints)

def EphemerisSet_AbridgedAddType(builder, type):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)

def AddType(builder, type):
    EphemerisSet_AbridgedAddType(builder, type)

def EphemerisSet_AbridgedAddPedigree(builder, pedigree):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(pedigree), 0)

def AddPedigree(builder, pedigree):
    EphemerisSet_AbridgedAddPedigree(builder, pedigree)

def EphemerisSet_AbridgedAddCategory(builder, category):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(category), 0)

def AddCategory(builder, category):
    EphemerisSet_AbridgedAddCategory(builder, category)

def EphemerisSet_AbridgedAddIdStateVector(builder, idStateVector):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(idStateVector), 0)

def AddIdStateVector(builder, idStateVector):
    EphemerisSet_AbridgedAddIdStateVector(builder, idStateVector)

def EphemerisSet_AbridgedAddHasMnvr(builder, hasMnvr):
    builder.PrependBoolSlot(14, hasMnvr, 0)

def AddHasMnvr(builder, hasMnvr):
    EphemerisSet_AbridgedAddHasMnvr(builder, hasMnvr)

def EphemerisSet_AbridgedAddIdManeuvers(builder, idManeuvers):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(idManeuvers), 0)

def AddIdManeuvers(builder, idManeuvers):
    EphemerisSet_AbridgedAddIdManeuvers(builder, idManeuvers)

def EphemerisSet_AbridgedStartIdManeuversVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartIdManeuversVector(builder, numElems):
    return EphemerisSet_AbridgedStartIdManeuversVector(builder, numElems)

def EphemerisSet_AbridgedAddHasCov(builder, hasCov):
    builder.PrependBoolSlot(16, hasCov, 0)

def AddHasCov(builder, hasCov):
    EphemerisSet_AbridgedAddHasCov(builder, hasCov)

def EphemerisSet_AbridgedAddHasAccel(builder, hasAccel):
    builder.PrependBoolSlot(17, hasAccel, 0)

def AddHasAccel(builder, hasAccel):
    EphemerisSet_AbridgedAddHasAccel(builder, hasAccel)

def EphemerisSet_AbridgedAddCentBody(builder, centBody):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(centBody), 0)

def AddCentBody(builder, centBody):
    EphemerisSet_AbridgedAddCentBody(builder, centBody)

def EphemerisSet_AbridgedAddIntegrator(builder, integrator):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(integrator), 0)

def AddIntegrator(builder, integrator):
    EphemerisSet_AbridgedAddIntegrator(builder, integrator)

def EphemerisSet_AbridgedAddGeopotentialModel(builder, geopotentialModel):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(geopotentialModel), 0)

def AddGeopotentialModel(builder, geopotentialModel):
    EphemerisSet_AbridgedAddGeopotentialModel(builder, geopotentialModel)

def EphemerisSet_AbridgedAddDragModel(builder, dragModel):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(dragModel), 0)

def AddDragModel(builder, dragModel):
    EphemerisSet_AbridgedAddDragModel(builder, dragModel)

def EphemerisSet_AbridgedAddLunarSolar(builder, lunarSolar):
    builder.PrependBoolSlot(22, lunarSolar, 0)

def AddLunarSolar(builder, lunarSolar):
    EphemerisSet_AbridgedAddLunarSolar(builder, lunarSolar)

def EphemerisSet_AbridgedAddSolidEarthTides(builder, solidEarthTides):
    builder.PrependBoolSlot(23, solidEarthTides, 0)

def AddSolidEarthTides(builder, solidEarthTides):
    EphemerisSet_AbridgedAddSolidEarthTides(builder, solidEarthTides)

def EphemerisSet_AbridgedAddBDot(builder, bDot):
    builder.PrependFloat64Slot(24, bDot, 0.0)

def AddBDot(builder, bDot):
    EphemerisSet_AbridgedAddBDot(builder, bDot)

def EphemerisSet_AbridgedAddEdr(builder, edr):
    builder.PrependFloat64Slot(25, edr, 0.0)

def AddEdr(builder, edr):
    EphemerisSet_AbridgedAddEdr(builder, edr)

def EphemerisSet_AbridgedAddInterpolation(builder, interpolation):
    builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(interpolation), 0)

def AddInterpolation(builder, interpolation):
    EphemerisSet_AbridgedAddInterpolation(builder, interpolation)

def EphemerisSet_AbridgedAddInterpolationDegree(builder, interpolationDegree):
    builder.PrependInt32Slot(27, interpolationDegree, 0)

def AddInterpolationDegree(builder, interpolationDegree):
    EphemerisSet_AbridgedAddInterpolationDegree(builder, interpolationDegree)

def EphemerisSet_AbridgedAddFilename(builder, filename):
    builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(filename), 0)

def AddFilename(builder, filename):
    EphemerisSet_AbridgedAddFilename(builder, filename)

def EphemerisSet_AbridgedAddComments(builder, comments):
    builder.PrependUOffsetTRelativeSlot(29, flatbuffers.number_types.UOffsetTFlags.py_type(comments), 0)

def AddComments(builder, comments):
    EphemerisSet_AbridgedAddComments(builder, comments)

def EphemerisSet_AbridgedAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(30, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    EphemerisSet_AbridgedAddDescription(builder, description)

def EphemerisSet_AbridgedAddDescriptor(builder, descriptor):
    builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(descriptor), 0)

def AddDescriptor(builder, descriptor):
    EphemerisSet_AbridgedAddDescriptor(builder, descriptor)

def EphemerisSet_AbridgedAddReferenceFrame(builder, referenceFrame):
    builder.PrependInt8Slot(32, referenceFrame, 0)

def AddReferenceFrame(builder, referenceFrame):
    EphemerisSet_AbridgedAddReferenceFrame(builder, referenceFrame)

def EphemerisSet_AbridgedAddCovReferenceFrame(builder, covReferenceFrame):
    builder.PrependInt8Slot(33, covReferenceFrame, 0)

def AddCovReferenceFrame(builder, covReferenceFrame):
    EphemerisSet_AbridgedAddCovReferenceFrame(builder, covReferenceFrame)

def EphemerisSet_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    EphemerisSet_AbridgedAddCreatedAt(builder, createdAt)

def EphemerisSet_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(35, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    EphemerisSet_AbridgedAddCreatedBy(builder, createdBy)

def EphemerisSet_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(36, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    EphemerisSet_AbridgedAddSource(builder, source)

def EphemerisSet_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(37, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    EphemerisSet_AbridgedAddOrigin(builder, origin)

def EphemerisSet_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(38, dataMode, 0)

def AddDataMode(builder, dataMode):
    EphemerisSet_AbridgedAddDataMode(builder, dataMode)

def EphemerisSet_AbridgedAddSatNo(builder, satNo):
    builder.PrependInt32Slot(39, satNo, 0)

def AddSatNo(builder, satNo):
    EphemerisSet_AbridgedAddSatNo(builder, satNo)

def EphemerisSet_AbridgedAddTransactionId(builder, transactionId):
    builder.PrependUOffsetTRelativeSlot(40, flatbuffers.number_types.UOffsetTFlags.py_type(transactionId), 0)

def AddTransactionId(builder, transactionId):
    EphemerisSet_AbridgedAddTransactionId(builder, transactionId)

def EphemerisSet_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(41, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    EphemerisSet_AbridgedAddOrigNetwork(builder, origNetwork)

def EphemerisSet_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return EphemerisSet_AbridgedEnd(builder)

try:
    from typing import List
except:
    pass

class EphemerisSet_AbridgedT(object):

    # EphemerisSet_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.classificationMarking = None  # type: str
        self.idOnOrbit = None  # type: str
        self.origObjectId = None  # type: str
        self.pointStartTime = None  # type: str
        self.usableStartTime = None  # type: str
        self.pointEndTime = None  # type: str
        self.usableEndTime = None  # type: str
        self.stepSize = 0  # type: int
        self.numPoints = 0  # type: int
        self.type = None  # type: str
        self.pedigree = None  # type: str
        self.category = None  # type: str
        self.idStateVector = None  # type: str
        self.hasMnvr = False  # type: bool
        self.idManeuvers = None  # type: List[str]
        self.hasCov = False  # type: bool
        self.hasAccel = False  # type: bool
        self.centBody = None  # type: str
        self.integrator = None  # type: str
        self.geopotentialModel = None  # type: str
        self.dragModel = None  # type: str
        self.lunarSolar = False  # type: bool
        self.solidEarthTides = False  # type: bool
        self.bDot = 0.0  # type: float
        self.edr = 0.0  # type: float
        self.interpolation = None  # type: str
        self.interpolationDegree = 0  # type: int
        self.filename = None  # type: str
        self.comments = None  # type: str
        self.description = None  # type: str
        self.descriptor = None  # type: str
        self.referenceFrame = 0  # type: int
        self.covReferenceFrame = 0  # type: int
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.dataMode = 0  # type: int
        self.satNo = 0  # type: int
        self.transactionId = None  # type: str
        self.origNetwork = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        ephemerisSetAbridged = EphemerisSet_Abridged()
        ephemerisSetAbridged.Init(buf, pos)
        return cls.InitFromObj(ephemerisSetAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, ephemerisSetAbridged):
        x = EphemerisSet_AbridgedT()
        x._UnPack(ephemerisSetAbridged)
        return x

    # EphemerisSet_AbridgedT
    def _UnPack(self, ephemerisSetAbridged):
        if ephemerisSetAbridged is None:
            return
        self.id = ephemerisSetAbridged.Id()
        self.classificationMarking = ephemerisSetAbridged.ClassificationMarking()
        self.idOnOrbit = ephemerisSetAbridged.IdOnOrbit()
        self.origObjectId = ephemerisSetAbridged.OrigObjectId()
        self.pointStartTime = ephemerisSetAbridged.PointStartTime()
        self.usableStartTime = ephemerisSetAbridged.UsableStartTime()
        self.pointEndTime = ephemerisSetAbridged.PointEndTime()
        self.usableEndTime = ephemerisSetAbridged.UsableEndTime()
        self.stepSize = ephemerisSetAbridged.StepSize()
        self.numPoints = ephemerisSetAbridged.NumPoints()
        self.type = ephemerisSetAbridged.Type()
        self.pedigree = ephemerisSetAbridged.Pedigree()
        self.category = ephemerisSetAbridged.Category()
        self.idStateVector = ephemerisSetAbridged.IdStateVector()
        self.hasMnvr = ephemerisSetAbridged.HasMnvr()
        if not ephemerisSetAbridged.IdManeuversIsNone():
            self.idManeuvers = []
            for i in range(ephemerisSetAbridged.IdManeuversLength()):
                self.idManeuvers.append(ephemerisSetAbridged.IdManeuvers(i))
        self.hasCov = ephemerisSetAbridged.HasCov()
        self.hasAccel = ephemerisSetAbridged.HasAccel()
        self.centBody = ephemerisSetAbridged.CentBody()
        self.integrator = ephemerisSetAbridged.Integrator()
        self.geopotentialModel = ephemerisSetAbridged.GeopotentialModel()
        self.dragModel = ephemerisSetAbridged.DragModel()
        self.lunarSolar = ephemerisSetAbridged.LunarSolar()
        self.solidEarthTides = ephemerisSetAbridged.SolidEarthTides()
        self.bDot = ephemerisSetAbridged.BDot()
        self.edr = ephemerisSetAbridged.Edr()
        self.interpolation = ephemerisSetAbridged.Interpolation()
        self.interpolationDegree = ephemerisSetAbridged.InterpolationDegree()
        self.filename = ephemerisSetAbridged.Filename()
        self.comments = ephemerisSetAbridged.Comments()
        self.description = ephemerisSetAbridged.Description()
        self.descriptor = ephemerisSetAbridged.Descriptor()
        self.referenceFrame = ephemerisSetAbridged.ReferenceFrame()
        self.covReferenceFrame = ephemerisSetAbridged.CovReferenceFrame()
        self.createdAt = ephemerisSetAbridged.CreatedAt()
        self.createdBy = ephemerisSetAbridged.CreatedBy()
        self.source = ephemerisSetAbridged.Source()
        self.origin = ephemerisSetAbridged.Origin()
        self.dataMode = ephemerisSetAbridged.DataMode()
        self.satNo = ephemerisSetAbridged.SatNo()
        self.transactionId = ephemerisSetAbridged.TransactionId()
        self.origNetwork = ephemerisSetAbridged.OrigNetwork()

    # EphemerisSet_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.idOnOrbit is not None:
            idOnOrbit = builder.CreateString(self.idOnOrbit)
        if self.origObjectId is not None:
            origObjectId = builder.CreateString(self.origObjectId)
        if self.pointStartTime is not None:
            pointStartTime = builder.CreateString(self.pointStartTime)
        if self.usableStartTime is not None:
            usableStartTime = builder.CreateString(self.usableStartTime)
        if self.pointEndTime is not None:
            pointEndTime = builder.CreateString(self.pointEndTime)
        if self.usableEndTime is not None:
            usableEndTime = builder.CreateString(self.usableEndTime)
        if self.type is not None:
            type = builder.CreateString(self.type)
        if self.pedigree is not None:
            pedigree = builder.CreateString(self.pedigree)
        if self.category is not None:
            category = builder.CreateString(self.category)
        if self.idStateVector is not None:
            idStateVector = builder.CreateString(self.idStateVector)
        if self.idManeuvers is not None:
            idManeuverslist = []
            for i in range(len(self.idManeuvers)):
                idManeuverslist.append(builder.CreateString(self.idManeuvers[i]))
            EphemerisSet_AbridgedStartIdManeuversVector(builder, len(self.idManeuvers))
            for i in reversed(range(len(self.idManeuvers))):
                builder.PrependUOffsetTRelative(idManeuverslist[i])
            idManeuvers = builder.EndVector()
        if self.centBody is not None:
            centBody = builder.CreateString(self.centBody)
        if self.integrator is not None:
            integrator = builder.CreateString(self.integrator)
        if self.geopotentialModel is not None:
            geopotentialModel = builder.CreateString(self.geopotentialModel)
        if self.dragModel is not None:
            dragModel = builder.CreateString(self.dragModel)
        if self.interpolation is not None:
            interpolation = builder.CreateString(self.interpolation)
        if self.filename is not None:
            filename = builder.CreateString(self.filename)
        if self.comments is not None:
            comments = builder.CreateString(self.comments)
        if self.description is not None:
            description = builder.CreateString(self.description)
        if self.descriptor is not None:
            descriptor = builder.CreateString(self.descriptor)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.transactionId is not None:
            transactionId = builder.CreateString(self.transactionId)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        EphemerisSet_AbridgedStart(builder)
        if self.id is not None:
            EphemerisSet_AbridgedAddId(builder, id)
        if self.classificationMarking is not None:
            EphemerisSet_AbridgedAddClassificationMarking(builder, classificationMarking)
        if self.idOnOrbit is not None:
            EphemerisSet_AbridgedAddIdOnOrbit(builder, idOnOrbit)
        if self.origObjectId is not None:
            EphemerisSet_AbridgedAddOrigObjectId(builder, origObjectId)
        if self.pointStartTime is not None:
            EphemerisSet_AbridgedAddPointStartTime(builder, pointStartTime)
        if self.usableStartTime is not None:
            EphemerisSet_AbridgedAddUsableStartTime(builder, usableStartTime)
        if self.pointEndTime is not None:
            EphemerisSet_AbridgedAddPointEndTime(builder, pointEndTime)
        if self.usableEndTime is not None:
            EphemerisSet_AbridgedAddUsableEndTime(builder, usableEndTime)
        EphemerisSet_AbridgedAddStepSize(builder, self.stepSize)
        EphemerisSet_AbridgedAddNumPoints(builder, self.numPoints)
        if self.type is not None:
            EphemerisSet_AbridgedAddType(builder, type)
        if self.pedigree is not None:
            EphemerisSet_AbridgedAddPedigree(builder, pedigree)
        if self.category is not None:
            EphemerisSet_AbridgedAddCategory(builder, category)
        if self.idStateVector is not None:
            EphemerisSet_AbridgedAddIdStateVector(builder, idStateVector)
        EphemerisSet_AbridgedAddHasMnvr(builder, self.hasMnvr)
        if self.idManeuvers is not None:
            EphemerisSet_AbridgedAddIdManeuvers(builder, idManeuvers)
        EphemerisSet_AbridgedAddHasCov(builder, self.hasCov)
        EphemerisSet_AbridgedAddHasAccel(builder, self.hasAccel)
        if self.centBody is not None:
            EphemerisSet_AbridgedAddCentBody(builder, centBody)
        if self.integrator is not None:
            EphemerisSet_AbridgedAddIntegrator(builder, integrator)
        if self.geopotentialModel is not None:
            EphemerisSet_AbridgedAddGeopotentialModel(builder, geopotentialModel)
        if self.dragModel is not None:
            EphemerisSet_AbridgedAddDragModel(builder, dragModel)
        EphemerisSet_AbridgedAddLunarSolar(builder, self.lunarSolar)
        EphemerisSet_AbridgedAddSolidEarthTides(builder, self.solidEarthTides)
        EphemerisSet_AbridgedAddBDot(builder, self.bDot)
        EphemerisSet_AbridgedAddEdr(builder, self.edr)
        if self.interpolation is not None:
            EphemerisSet_AbridgedAddInterpolation(builder, interpolation)
        EphemerisSet_AbridgedAddInterpolationDegree(builder, self.interpolationDegree)
        if self.filename is not None:
            EphemerisSet_AbridgedAddFilename(builder, filename)
        if self.comments is not None:
            EphemerisSet_AbridgedAddComments(builder, comments)
        if self.description is not None:
            EphemerisSet_AbridgedAddDescription(builder, description)
        if self.descriptor is not None:
            EphemerisSet_AbridgedAddDescriptor(builder, descriptor)
        EphemerisSet_AbridgedAddReferenceFrame(builder, self.referenceFrame)
        EphemerisSet_AbridgedAddCovReferenceFrame(builder, self.covReferenceFrame)
        if self.createdAt is not None:
            EphemerisSet_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            EphemerisSet_AbridgedAddCreatedBy(builder, createdBy)
        if self.source is not None:
            EphemerisSet_AbridgedAddSource(builder, source)
        if self.origin is not None:
            EphemerisSet_AbridgedAddOrigin(builder, origin)
        EphemerisSet_AbridgedAddDataMode(builder, self.dataMode)
        EphemerisSet_AbridgedAddSatNo(builder, self.satNo)
        if self.transactionId is not None:
            EphemerisSet_AbridgedAddTransactionId(builder, transactionId)
        if self.origNetwork is not None:
            EphemerisSet_AbridgedAddOrigNetwork(builder, origNetwork)
        ephemerisSetAbridged = EphemerisSet_AbridgedEnd(builder)
        return ephemerisSetAbridged
