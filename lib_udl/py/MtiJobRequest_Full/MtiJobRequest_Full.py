# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// A grouping of zero or more target reports for which the sensor provides a single time, sensor position, reference position on the ground with simple estimates for the observed area at the reported time, and other pertinent data.
class MtiJobRequest_Full(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MtiJobRequest_Full()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMtiJobRequest_Full(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def MtiJobRequest_FullBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x54\x49\x4A", size_prefixed=size_prefixed)

    # MtiJobRequest_Full
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # The requestor of the sensor service.
    # Example: /// Example: REQUESTER
    # Constraints: Minimum length = 0, Maximum length = 10
    # MtiJobRequest_Full
    def R1(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Identifier for the tasking message sent by the requesting station.
    # Example: /// Example: IDENTIFIER
    # Constraints: Minimum length = 0, Maximum length = 10
    # MtiJobRequest_Full
    def R2(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The priority of the request relative to other requests originated by the requesting station.
    # Example: /// Example: 15
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R3(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # North-South position of the first corner (Point A) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R4(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the first corner (Point A) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R5(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # North-South position of the second corner (Point B) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R6(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the second corner (Point B) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R7(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # North-South position of the third corner (Point C) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R8(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the third corner (Point C) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R9(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # North-South position of the fourth corner (Point D) defining the requested area for service, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R10(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # East-West position of the fourth corner (Point D) defining the requested area for service, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian.
    # Example: /// Example: 10.23
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R11(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Identifies the radar mode requested by the requestor.
    # Example: /// Example: MODE
    # Constraints: Minimum length = 0, Maximum length = 32
    # MtiJobRequest_Full
    def R12(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Specifies the radar range resolution requested by the requestor, expressed in centimeters.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R13(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Specifies the radar cross-range resolution requested by the requestor, expressed in decimeters.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R14(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Specifies the Earliest Start Time for which the service is requested.  Composite of fields R15-R20.
    # Example: /// Example: 2018-01-01T16:00:00.123456Z
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def JobReqEst(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Specifies the maximum time from the requested start time after which the request is to be abandoned, expressed in seconds.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R21(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Specifies the time duration for the radar job, measured from the actual start of the job, expressed in seconds.
    # Example: /// Example: 10
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R22(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Specifies the revisit interval for the radar job, expressed in deciseconds.
    # Example: /// Example: 100
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R23(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # the type of sensor or the platform.
    # Example: /// Example: TYPE
    # Constraints: Minimum length = 0, Maximum length = 32
    # MtiJobRequest_Full
    def R24(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The particular variant of the sensor type.
    # Example: /// Example: VARIANT
    # Constraints: Minimum length = 0, Maximum length = 8
    # MtiJobRequest_Full
    def R25(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Flag field indicating that it is an initial request (flag = 0) or the desire of the requestor to cancel (flag = 1) the requested job.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # MtiJobRequest_Full
    def R26(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def MtiJobRequest_FullStart(builder):
    builder.StartObject(21)

def Start(builder):
    MtiJobRequest_FullStart(builder)

def MtiJobRequest_FullAddR1(builder, r1):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(r1), 0)

def AddR1(builder, r1):
    MtiJobRequest_FullAddR1(builder, r1)

def MtiJobRequest_FullAddR2(builder, r2):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(r2), 0)

def AddR2(builder, r2):
    MtiJobRequest_FullAddR2(builder, r2)

def MtiJobRequest_FullAddR3(builder, r3):
    builder.PrependInt32Slot(2, r3, 0)

def AddR3(builder, r3):
    MtiJobRequest_FullAddR3(builder, r3)

def MtiJobRequest_FullAddR4(builder, r4):
    builder.PrependFloat64Slot(3, r4, 0.0)

def AddR4(builder, r4):
    MtiJobRequest_FullAddR4(builder, r4)

def MtiJobRequest_FullAddR5(builder, r5):
    builder.PrependFloat64Slot(4, r5, 0.0)

def AddR5(builder, r5):
    MtiJobRequest_FullAddR5(builder, r5)

def MtiJobRequest_FullAddR6(builder, r6):
    builder.PrependFloat64Slot(5, r6, 0.0)

def AddR6(builder, r6):
    MtiJobRequest_FullAddR6(builder, r6)

def MtiJobRequest_FullAddR7(builder, r7):
    builder.PrependFloat64Slot(6, r7, 0.0)

def AddR7(builder, r7):
    MtiJobRequest_FullAddR7(builder, r7)

def MtiJobRequest_FullAddR8(builder, r8):
    builder.PrependFloat64Slot(7, r8, 0.0)

def AddR8(builder, r8):
    MtiJobRequest_FullAddR8(builder, r8)

def MtiJobRequest_FullAddR9(builder, r9):
    builder.PrependFloat64Slot(8, r9, 0.0)

def AddR9(builder, r9):
    MtiJobRequest_FullAddR9(builder, r9)

def MtiJobRequest_FullAddR10(builder, r10):
    builder.PrependFloat64Slot(9, r10, 0.0)

def AddR10(builder, r10):
    MtiJobRequest_FullAddR10(builder, r10)

def MtiJobRequest_FullAddR11(builder, r11):
    builder.PrependFloat64Slot(10, r11, 0.0)

def AddR11(builder, r11):
    MtiJobRequest_FullAddR11(builder, r11)

def MtiJobRequest_FullAddR12(builder, r12):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(r12), 0)

def AddR12(builder, r12):
    MtiJobRequest_FullAddR12(builder, r12)

def MtiJobRequest_FullAddR13(builder, r13):
    builder.PrependInt32Slot(12, r13, 0)

def AddR13(builder, r13):
    MtiJobRequest_FullAddR13(builder, r13)

def MtiJobRequest_FullAddR14(builder, r14):
    builder.PrependInt32Slot(13, r14, 0)

def AddR14(builder, r14):
    MtiJobRequest_FullAddR14(builder, r14)

def MtiJobRequest_FullAddJobReqEst(builder, jobReqEst):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(jobReqEst), 0)

def AddJobReqEst(builder, jobReqEst):
    MtiJobRequest_FullAddJobReqEst(builder, jobReqEst)

def MtiJobRequest_FullAddR21(builder, r21):
    builder.PrependInt32Slot(15, r21, 0)

def AddR21(builder, r21):
    MtiJobRequest_FullAddR21(builder, r21)

def MtiJobRequest_FullAddR22(builder, r22):
    builder.PrependInt32Slot(16, r22, 0)

def AddR22(builder, r22):
    MtiJobRequest_FullAddR22(builder, r22)

def MtiJobRequest_FullAddR23(builder, r23):
    builder.PrependInt32Slot(17, r23, 0)

def AddR23(builder, r23):
    MtiJobRequest_FullAddR23(builder, r23)

def MtiJobRequest_FullAddR24(builder, r24):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(r24), 0)

def AddR24(builder, r24):
    MtiJobRequest_FullAddR24(builder, r24)

def MtiJobRequest_FullAddR25(builder, r25):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(r25), 0)

def AddR25(builder, r25):
    MtiJobRequest_FullAddR25(builder, r25)

def MtiJobRequest_FullAddR26(builder, r26):
    builder.PrependBoolSlot(20, r26, 0)

def AddR26(builder, r26):
    MtiJobRequest_FullAddR26(builder, r26)

def MtiJobRequest_FullEnd(builder):
    return builder.EndObject()

def End(builder):
    return MtiJobRequest_FullEnd(builder)


class MtiJobRequest_FullT(object):

    # MtiJobRequest_FullT
    def __init__(self):
        self.r1 = None  # type: str
        self.r2 = None  # type: str
        self.r3 = 0  # type: int
        self.r4 = 0.0  # type: float
        self.r5 = 0.0  # type: float
        self.r6 = 0.0  # type: float
        self.r7 = 0.0  # type: float
        self.r8 = 0.0  # type: float
        self.r9 = 0.0  # type: float
        self.r10 = 0.0  # type: float
        self.r11 = 0.0  # type: float
        self.r12 = None  # type: str
        self.r13 = 0  # type: int
        self.r14 = 0  # type: int
        self.jobReqEst = None  # type: str
        self.r21 = 0  # type: int
        self.r22 = 0  # type: int
        self.r23 = 0  # type: int
        self.r24 = None  # type: str
        self.r25 = None  # type: str
        self.r26 = False  # type: bool

    @classmethod
    def InitFromBuf(cls, buf, pos):
        mtiJobRequestFull = MtiJobRequest_Full()
        mtiJobRequestFull.Init(buf, pos)
        return cls.InitFromObj(mtiJobRequestFull)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, mtiJobRequestFull):
        x = MtiJobRequest_FullT()
        x._UnPack(mtiJobRequestFull)
        return x

    # MtiJobRequest_FullT
    def _UnPack(self, mtiJobRequestFull):
        if mtiJobRequestFull is None:
            return
        self.r1 = mtiJobRequestFull.R1()
        self.r2 = mtiJobRequestFull.R2()
        self.r3 = mtiJobRequestFull.R3()
        self.r4 = mtiJobRequestFull.R4()
        self.r5 = mtiJobRequestFull.R5()
        self.r6 = mtiJobRequestFull.R6()
        self.r7 = mtiJobRequestFull.R7()
        self.r8 = mtiJobRequestFull.R8()
        self.r9 = mtiJobRequestFull.R9()
        self.r10 = mtiJobRequestFull.R10()
        self.r11 = mtiJobRequestFull.R11()
        self.r12 = mtiJobRequestFull.R12()
        self.r13 = mtiJobRequestFull.R13()
        self.r14 = mtiJobRequestFull.R14()
        self.jobReqEst = mtiJobRequestFull.JobReqEst()
        self.r21 = mtiJobRequestFull.R21()
        self.r22 = mtiJobRequestFull.R22()
        self.r23 = mtiJobRequestFull.R23()
        self.r24 = mtiJobRequestFull.R24()
        self.r25 = mtiJobRequestFull.R25()
        self.r26 = mtiJobRequestFull.R26()

    # MtiJobRequest_FullT
    def Pack(self, builder):
        if self.r1 is not None:
            r1 = builder.CreateString(self.r1)
        if self.r2 is not None:
            r2 = builder.CreateString(self.r2)
        if self.r12 is not None:
            r12 = builder.CreateString(self.r12)
        if self.jobReqEst is not None:
            jobReqEst = builder.CreateString(self.jobReqEst)
        if self.r24 is not None:
            r24 = builder.CreateString(self.r24)
        if self.r25 is not None:
            r25 = builder.CreateString(self.r25)
        MtiJobRequest_FullStart(builder)
        if self.r1 is not None:
            MtiJobRequest_FullAddR1(builder, r1)
        if self.r2 is not None:
            MtiJobRequest_FullAddR2(builder, r2)
        MtiJobRequest_FullAddR3(builder, self.r3)
        MtiJobRequest_FullAddR4(builder, self.r4)
        MtiJobRequest_FullAddR5(builder, self.r5)
        MtiJobRequest_FullAddR6(builder, self.r6)
        MtiJobRequest_FullAddR7(builder, self.r7)
        MtiJobRequest_FullAddR8(builder, self.r8)
        MtiJobRequest_FullAddR9(builder, self.r9)
        MtiJobRequest_FullAddR10(builder, self.r10)
        MtiJobRequest_FullAddR11(builder, self.r11)
        if self.r12 is not None:
            MtiJobRequest_FullAddR12(builder, r12)
        MtiJobRequest_FullAddR13(builder, self.r13)
        MtiJobRequest_FullAddR14(builder, self.r14)
        if self.jobReqEst is not None:
            MtiJobRequest_FullAddJobReqEst(builder, jobReqEst)
        MtiJobRequest_FullAddR21(builder, self.r21)
        MtiJobRequest_FullAddR22(builder, self.r22)
        MtiJobRequest_FullAddR23(builder, self.r23)
        if self.r24 is not None:
            MtiJobRequest_FullAddR24(builder, r24)
        if self.r25 is not None:
            MtiJobRequest_FullAddR25(builder, r25)
        MtiJobRequest_FullAddR26(builder, self.r26)
        mtiJobRequestFull = MtiJobRequest_FullEnd(builder)
        return mtiJobRequestFull
