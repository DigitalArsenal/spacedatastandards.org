# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Information for the specified on-orbit GEO spacecraft, including status, expected longitude limits, and drift rates.
class GEOStatus_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GEOStatus_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGEOStatus_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def GEOStatus_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x47\x45\x4F\x53", size_prefixed=size_prefixed)

    # GEOStatus_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: GEOSTATUS-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # GEOStatus_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # GEOStatus_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Unique identifier of the object on-orbit object.
    # Example: /// Example: REF-ONORBIT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GEOStatus_Abridged
    def IdOnOrbit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional identifier provided to indicate the target onorbit. This may be an internal identifier and not necessarily map to a valid satellite number.
    # Example: /// Example: ORIGOBJECT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GEOStatus_Abridged
    def OrigObjectId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Sine of inclination times the sine of right ascension.
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def Ss(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Sine of inclination times the cosine of right ascension.
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def Sc(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Objects displacement from geostationary orbit in deg^2/day^2.
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def RelativeEnergy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Corrective or overriding long term trend for longitudinal change in degrees/day.
    # Example: /// Example: 1.1
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def LongitudeRate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Minimum longitude for this object.  WGS-84 longitude of the spacecraft position, in degrees. 0 to 360 degrees.
    # Example: /// Example: 180.1
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def LongitudeMin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Maximum longitude for this object. WGS-84 longitude of the spacecraft position, in degrees. 0 to 360 degrees.
    # Example: /// Example: 1.01
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def LongitudeMax(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Indicates the confidence level in the entry.  (Low, Medium, High).
    # Example: /// Example: Low
    # Constraints: Minimum length = 0, Maximum length = 8
    # GEOStatus_Abridged
    def ConfidenceLevel(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Geosynchronous plane changing status.  (Current, Never, Former, Future).
    # Example: /// Example: Current
    # Constraints: Minimum length = 0, Maximum length = 8
    # GEOStatus_Abridged
    def PlaneChangeStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicates the trough (gravity well) or drift direction of a space object:
    # 255 - Influenced by 255° longitude trough. 
    # 75 - Influenced by 75° longitude trough. 
    # Both - Oscillating between both 255 and 75 troughs. 
    # East - Drifting eastward; large relative energy and a period less than 1436.1 minutes. 
    # West - Drifting westward; large relative energy and a period greater than 1436.2 minutes.
    # Example: /// Example: West
    # Constraints: Minimum length = 0, Maximum length = 8
    # GEOStatus_Abridged
    def TroughType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Lost space object indicator.  (True or False).
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def LostFlag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Semi-annual correction.  (True or False).
    # Example: /// Example: False
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def SemiAnnualCorrFlag(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Space object status.  (Active, Dead, Unknown).
    # Example: /// Example: Active
    # Constraints: Minimum length = 0, Maximum length = 32
    # GEOStatus_Abridged
    def ObjectStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.
    # Example: /// Example: Example URI
    # Constraints: Minimum length = 0, Maximum length = 256
    # GEOStatus_Abridged
    def RawFileUri(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # GEOStatus_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # GEOStatus_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # GEOStatus_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # GEOStatus_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Satellite/catalog number of the target on-orbit object.
    # Example: /// Example: 21
    # Constraints: No constraints specified.
    # GEOStatus_Abridged
    def SatNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 0, Maximum length = 32
    # GEOStatus_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def GEOStatus_AbridgedStart(builder):
    builder.StartObject(24)

def Start(builder):
    GEOStatus_AbridgedStart(builder)

def GEOStatus_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    GEOStatus_AbridgedAddId(builder, id)

def GEOStatus_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    GEOStatus_AbridgedAddClassificationMarking(builder, classificationMarking)

def GEOStatus_AbridgedAddIdOnOrbit(builder, idOnOrbit):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(idOnOrbit), 0)

def AddIdOnOrbit(builder, idOnOrbit):
    GEOStatus_AbridgedAddIdOnOrbit(builder, idOnOrbit)

def GEOStatus_AbridgedAddOrigObjectId(builder, origObjectId):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(origObjectId), 0)

def AddOrigObjectId(builder, origObjectId):
    GEOStatus_AbridgedAddOrigObjectId(builder, origObjectId)

def GEOStatus_AbridgedAddSs(builder, ss):
    builder.PrependFloat64Slot(4, ss, 0.0)

def AddSs(builder, ss):
    GEOStatus_AbridgedAddSs(builder, ss)

def GEOStatus_AbridgedAddSc(builder, sc):
    builder.PrependFloat64Slot(5, sc, 0.0)

def AddSc(builder, sc):
    GEOStatus_AbridgedAddSc(builder, sc)

def GEOStatus_AbridgedAddRelativeEnergy(builder, relativeEnergy):
    builder.PrependFloat64Slot(6, relativeEnergy, 0.0)

def AddRelativeEnergy(builder, relativeEnergy):
    GEOStatus_AbridgedAddRelativeEnergy(builder, relativeEnergy)

def GEOStatus_AbridgedAddLongitudeRate(builder, longitudeRate):
    builder.PrependFloat64Slot(7, longitudeRate, 0.0)

def AddLongitudeRate(builder, longitudeRate):
    GEOStatus_AbridgedAddLongitudeRate(builder, longitudeRate)

def GEOStatus_AbridgedAddLongitudeMin(builder, longitudeMin):
    builder.PrependFloat64Slot(8, longitudeMin, 0.0)

def AddLongitudeMin(builder, longitudeMin):
    GEOStatus_AbridgedAddLongitudeMin(builder, longitudeMin)

def GEOStatus_AbridgedAddLongitudeMax(builder, longitudeMax):
    builder.PrependFloat64Slot(9, longitudeMax, 0.0)

def AddLongitudeMax(builder, longitudeMax):
    GEOStatus_AbridgedAddLongitudeMax(builder, longitudeMax)

def GEOStatus_AbridgedAddConfidenceLevel(builder, confidenceLevel):
    builder.PrependUOffsetTRelativeSlot(10, flatbuffers.number_types.UOffsetTFlags.py_type(confidenceLevel), 0)

def AddConfidenceLevel(builder, confidenceLevel):
    GEOStatus_AbridgedAddConfidenceLevel(builder, confidenceLevel)

def GEOStatus_AbridgedAddPlaneChangeStatus(builder, planeChangeStatus):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(planeChangeStatus), 0)

def AddPlaneChangeStatus(builder, planeChangeStatus):
    GEOStatus_AbridgedAddPlaneChangeStatus(builder, planeChangeStatus)

def GEOStatus_AbridgedAddTroughType(builder, troughType):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(troughType), 0)

def AddTroughType(builder, troughType):
    GEOStatus_AbridgedAddTroughType(builder, troughType)

def GEOStatus_AbridgedAddLostFlag(builder, lostFlag):
    builder.PrependBoolSlot(13, lostFlag, 0)

def AddLostFlag(builder, lostFlag):
    GEOStatus_AbridgedAddLostFlag(builder, lostFlag)

def GEOStatus_AbridgedAddSemiAnnualCorrFlag(builder, semiAnnualCorrFlag):
    builder.PrependBoolSlot(14, semiAnnualCorrFlag, 0)

def AddSemiAnnualCorrFlag(builder, semiAnnualCorrFlag):
    GEOStatus_AbridgedAddSemiAnnualCorrFlag(builder, semiAnnualCorrFlag)

def GEOStatus_AbridgedAddObjectStatus(builder, objectStatus):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(objectStatus), 0)

def AddObjectStatus(builder, objectStatus):
    GEOStatus_AbridgedAddObjectStatus(builder, objectStatus)

def GEOStatus_AbridgedAddRawFileUri(builder, rawFileUri):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(rawFileUri), 0)

def AddRawFileUri(builder, rawFileUri):
    GEOStatus_AbridgedAddRawFileUri(builder, rawFileUri)

def GEOStatus_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(17, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    GEOStatus_AbridgedAddCreatedAt(builder, createdAt)

def GEOStatus_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(18, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    GEOStatus_AbridgedAddCreatedBy(builder, createdBy)

def GEOStatus_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(19, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    GEOStatus_AbridgedAddSource(builder, source)

def GEOStatus_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    GEOStatus_AbridgedAddOrigin(builder, origin)

def GEOStatus_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(21, dataMode, 0)

def AddDataMode(builder, dataMode):
    GEOStatus_AbridgedAddDataMode(builder, dataMode)

def GEOStatus_AbridgedAddSatNo(builder, satNo):
    builder.PrependInt32Slot(22, satNo, 0)

def AddSatNo(builder, satNo):
    GEOStatus_AbridgedAddSatNo(builder, satNo)

def GEOStatus_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    GEOStatus_AbridgedAddOrigNetwork(builder, origNetwork)

def GEOStatus_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return GEOStatus_AbridgedEnd(builder)


class GEOStatus_AbridgedT(object):

    # GEOStatus_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.classificationMarking = None  # type: str
        self.idOnOrbit = None  # type: str
        self.origObjectId = None  # type: str
        self.ss = 0.0  # type: float
        self.sc = 0.0  # type: float
        self.relativeEnergy = 0.0  # type: float
        self.longitudeRate = 0.0  # type: float
        self.longitudeMin = 0.0  # type: float
        self.longitudeMax = 0.0  # type: float
        self.confidenceLevel = None  # type: str
        self.planeChangeStatus = None  # type: str
        self.troughType = None  # type: str
        self.lostFlag = False  # type: bool
        self.semiAnnualCorrFlag = False  # type: bool
        self.objectStatus = None  # type: str
        self.rawFileUri = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.dataMode = 0  # type: int
        self.satNo = 0  # type: int
        self.origNetwork = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        geostatusAbridged = GEOStatus_Abridged()
        geostatusAbridged.Init(buf, pos)
        return cls.InitFromObj(geostatusAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, geostatusAbridged):
        x = GEOStatus_AbridgedT()
        x._UnPack(geostatusAbridged)
        return x

    # GEOStatus_AbridgedT
    def _UnPack(self, geostatusAbridged):
        if geostatusAbridged is None:
            return
        self.id = geostatusAbridged.Id()
        self.classificationMarking = geostatusAbridged.ClassificationMarking()
        self.idOnOrbit = geostatusAbridged.IdOnOrbit()
        self.origObjectId = geostatusAbridged.OrigObjectId()
        self.ss = geostatusAbridged.Ss()
        self.sc = geostatusAbridged.Sc()
        self.relativeEnergy = geostatusAbridged.RelativeEnergy()
        self.longitudeRate = geostatusAbridged.LongitudeRate()
        self.longitudeMin = geostatusAbridged.LongitudeMin()
        self.longitudeMax = geostatusAbridged.LongitudeMax()
        self.confidenceLevel = geostatusAbridged.ConfidenceLevel()
        self.planeChangeStatus = geostatusAbridged.PlaneChangeStatus()
        self.troughType = geostatusAbridged.TroughType()
        self.lostFlag = geostatusAbridged.LostFlag()
        self.semiAnnualCorrFlag = geostatusAbridged.SemiAnnualCorrFlag()
        self.objectStatus = geostatusAbridged.ObjectStatus()
        self.rawFileUri = geostatusAbridged.RawFileUri()
        self.createdAt = geostatusAbridged.CreatedAt()
        self.createdBy = geostatusAbridged.CreatedBy()
        self.source = geostatusAbridged.Source()
        self.origin = geostatusAbridged.Origin()
        self.dataMode = geostatusAbridged.DataMode()
        self.satNo = geostatusAbridged.SatNo()
        self.origNetwork = geostatusAbridged.OrigNetwork()

    # GEOStatus_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.idOnOrbit is not None:
            idOnOrbit = builder.CreateString(self.idOnOrbit)
        if self.origObjectId is not None:
            origObjectId = builder.CreateString(self.origObjectId)
        if self.confidenceLevel is not None:
            confidenceLevel = builder.CreateString(self.confidenceLevel)
        if self.planeChangeStatus is not None:
            planeChangeStatus = builder.CreateString(self.planeChangeStatus)
        if self.troughType is not None:
            troughType = builder.CreateString(self.troughType)
        if self.objectStatus is not None:
            objectStatus = builder.CreateString(self.objectStatus)
        if self.rawFileUri is not None:
            rawFileUri = builder.CreateString(self.rawFileUri)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        GEOStatus_AbridgedStart(builder)
        if self.id is not None:
            GEOStatus_AbridgedAddId(builder, id)
        if self.classificationMarking is not None:
            GEOStatus_AbridgedAddClassificationMarking(builder, classificationMarking)
        if self.idOnOrbit is not None:
            GEOStatus_AbridgedAddIdOnOrbit(builder, idOnOrbit)
        if self.origObjectId is not None:
            GEOStatus_AbridgedAddOrigObjectId(builder, origObjectId)
        GEOStatus_AbridgedAddSs(builder, self.ss)
        GEOStatus_AbridgedAddSc(builder, self.sc)
        GEOStatus_AbridgedAddRelativeEnergy(builder, self.relativeEnergy)
        GEOStatus_AbridgedAddLongitudeRate(builder, self.longitudeRate)
        GEOStatus_AbridgedAddLongitudeMin(builder, self.longitudeMin)
        GEOStatus_AbridgedAddLongitudeMax(builder, self.longitudeMax)
        if self.confidenceLevel is not None:
            GEOStatus_AbridgedAddConfidenceLevel(builder, confidenceLevel)
        if self.planeChangeStatus is not None:
            GEOStatus_AbridgedAddPlaneChangeStatus(builder, planeChangeStatus)
        if self.troughType is not None:
            GEOStatus_AbridgedAddTroughType(builder, troughType)
        GEOStatus_AbridgedAddLostFlag(builder, self.lostFlag)
        GEOStatus_AbridgedAddSemiAnnualCorrFlag(builder, self.semiAnnualCorrFlag)
        if self.objectStatus is not None:
            GEOStatus_AbridgedAddObjectStatus(builder, objectStatus)
        if self.rawFileUri is not None:
            GEOStatus_AbridgedAddRawFileUri(builder, rawFileUri)
        if self.createdAt is not None:
            GEOStatus_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            GEOStatus_AbridgedAddCreatedBy(builder, createdBy)
        if self.source is not None:
            GEOStatus_AbridgedAddSource(builder, source)
        if self.origin is not None:
            GEOStatus_AbridgedAddOrigin(builder, origin)
        GEOStatus_AbridgedAddDataMode(builder, self.dataMode)
        GEOStatus_AbridgedAddSatNo(builder, self.satNo)
        if self.origNetwork is not None:
            GEOStatus_AbridgedAddOrigNetwork(builder, origNetwork)
        geostatusAbridged = GEOStatus_AbridgedEnd(builder)
        return geostatusAbridged
