# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Set of GNSSObservation data.
class GNSSObservationSet_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = GNSSObservationSet_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsGNSSObservationSet_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def GNSSObservationSet_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x47\x4E\x53\x53", size_prefixed=size_prefixed)

    # GNSSObservationSet_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: GNSSObSet-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # GNSSObservationSet_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # GNSSObservationSet_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The marker type of the observing receiver (AIRBORNE, ANIMAL, BALLISTIC, FIXED BUOY, FLOATING BUOY, FLOATING ICE, GEODETIC, GLACIER, GROUNDCRAFT, HUMAN, NON GEODETIC, NON PHYSICAL, SPACEBORNE, WATERCRAFT).  Reference RINEX 3+ for further information concerning marker types.
    # Example: /// Example: SPACEBORNE
    # Constraints: Minimum length = 0, Maximum length = 24
    # GNSSObservationSet_Abridged
    def MarkerType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Unique identifier of the primary satellite on-orbit object.
    # Example: /// Example: ONORBIT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GNSSObservationSet_Abridged
    def IdOnOrbit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Satellite/catalog number of the target on-orbit object.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def SatNo(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Optional identifier provided by ephemeris source to indicate the target object of this ephemeris. This may be an internal identifier and not necessarily map to a valid satellite number.
    # Example: /// Example: ORIGOBJECT-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GNSSObservationSet_Abridged
    def OrigObjectId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Observation Time, in ISO8601 UTC format with microsecond precision.  This timestamp applies to all observations within the set.
    # Example: /// Example: 2022-01-01T00:00:00.123456Z
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Ts(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time, in seconds, that the receiver has been unable to compute a GNSS fix.
    # Example: /// Example: 200
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Outage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Geometric Dilution of Precision.
    # Example: /// Example: 0.33
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def GDop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Horizontal Dilution of Precision.
    # Example: /// Example: 0.03
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def HDop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Position Dilution of Precision.
    # Example: /// Example: 0.002
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def PDop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Time Dilution of Precision.
    # Example: /// Example: 0.05
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def TDop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Vertical Dilution of Precision.
    # Example: /// Example: 0.03
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def VDop(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Unique identifier of the parent Ephemeris Set, if this data is correlated with an Ephemeris.  If reporting for a spacecraft with multiple onboard GNSS receivers, this ID may be associated with multiple GNSS Observation records if each receiver is synced to the ephemeris points.
    # Example: /// Example: ES-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GNSSObservationSet_Abridged
    def EsId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The number or ID of the GNSS receiver associated with this data.  Each GNSS Observation Set is associated with only one receiver.  If reporting for multiple receivers a separate set should be generated for each.  A null value is assumed to indicate that only one receiver is present, or reported.
    # Example: /// Example: RECEIVER-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # GNSSObservationSet_Abridged
    def Receiver(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # unit vector of the outward facing direction of the receiver boresight in a body-fixed coordinate system.
    # Example: /// Example: [1.23, 3.23]
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Boresight(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def BoresightLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def BoresightIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        return o == 0

    # The quaternion describing the rotation of the body-fixed frame used for this system into the local geodetic frame, at observation time (ts). The array element order convention is scalar component first, followed by the three vector components. For a vector u in the body-fixed frame, the corresponding vector u' in the geodetic frame should satisfy u' = quq*, where q is this quaternion.
    # Example: /// Example: [0.03, 0.02, 0.01, 0.012]
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Quat(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def QuatLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def QuatIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        return o == 0

    # WGS-84 spacecraft latitude sub-point at observation time (ts), represented as -90 to 90 degrees (negative values south of equator).
    # Example: /// Example: 32.021
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Lat(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # WGS-84 spacecraft longitude sub-point at observation time (ts), represented as -180 to 180 degrees (negative values west of Prime Meridian).
    # Example: /// Example: 125.123
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Lon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft altitude at observation time (ts), expressed in kilometers above WGS-84 ellipsoid.
    # Example: /// Example: 200
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Alt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Three element array, expressing the ECI J2K spacecraft velocity components, in km/second, at observation time (ts).  The array element order is [xvel, yvel, zvel].
    # Example: /// Example: [2.03, 0.003, 0.12]
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def SatVelocity(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def SatVelocityLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def SatVelocityIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        return o == 0

    # Array of the strings containing the individual observation code sets that are contained within this GNSS Observation set.  Each string is a three-character representation of the measurement type, the channel, and the coding, in compliance with the RINEX 3+ standard (Pseudorange (C), Carrier Phase (L), Doppler (D), Signal Strength C/No (S), or Channel Number (X)).  See the GNSS Observation ob field for the units of measure associated with each observation type.
    # Example: /// Example: ['ACL']
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def ObsCodes(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def ObsCodesLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def ObsCodesIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        return o == 0

    # Status of the GNSS receiver signal. Status options are 0, 1 or 2 (0 being the best).
    # Example: /// Example: 0
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def TrackingStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The current navigation status as defined by the data source. In general the navigation status specifies whether the signal is normal, degraded, or unavailable. For status value definitions please reach out to data source provider.
    # Example: /// Example: degraded
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def NavigationStatus(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GNSS Automatic Gain Control State.
    # Example: /// Example: 20
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def AgcState(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Array of UDL record types (AIS, CONJUNCTION, DOA, ELSET, EO, ESID, GROUNDIMAGE, POI, MANEUVER, MTI, NOTIFICATION, RADAR, RF, SIGACT, SKYIMAGE, SV, TRACK) that are related to this GNSS Observation Set. See the associated 'srcIds' array for the record UUIDs, positionally corresponding to the record types in this array. The 'srcTyps' and 'srcIds' arrays must match in size.
    # Example: /// Example: ['SV', 'SV']
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def SrcTyps(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def SrcTypsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def SrcTypsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        return o == 0

    # Array of UUIDs of the UDL data records that are related to this GNSS Observation Set. See the associated 'srcTyps' array for the specific types of data, positionally corresponding to the UUIDs in this array. The 'srcTyps' and 'srcIds' arrays must match in size. See the corresponding srcTyps array element for the data type of the UUID and use the appropriate API operation to retrieve that object (e.g. /udl/statevector/{uuid}).
    # Example: /// Example: ['SV_ID', 'SV_ID']
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def SrcIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def SrcIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def SrcIdsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        return o == 0

    # Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
    # Example: /// Example: ['TAG1', 'TAG2']
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def Tags(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def TagsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def TagsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        return o == 0

    # Optional identifier to track a commercial or marketplace transaction executed to produce this data.
    # Example: /// Example: TRANSACTION-ID
    # Constraints: Minimum length = 0, Maximum length = 64
    # GNSSObservationSet_Abridged
    def TransactionId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # GNSSObservationSet_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # GNSSObservationSet_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # GNSSObservationSet_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # GNSSObservationSet_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 1, Maximum length = 32
    # GNSSObservationSet_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # GNSSObservations associated with this GNSSObservationSet.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # GNSSObservationSet_Abridged
    def GnssObservationList(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # GNSSObservationSet_Abridged
    def GnssObservationListLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # GNSSObservationSet_Abridged
    def GnssObservationListIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        return o == 0

def GNSSObservationSet_AbridgedStart(builder):
    builder.StartObject(36)

def Start(builder):
    GNSSObservationSet_AbridgedStart(builder)

def GNSSObservationSet_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    GNSSObservationSet_AbridgedAddId(builder, id)

def GNSSObservationSet_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    GNSSObservationSet_AbridgedAddClassificationMarking(builder, classificationMarking)

def GNSSObservationSet_AbridgedAddMarkerType(builder, markerType):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(markerType), 0)

def AddMarkerType(builder, markerType):
    GNSSObservationSet_AbridgedAddMarkerType(builder, markerType)

def GNSSObservationSet_AbridgedAddIdOnOrbit(builder, idOnOrbit):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(idOnOrbit), 0)

def AddIdOnOrbit(builder, idOnOrbit):
    GNSSObservationSet_AbridgedAddIdOnOrbit(builder, idOnOrbit)

def GNSSObservationSet_AbridgedAddSatNo(builder, satNo):
    builder.PrependInt32Slot(4, satNo, 0)

def AddSatNo(builder, satNo):
    GNSSObservationSet_AbridgedAddSatNo(builder, satNo)

def GNSSObservationSet_AbridgedAddOrigObjectId(builder, origObjectId):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(origObjectId), 0)

def AddOrigObjectId(builder, origObjectId):
    GNSSObservationSet_AbridgedAddOrigObjectId(builder, origObjectId)

def GNSSObservationSet_AbridgedAddTs(builder, ts):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(ts), 0)

def AddTs(builder, ts):
    GNSSObservationSet_AbridgedAddTs(builder, ts)

def GNSSObservationSet_AbridgedAddOutage(builder, outage):
    builder.PrependInt32Slot(7, outage, 0)

def AddOutage(builder, outage):
    GNSSObservationSet_AbridgedAddOutage(builder, outage)

def GNSSObservationSet_AbridgedAddGDop(builder, gDop):
    builder.PrependFloat64Slot(8, gDop, 0.0)

def AddGDop(builder, gDop):
    GNSSObservationSet_AbridgedAddGDop(builder, gDop)

def GNSSObservationSet_AbridgedAddHDop(builder, hDop):
    builder.PrependFloat64Slot(9, hDop, 0.0)

def AddHDop(builder, hDop):
    GNSSObservationSet_AbridgedAddHDop(builder, hDop)

def GNSSObservationSet_AbridgedAddPDop(builder, pDop):
    builder.PrependFloat64Slot(10, pDop, 0.0)

def AddPDop(builder, pDop):
    GNSSObservationSet_AbridgedAddPDop(builder, pDop)

def GNSSObservationSet_AbridgedAddTDop(builder, tDop):
    builder.PrependFloat64Slot(11, tDop, 0.0)

def AddTDop(builder, tDop):
    GNSSObservationSet_AbridgedAddTDop(builder, tDop)

def GNSSObservationSet_AbridgedAddVDop(builder, vDop):
    builder.PrependFloat64Slot(12, vDop, 0.0)

def AddVDop(builder, vDop):
    GNSSObservationSet_AbridgedAddVDop(builder, vDop)

def GNSSObservationSet_AbridgedAddEsId(builder, esId):
    builder.PrependUOffsetTRelativeSlot(13, flatbuffers.number_types.UOffsetTFlags.py_type(esId), 0)

def AddEsId(builder, esId):
    GNSSObservationSet_AbridgedAddEsId(builder, esId)

def GNSSObservationSet_AbridgedAddReceiver(builder, receiver):
    builder.PrependUOffsetTRelativeSlot(14, flatbuffers.number_types.UOffsetTFlags.py_type(receiver), 0)

def AddReceiver(builder, receiver):
    GNSSObservationSet_AbridgedAddReceiver(builder, receiver)

def GNSSObservationSet_AbridgedAddBoresight(builder, boresight):
    builder.PrependUOffsetTRelativeSlot(15, flatbuffers.number_types.UOffsetTFlags.py_type(boresight), 0)

def AddBoresight(builder, boresight):
    GNSSObservationSet_AbridgedAddBoresight(builder, boresight)

def GNSSObservationSet_AbridgedStartBoresightVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartBoresightVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartBoresightVector(builder, numElems)

def GNSSObservationSet_AbridgedAddQuat(builder, quat):
    builder.PrependUOffsetTRelativeSlot(16, flatbuffers.number_types.UOffsetTFlags.py_type(quat), 0)

def AddQuat(builder, quat):
    GNSSObservationSet_AbridgedAddQuat(builder, quat)

def GNSSObservationSet_AbridgedStartQuatVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartQuatVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartQuatVector(builder, numElems)

def GNSSObservationSet_AbridgedAddLat(builder, lat):
    builder.PrependFloat64Slot(17, lat, 0.0)

def AddLat(builder, lat):
    GNSSObservationSet_AbridgedAddLat(builder, lat)

def GNSSObservationSet_AbridgedAddLon(builder, lon):
    builder.PrependFloat64Slot(18, lon, 0.0)

def AddLon(builder, lon):
    GNSSObservationSet_AbridgedAddLon(builder, lon)

def GNSSObservationSet_AbridgedAddAlt(builder, alt):
    builder.PrependFloat64Slot(19, alt, 0.0)

def AddAlt(builder, alt):
    GNSSObservationSet_AbridgedAddAlt(builder, alt)

def GNSSObservationSet_AbridgedAddSatVelocity(builder, satVelocity):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(satVelocity), 0)

def AddSatVelocity(builder, satVelocity):
    GNSSObservationSet_AbridgedAddSatVelocity(builder, satVelocity)

def GNSSObservationSet_AbridgedStartSatVelocityVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSatVelocityVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartSatVelocityVector(builder, numElems)

def GNSSObservationSet_AbridgedAddObsCodes(builder, obsCodes):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(obsCodes), 0)

def AddObsCodes(builder, obsCodes):
    GNSSObservationSet_AbridgedAddObsCodes(builder, obsCodes)

def GNSSObservationSet_AbridgedStartObsCodesVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartObsCodesVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartObsCodesVector(builder, numElems)

def GNSSObservationSet_AbridgedAddTrackingStatus(builder, trackingStatus):
    builder.PrependInt32Slot(22, trackingStatus, 0)

def AddTrackingStatus(builder, trackingStatus):
    GNSSObservationSet_AbridgedAddTrackingStatus(builder, trackingStatus)

def GNSSObservationSet_AbridgedAddNavigationStatus(builder, navigationStatus):
    builder.PrependUOffsetTRelativeSlot(23, flatbuffers.number_types.UOffsetTFlags.py_type(navigationStatus), 0)

def AddNavigationStatus(builder, navigationStatus):
    GNSSObservationSet_AbridgedAddNavigationStatus(builder, navigationStatus)

def GNSSObservationSet_AbridgedAddAgcState(builder, agcState):
    builder.PrependInt32Slot(24, agcState, 0)

def AddAgcState(builder, agcState):
    GNSSObservationSet_AbridgedAddAgcState(builder, agcState)

def GNSSObservationSet_AbridgedAddSrcTyps(builder, srcTyps):
    builder.PrependUOffsetTRelativeSlot(25, flatbuffers.number_types.UOffsetTFlags.py_type(srcTyps), 0)

def AddSrcTyps(builder, srcTyps):
    GNSSObservationSet_AbridgedAddSrcTyps(builder, srcTyps)

def GNSSObservationSet_AbridgedStartSrcTypsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSrcTypsVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartSrcTypsVector(builder, numElems)

def GNSSObservationSet_AbridgedAddSrcIds(builder, srcIds):
    builder.PrependUOffsetTRelativeSlot(26, flatbuffers.number_types.UOffsetTFlags.py_type(srcIds), 0)

def AddSrcIds(builder, srcIds):
    GNSSObservationSet_AbridgedAddSrcIds(builder, srcIds)

def GNSSObservationSet_AbridgedStartSrcIdsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartSrcIdsVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartSrcIdsVector(builder, numElems)

def GNSSObservationSet_AbridgedAddTags(builder, tags):
    builder.PrependUOffsetTRelativeSlot(27, flatbuffers.number_types.UOffsetTFlags.py_type(tags), 0)

def AddTags(builder, tags):
    GNSSObservationSet_AbridgedAddTags(builder, tags)

def GNSSObservationSet_AbridgedStartTagsVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartTagsVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartTagsVector(builder, numElems)

def GNSSObservationSet_AbridgedAddTransactionId(builder, transactionId):
    builder.PrependUOffsetTRelativeSlot(28, flatbuffers.number_types.UOffsetTFlags.py_type(transactionId), 0)

def AddTransactionId(builder, transactionId):
    GNSSObservationSet_AbridgedAddTransactionId(builder, transactionId)

def GNSSObservationSet_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(29, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    GNSSObservationSet_AbridgedAddCreatedAt(builder, createdAt)

def GNSSObservationSet_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(30, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    GNSSObservationSet_AbridgedAddCreatedBy(builder, createdBy)

def GNSSObservationSet_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(31, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    GNSSObservationSet_AbridgedAddSource(builder, source)

def GNSSObservationSet_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(32, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    GNSSObservationSet_AbridgedAddOrigin(builder, origin)

def GNSSObservationSet_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(33, dataMode, 0)

def AddDataMode(builder, dataMode):
    GNSSObservationSet_AbridgedAddDataMode(builder, dataMode)

def GNSSObservationSet_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(34, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    GNSSObservationSet_AbridgedAddOrigNetwork(builder, origNetwork)

def GNSSObservationSet_AbridgedAddGnssObservationList(builder, gnssObservationList):
    builder.PrependUOffsetTRelativeSlot(35, flatbuffers.number_types.UOffsetTFlags.py_type(gnssObservationList), 0)

def AddGnssObservationList(builder, gnssObservationList):
    GNSSObservationSet_AbridgedAddGnssObservationList(builder, gnssObservationList)

def GNSSObservationSet_AbridgedStartGnssObservationListVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartGnssObservationListVector(builder, numElems):
    return GNSSObservationSet_AbridgedStartGnssObservationListVector(builder, numElems)

def GNSSObservationSet_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return GNSSObservationSet_AbridgedEnd(builder)

try:
    from typing import List
except:
    pass

class GNSSObservationSet_AbridgedT(object):

    # GNSSObservationSet_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.classificationMarking = None  # type: str
        self.markerType = None  # type: str
        self.idOnOrbit = None  # type: str
        self.satNo = 0  # type: int
        self.origObjectId = None  # type: str
        self.ts = None  # type: str
        self.outage = 0  # type: int
        self.gDop = 0.0  # type: float
        self.hDop = 0.0  # type: float
        self.pDop = 0.0  # type: float
        self.tDop = 0.0  # type: float
        self.vDop = 0.0  # type: float
        self.esId = None  # type: str
        self.receiver = None  # type: str
        self.boresight = None  # type: List[str]
        self.quat = None  # type: List[str]
        self.lat = 0.0  # type: float
        self.lon = 0.0  # type: float
        self.alt = 0.0  # type: float
        self.satVelocity = None  # type: List[str]
        self.obsCodes = None  # type: List[str]
        self.trackingStatus = 0  # type: int
        self.navigationStatus = None  # type: str
        self.agcState = 0  # type: int
        self.srcTyps = None  # type: List[str]
        self.srcIds = None  # type: List[str]
        self.tags = None  # type: List[str]
        self.transactionId = None  # type: str
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.dataMode = 0  # type: int
        self.origNetwork = None  # type: str
        self.gnssObservationList = None  # type: List[str]

    @classmethod
    def InitFromBuf(cls, buf, pos):
        gnssobservationSetAbridged = GNSSObservationSet_Abridged()
        gnssobservationSetAbridged.Init(buf, pos)
        return cls.InitFromObj(gnssobservationSetAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, gnssobservationSetAbridged):
        x = GNSSObservationSet_AbridgedT()
        x._UnPack(gnssobservationSetAbridged)
        return x

    # GNSSObservationSet_AbridgedT
    def _UnPack(self, gnssobservationSetAbridged):
        if gnssobservationSetAbridged is None:
            return
        self.id = gnssobservationSetAbridged.Id()
        self.classificationMarking = gnssobservationSetAbridged.ClassificationMarking()
        self.markerType = gnssobservationSetAbridged.MarkerType()
        self.idOnOrbit = gnssobservationSetAbridged.IdOnOrbit()
        self.satNo = gnssobservationSetAbridged.SatNo()
        self.origObjectId = gnssobservationSetAbridged.OrigObjectId()
        self.ts = gnssobservationSetAbridged.Ts()
        self.outage = gnssobservationSetAbridged.Outage()
        self.gDop = gnssobservationSetAbridged.GDop()
        self.hDop = gnssobservationSetAbridged.HDop()
        self.pDop = gnssobservationSetAbridged.PDop()
        self.tDop = gnssobservationSetAbridged.TDop()
        self.vDop = gnssobservationSetAbridged.VDop()
        self.esId = gnssobservationSetAbridged.EsId()
        self.receiver = gnssobservationSetAbridged.Receiver()
        if not gnssobservationSetAbridged.BoresightIsNone():
            self.boresight = []
            for i in range(gnssobservationSetAbridged.BoresightLength()):
                self.boresight.append(gnssobservationSetAbridged.Boresight(i))
        if not gnssobservationSetAbridged.QuatIsNone():
            self.quat = []
            for i in range(gnssobservationSetAbridged.QuatLength()):
                self.quat.append(gnssobservationSetAbridged.Quat(i))
        self.lat = gnssobservationSetAbridged.Lat()
        self.lon = gnssobservationSetAbridged.Lon()
        self.alt = gnssobservationSetAbridged.Alt()
        if not gnssobservationSetAbridged.SatVelocityIsNone():
            self.satVelocity = []
            for i in range(gnssobservationSetAbridged.SatVelocityLength()):
                self.satVelocity.append(gnssobservationSetAbridged.SatVelocity(i))
        if not gnssobservationSetAbridged.ObsCodesIsNone():
            self.obsCodes = []
            for i in range(gnssobservationSetAbridged.ObsCodesLength()):
                self.obsCodes.append(gnssobservationSetAbridged.ObsCodes(i))
        self.trackingStatus = gnssobservationSetAbridged.TrackingStatus()
        self.navigationStatus = gnssobservationSetAbridged.NavigationStatus()
        self.agcState = gnssobservationSetAbridged.AgcState()
        if not gnssobservationSetAbridged.SrcTypsIsNone():
            self.srcTyps = []
            for i in range(gnssobservationSetAbridged.SrcTypsLength()):
                self.srcTyps.append(gnssobservationSetAbridged.SrcTyps(i))
        if not gnssobservationSetAbridged.SrcIdsIsNone():
            self.srcIds = []
            for i in range(gnssobservationSetAbridged.SrcIdsLength()):
                self.srcIds.append(gnssobservationSetAbridged.SrcIds(i))
        if not gnssobservationSetAbridged.TagsIsNone():
            self.tags = []
            for i in range(gnssobservationSetAbridged.TagsLength()):
                self.tags.append(gnssobservationSetAbridged.Tags(i))
        self.transactionId = gnssobservationSetAbridged.TransactionId()
        self.createdAt = gnssobservationSetAbridged.CreatedAt()
        self.createdBy = gnssobservationSetAbridged.CreatedBy()
        self.source = gnssobservationSetAbridged.Source()
        self.origin = gnssobservationSetAbridged.Origin()
        self.dataMode = gnssobservationSetAbridged.DataMode()
        self.origNetwork = gnssobservationSetAbridged.OrigNetwork()
        if not gnssobservationSetAbridged.GnssObservationListIsNone():
            self.gnssObservationList = []
            for i in range(gnssobservationSetAbridged.GnssObservationListLength()):
                self.gnssObservationList.append(gnssobservationSetAbridged.GnssObservationList(i))

    # GNSSObservationSet_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.markerType is not None:
            markerType = builder.CreateString(self.markerType)
        if self.idOnOrbit is not None:
            idOnOrbit = builder.CreateString(self.idOnOrbit)
        if self.origObjectId is not None:
            origObjectId = builder.CreateString(self.origObjectId)
        if self.ts is not None:
            ts = builder.CreateString(self.ts)
        if self.esId is not None:
            esId = builder.CreateString(self.esId)
        if self.receiver is not None:
            receiver = builder.CreateString(self.receiver)
        if self.boresight is not None:
            boresightlist = []
            for i in range(len(self.boresight)):
                boresightlist.append(builder.CreateString(self.boresight[i]))
            GNSSObservationSet_AbridgedStartBoresightVector(builder, len(self.boresight))
            for i in reversed(range(len(self.boresight))):
                builder.PrependUOffsetTRelative(boresightlist[i])
            boresight = builder.EndVector()
        if self.quat is not None:
            quatlist = []
            for i in range(len(self.quat)):
                quatlist.append(builder.CreateString(self.quat[i]))
            GNSSObservationSet_AbridgedStartQuatVector(builder, len(self.quat))
            for i in reversed(range(len(self.quat))):
                builder.PrependUOffsetTRelative(quatlist[i])
            quat = builder.EndVector()
        if self.satVelocity is not None:
            satVelocitylist = []
            for i in range(len(self.satVelocity)):
                satVelocitylist.append(builder.CreateString(self.satVelocity[i]))
            GNSSObservationSet_AbridgedStartSatVelocityVector(builder, len(self.satVelocity))
            for i in reversed(range(len(self.satVelocity))):
                builder.PrependUOffsetTRelative(satVelocitylist[i])
            satVelocity = builder.EndVector()
        if self.obsCodes is not None:
            obsCodeslist = []
            for i in range(len(self.obsCodes)):
                obsCodeslist.append(builder.CreateString(self.obsCodes[i]))
            GNSSObservationSet_AbridgedStartObsCodesVector(builder, len(self.obsCodes))
            for i in reversed(range(len(self.obsCodes))):
                builder.PrependUOffsetTRelative(obsCodeslist[i])
            obsCodes = builder.EndVector()
        if self.navigationStatus is not None:
            navigationStatus = builder.CreateString(self.navigationStatus)
        if self.srcTyps is not None:
            srcTypslist = []
            for i in range(len(self.srcTyps)):
                srcTypslist.append(builder.CreateString(self.srcTyps[i]))
            GNSSObservationSet_AbridgedStartSrcTypsVector(builder, len(self.srcTyps))
            for i in reversed(range(len(self.srcTyps))):
                builder.PrependUOffsetTRelative(srcTypslist[i])
            srcTyps = builder.EndVector()
        if self.srcIds is not None:
            srcIdslist = []
            for i in range(len(self.srcIds)):
                srcIdslist.append(builder.CreateString(self.srcIds[i]))
            GNSSObservationSet_AbridgedStartSrcIdsVector(builder, len(self.srcIds))
            for i in reversed(range(len(self.srcIds))):
                builder.PrependUOffsetTRelative(srcIdslist[i])
            srcIds = builder.EndVector()
        if self.tags is not None:
            tagslist = []
            for i in range(len(self.tags)):
                tagslist.append(builder.CreateString(self.tags[i]))
            GNSSObservationSet_AbridgedStartTagsVector(builder, len(self.tags))
            for i in reversed(range(len(self.tags))):
                builder.PrependUOffsetTRelative(tagslist[i])
            tags = builder.EndVector()
        if self.transactionId is not None:
            transactionId = builder.CreateString(self.transactionId)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        if self.gnssObservationList is not None:
            gnssObservationListlist = []
            for i in range(len(self.gnssObservationList)):
                gnssObservationListlist.append(builder.CreateString(self.gnssObservationList[i]))
            GNSSObservationSet_AbridgedStartGnssObservationListVector(builder, len(self.gnssObservationList))
            for i in reversed(range(len(self.gnssObservationList))):
                builder.PrependUOffsetTRelative(gnssObservationListlist[i])
            gnssObservationList = builder.EndVector()
        GNSSObservationSet_AbridgedStart(builder)
        if self.id is not None:
            GNSSObservationSet_AbridgedAddId(builder, id)
        if self.classificationMarking is not None:
            GNSSObservationSet_AbridgedAddClassificationMarking(builder, classificationMarking)
        if self.markerType is not None:
            GNSSObservationSet_AbridgedAddMarkerType(builder, markerType)
        if self.idOnOrbit is not None:
            GNSSObservationSet_AbridgedAddIdOnOrbit(builder, idOnOrbit)
        GNSSObservationSet_AbridgedAddSatNo(builder, self.satNo)
        if self.origObjectId is not None:
            GNSSObservationSet_AbridgedAddOrigObjectId(builder, origObjectId)
        if self.ts is not None:
            GNSSObservationSet_AbridgedAddTs(builder, ts)
        GNSSObservationSet_AbridgedAddOutage(builder, self.outage)
        GNSSObservationSet_AbridgedAddGDop(builder, self.gDop)
        GNSSObservationSet_AbridgedAddHDop(builder, self.hDop)
        GNSSObservationSet_AbridgedAddPDop(builder, self.pDop)
        GNSSObservationSet_AbridgedAddTDop(builder, self.tDop)
        GNSSObservationSet_AbridgedAddVDop(builder, self.vDop)
        if self.esId is not None:
            GNSSObservationSet_AbridgedAddEsId(builder, esId)
        if self.receiver is not None:
            GNSSObservationSet_AbridgedAddReceiver(builder, receiver)
        if self.boresight is not None:
            GNSSObservationSet_AbridgedAddBoresight(builder, boresight)
        if self.quat is not None:
            GNSSObservationSet_AbridgedAddQuat(builder, quat)
        GNSSObservationSet_AbridgedAddLat(builder, self.lat)
        GNSSObservationSet_AbridgedAddLon(builder, self.lon)
        GNSSObservationSet_AbridgedAddAlt(builder, self.alt)
        if self.satVelocity is not None:
            GNSSObservationSet_AbridgedAddSatVelocity(builder, satVelocity)
        if self.obsCodes is not None:
            GNSSObservationSet_AbridgedAddObsCodes(builder, obsCodes)
        GNSSObservationSet_AbridgedAddTrackingStatus(builder, self.trackingStatus)
        if self.navigationStatus is not None:
            GNSSObservationSet_AbridgedAddNavigationStatus(builder, navigationStatus)
        GNSSObservationSet_AbridgedAddAgcState(builder, self.agcState)
        if self.srcTyps is not None:
            GNSSObservationSet_AbridgedAddSrcTyps(builder, srcTyps)
        if self.srcIds is not None:
            GNSSObservationSet_AbridgedAddSrcIds(builder, srcIds)
        if self.tags is not None:
            GNSSObservationSet_AbridgedAddTags(builder, tags)
        if self.transactionId is not None:
            GNSSObservationSet_AbridgedAddTransactionId(builder, transactionId)
        if self.createdAt is not None:
            GNSSObservationSet_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            GNSSObservationSet_AbridgedAddCreatedBy(builder, createdBy)
        if self.source is not None:
            GNSSObservationSet_AbridgedAddSource(builder, source)
        if self.origin is not None:
            GNSSObservationSet_AbridgedAddOrigin(builder, origin)
        GNSSObservationSet_AbridgedAddDataMode(builder, self.dataMode)
        if self.origNetwork is not None:
            GNSSObservationSet_AbridgedAddOrigNetwork(builder, origNetwork)
        if self.gnssObservationList is not None:
            GNSSObservationSet_AbridgedAddGnssObservationList(builder, gnssObservationList)
        gnssobservationSetAbridged = GNSSObservationSet_AbridgedEnd(builder)
        return gnssobservationSetAbridged
