# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// On-orbit spacecraft details compiled by Seradata for a particular satellite.
class SeradataSpacecraftDetails_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SeradataSpacecraftDetails_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSeradataSpacecraftDetails_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def SeradataSpacecraftDetails_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x53\x45\x52\x41", size_prefixed=size_prefixed)

    # SeradataSpacecraftDetails_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Unique identifier of the record, auto-generated by the system.
    # Example: /// Example: SERADATASPACECRAFTDETAILS-ID
    # Constraints: Minimum length = 1, Maximum length = 36
    # SeradataSpacecraftDetails_Abridged
    def Id(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # UUID of the parent Onorbit record, if available.
    # Example: /// Example: 503
    # Constraints: Minimum length = 0, Maximum length = 36
    # SeradataSpacecraftDetails_Abridged
    def IdOnOrbit(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Classification marking of the data in IC/CAPCO Portion-marked format.
    # Example: /// Example: U
    # Constraints: Minimum length = 1, Maximum length = 128
    # SeradataSpacecraftDetails_Abridged
    def ClassificationMarking(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft name.
    # Example: /// Example: name
    # Constraints: Minimum length = 1, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Description associated with the spacecraft.
    # Example: /// Example: description
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # SeradataSpacecraftDetails_Abridged
    def Description(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata international number.
    # Example: /// Example: number
    # Constraints: Minimum length = 0, Maximum length = 16
    # SeradataSpacecraftDetails_Abridged
    def IntlNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata sector (e.g. Commercial, Military, Civil/Other).
    # Example: /// Example: Commercial
    # Constraints: Minimum length = 0, Maximum length = 16
    # SeradataSpacecraftDetails_Abridged
    def Sector(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Apogee in km.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Apogee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Perigee in km.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Perigee(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft period in minutes.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Period(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Seradata provided inclination in degrees.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Inclination(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # UUID of the prime manufacturer organization, if available.
    # Example: /// Example: 05c43360-382e-4aa2-b875-ed28945ff2e5
    # Constraints: Minimum length = 0, Maximum length = 36
    # SeradataSpacecraftDetails_Abridged
    def PrimeManufacturerOrgId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft stabilizer (e.g. 3-Axis, Gravity Gradiant, etc).
    # Example: /// Example: 3-Axis
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def Stabilizer(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft design life in days.
    # Example: /// Example: 231
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def DesignLife(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Spacecraft expected life in days.
    # Example: /// Example: 231
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def ExpectedLife(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Boolean indicating if the spacecraft was insured at launch.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsuredAtLaunch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Mass at launch in kg.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def LaunchMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Mass dry in kg.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def DryMass(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # NORAD satellite number if available.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CatalogNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(40))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Mass dry in kg.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def TotalPayloadPower(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(42))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft constellation.
    # Example: /// Example: GPS
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def Constellation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(44))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft orbit category (e.g GEO, LEO, etc).
    # Example: /// Example: GEO
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def OrbitCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(46))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft sub orbit category (e.g LEO - Sun-synchronous, Geostationary, etc).
    # Example: /// Example: Geostationary
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def OrbitSubCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(48))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Cost of launch in M USD.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def LaunchCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(50))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Boolean indicating if the spacecraft launch cost is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def LaunchCostEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(52))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Boolean indicating if the spacecraft cost is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CostEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(54))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Cost of spacecraft at new in M USD.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def NewCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(56))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Combined cost of spacecraft at new in M USD.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CombinedNewCost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(58))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Boolean indicating if the spacecraft combined new cost is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CombinedCostEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(60))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Insured value of spacecraft at launch in M USD.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsuredValueAtLaunch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(62))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Boolean indicating if the spacecraft insured value at launch is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsuredValueLaunchEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(64))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Annual insured depreciaion factor as a percent fraction.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def AnnualInsuredDepreciationFactor(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(66))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Boolean indicating if the spacecraft annualInsuredDepreciationFactor is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def AnnualInsuredDepreciationFactorEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(68))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Insurance premium at launch in M USD.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsurancePremiumAtLaunch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(70))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Boolean indicating if the spacecraft insurancePremiumAtLaunch is estimated.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsurancePremiumAtLaunchEstimated(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(72))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Number of humans carried on spacecraft.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def NumHumans(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(74))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Cubesat dispenser type.
    # Example: /// Example: cubesatDispenserType
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def CubesatDispenserType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(76))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Mass category (e.g.  2500 - 3500kg  - Large Satellite, 10 - 100 kg - Microsatellite, etc).
    # Example: /// Example: 2500 - 3500kg  - Large Satellite
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def MassCategory(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(78))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch ID.
    # Example: /// Example: 11573
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def LaunchId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(80))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch ID.
    # Example: /// Example: 123
    # Constraints: Minimum length = 0, Maximum length = 36
    # SeradataSpacecraftDetails_Abridged
    def LaunchVehicleId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(82))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch vehicle family.
    # Example: /// Example: launchProviderFlightNumber
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchProviderFlightNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(84))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Launch Site Name.
    # Example: /// Example: launchSiteName
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchSiteName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(86))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata Launch Site ID.
    # Example: /// Example: 28
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def LaunchSiteId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(88))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch country.
    # Example: /// Example: USA
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def LaunchCountry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(90))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch provider.
    # Example: /// Example: launchProvider
    # Constraints: Minimum length = 0, Maximum length = 128
    # SeradataSpacecraftDetails_Abridged
    def LaunchProvider(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(92))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch provider country.
    # Example: /// Example: USA
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def LaunchProviderCountry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(94))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Boolean indicating if the launch was commercial.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CommercialLaunch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(96))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Seradata launch type (e.g. Launched, Future, etc).
    # Example: /// Example: Future
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def LaunchType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(98))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch characteristic (e.g. Expendable, Reusable (New), etc).
    # Example: /// Example: Expendable
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchCharacteristic(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(100))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata launch number.
    # Example: /// Example: FN040
    # Constraints: Minimum length = 0, Maximum length = 16
    # SeradataSpacecraftDetails_Abridged
    def LaunchNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(102))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Launch date.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def LaunchDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(104))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Seradata remarks on launch date.
    # Example: /// Example: launchDateRemarks
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchDateRemarks(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(106))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Youtube link of launch.
    # Example: /// Example: youtubeLaunchLink
    # Constraints: Minimum length = 0, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def YoutubeLaunchLink(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(108))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft status (e.g. Inactive - Retired, Inactive - Re-entered, Active, etc).
    # Example: /// Example: Inactive - Retired
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def Status(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(110))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft owner name.
    # Example: /// Example: owner
    # Constraints: Minimum length = 0, Maximum length = 128
    # SeradataSpacecraftDetails_Abridged
    def Owner(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(112))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft owner country.
    # Example: /// Example: USA
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def OwnerCountry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(114))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft operator name.
    # Example: /// Example: operator
    # Constraints: Minimum length = 0, Maximum length = 128
    # SeradataSpacecraftDetails_Abridged
    def Operator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(116))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft operator country.
    # Example: /// Example: USA
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def OperatorCountry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(118))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Boolean indicating if the spacecraft was leased.
    # Example: /// Example: True
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Leased(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(120))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # Spacecraft order date.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def OrderDate(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(122))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Total capability lost as a percent fraction.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CapabilityLost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(124))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Total capacity lost as a percent fraction.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CapacityLost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(126))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft primary mission and group.
    # Example: /// Example: primaryMissionGroup
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def PrimaryMissionGroup(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(128))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft additional missions and groups.
    # Example: /// Example: additionalMissionsGroups
    # Constraints: Minimum length = 0, Maximum length = 256
    # SeradataSpacecraftDetails_Abridged
    def AdditionalMissionsGroups(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(130))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Number of insurance claims for this spacecraft.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def TotalClaims(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(132))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of injuries related to this spacecraft.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def TotalInjuries(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(134))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Number of fatalities related to this spacecraft.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def TotalFatalities(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(136))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Spacecraft name at launch.
    # Example: /// Example: nameAtLaunch
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def NameAtLaunch(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(138))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft Bus ID.
    # Example: /// Example: BUS-ID
    # Constraints: Minimum length = 0, Maximum length = 36
    # SeradataSpacecraftDetails_Abridged
    def BusId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(140))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Current age in years.
    # Example: /// Example: 5.898630136986301
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CurrentAge(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(142))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft life lost as a percent fraction.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def LifeLost(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(144))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # WGS84 longitude of the spacecraft’s latest GEO position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    # Example: /// Example: -8.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def GeoPosition(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(146))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft total insurance losses as a fraction.
    # Example: /// Example: 0.393
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def InsuranceLossesTotal(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(148))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft launch arranger.
    # Example: /// Example: launchArranger
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchArranger(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(150))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft launch arranger country.
    # Example: /// Example: USA
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def LaunchArrangerCountry(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(152))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft serial number.
    # Example: /// Example: serialNumber
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def SerialNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(154))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft program name.
    # Example: /// Example: programName
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def ProgramName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(156))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft reused hull name.
    # Example: /// Example: reusedHullName
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def ReusedHullName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(158))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft date of observation.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def DateOfObservation(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(160))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Spacecraft latest latitude in degrees.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Lat(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(162))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft latest longitude in degrees.
    # Example: /// Example: 1.23
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Lon(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(164))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft latest altitude in km.
    # Example: /// Example: 36036.6330576414
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Altitude(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(166))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft collision risk 1mm sqm latest.
    # Example: /// Example: 1.33
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CollisionRiskMm(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(168))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft collision risk 1cm sqm latest.
    # Example: /// Example: 1.43
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CollisionRiskCm(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(170))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Spacecraft quantity.
    # Example: /// Example: 1
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def Quantity(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(172))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Spacecraft reusable flights.
    # Example: /// Example: reusableFlights
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def ReusableFlights(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(174))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notes on the spacecraft.
    # Example: /// Example: Sample Notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # SeradataSpacecraftDetails_Abridged
    def Notes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(176))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Insurance notes for the spacecraft.
    # Example: /// Example: Sample Notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # SeradataSpacecraftDetails_Abridged
    def InsuranceNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(178))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Insurance notes for the spacecraft.
    # Example: /// Example: Sample Notes
    # Constraints: Minimum length = 0, Maximum length = 2147483647
    # SeradataSpacecraftDetails_Abridged
    def LaunchNotes(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(180))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Source of the data.
    # Example: /// Example: Bluestaq
    # Constraints: Minimum length = 1, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(182))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    # Example: /// Example: THIRD_PARTY_DATASOURCE
    # Constraints: Minimum length = 0, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def Origin(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(184))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The originating source network on which this record was created, auto-populated by the system.
    # Example: /// Example: ORIG
    # Constraints: Minimum length = 1, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def OrigNetwork(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(186))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
    # EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.
    # REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.
    # SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.
    # TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    # Example: /// Example: TEST
    # Constraints: Minimum length = 1, Maximum length = 32
    # SeradataSpacecraftDetails_Abridged
    def DataMode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(188))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # Time the row was created in the database, auto-populated by the system.
    # Example: /// Example: 2018-01-01T16:00:00.123Z
    # Constraints: No constraints specified.
    # SeradataSpacecraftDetails_Abridged
    def CreatedAt(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(190))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Application user who created the row in the database, auto-populated by the system.
    # Example: /// Example: some.user
    # Constraints: Minimum length = 1, Maximum length = 64
    # SeradataSpacecraftDetails_Abridged
    def CreatedBy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(192))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def SeradataSpacecraftDetails_AbridgedStart(builder):
    builder.StartObject(95)

def Start(builder):
    SeradataSpacecraftDetails_AbridgedStart(builder)

def SeradataSpacecraftDetails_AbridgedAddId(builder, id):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(id), 0)

def AddId(builder, id):
    SeradataSpacecraftDetails_AbridgedAddId(builder, id)

def SeradataSpacecraftDetails_AbridgedAddIdOnOrbit(builder, idOnOrbit):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(idOnOrbit), 0)

def AddIdOnOrbit(builder, idOnOrbit):
    SeradataSpacecraftDetails_AbridgedAddIdOnOrbit(builder, idOnOrbit)

def SeradataSpacecraftDetails_AbridgedAddClassificationMarking(builder, classificationMarking):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(classificationMarking), 0)

def AddClassificationMarking(builder, classificationMarking):
    SeradataSpacecraftDetails_AbridgedAddClassificationMarking(builder, classificationMarking)

def SeradataSpacecraftDetails_AbridgedAddName(builder, name):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)

def AddName(builder, name):
    SeradataSpacecraftDetails_AbridgedAddName(builder, name)

def SeradataSpacecraftDetails_AbridgedAddDescription(builder, description):
    builder.PrependUOffsetTRelativeSlot(4, flatbuffers.number_types.UOffsetTFlags.py_type(description), 0)

def AddDescription(builder, description):
    SeradataSpacecraftDetails_AbridgedAddDescription(builder, description)

def SeradataSpacecraftDetails_AbridgedAddIntlNumber(builder, intlNumber):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(intlNumber), 0)

def AddIntlNumber(builder, intlNumber):
    SeradataSpacecraftDetails_AbridgedAddIntlNumber(builder, intlNumber)

def SeradataSpacecraftDetails_AbridgedAddSector(builder, sector):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(sector), 0)

def AddSector(builder, sector):
    SeradataSpacecraftDetails_AbridgedAddSector(builder, sector)

def SeradataSpacecraftDetails_AbridgedAddApogee(builder, apogee):
    builder.PrependFloat64Slot(7, apogee, 0.0)

def AddApogee(builder, apogee):
    SeradataSpacecraftDetails_AbridgedAddApogee(builder, apogee)

def SeradataSpacecraftDetails_AbridgedAddPerigee(builder, perigee):
    builder.PrependFloat64Slot(8, perigee, 0.0)

def AddPerigee(builder, perigee):
    SeradataSpacecraftDetails_AbridgedAddPerigee(builder, perigee)

def SeradataSpacecraftDetails_AbridgedAddPeriod(builder, period):
    builder.PrependFloat64Slot(9, period, 0.0)

def AddPeriod(builder, period):
    SeradataSpacecraftDetails_AbridgedAddPeriod(builder, period)

def SeradataSpacecraftDetails_AbridgedAddInclination(builder, inclination):
    builder.PrependFloat64Slot(10, inclination, 0.0)

def AddInclination(builder, inclination):
    SeradataSpacecraftDetails_AbridgedAddInclination(builder, inclination)

def SeradataSpacecraftDetails_AbridgedAddPrimeManufacturerOrgId(builder, primeManufacturerOrgId):
    builder.PrependUOffsetTRelativeSlot(11, flatbuffers.number_types.UOffsetTFlags.py_type(primeManufacturerOrgId), 0)

def AddPrimeManufacturerOrgId(builder, primeManufacturerOrgId):
    SeradataSpacecraftDetails_AbridgedAddPrimeManufacturerOrgId(builder, primeManufacturerOrgId)

def SeradataSpacecraftDetails_AbridgedAddStabilizer(builder, stabilizer):
    builder.PrependUOffsetTRelativeSlot(12, flatbuffers.number_types.UOffsetTFlags.py_type(stabilizer), 0)

def AddStabilizer(builder, stabilizer):
    SeradataSpacecraftDetails_AbridgedAddStabilizer(builder, stabilizer)

def SeradataSpacecraftDetails_AbridgedAddDesignLife(builder, designLife):
    builder.PrependInt32Slot(13, designLife, 0)

def AddDesignLife(builder, designLife):
    SeradataSpacecraftDetails_AbridgedAddDesignLife(builder, designLife)

def SeradataSpacecraftDetails_AbridgedAddExpectedLife(builder, expectedLife):
    builder.PrependInt32Slot(14, expectedLife, 0)

def AddExpectedLife(builder, expectedLife):
    SeradataSpacecraftDetails_AbridgedAddExpectedLife(builder, expectedLife)

def SeradataSpacecraftDetails_AbridgedAddInsuredAtLaunch(builder, insuredAtLaunch):
    builder.PrependBoolSlot(15, insuredAtLaunch, 0)

def AddInsuredAtLaunch(builder, insuredAtLaunch):
    SeradataSpacecraftDetails_AbridgedAddInsuredAtLaunch(builder, insuredAtLaunch)

def SeradataSpacecraftDetails_AbridgedAddLaunchMass(builder, launchMass):
    builder.PrependFloat64Slot(16, launchMass, 0.0)

def AddLaunchMass(builder, launchMass):
    SeradataSpacecraftDetails_AbridgedAddLaunchMass(builder, launchMass)

def SeradataSpacecraftDetails_AbridgedAddDryMass(builder, dryMass):
    builder.PrependFloat64Slot(17, dryMass, 0.0)

def AddDryMass(builder, dryMass):
    SeradataSpacecraftDetails_AbridgedAddDryMass(builder, dryMass)

def SeradataSpacecraftDetails_AbridgedAddCatalogNumber(builder, catalogNumber):
    builder.PrependInt32Slot(18, catalogNumber, 0)

def AddCatalogNumber(builder, catalogNumber):
    SeradataSpacecraftDetails_AbridgedAddCatalogNumber(builder, catalogNumber)

def SeradataSpacecraftDetails_AbridgedAddTotalPayloadPower(builder, totalPayloadPower):
    builder.PrependFloat64Slot(19, totalPayloadPower, 0.0)

def AddTotalPayloadPower(builder, totalPayloadPower):
    SeradataSpacecraftDetails_AbridgedAddTotalPayloadPower(builder, totalPayloadPower)

def SeradataSpacecraftDetails_AbridgedAddConstellation(builder, constellation):
    builder.PrependUOffsetTRelativeSlot(20, flatbuffers.number_types.UOffsetTFlags.py_type(constellation), 0)

def AddConstellation(builder, constellation):
    SeradataSpacecraftDetails_AbridgedAddConstellation(builder, constellation)

def SeradataSpacecraftDetails_AbridgedAddOrbitCategory(builder, orbitCategory):
    builder.PrependUOffsetTRelativeSlot(21, flatbuffers.number_types.UOffsetTFlags.py_type(orbitCategory), 0)

def AddOrbitCategory(builder, orbitCategory):
    SeradataSpacecraftDetails_AbridgedAddOrbitCategory(builder, orbitCategory)

def SeradataSpacecraftDetails_AbridgedAddOrbitSubCategory(builder, orbitSubCategory):
    builder.PrependUOffsetTRelativeSlot(22, flatbuffers.number_types.UOffsetTFlags.py_type(orbitSubCategory), 0)

def AddOrbitSubCategory(builder, orbitSubCategory):
    SeradataSpacecraftDetails_AbridgedAddOrbitSubCategory(builder, orbitSubCategory)

def SeradataSpacecraftDetails_AbridgedAddLaunchCost(builder, launchCost):
    builder.PrependFloat64Slot(23, launchCost, 0.0)

def AddLaunchCost(builder, launchCost):
    SeradataSpacecraftDetails_AbridgedAddLaunchCost(builder, launchCost)

def SeradataSpacecraftDetails_AbridgedAddLaunchCostEstimated(builder, launchCostEstimated):
    builder.PrependBoolSlot(24, launchCostEstimated, 0)

def AddLaunchCostEstimated(builder, launchCostEstimated):
    SeradataSpacecraftDetails_AbridgedAddLaunchCostEstimated(builder, launchCostEstimated)

def SeradataSpacecraftDetails_AbridgedAddCostEstimated(builder, costEstimated):
    builder.PrependBoolSlot(25, costEstimated, 0)

def AddCostEstimated(builder, costEstimated):
    SeradataSpacecraftDetails_AbridgedAddCostEstimated(builder, costEstimated)

def SeradataSpacecraftDetails_AbridgedAddNewCost(builder, newCost):
    builder.PrependFloat64Slot(26, newCost, 0.0)

def AddNewCost(builder, newCost):
    SeradataSpacecraftDetails_AbridgedAddNewCost(builder, newCost)

def SeradataSpacecraftDetails_AbridgedAddCombinedNewCost(builder, combinedNewCost):
    builder.PrependFloat64Slot(27, combinedNewCost, 0.0)

def AddCombinedNewCost(builder, combinedNewCost):
    SeradataSpacecraftDetails_AbridgedAddCombinedNewCost(builder, combinedNewCost)

def SeradataSpacecraftDetails_AbridgedAddCombinedCostEstimated(builder, combinedCostEstimated):
    builder.PrependBoolSlot(28, combinedCostEstimated, 0)

def AddCombinedCostEstimated(builder, combinedCostEstimated):
    SeradataSpacecraftDetails_AbridgedAddCombinedCostEstimated(builder, combinedCostEstimated)

def SeradataSpacecraftDetails_AbridgedAddInsuredValueAtLaunch(builder, insuredValueAtLaunch):
    builder.PrependFloat64Slot(29, insuredValueAtLaunch, 0.0)

def AddInsuredValueAtLaunch(builder, insuredValueAtLaunch):
    SeradataSpacecraftDetails_AbridgedAddInsuredValueAtLaunch(builder, insuredValueAtLaunch)

def SeradataSpacecraftDetails_AbridgedAddInsuredValueLaunchEstimated(builder, insuredValueLaunchEstimated):
    builder.PrependBoolSlot(30, insuredValueLaunchEstimated, 0)

def AddInsuredValueLaunchEstimated(builder, insuredValueLaunchEstimated):
    SeradataSpacecraftDetails_AbridgedAddInsuredValueLaunchEstimated(builder, insuredValueLaunchEstimated)

def SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactor(builder, annualInsuredDepreciationFactor):
    builder.PrependFloat64Slot(31, annualInsuredDepreciationFactor, 0.0)

def AddAnnualInsuredDepreciationFactor(builder, annualInsuredDepreciationFactor):
    SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactor(builder, annualInsuredDepreciationFactor)

def SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactorEstimated(builder, annualInsuredDepreciationFactorEstimated):
    builder.PrependBoolSlot(32, annualInsuredDepreciationFactorEstimated, 0)

def AddAnnualInsuredDepreciationFactorEstimated(builder, annualInsuredDepreciationFactorEstimated):
    SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactorEstimated(builder, annualInsuredDepreciationFactorEstimated)

def SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunch(builder, insurancePremiumAtLaunch):
    builder.PrependFloat64Slot(33, insurancePremiumAtLaunch, 0.0)

def AddInsurancePremiumAtLaunch(builder, insurancePremiumAtLaunch):
    SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunch(builder, insurancePremiumAtLaunch)

def SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunchEstimated(builder, insurancePremiumAtLaunchEstimated):
    builder.PrependBoolSlot(34, insurancePremiumAtLaunchEstimated, 0)

def AddInsurancePremiumAtLaunchEstimated(builder, insurancePremiumAtLaunchEstimated):
    SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunchEstimated(builder, insurancePremiumAtLaunchEstimated)

def SeradataSpacecraftDetails_AbridgedAddNumHumans(builder, numHumans):
    builder.PrependInt32Slot(35, numHumans, 0)

def AddNumHumans(builder, numHumans):
    SeradataSpacecraftDetails_AbridgedAddNumHumans(builder, numHumans)

def SeradataSpacecraftDetails_AbridgedAddCubesatDispenserType(builder, cubesatDispenserType):
    builder.PrependUOffsetTRelativeSlot(36, flatbuffers.number_types.UOffsetTFlags.py_type(cubesatDispenserType), 0)

def AddCubesatDispenserType(builder, cubesatDispenserType):
    SeradataSpacecraftDetails_AbridgedAddCubesatDispenserType(builder, cubesatDispenserType)

def SeradataSpacecraftDetails_AbridgedAddMassCategory(builder, massCategory):
    builder.PrependUOffsetTRelativeSlot(37, flatbuffers.number_types.UOffsetTFlags.py_type(massCategory), 0)

def AddMassCategory(builder, massCategory):
    SeradataSpacecraftDetails_AbridgedAddMassCategory(builder, massCategory)

def SeradataSpacecraftDetails_AbridgedAddLaunchId(builder, launchId):
    builder.PrependUOffsetTRelativeSlot(38, flatbuffers.number_types.UOffsetTFlags.py_type(launchId), 0)

def AddLaunchId(builder, launchId):
    SeradataSpacecraftDetails_AbridgedAddLaunchId(builder, launchId)

def SeradataSpacecraftDetails_AbridgedAddLaunchVehicleId(builder, launchVehicleId):
    builder.PrependUOffsetTRelativeSlot(39, flatbuffers.number_types.UOffsetTFlags.py_type(launchVehicleId), 0)

def AddLaunchVehicleId(builder, launchVehicleId):
    SeradataSpacecraftDetails_AbridgedAddLaunchVehicleId(builder, launchVehicleId)

def SeradataSpacecraftDetails_AbridgedAddLaunchProviderFlightNumber(builder, launchProviderFlightNumber):
    builder.PrependUOffsetTRelativeSlot(40, flatbuffers.number_types.UOffsetTFlags.py_type(launchProviderFlightNumber), 0)

def AddLaunchProviderFlightNumber(builder, launchProviderFlightNumber):
    SeradataSpacecraftDetails_AbridgedAddLaunchProviderFlightNumber(builder, launchProviderFlightNumber)

def SeradataSpacecraftDetails_AbridgedAddLaunchSiteName(builder, launchSiteName):
    builder.PrependUOffsetTRelativeSlot(41, flatbuffers.number_types.UOffsetTFlags.py_type(launchSiteName), 0)

def AddLaunchSiteName(builder, launchSiteName):
    SeradataSpacecraftDetails_AbridgedAddLaunchSiteName(builder, launchSiteName)

def SeradataSpacecraftDetails_AbridgedAddLaunchSiteId(builder, launchSiteId):
    builder.PrependUOffsetTRelativeSlot(42, flatbuffers.number_types.UOffsetTFlags.py_type(launchSiteId), 0)

def AddLaunchSiteId(builder, launchSiteId):
    SeradataSpacecraftDetails_AbridgedAddLaunchSiteId(builder, launchSiteId)

def SeradataSpacecraftDetails_AbridgedAddLaunchCountry(builder, launchCountry):
    builder.PrependUOffsetTRelativeSlot(43, flatbuffers.number_types.UOffsetTFlags.py_type(launchCountry), 0)

def AddLaunchCountry(builder, launchCountry):
    SeradataSpacecraftDetails_AbridgedAddLaunchCountry(builder, launchCountry)

def SeradataSpacecraftDetails_AbridgedAddLaunchProvider(builder, launchProvider):
    builder.PrependUOffsetTRelativeSlot(44, flatbuffers.number_types.UOffsetTFlags.py_type(launchProvider), 0)

def AddLaunchProvider(builder, launchProvider):
    SeradataSpacecraftDetails_AbridgedAddLaunchProvider(builder, launchProvider)

def SeradataSpacecraftDetails_AbridgedAddLaunchProviderCountry(builder, launchProviderCountry):
    builder.PrependUOffsetTRelativeSlot(45, flatbuffers.number_types.UOffsetTFlags.py_type(launchProviderCountry), 0)

def AddLaunchProviderCountry(builder, launchProviderCountry):
    SeradataSpacecraftDetails_AbridgedAddLaunchProviderCountry(builder, launchProviderCountry)

def SeradataSpacecraftDetails_AbridgedAddCommercialLaunch(builder, commercialLaunch):
    builder.PrependBoolSlot(46, commercialLaunch, 0)

def AddCommercialLaunch(builder, commercialLaunch):
    SeradataSpacecraftDetails_AbridgedAddCommercialLaunch(builder, commercialLaunch)

def SeradataSpacecraftDetails_AbridgedAddLaunchType(builder, launchType):
    builder.PrependUOffsetTRelativeSlot(47, flatbuffers.number_types.UOffsetTFlags.py_type(launchType), 0)

def AddLaunchType(builder, launchType):
    SeradataSpacecraftDetails_AbridgedAddLaunchType(builder, launchType)

def SeradataSpacecraftDetails_AbridgedAddLaunchCharacteristic(builder, launchCharacteristic):
    builder.PrependUOffsetTRelativeSlot(48, flatbuffers.number_types.UOffsetTFlags.py_type(launchCharacteristic), 0)

def AddLaunchCharacteristic(builder, launchCharacteristic):
    SeradataSpacecraftDetails_AbridgedAddLaunchCharacteristic(builder, launchCharacteristic)

def SeradataSpacecraftDetails_AbridgedAddLaunchNumber(builder, launchNumber):
    builder.PrependUOffsetTRelativeSlot(49, flatbuffers.number_types.UOffsetTFlags.py_type(launchNumber), 0)

def AddLaunchNumber(builder, launchNumber):
    SeradataSpacecraftDetails_AbridgedAddLaunchNumber(builder, launchNumber)

def SeradataSpacecraftDetails_AbridgedAddLaunchDate(builder, launchDate):
    builder.PrependUOffsetTRelativeSlot(50, flatbuffers.number_types.UOffsetTFlags.py_type(launchDate), 0)

def AddLaunchDate(builder, launchDate):
    SeradataSpacecraftDetails_AbridgedAddLaunchDate(builder, launchDate)

def SeradataSpacecraftDetails_AbridgedAddLaunchDateRemarks(builder, launchDateRemarks):
    builder.PrependUOffsetTRelativeSlot(51, flatbuffers.number_types.UOffsetTFlags.py_type(launchDateRemarks), 0)

def AddLaunchDateRemarks(builder, launchDateRemarks):
    SeradataSpacecraftDetails_AbridgedAddLaunchDateRemarks(builder, launchDateRemarks)

def SeradataSpacecraftDetails_AbridgedAddYoutubeLaunchLink(builder, youtubeLaunchLink):
    builder.PrependUOffsetTRelativeSlot(52, flatbuffers.number_types.UOffsetTFlags.py_type(youtubeLaunchLink), 0)

def AddYoutubeLaunchLink(builder, youtubeLaunchLink):
    SeradataSpacecraftDetails_AbridgedAddYoutubeLaunchLink(builder, youtubeLaunchLink)

def SeradataSpacecraftDetails_AbridgedAddStatus(builder, status):
    builder.PrependUOffsetTRelativeSlot(53, flatbuffers.number_types.UOffsetTFlags.py_type(status), 0)

def AddStatus(builder, status):
    SeradataSpacecraftDetails_AbridgedAddStatus(builder, status)

def SeradataSpacecraftDetails_AbridgedAddOwner(builder, owner):
    builder.PrependUOffsetTRelativeSlot(54, flatbuffers.number_types.UOffsetTFlags.py_type(owner), 0)

def AddOwner(builder, owner):
    SeradataSpacecraftDetails_AbridgedAddOwner(builder, owner)

def SeradataSpacecraftDetails_AbridgedAddOwnerCountry(builder, ownerCountry):
    builder.PrependUOffsetTRelativeSlot(55, flatbuffers.number_types.UOffsetTFlags.py_type(ownerCountry), 0)

def AddOwnerCountry(builder, ownerCountry):
    SeradataSpacecraftDetails_AbridgedAddOwnerCountry(builder, ownerCountry)

def SeradataSpacecraftDetails_AbridgedAddOperator(builder, operator):
    builder.PrependUOffsetTRelativeSlot(56, flatbuffers.number_types.UOffsetTFlags.py_type(operator), 0)

def AddOperator(builder, operator):
    SeradataSpacecraftDetails_AbridgedAddOperator(builder, operator)

def SeradataSpacecraftDetails_AbridgedAddOperatorCountry(builder, operatorCountry):
    builder.PrependUOffsetTRelativeSlot(57, flatbuffers.number_types.UOffsetTFlags.py_type(operatorCountry), 0)

def AddOperatorCountry(builder, operatorCountry):
    SeradataSpacecraftDetails_AbridgedAddOperatorCountry(builder, operatorCountry)

def SeradataSpacecraftDetails_AbridgedAddLeased(builder, leased):
    builder.PrependBoolSlot(58, leased, 0)

def AddLeased(builder, leased):
    SeradataSpacecraftDetails_AbridgedAddLeased(builder, leased)

def SeradataSpacecraftDetails_AbridgedAddOrderDate(builder, orderDate):
    builder.PrependUOffsetTRelativeSlot(59, flatbuffers.number_types.UOffsetTFlags.py_type(orderDate), 0)

def AddOrderDate(builder, orderDate):
    SeradataSpacecraftDetails_AbridgedAddOrderDate(builder, orderDate)

def SeradataSpacecraftDetails_AbridgedAddCapabilityLost(builder, capabilityLost):
    builder.PrependFloat64Slot(60, capabilityLost, 0.0)

def AddCapabilityLost(builder, capabilityLost):
    SeradataSpacecraftDetails_AbridgedAddCapabilityLost(builder, capabilityLost)

def SeradataSpacecraftDetails_AbridgedAddCapacityLost(builder, capacityLost):
    builder.PrependFloat64Slot(61, capacityLost, 0.0)

def AddCapacityLost(builder, capacityLost):
    SeradataSpacecraftDetails_AbridgedAddCapacityLost(builder, capacityLost)

def SeradataSpacecraftDetails_AbridgedAddPrimaryMissionGroup(builder, primaryMissionGroup):
    builder.PrependUOffsetTRelativeSlot(62, flatbuffers.number_types.UOffsetTFlags.py_type(primaryMissionGroup), 0)

def AddPrimaryMissionGroup(builder, primaryMissionGroup):
    SeradataSpacecraftDetails_AbridgedAddPrimaryMissionGroup(builder, primaryMissionGroup)

def SeradataSpacecraftDetails_AbridgedAddAdditionalMissionsGroups(builder, additionalMissionsGroups):
    builder.PrependUOffsetTRelativeSlot(63, flatbuffers.number_types.UOffsetTFlags.py_type(additionalMissionsGroups), 0)

def AddAdditionalMissionsGroups(builder, additionalMissionsGroups):
    SeradataSpacecraftDetails_AbridgedAddAdditionalMissionsGroups(builder, additionalMissionsGroups)

def SeradataSpacecraftDetails_AbridgedAddTotalClaims(builder, totalClaims):
    builder.PrependInt32Slot(64, totalClaims, 0)

def AddTotalClaims(builder, totalClaims):
    SeradataSpacecraftDetails_AbridgedAddTotalClaims(builder, totalClaims)

def SeradataSpacecraftDetails_AbridgedAddTotalInjuries(builder, totalInjuries):
    builder.PrependInt32Slot(65, totalInjuries, 0)

def AddTotalInjuries(builder, totalInjuries):
    SeradataSpacecraftDetails_AbridgedAddTotalInjuries(builder, totalInjuries)

def SeradataSpacecraftDetails_AbridgedAddTotalFatalities(builder, totalFatalities):
    builder.PrependInt32Slot(66, totalFatalities, 0)

def AddTotalFatalities(builder, totalFatalities):
    SeradataSpacecraftDetails_AbridgedAddTotalFatalities(builder, totalFatalities)

def SeradataSpacecraftDetails_AbridgedAddNameAtLaunch(builder, nameAtLaunch):
    builder.PrependUOffsetTRelativeSlot(67, flatbuffers.number_types.UOffsetTFlags.py_type(nameAtLaunch), 0)

def AddNameAtLaunch(builder, nameAtLaunch):
    SeradataSpacecraftDetails_AbridgedAddNameAtLaunch(builder, nameAtLaunch)

def SeradataSpacecraftDetails_AbridgedAddBusId(builder, busId):
    builder.PrependUOffsetTRelativeSlot(68, flatbuffers.number_types.UOffsetTFlags.py_type(busId), 0)

def AddBusId(builder, busId):
    SeradataSpacecraftDetails_AbridgedAddBusId(builder, busId)

def SeradataSpacecraftDetails_AbridgedAddCurrentAge(builder, currentAge):
    builder.PrependFloat64Slot(69, currentAge, 0.0)

def AddCurrentAge(builder, currentAge):
    SeradataSpacecraftDetails_AbridgedAddCurrentAge(builder, currentAge)

def SeradataSpacecraftDetails_AbridgedAddLifeLost(builder, lifeLost):
    builder.PrependFloat64Slot(70, lifeLost, 0.0)

def AddLifeLost(builder, lifeLost):
    SeradataSpacecraftDetails_AbridgedAddLifeLost(builder, lifeLost)

def SeradataSpacecraftDetails_AbridgedAddGeoPosition(builder, geoPosition):
    builder.PrependFloat64Slot(71, geoPosition, 0.0)

def AddGeoPosition(builder, geoPosition):
    SeradataSpacecraftDetails_AbridgedAddGeoPosition(builder, geoPosition)

def SeradataSpacecraftDetails_AbridgedAddInsuranceLossesTotal(builder, insuranceLossesTotal):
    builder.PrependFloat64Slot(72, insuranceLossesTotal, 0.0)

def AddInsuranceLossesTotal(builder, insuranceLossesTotal):
    SeradataSpacecraftDetails_AbridgedAddInsuranceLossesTotal(builder, insuranceLossesTotal)

def SeradataSpacecraftDetails_AbridgedAddLaunchArranger(builder, launchArranger):
    builder.PrependUOffsetTRelativeSlot(73, flatbuffers.number_types.UOffsetTFlags.py_type(launchArranger), 0)

def AddLaunchArranger(builder, launchArranger):
    SeradataSpacecraftDetails_AbridgedAddLaunchArranger(builder, launchArranger)

def SeradataSpacecraftDetails_AbridgedAddLaunchArrangerCountry(builder, launchArrangerCountry):
    builder.PrependUOffsetTRelativeSlot(74, flatbuffers.number_types.UOffsetTFlags.py_type(launchArrangerCountry), 0)

def AddLaunchArrangerCountry(builder, launchArrangerCountry):
    SeradataSpacecraftDetails_AbridgedAddLaunchArrangerCountry(builder, launchArrangerCountry)

def SeradataSpacecraftDetails_AbridgedAddSerialNumber(builder, serialNumber):
    builder.PrependUOffsetTRelativeSlot(75, flatbuffers.number_types.UOffsetTFlags.py_type(serialNumber), 0)

def AddSerialNumber(builder, serialNumber):
    SeradataSpacecraftDetails_AbridgedAddSerialNumber(builder, serialNumber)

def SeradataSpacecraftDetails_AbridgedAddProgramName(builder, programName):
    builder.PrependUOffsetTRelativeSlot(76, flatbuffers.number_types.UOffsetTFlags.py_type(programName), 0)

def AddProgramName(builder, programName):
    SeradataSpacecraftDetails_AbridgedAddProgramName(builder, programName)

def SeradataSpacecraftDetails_AbridgedAddReusedHullName(builder, reusedHullName):
    builder.PrependUOffsetTRelativeSlot(77, flatbuffers.number_types.UOffsetTFlags.py_type(reusedHullName), 0)

def AddReusedHullName(builder, reusedHullName):
    SeradataSpacecraftDetails_AbridgedAddReusedHullName(builder, reusedHullName)

def SeradataSpacecraftDetails_AbridgedAddDateOfObservation(builder, dateOfObservation):
    builder.PrependUOffsetTRelativeSlot(78, flatbuffers.number_types.UOffsetTFlags.py_type(dateOfObservation), 0)

def AddDateOfObservation(builder, dateOfObservation):
    SeradataSpacecraftDetails_AbridgedAddDateOfObservation(builder, dateOfObservation)

def SeradataSpacecraftDetails_AbridgedAddLat(builder, lat):
    builder.PrependFloat64Slot(79, lat, 0.0)

def AddLat(builder, lat):
    SeradataSpacecraftDetails_AbridgedAddLat(builder, lat)

def SeradataSpacecraftDetails_AbridgedAddLon(builder, lon):
    builder.PrependFloat64Slot(80, lon, 0.0)

def AddLon(builder, lon):
    SeradataSpacecraftDetails_AbridgedAddLon(builder, lon)

def SeradataSpacecraftDetails_AbridgedAddAltitude(builder, altitude):
    builder.PrependFloat64Slot(81, altitude, 0.0)

def AddAltitude(builder, altitude):
    SeradataSpacecraftDetails_AbridgedAddAltitude(builder, altitude)

def SeradataSpacecraftDetails_AbridgedAddCollisionRiskMm(builder, collisionRiskMm):
    builder.PrependFloat64Slot(82, collisionRiskMm, 0.0)

def AddCollisionRiskMm(builder, collisionRiskMm):
    SeradataSpacecraftDetails_AbridgedAddCollisionRiskMm(builder, collisionRiskMm)

def SeradataSpacecraftDetails_AbridgedAddCollisionRiskCm(builder, collisionRiskCm):
    builder.PrependFloat64Slot(83, collisionRiskCm, 0.0)

def AddCollisionRiskCm(builder, collisionRiskCm):
    SeradataSpacecraftDetails_AbridgedAddCollisionRiskCm(builder, collisionRiskCm)

def SeradataSpacecraftDetails_AbridgedAddQuantity(builder, quantity):
    builder.PrependInt32Slot(84, quantity, 0)

def AddQuantity(builder, quantity):
    SeradataSpacecraftDetails_AbridgedAddQuantity(builder, quantity)

def SeradataSpacecraftDetails_AbridgedAddReusableFlights(builder, reusableFlights):
    builder.PrependUOffsetTRelativeSlot(85, flatbuffers.number_types.UOffsetTFlags.py_type(reusableFlights), 0)

def AddReusableFlights(builder, reusableFlights):
    SeradataSpacecraftDetails_AbridgedAddReusableFlights(builder, reusableFlights)

def SeradataSpacecraftDetails_AbridgedAddNotes(builder, notes):
    builder.PrependUOffsetTRelativeSlot(86, flatbuffers.number_types.UOffsetTFlags.py_type(notes), 0)

def AddNotes(builder, notes):
    SeradataSpacecraftDetails_AbridgedAddNotes(builder, notes)

def SeradataSpacecraftDetails_AbridgedAddInsuranceNotes(builder, insuranceNotes):
    builder.PrependUOffsetTRelativeSlot(87, flatbuffers.number_types.UOffsetTFlags.py_type(insuranceNotes), 0)

def AddInsuranceNotes(builder, insuranceNotes):
    SeradataSpacecraftDetails_AbridgedAddInsuranceNotes(builder, insuranceNotes)

def SeradataSpacecraftDetails_AbridgedAddLaunchNotes(builder, launchNotes):
    builder.PrependUOffsetTRelativeSlot(88, flatbuffers.number_types.UOffsetTFlags.py_type(launchNotes), 0)

def AddLaunchNotes(builder, launchNotes):
    SeradataSpacecraftDetails_AbridgedAddLaunchNotes(builder, launchNotes)

def SeradataSpacecraftDetails_AbridgedAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(89, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    SeradataSpacecraftDetails_AbridgedAddSource(builder, source)

def SeradataSpacecraftDetails_AbridgedAddOrigin(builder, origin):
    builder.PrependUOffsetTRelativeSlot(90, flatbuffers.number_types.UOffsetTFlags.py_type(origin), 0)

def AddOrigin(builder, origin):
    SeradataSpacecraftDetails_AbridgedAddOrigin(builder, origin)

def SeradataSpacecraftDetails_AbridgedAddOrigNetwork(builder, origNetwork):
    builder.PrependUOffsetTRelativeSlot(91, flatbuffers.number_types.UOffsetTFlags.py_type(origNetwork), 0)

def AddOrigNetwork(builder, origNetwork):
    SeradataSpacecraftDetails_AbridgedAddOrigNetwork(builder, origNetwork)

def SeradataSpacecraftDetails_AbridgedAddDataMode(builder, dataMode):
    builder.PrependInt8Slot(92, dataMode, 0)

def AddDataMode(builder, dataMode):
    SeradataSpacecraftDetails_AbridgedAddDataMode(builder, dataMode)

def SeradataSpacecraftDetails_AbridgedAddCreatedAt(builder, createdAt):
    builder.PrependUOffsetTRelativeSlot(93, flatbuffers.number_types.UOffsetTFlags.py_type(createdAt), 0)

def AddCreatedAt(builder, createdAt):
    SeradataSpacecraftDetails_AbridgedAddCreatedAt(builder, createdAt)

def SeradataSpacecraftDetails_AbridgedAddCreatedBy(builder, createdBy):
    builder.PrependUOffsetTRelativeSlot(94, flatbuffers.number_types.UOffsetTFlags.py_type(createdBy), 0)

def AddCreatedBy(builder, createdBy):
    SeradataSpacecraftDetails_AbridgedAddCreatedBy(builder, createdBy)

def SeradataSpacecraftDetails_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return SeradataSpacecraftDetails_AbridgedEnd(builder)


class SeradataSpacecraftDetails_AbridgedT(object):

    # SeradataSpacecraftDetails_AbridgedT
    def __init__(self):
        self.id = None  # type: str
        self.idOnOrbit = None  # type: str
        self.classificationMarking = None  # type: str
        self.name = None  # type: str
        self.description = None  # type: str
        self.intlNumber = None  # type: str
        self.sector = None  # type: str
        self.apogee = 0.0  # type: float
        self.perigee = 0.0  # type: float
        self.period = 0.0  # type: float
        self.inclination = 0.0  # type: float
        self.primeManufacturerOrgId = None  # type: str
        self.stabilizer = None  # type: str
        self.designLife = 0  # type: int
        self.expectedLife = 0  # type: int
        self.insuredAtLaunch = False  # type: bool
        self.launchMass = 0.0  # type: float
        self.dryMass = 0.0  # type: float
        self.catalogNumber = 0  # type: int
        self.totalPayloadPower = 0.0  # type: float
        self.constellation = None  # type: str
        self.orbitCategory = None  # type: str
        self.orbitSubCategory = None  # type: str
        self.launchCost = 0.0  # type: float
        self.launchCostEstimated = False  # type: bool
        self.costEstimated = False  # type: bool
        self.newCost = 0.0  # type: float
        self.combinedNewCost = 0.0  # type: float
        self.combinedCostEstimated = False  # type: bool
        self.insuredValueAtLaunch = 0.0  # type: float
        self.insuredValueLaunchEstimated = False  # type: bool
        self.annualInsuredDepreciationFactor = 0.0  # type: float
        self.annualInsuredDepreciationFactorEstimated = False  # type: bool
        self.insurancePremiumAtLaunch = 0.0  # type: float
        self.insurancePremiumAtLaunchEstimated = False  # type: bool
        self.numHumans = 0  # type: int
        self.cubesatDispenserType = None  # type: str
        self.massCategory = None  # type: str
        self.launchId = None  # type: str
        self.launchVehicleId = None  # type: str
        self.launchProviderFlightNumber = None  # type: str
        self.launchSiteName = None  # type: str
        self.launchSiteId = None  # type: str
        self.launchCountry = None  # type: str
        self.launchProvider = None  # type: str
        self.launchProviderCountry = None  # type: str
        self.commercialLaunch = False  # type: bool
        self.launchType = None  # type: str
        self.launchCharacteristic = None  # type: str
        self.launchNumber = None  # type: str
        self.launchDate = None  # type: str
        self.launchDateRemarks = None  # type: str
        self.youtubeLaunchLink = None  # type: str
        self.status = None  # type: str
        self.owner = None  # type: str
        self.ownerCountry = None  # type: str
        self.operator = None  # type: str
        self.operatorCountry = None  # type: str
        self.leased = False  # type: bool
        self.orderDate = None  # type: str
        self.capabilityLost = 0.0  # type: float
        self.capacityLost = 0.0  # type: float
        self.primaryMissionGroup = None  # type: str
        self.additionalMissionsGroups = None  # type: str
        self.totalClaims = 0  # type: int
        self.totalInjuries = 0  # type: int
        self.totalFatalities = 0  # type: int
        self.nameAtLaunch = None  # type: str
        self.busId = None  # type: str
        self.currentAge = 0.0  # type: float
        self.lifeLost = 0.0  # type: float
        self.geoPosition = 0.0  # type: float
        self.insuranceLossesTotal = 0.0  # type: float
        self.launchArranger = None  # type: str
        self.launchArrangerCountry = None  # type: str
        self.serialNumber = None  # type: str
        self.programName = None  # type: str
        self.reusedHullName = None  # type: str
        self.dateOfObservation = None  # type: str
        self.lat = 0.0  # type: float
        self.lon = 0.0  # type: float
        self.altitude = 0.0  # type: float
        self.collisionRiskMm = 0.0  # type: float
        self.collisionRiskCm = 0.0  # type: float
        self.quantity = 0  # type: int
        self.reusableFlights = None  # type: str
        self.notes = None  # type: str
        self.insuranceNotes = None  # type: str
        self.launchNotes = None  # type: str
        self.source = None  # type: str
        self.origin = None  # type: str
        self.origNetwork = None  # type: str
        self.dataMode = 0  # type: int
        self.createdAt = None  # type: str
        self.createdBy = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        seradataSpacecraftDetailsAbridged = SeradataSpacecraftDetails_Abridged()
        seradataSpacecraftDetailsAbridged.Init(buf, pos)
        return cls.InitFromObj(seradataSpacecraftDetailsAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, seradataSpacecraftDetailsAbridged):
        x = SeradataSpacecraftDetails_AbridgedT()
        x._UnPack(seradataSpacecraftDetailsAbridged)
        return x

    # SeradataSpacecraftDetails_AbridgedT
    def _UnPack(self, seradataSpacecraftDetailsAbridged):
        if seradataSpacecraftDetailsAbridged is None:
            return
        self.id = seradataSpacecraftDetailsAbridged.Id()
        self.idOnOrbit = seradataSpacecraftDetailsAbridged.IdOnOrbit()
        self.classificationMarking = seradataSpacecraftDetailsAbridged.ClassificationMarking()
        self.name = seradataSpacecraftDetailsAbridged.Name()
        self.description = seradataSpacecraftDetailsAbridged.Description()
        self.intlNumber = seradataSpacecraftDetailsAbridged.IntlNumber()
        self.sector = seradataSpacecraftDetailsAbridged.Sector()
        self.apogee = seradataSpacecraftDetailsAbridged.Apogee()
        self.perigee = seradataSpacecraftDetailsAbridged.Perigee()
        self.period = seradataSpacecraftDetailsAbridged.Period()
        self.inclination = seradataSpacecraftDetailsAbridged.Inclination()
        self.primeManufacturerOrgId = seradataSpacecraftDetailsAbridged.PrimeManufacturerOrgId()
        self.stabilizer = seradataSpacecraftDetailsAbridged.Stabilizer()
        self.designLife = seradataSpacecraftDetailsAbridged.DesignLife()
        self.expectedLife = seradataSpacecraftDetailsAbridged.ExpectedLife()
        self.insuredAtLaunch = seradataSpacecraftDetailsAbridged.InsuredAtLaunch()
        self.launchMass = seradataSpacecraftDetailsAbridged.LaunchMass()
        self.dryMass = seradataSpacecraftDetailsAbridged.DryMass()
        self.catalogNumber = seradataSpacecraftDetailsAbridged.CatalogNumber()
        self.totalPayloadPower = seradataSpacecraftDetailsAbridged.TotalPayloadPower()
        self.constellation = seradataSpacecraftDetailsAbridged.Constellation()
        self.orbitCategory = seradataSpacecraftDetailsAbridged.OrbitCategory()
        self.orbitSubCategory = seradataSpacecraftDetailsAbridged.OrbitSubCategory()
        self.launchCost = seradataSpacecraftDetailsAbridged.LaunchCost()
        self.launchCostEstimated = seradataSpacecraftDetailsAbridged.LaunchCostEstimated()
        self.costEstimated = seradataSpacecraftDetailsAbridged.CostEstimated()
        self.newCost = seradataSpacecraftDetailsAbridged.NewCost()
        self.combinedNewCost = seradataSpacecraftDetailsAbridged.CombinedNewCost()
        self.combinedCostEstimated = seradataSpacecraftDetailsAbridged.CombinedCostEstimated()
        self.insuredValueAtLaunch = seradataSpacecraftDetailsAbridged.InsuredValueAtLaunch()
        self.insuredValueLaunchEstimated = seradataSpacecraftDetailsAbridged.InsuredValueLaunchEstimated()
        self.annualInsuredDepreciationFactor = seradataSpacecraftDetailsAbridged.AnnualInsuredDepreciationFactor()
        self.annualInsuredDepreciationFactorEstimated = seradataSpacecraftDetailsAbridged.AnnualInsuredDepreciationFactorEstimated()
        self.insurancePremiumAtLaunch = seradataSpacecraftDetailsAbridged.InsurancePremiumAtLaunch()
        self.insurancePremiumAtLaunchEstimated = seradataSpacecraftDetailsAbridged.InsurancePremiumAtLaunchEstimated()
        self.numHumans = seradataSpacecraftDetailsAbridged.NumHumans()
        self.cubesatDispenserType = seradataSpacecraftDetailsAbridged.CubesatDispenserType()
        self.massCategory = seradataSpacecraftDetailsAbridged.MassCategory()
        self.launchId = seradataSpacecraftDetailsAbridged.LaunchId()
        self.launchVehicleId = seradataSpacecraftDetailsAbridged.LaunchVehicleId()
        self.launchProviderFlightNumber = seradataSpacecraftDetailsAbridged.LaunchProviderFlightNumber()
        self.launchSiteName = seradataSpacecraftDetailsAbridged.LaunchSiteName()
        self.launchSiteId = seradataSpacecraftDetailsAbridged.LaunchSiteId()
        self.launchCountry = seradataSpacecraftDetailsAbridged.LaunchCountry()
        self.launchProvider = seradataSpacecraftDetailsAbridged.LaunchProvider()
        self.launchProviderCountry = seradataSpacecraftDetailsAbridged.LaunchProviderCountry()
        self.commercialLaunch = seradataSpacecraftDetailsAbridged.CommercialLaunch()
        self.launchType = seradataSpacecraftDetailsAbridged.LaunchType()
        self.launchCharacteristic = seradataSpacecraftDetailsAbridged.LaunchCharacteristic()
        self.launchNumber = seradataSpacecraftDetailsAbridged.LaunchNumber()
        self.launchDate = seradataSpacecraftDetailsAbridged.LaunchDate()
        self.launchDateRemarks = seradataSpacecraftDetailsAbridged.LaunchDateRemarks()
        self.youtubeLaunchLink = seradataSpacecraftDetailsAbridged.YoutubeLaunchLink()
        self.status = seradataSpacecraftDetailsAbridged.Status()
        self.owner = seradataSpacecraftDetailsAbridged.Owner()
        self.ownerCountry = seradataSpacecraftDetailsAbridged.OwnerCountry()
        self.operator = seradataSpacecraftDetailsAbridged.Operator()
        self.operatorCountry = seradataSpacecraftDetailsAbridged.OperatorCountry()
        self.leased = seradataSpacecraftDetailsAbridged.Leased()
        self.orderDate = seradataSpacecraftDetailsAbridged.OrderDate()
        self.capabilityLost = seradataSpacecraftDetailsAbridged.CapabilityLost()
        self.capacityLost = seradataSpacecraftDetailsAbridged.CapacityLost()
        self.primaryMissionGroup = seradataSpacecraftDetailsAbridged.PrimaryMissionGroup()
        self.additionalMissionsGroups = seradataSpacecraftDetailsAbridged.AdditionalMissionsGroups()
        self.totalClaims = seradataSpacecraftDetailsAbridged.TotalClaims()
        self.totalInjuries = seradataSpacecraftDetailsAbridged.TotalInjuries()
        self.totalFatalities = seradataSpacecraftDetailsAbridged.TotalFatalities()
        self.nameAtLaunch = seradataSpacecraftDetailsAbridged.NameAtLaunch()
        self.busId = seradataSpacecraftDetailsAbridged.BusId()
        self.currentAge = seradataSpacecraftDetailsAbridged.CurrentAge()
        self.lifeLost = seradataSpacecraftDetailsAbridged.LifeLost()
        self.geoPosition = seradataSpacecraftDetailsAbridged.GeoPosition()
        self.insuranceLossesTotal = seradataSpacecraftDetailsAbridged.InsuranceLossesTotal()
        self.launchArranger = seradataSpacecraftDetailsAbridged.LaunchArranger()
        self.launchArrangerCountry = seradataSpacecraftDetailsAbridged.LaunchArrangerCountry()
        self.serialNumber = seradataSpacecraftDetailsAbridged.SerialNumber()
        self.programName = seradataSpacecraftDetailsAbridged.ProgramName()
        self.reusedHullName = seradataSpacecraftDetailsAbridged.ReusedHullName()
        self.dateOfObservation = seradataSpacecraftDetailsAbridged.DateOfObservation()
        self.lat = seradataSpacecraftDetailsAbridged.Lat()
        self.lon = seradataSpacecraftDetailsAbridged.Lon()
        self.altitude = seradataSpacecraftDetailsAbridged.Altitude()
        self.collisionRiskMm = seradataSpacecraftDetailsAbridged.CollisionRiskMm()
        self.collisionRiskCm = seradataSpacecraftDetailsAbridged.CollisionRiskCm()
        self.quantity = seradataSpacecraftDetailsAbridged.Quantity()
        self.reusableFlights = seradataSpacecraftDetailsAbridged.ReusableFlights()
        self.notes = seradataSpacecraftDetailsAbridged.Notes()
        self.insuranceNotes = seradataSpacecraftDetailsAbridged.InsuranceNotes()
        self.launchNotes = seradataSpacecraftDetailsAbridged.LaunchNotes()
        self.source = seradataSpacecraftDetailsAbridged.Source()
        self.origin = seradataSpacecraftDetailsAbridged.Origin()
        self.origNetwork = seradataSpacecraftDetailsAbridged.OrigNetwork()
        self.dataMode = seradataSpacecraftDetailsAbridged.DataMode()
        self.createdAt = seradataSpacecraftDetailsAbridged.CreatedAt()
        self.createdBy = seradataSpacecraftDetailsAbridged.CreatedBy()

    # SeradataSpacecraftDetails_AbridgedT
    def Pack(self, builder):
        if self.id is not None:
            id = builder.CreateString(self.id)
        if self.idOnOrbit is not None:
            idOnOrbit = builder.CreateString(self.idOnOrbit)
        if self.classificationMarking is not None:
            classificationMarking = builder.CreateString(self.classificationMarking)
        if self.name is not None:
            name = builder.CreateString(self.name)
        if self.description is not None:
            description = builder.CreateString(self.description)
        if self.intlNumber is not None:
            intlNumber = builder.CreateString(self.intlNumber)
        if self.sector is not None:
            sector = builder.CreateString(self.sector)
        if self.primeManufacturerOrgId is not None:
            primeManufacturerOrgId = builder.CreateString(self.primeManufacturerOrgId)
        if self.stabilizer is not None:
            stabilizer = builder.CreateString(self.stabilizer)
        if self.constellation is not None:
            constellation = builder.CreateString(self.constellation)
        if self.orbitCategory is not None:
            orbitCategory = builder.CreateString(self.orbitCategory)
        if self.orbitSubCategory is not None:
            orbitSubCategory = builder.CreateString(self.orbitSubCategory)
        if self.cubesatDispenserType is not None:
            cubesatDispenserType = builder.CreateString(self.cubesatDispenserType)
        if self.massCategory is not None:
            massCategory = builder.CreateString(self.massCategory)
        if self.launchId is not None:
            launchId = builder.CreateString(self.launchId)
        if self.launchVehicleId is not None:
            launchVehicleId = builder.CreateString(self.launchVehicleId)
        if self.launchProviderFlightNumber is not None:
            launchProviderFlightNumber = builder.CreateString(self.launchProviderFlightNumber)
        if self.launchSiteName is not None:
            launchSiteName = builder.CreateString(self.launchSiteName)
        if self.launchSiteId is not None:
            launchSiteId = builder.CreateString(self.launchSiteId)
        if self.launchCountry is not None:
            launchCountry = builder.CreateString(self.launchCountry)
        if self.launchProvider is not None:
            launchProvider = builder.CreateString(self.launchProvider)
        if self.launchProviderCountry is not None:
            launchProviderCountry = builder.CreateString(self.launchProviderCountry)
        if self.launchType is not None:
            launchType = builder.CreateString(self.launchType)
        if self.launchCharacteristic is not None:
            launchCharacteristic = builder.CreateString(self.launchCharacteristic)
        if self.launchNumber is not None:
            launchNumber = builder.CreateString(self.launchNumber)
        if self.launchDate is not None:
            launchDate = builder.CreateString(self.launchDate)
        if self.launchDateRemarks is not None:
            launchDateRemarks = builder.CreateString(self.launchDateRemarks)
        if self.youtubeLaunchLink is not None:
            youtubeLaunchLink = builder.CreateString(self.youtubeLaunchLink)
        if self.status is not None:
            status = builder.CreateString(self.status)
        if self.owner is not None:
            owner = builder.CreateString(self.owner)
        if self.ownerCountry is not None:
            ownerCountry = builder.CreateString(self.ownerCountry)
        if self.operator is not None:
            operator = builder.CreateString(self.operator)
        if self.operatorCountry is not None:
            operatorCountry = builder.CreateString(self.operatorCountry)
        if self.orderDate is not None:
            orderDate = builder.CreateString(self.orderDate)
        if self.primaryMissionGroup is not None:
            primaryMissionGroup = builder.CreateString(self.primaryMissionGroup)
        if self.additionalMissionsGroups is not None:
            additionalMissionsGroups = builder.CreateString(self.additionalMissionsGroups)
        if self.nameAtLaunch is not None:
            nameAtLaunch = builder.CreateString(self.nameAtLaunch)
        if self.busId is not None:
            busId = builder.CreateString(self.busId)
        if self.launchArranger is not None:
            launchArranger = builder.CreateString(self.launchArranger)
        if self.launchArrangerCountry is not None:
            launchArrangerCountry = builder.CreateString(self.launchArrangerCountry)
        if self.serialNumber is not None:
            serialNumber = builder.CreateString(self.serialNumber)
        if self.programName is not None:
            programName = builder.CreateString(self.programName)
        if self.reusedHullName is not None:
            reusedHullName = builder.CreateString(self.reusedHullName)
        if self.dateOfObservation is not None:
            dateOfObservation = builder.CreateString(self.dateOfObservation)
        if self.reusableFlights is not None:
            reusableFlights = builder.CreateString(self.reusableFlights)
        if self.notes is not None:
            notes = builder.CreateString(self.notes)
        if self.insuranceNotes is not None:
            insuranceNotes = builder.CreateString(self.insuranceNotes)
        if self.launchNotes is not None:
            launchNotes = builder.CreateString(self.launchNotes)
        if self.source is not None:
            source = builder.CreateString(self.source)
        if self.origin is not None:
            origin = builder.CreateString(self.origin)
        if self.origNetwork is not None:
            origNetwork = builder.CreateString(self.origNetwork)
        if self.createdAt is not None:
            createdAt = builder.CreateString(self.createdAt)
        if self.createdBy is not None:
            createdBy = builder.CreateString(self.createdBy)
        SeradataSpacecraftDetails_AbridgedStart(builder)
        if self.id is not None:
            SeradataSpacecraftDetails_AbridgedAddId(builder, id)
        if self.idOnOrbit is not None:
            SeradataSpacecraftDetails_AbridgedAddIdOnOrbit(builder, idOnOrbit)
        if self.classificationMarking is not None:
            SeradataSpacecraftDetails_AbridgedAddClassificationMarking(builder, classificationMarking)
        if self.name is not None:
            SeradataSpacecraftDetails_AbridgedAddName(builder, name)
        if self.description is not None:
            SeradataSpacecraftDetails_AbridgedAddDescription(builder, description)
        if self.intlNumber is not None:
            SeradataSpacecraftDetails_AbridgedAddIntlNumber(builder, intlNumber)
        if self.sector is not None:
            SeradataSpacecraftDetails_AbridgedAddSector(builder, sector)
        SeradataSpacecraftDetails_AbridgedAddApogee(builder, self.apogee)
        SeradataSpacecraftDetails_AbridgedAddPerigee(builder, self.perigee)
        SeradataSpacecraftDetails_AbridgedAddPeriod(builder, self.period)
        SeradataSpacecraftDetails_AbridgedAddInclination(builder, self.inclination)
        if self.primeManufacturerOrgId is not None:
            SeradataSpacecraftDetails_AbridgedAddPrimeManufacturerOrgId(builder, primeManufacturerOrgId)
        if self.stabilizer is not None:
            SeradataSpacecraftDetails_AbridgedAddStabilizer(builder, stabilizer)
        SeradataSpacecraftDetails_AbridgedAddDesignLife(builder, self.designLife)
        SeradataSpacecraftDetails_AbridgedAddExpectedLife(builder, self.expectedLife)
        SeradataSpacecraftDetails_AbridgedAddInsuredAtLaunch(builder, self.insuredAtLaunch)
        SeradataSpacecraftDetails_AbridgedAddLaunchMass(builder, self.launchMass)
        SeradataSpacecraftDetails_AbridgedAddDryMass(builder, self.dryMass)
        SeradataSpacecraftDetails_AbridgedAddCatalogNumber(builder, self.catalogNumber)
        SeradataSpacecraftDetails_AbridgedAddTotalPayloadPower(builder, self.totalPayloadPower)
        if self.constellation is not None:
            SeradataSpacecraftDetails_AbridgedAddConstellation(builder, constellation)
        if self.orbitCategory is not None:
            SeradataSpacecraftDetails_AbridgedAddOrbitCategory(builder, orbitCategory)
        if self.orbitSubCategory is not None:
            SeradataSpacecraftDetails_AbridgedAddOrbitSubCategory(builder, orbitSubCategory)
        SeradataSpacecraftDetails_AbridgedAddLaunchCost(builder, self.launchCost)
        SeradataSpacecraftDetails_AbridgedAddLaunchCostEstimated(builder, self.launchCostEstimated)
        SeradataSpacecraftDetails_AbridgedAddCostEstimated(builder, self.costEstimated)
        SeradataSpacecraftDetails_AbridgedAddNewCost(builder, self.newCost)
        SeradataSpacecraftDetails_AbridgedAddCombinedNewCost(builder, self.combinedNewCost)
        SeradataSpacecraftDetails_AbridgedAddCombinedCostEstimated(builder, self.combinedCostEstimated)
        SeradataSpacecraftDetails_AbridgedAddInsuredValueAtLaunch(builder, self.insuredValueAtLaunch)
        SeradataSpacecraftDetails_AbridgedAddInsuredValueLaunchEstimated(builder, self.insuredValueLaunchEstimated)
        SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactor(builder, self.annualInsuredDepreciationFactor)
        SeradataSpacecraftDetails_AbridgedAddAnnualInsuredDepreciationFactorEstimated(builder, self.annualInsuredDepreciationFactorEstimated)
        SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunch(builder, self.insurancePremiumAtLaunch)
        SeradataSpacecraftDetails_AbridgedAddInsurancePremiumAtLaunchEstimated(builder, self.insurancePremiumAtLaunchEstimated)
        SeradataSpacecraftDetails_AbridgedAddNumHumans(builder, self.numHumans)
        if self.cubesatDispenserType is not None:
            SeradataSpacecraftDetails_AbridgedAddCubesatDispenserType(builder, cubesatDispenserType)
        if self.massCategory is not None:
            SeradataSpacecraftDetails_AbridgedAddMassCategory(builder, massCategory)
        if self.launchId is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchId(builder, launchId)
        if self.launchVehicleId is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchVehicleId(builder, launchVehicleId)
        if self.launchProviderFlightNumber is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchProviderFlightNumber(builder, launchProviderFlightNumber)
        if self.launchSiteName is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchSiteName(builder, launchSiteName)
        if self.launchSiteId is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchSiteId(builder, launchSiteId)
        if self.launchCountry is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchCountry(builder, launchCountry)
        if self.launchProvider is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchProvider(builder, launchProvider)
        if self.launchProviderCountry is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchProviderCountry(builder, launchProviderCountry)
        SeradataSpacecraftDetails_AbridgedAddCommercialLaunch(builder, self.commercialLaunch)
        if self.launchType is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchType(builder, launchType)
        if self.launchCharacteristic is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchCharacteristic(builder, launchCharacteristic)
        if self.launchNumber is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchNumber(builder, launchNumber)
        if self.launchDate is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchDate(builder, launchDate)
        if self.launchDateRemarks is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchDateRemarks(builder, launchDateRemarks)
        if self.youtubeLaunchLink is not None:
            SeradataSpacecraftDetails_AbridgedAddYoutubeLaunchLink(builder, youtubeLaunchLink)
        if self.status is not None:
            SeradataSpacecraftDetails_AbridgedAddStatus(builder, status)
        if self.owner is not None:
            SeradataSpacecraftDetails_AbridgedAddOwner(builder, owner)
        if self.ownerCountry is not None:
            SeradataSpacecraftDetails_AbridgedAddOwnerCountry(builder, ownerCountry)
        if self.operator is not None:
            SeradataSpacecraftDetails_AbridgedAddOperator(builder, operator)
        if self.operatorCountry is not None:
            SeradataSpacecraftDetails_AbridgedAddOperatorCountry(builder, operatorCountry)
        SeradataSpacecraftDetails_AbridgedAddLeased(builder, self.leased)
        if self.orderDate is not None:
            SeradataSpacecraftDetails_AbridgedAddOrderDate(builder, orderDate)
        SeradataSpacecraftDetails_AbridgedAddCapabilityLost(builder, self.capabilityLost)
        SeradataSpacecraftDetails_AbridgedAddCapacityLost(builder, self.capacityLost)
        if self.primaryMissionGroup is not None:
            SeradataSpacecraftDetails_AbridgedAddPrimaryMissionGroup(builder, primaryMissionGroup)
        if self.additionalMissionsGroups is not None:
            SeradataSpacecraftDetails_AbridgedAddAdditionalMissionsGroups(builder, additionalMissionsGroups)
        SeradataSpacecraftDetails_AbridgedAddTotalClaims(builder, self.totalClaims)
        SeradataSpacecraftDetails_AbridgedAddTotalInjuries(builder, self.totalInjuries)
        SeradataSpacecraftDetails_AbridgedAddTotalFatalities(builder, self.totalFatalities)
        if self.nameAtLaunch is not None:
            SeradataSpacecraftDetails_AbridgedAddNameAtLaunch(builder, nameAtLaunch)
        if self.busId is not None:
            SeradataSpacecraftDetails_AbridgedAddBusId(builder, busId)
        SeradataSpacecraftDetails_AbridgedAddCurrentAge(builder, self.currentAge)
        SeradataSpacecraftDetails_AbridgedAddLifeLost(builder, self.lifeLost)
        SeradataSpacecraftDetails_AbridgedAddGeoPosition(builder, self.geoPosition)
        SeradataSpacecraftDetails_AbridgedAddInsuranceLossesTotal(builder, self.insuranceLossesTotal)
        if self.launchArranger is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchArranger(builder, launchArranger)
        if self.launchArrangerCountry is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchArrangerCountry(builder, launchArrangerCountry)
        if self.serialNumber is not None:
            SeradataSpacecraftDetails_AbridgedAddSerialNumber(builder, serialNumber)
        if self.programName is not None:
            SeradataSpacecraftDetails_AbridgedAddProgramName(builder, programName)
        if self.reusedHullName is not None:
            SeradataSpacecraftDetails_AbridgedAddReusedHullName(builder, reusedHullName)
        if self.dateOfObservation is not None:
            SeradataSpacecraftDetails_AbridgedAddDateOfObservation(builder, dateOfObservation)
        SeradataSpacecraftDetails_AbridgedAddLat(builder, self.lat)
        SeradataSpacecraftDetails_AbridgedAddLon(builder, self.lon)
        SeradataSpacecraftDetails_AbridgedAddAltitude(builder, self.altitude)
        SeradataSpacecraftDetails_AbridgedAddCollisionRiskMm(builder, self.collisionRiskMm)
        SeradataSpacecraftDetails_AbridgedAddCollisionRiskCm(builder, self.collisionRiskCm)
        SeradataSpacecraftDetails_AbridgedAddQuantity(builder, self.quantity)
        if self.reusableFlights is not None:
            SeradataSpacecraftDetails_AbridgedAddReusableFlights(builder, reusableFlights)
        if self.notes is not None:
            SeradataSpacecraftDetails_AbridgedAddNotes(builder, notes)
        if self.insuranceNotes is not None:
            SeradataSpacecraftDetails_AbridgedAddInsuranceNotes(builder, insuranceNotes)
        if self.launchNotes is not None:
            SeradataSpacecraftDetails_AbridgedAddLaunchNotes(builder, launchNotes)
        if self.source is not None:
            SeradataSpacecraftDetails_AbridgedAddSource(builder, source)
        if self.origin is not None:
            SeradataSpacecraftDetails_AbridgedAddOrigin(builder, origin)
        if self.origNetwork is not None:
            SeradataSpacecraftDetails_AbridgedAddOrigNetwork(builder, origNetwork)
        SeradataSpacecraftDetails_AbridgedAddDataMode(builder, self.dataMode)
        if self.createdAt is not None:
            SeradataSpacecraftDetails_AbridgedAddCreatedAt(builder, createdAt)
        if self.createdBy is not None:
            SeradataSpacecraftDetails_AbridgedAddCreatedBy(builder, createdBy)
        seradataSpacecraftDetailsAbridged = SeradataSpacecraftDetails_AbridgedEnd(builder)
        return seradataSpacecraftDetailsAbridged
