# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// A grouping of zero or more target reports for which the sensor provides a single time, sensor position, reference position on the ground with simple estimates for the observed area at the reported time, and other pertinent data.
class MtiTargetReport_Full(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MtiTargetReport_Full()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsMtiTargetReport_Full(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def MtiTargetReport_FullBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x4D\x54\x49\x54", size_prefixed=size_prefixed)

    # MtiTargetReport_Full
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Sequential count of this MTI report within the dwell.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D321(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The North-South position of the reported detection, expressed as degrees North (positive) or South (negative) of the Equator.
    # Example: /// Example: 20.23
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D322(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The East-West position of the reported detection, expressed as degrees East (positive) from the Prime Meridian.
    # Example: /// Example: 20.23
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D323(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # The North-South position of the reported detection, expressed as degrees North (positive) or South (negative) from the Dwell Area Center Latitude.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D324(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The East-West position of the reported detection, expressed as degrees East (positive, 0 to 180) or West (negative, 0 to -180) of the Prime Meridian from the Dwell Area Center Longitude.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D325(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Height of the reported detection, referenced to its position above the WGS 84 ellipsoid, in meters.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D326(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The component of velocity for the reported detection, expressed in centimeters per second, corrected for platform motion, along the line of sight between the sensor and the reported detection, where the positive direction is away from the sensor.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D327(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The target wrap velocity permits trackers to un-wrap velocities for targets with line-of-sight components large enough to exceed the first velocity period.  Expressed in centimeters/sec.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D328(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Estimated signal-to-noise ratio (SNR) of the target return, in decibels.
    # Example: /// Example: 17
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D329(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The classification of the target (i.e. vehicle, aircraft, â€¦).
    # Example: /// Example: vehicle
    # Constraints: Minimum length = 0, Maximum length = 32
    # MtiTargetReport_Full
    def D3210(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Estimated probability that the target classification field is correctly classified.
    # Example: /// Example: 90
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3211(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Standard deviation of the estimated slant range of the reported detection, in centimeters.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3212(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Standard deviation of the position estimate, in the cross-range direction, of the reported detection, in decimeters.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3213(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Standard deviation of the estimated geodetic height, in meters.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3214(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # Standard deviation of the measured line-of-sight velocity component, in centimeters per second.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3215(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The Truth Tag- Application is the Application Field truncated to 8 bits, from the Entity State Protocol Data Unit (PDU) used to generate the MTI Target.
    # Example: /// Example: 2
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3216(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # The Truth Tag - Entity is the Entity Field from the Entity State PDU used to generate the MTI Target.
    # Example: /// Example: 1234567890
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3217(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # Estimated radar cross section of the target return, in half-decibels.
    # Example: /// Example: 98
    # Constraints: No constraints specified.
    # MtiTargetReport_Full
    def D3218(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

def MtiTargetReport_FullStart(builder):
    builder.StartObject(18)

def Start(builder):
    MtiTargetReport_FullStart(builder)

def MtiTargetReport_FullAddD321(builder, d321):
    builder.PrependInt32Slot(0, d321, 0)

def AddD321(builder, d321):
    MtiTargetReport_FullAddD321(builder, d321)

def MtiTargetReport_FullAddD322(builder, d322):
    builder.PrependFloat64Slot(1, d322, 0.0)

def AddD322(builder, d322):
    MtiTargetReport_FullAddD322(builder, d322)

def MtiTargetReport_FullAddD323(builder, d323):
    builder.PrependFloat64Slot(2, d323, 0.0)

def AddD323(builder, d323):
    MtiTargetReport_FullAddD323(builder, d323)

def MtiTargetReport_FullAddD324(builder, d324):
    builder.PrependInt32Slot(3, d324, 0)

def AddD324(builder, d324):
    MtiTargetReport_FullAddD324(builder, d324)

def MtiTargetReport_FullAddD325(builder, d325):
    builder.PrependInt32Slot(4, d325, 0)

def AddD325(builder, d325):
    MtiTargetReport_FullAddD325(builder, d325)

def MtiTargetReport_FullAddD326(builder, d326):
    builder.PrependInt32Slot(5, d326, 0)

def AddD326(builder, d326):
    MtiTargetReport_FullAddD326(builder, d326)

def MtiTargetReport_FullAddD327(builder, d327):
    builder.PrependInt32Slot(6, d327, 0)

def AddD327(builder, d327):
    MtiTargetReport_FullAddD327(builder, d327)

def MtiTargetReport_FullAddD328(builder, d328):
    builder.PrependInt32Slot(7, d328, 0)

def AddD328(builder, d328):
    MtiTargetReport_FullAddD328(builder, d328)

def MtiTargetReport_FullAddD329(builder, d329):
    builder.PrependInt32Slot(8, d329, 0)

def AddD329(builder, d329):
    MtiTargetReport_FullAddD329(builder, d329)

def MtiTargetReport_FullAddD3210(builder, d3210):
    builder.PrependUOffsetTRelativeSlot(9, flatbuffers.number_types.UOffsetTFlags.py_type(d3210), 0)

def AddD3210(builder, d3210):
    MtiTargetReport_FullAddD3210(builder, d3210)

def MtiTargetReport_FullAddD3211(builder, d3211):
    builder.PrependInt32Slot(10, d3211, 0)

def AddD3211(builder, d3211):
    MtiTargetReport_FullAddD3211(builder, d3211)

def MtiTargetReport_FullAddD3212(builder, d3212):
    builder.PrependInt32Slot(11, d3212, 0)

def AddD3212(builder, d3212):
    MtiTargetReport_FullAddD3212(builder, d3212)

def MtiTargetReport_FullAddD3213(builder, d3213):
    builder.PrependInt32Slot(12, d3213, 0)

def AddD3213(builder, d3213):
    MtiTargetReport_FullAddD3213(builder, d3213)

def MtiTargetReport_FullAddD3214(builder, d3214):
    builder.PrependInt32Slot(13, d3214, 0)

def AddD3214(builder, d3214):
    MtiTargetReport_FullAddD3214(builder, d3214)

def MtiTargetReport_FullAddD3215(builder, d3215):
    builder.PrependInt32Slot(14, d3215, 0)

def AddD3215(builder, d3215):
    MtiTargetReport_FullAddD3215(builder, d3215)

def MtiTargetReport_FullAddD3216(builder, d3216):
    builder.PrependInt32Slot(15, d3216, 0)

def AddD3216(builder, d3216):
    MtiTargetReport_FullAddD3216(builder, d3216)

def MtiTargetReport_FullAddD3217(builder, d3217):
    builder.PrependInt64Slot(16, d3217, 0)

def AddD3217(builder, d3217):
    MtiTargetReport_FullAddD3217(builder, d3217)

def MtiTargetReport_FullAddD3218(builder, d3218):
    builder.PrependInt32Slot(17, d3218, 0)

def AddD3218(builder, d3218):
    MtiTargetReport_FullAddD3218(builder, d3218)

def MtiTargetReport_FullEnd(builder):
    return builder.EndObject()

def End(builder):
    return MtiTargetReport_FullEnd(builder)


class MtiTargetReport_FullT(object):

    # MtiTargetReport_FullT
    def __init__(self):
        self.d321 = 0  # type: int
        self.d322 = 0.0  # type: float
        self.d323 = 0.0  # type: float
        self.d324 = 0  # type: int
        self.d325 = 0  # type: int
        self.d326 = 0  # type: int
        self.d327 = 0  # type: int
        self.d328 = 0  # type: int
        self.d329 = 0  # type: int
        self.d3210 = None  # type: str
        self.d3211 = 0  # type: int
        self.d3212 = 0  # type: int
        self.d3213 = 0  # type: int
        self.d3214 = 0  # type: int
        self.d3215 = 0  # type: int
        self.d3216 = 0  # type: int
        self.d3217 = 0  # type: int
        self.d3218 = 0  # type: int

    @classmethod
    def InitFromBuf(cls, buf, pos):
        mtiTargetReportFull = MtiTargetReport_Full()
        mtiTargetReportFull.Init(buf, pos)
        return cls.InitFromObj(mtiTargetReportFull)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, mtiTargetReportFull):
        x = MtiTargetReport_FullT()
        x._UnPack(mtiTargetReportFull)
        return x

    # MtiTargetReport_FullT
    def _UnPack(self, mtiTargetReportFull):
        if mtiTargetReportFull is None:
            return
        self.d321 = mtiTargetReportFull.D321()
        self.d322 = mtiTargetReportFull.D322()
        self.d323 = mtiTargetReportFull.D323()
        self.d324 = mtiTargetReportFull.D324()
        self.d325 = mtiTargetReportFull.D325()
        self.d326 = mtiTargetReportFull.D326()
        self.d327 = mtiTargetReportFull.D327()
        self.d328 = mtiTargetReportFull.D328()
        self.d329 = mtiTargetReportFull.D329()
        self.d3210 = mtiTargetReportFull.D3210()
        self.d3211 = mtiTargetReportFull.D3211()
        self.d3212 = mtiTargetReportFull.D3212()
        self.d3213 = mtiTargetReportFull.D3213()
        self.d3214 = mtiTargetReportFull.D3214()
        self.d3215 = mtiTargetReportFull.D3215()
        self.d3216 = mtiTargetReportFull.D3216()
        self.d3217 = mtiTargetReportFull.D3217()
        self.d3218 = mtiTargetReportFull.D3218()

    # MtiTargetReport_FullT
    def Pack(self, builder):
        if self.d3210 is not None:
            d3210 = builder.CreateString(self.d3210)
        MtiTargetReport_FullStart(builder)
        MtiTargetReport_FullAddD321(builder, self.d321)
        MtiTargetReport_FullAddD322(builder, self.d322)
        MtiTargetReport_FullAddD323(builder, self.d323)
        MtiTargetReport_FullAddD324(builder, self.d324)
        MtiTargetReport_FullAddD325(builder, self.d325)
        MtiTargetReport_FullAddD326(builder, self.d326)
        MtiTargetReport_FullAddD327(builder, self.d327)
        MtiTargetReport_FullAddD328(builder, self.d328)
        MtiTargetReport_FullAddD329(builder, self.d329)
        if self.d3210 is not None:
            MtiTargetReport_FullAddD3210(builder, d3210)
        MtiTargetReport_FullAddD3211(builder, self.d3211)
        MtiTargetReport_FullAddD3212(builder, self.d3212)
        MtiTargetReport_FullAddD3213(builder, self.d3213)
        MtiTargetReport_FullAddD3214(builder, self.d3214)
        MtiTargetReport_FullAddD3215(builder, self.d3215)
        MtiTargetReport_FullAddD3216(builder, self.d3216)
        MtiTargetReport_FullAddD3217(builder, self.d3217)
        MtiTargetReport_FullAddD3218(builder, self.d3218)
        mtiTargetReportFull = MtiTargetReport_FullEnd(builder)
        return mtiTargetReportFull
