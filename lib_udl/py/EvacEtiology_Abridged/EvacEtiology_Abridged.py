# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Medical condition causation information.
class EvacEtiology_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = EvacEtiology_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsEvacEtiology_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def EvacEtiology_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x45\x56\x41\x43", size_prefixed=size_prefixed)

    # EvacEtiology_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # The cause or manner of causation of the medical condition.  Intended as, but not constrained to, K07.1 EtiologyType Enumeration (e.g. ASSAULT, BUILDING COLLAPSE, BURN CHEMICAL, BURN ELECTRICAL, BURN, BURN HOT LIQUID, BURN RADIATION, BURN THERMAL, etc.).
    # Example: /// Example: BURN
    # Constraints: Minimum length = 0, Maximum length = 32
    # EvacEtiology_Abridged
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The body part or location affected from the etiology.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).
    # Example: /// Example: ARM LEFT FRONT
    # Constraints: Minimum length = 0, Maximum length = 32
    # EvacEtiology_Abridged
    def BodyPart(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Datetime of the discovery of the etiology state in ISO 8601 UTC format.
    # Example: /// Example: 2021-10-16T16:00:00.123Z
    # Constraints: No constraints specified.
    # EvacEtiology_Abridged
    def Time(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Additional comments on the patient's etiology information.
    # Example: /// Example: Comments on the etiology info.
    # Constraints: Minimum length = 0, Maximum length = 1024
    # EvacEtiology_Abridged
    def Comments(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def EvacEtiology_AbridgedStart(builder):
    builder.StartObject(4)

def Start(builder):
    EvacEtiology_AbridgedStart(builder)

def EvacEtiology_AbridgedAddType(builder, type):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)

def AddType(builder, type):
    EvacEtiology_AbridgedAddType(builder, type)

def EvacEtiology_AbridgedAddBodyPart(builder, bodyPart):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(bodyPart), 0)

def AddBodyPart(builder, bodyPart):
    EvacEtiology_AbridgedAddBodyPart(builder, bodyPart)

def EvacEtiology_AbridgedAddTime(builder, time):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(time), 0)

def AddTime(builder, time):
    EvacEtiology_AbridgedAddTime(builder, time)

def EvacEtiology_AbridgedAddComments(builder, comments):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(comments), 0)

def AddComments(builder, comments):
    EvacEtiology_AbridgedAddComments(builder, comments)

def EvacEtiology_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return EvacEtiology_AbridgedEnd(builder)


class EvacEtiology_AbridgedT(object):

    # EvacEtiology_AbridgedT
    def __init__(self):
        self.type = None  # type: str
        self.bodyPart = None  # type: str
        self.time = None  # type: str
        self.comments = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        evacEtiologyAbridged = EvacEtiology_Abridged()
        evacEtiologyAbridged.Init(buf, pos)
        return cls.InitFromObj(evacEtiologyAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, evacEtiologyAbridged):
        x = EvacEtiology_AbridgedT()
        x._UnPack(evacEtiologyAbridged)
        return x

    # EvacEtiology_AbridgedT
    def _UnPack(self, evacEtiologyAbridged):
        if evacEtiologyAbridged is None:
            return
        self.type = evacEtiologyAbridged.Type()
        self.bodyPart = evacEtiologyAbridged.BodyPart()
        self.time = evacEtiologyAbridged.Time()
        self.comments = evacEtiologyAbridged.Comments()

    # EvacEtiology_AbridgedT
    def Pack(self, builder):
        if self.type is not None:
            type = builder.CreateString(self.type)
        if self.bodyPart is not None:
            bodyPart = builder.CreateString(self.bodyPart)
        if self.time is not None:
            time = builder.CreateString(self.time)
        if self.comments is not None:
            comments = builder.CreateString(self.comments)
        EvacEtiology_AbridgedStart(builder)
        if self.type is not None:
            EvacEtiology_AbridgedAddType(builder, type)
        if self.bodyPart is not None:
            EvacEtiology_AbridgedAddBodyPart(builder, bodyPart)
        if self.time is not None:
            EvacEtiology_AbridgedAddTime(builder, time)
        if self.comments is not None:
            EvacEtiology_AbridgedAddComments(builder, comments)
        evacEtiologyAbridged = EvacEtiology_AbridgedEnd(builder)
        return evacEtiologyAbridged
