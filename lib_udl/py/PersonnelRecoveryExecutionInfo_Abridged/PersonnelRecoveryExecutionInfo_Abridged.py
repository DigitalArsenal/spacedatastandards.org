# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# /// Information pertaining to the details of executing the recovery.
class PersonnelRecoveryExecutionInfo_Abridged(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PersonnelRecoveryExecutionInfo_Abridged()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPersonnelRecoveryExecutionInfo_Abridged(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    @classmethod
    def PersonnelRecoveryExecutionInfo_AbridgedBufferHasIdentifier(cls, buf, offset, size_prefixed=False):
        return flatbuffers.util.BufferHasIdentifier(buf, offset, b"\x50\x45\x52\x53", size_prefixed=size_prefixed)

    # PersonnelRecoveryExecutionInfo_Abridged
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the initial location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
    # Example: /// Example: [103.23, 30.445]
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def InitialPoint(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # PersonnelRecoveryExecutionInfo_Abridged
    def InitialPointLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # PersonnelRecoveryExecutionInfo_Abridged
    def InitialPointIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        return o == 0

    # The heading, in degrees clockwise from North, of entering the recovery zone.
    # Example: /// Example: 35.66
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def Ingress(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # Description of the objective strategy plan.
    # Example: /// Example: Description of strategy plan.
    # Constraints: Minimum length = 0, Maximum length = 1024
    # PersonnelRecoveryExecutionInfo_Abridged
    def ObjStrategy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the egress location. This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).
    # Example: /// Example: [107.23, 30.455]
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def EgressPoint(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.String(a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return ""

    # PersonnelRecoveryExecutionInfo_Abridged
    def EgressPointLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # PersonnelRecoveryExecutionInfo_Abridged
    def EgressPointIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

    # The heading, in degrees, of leaving the recovery zone.
    # Example: /// Example: 66.53
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def Egress(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # No description provided.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def RecoveryVehicle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # No description provided.
    # Example: /// Example: No example provided.
    # Constraints: No constraints specified.
    # PersonnelRecoveryExecutionInfo_Abridged
    def EscortVehicle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def PersonnelRecoveryExecutionInfo_AbridgedStart(builder):
    builder.StartObject(7)

def Start(builder):
    PersonnelRecoveryExecutionInfo_AbridgedStart(builder)

def PersonnelRecoveryExecutionInfo_AbridgedAddInitialPoint(builder, initialPoint):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(initialPoint), 0)

def AddInitialPoint(builder, initialPoint):
    PersonnelRecoveryExecutionInfo_AbridgedAddInitialPoint(builder, initialPoint)

def PersonnelRecoveryExecutionInfo_AbridgedStartInitialPointVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartInitialPointVector(builder, numElems):
    return PersonnelRecoveryExecutionInfo_AbridgedStartInitialPointVector(builder, numElems)

def PersonnelRecoveryExecutionInfo_AbridgedAddIngress(builder, ingress):
    builder.PrependFloat64Slot(1, ingress, 0.0)

def AddIngress(builder, ingress):
    PersonnelRecoveryExecutionInfo_AbridgedAddIngress(builder, ingress)

def PersonnelRecoveryExecutionInfo_AbridgedAddObjStrategy(builder, objStrategy):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(objStrategy), 0)

def AddObjStrategy(builder, objStrategy):
    PersonnelRecoveryExecutionInfo_AbridgedAddObjStrategy(builder, objStrategy)

def PersonnelRecoveryExecutionInfo_AbridgedAddEgressPoint(builder, egressPoint):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(egressPoint), 0)

def AddEgressPoint(builder, egressPoint):
    PersonnelRecoveryExecutionInfo_AbridgedAddEgressPoint(builder, egressPoint)

def PersonnelRecoveryExecutionInfo_AbridgedStartEgressPointVector(builder, numElems):
    return builder.StartVector(4, numElems, 4)

def StartEgressPointVector(builder, numElems):
    return PersonnelRecoveryExecutionInfo_AbridgedStartEgressPointVector(builder, numElems)

def PersonnelRecoveryExecutionInfo_AbridgedAddEgress(builder, egress):
    builder.PrependFloat64Slot(4, egress, 0.0)

def AddEgress(builder, egress):
    PersonnelRecoveryExecutionInfo_AbridgedAddEgress(builder, egress)

def PersonnelRecoveryExecutionInfo_AbridgedAddRecoveryVehicle(builder, recoveryVehicle):
    builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(recoveryVehicle), 0)

def AddRecoveryVehicle(builder, recoveryVehicle):
    PersonnelRecoveryExecutionInfo_AbridgedAddRecoveryVehicle(builder, recoveryVehicle)

def PersonnelRecoveryExecutionInfo_AbridgedAddEscortVehicle(builder, escortVehicle):
    builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(escortVehicle), 0)

def AddEscortVehicle(builder, escortVehicle):
    PersonnelRecoveryExecutionInfo_AbridgedAddEscortVehicle(builder, escortVehicle)

def PersonnelRecoveryExecutionInfo_AbridgedEnd(builder):
    return builder.EndObject()

def End(builder):
    return PersonnelRecoveryExecutionInfo_AbridgedEnd(builder)

try:
    from typing import List
except:
    pass

class PersonnelRecoveryExecutionInfo_AbridgedT(object):

    # PersonnelRecoveryExecutionInfo_AbridgedT
    def __init__(self):
        self.initialPoint = None  # type: List[str]
        self.ingress = 0.0  # type: float
        self.objStrategy = None  # type: str
        self.egressPoint = None  # type: List[str]
        self.egress = 0.0  # type: float
        self.recoveryVehicle = None  # type: str
        self.escortVehicle = None  # type: str

    @classmethod
    def InitFromBuf(cls, buf, pos):
        personnelRecoveryExecutionInfoAbridged = PersonnelRecoveryExecutionInfo_Abridged()
        personnelRecoveryExecutionInfoAbridged.Init(buf, pos)
        return cls.InitFromObj(personnelRecoveryExecutionInfoAbridged)

    @classmethod
    def InitFromPackedBuf(cls, buf, pos=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, pos)
        return cls.InitFromBuf(buf, pos+n)

    @classmethod
    def InitFromObj(cls, personnelRecoveryExecutionInfoAbridged):
        x = PersonnelRecoveryExecutionInfo_AbridgedT()
        x._UnPack(personnelRecoveryExecutionInfoAbridged)
        return x

    # PersonnelRecoveryExecutionInfo_AbridgedT
    def _UnPack(self, personnelRecoveryExecutionInfoAbridged):
        if personnelRecoveryExecutionInfoAbridged is None:
            return
        if not personnelRecoveryExecutionInfoAbridged.InitialPointIsNone():
            self.initialPoint = []
            for i in range(personnelRecoveryExecutionInfoAbridged.InitialPointLength()):
                self.initialPoint.append(personnelRecoveryExecutionInfoAbridged.InitialPoint(i))
        self.ingress = personnelRecoveryExecutionInfoAbridged.Ingress()
        self.objStrategy = personnelRecoveryExecutionInfoAbridged.ObjStrategy()
        if not personnelRecoveryExecutionInfoAbridged.EgressPointIsNone():
            self.egressPoint = []
            for i in range(personnelRecoveryExecutionInfoAbridged.EgressPointLength()):
                self.egressPoint.append(personnelRecoveryExecutionInfoAbridged.EgressPoint(i))
        self.egress = personnelRecoveryExecutionInfoAbridged.Egress()
        self.recoveryVehicle = personnelRecoveryExecutionInfoAbridged.RecoveryVehicle()
        self.escortVehicle = personnelRecoveryExecutionInfoAbridged.EscortVehicle()

    # PersonnelRecoveryExecutionInfo_AbridgedT
    def Pack(self, builder):
        if self.initialPoint is not None:
            initialPointlist = []
            for i in range(len(self.initialPoint)):
                initialPointlist.append(builder.CreateString(self.initialPoint[i]))
            PersonnelRecoveryExecutionInfo_AbridgedStartInitialPointVector(builder, len(self.initialPoint))
            for i in reversed(range(len(self.initialPoint))):
                builder.PrependUOffsetTRelative(initialPointlist[i])
            initialPoint = builder.EndVector()
        if self.objStrategy is not None:
            objStrategy = builder.CreateString(self.objStrategy)
        if self.egressPoint is not None:
            egressPointlist = []
            for i in range(len(self.egressPoint)):
                egressPointlist.append(builder.CreateString(self.egressPoint[i]))
            PersonnelRecoveryExecutionInfo_AbridgedStartEgressPointVector(builder, len(self.egressPoint))
            for i in reversed(range(len(self.egressPoint))):
                builder.PrependUOffsetTRelative(egressPointlist[i])
            egressPoint = builder.EndVector()
        if self.recoveryVehicle is not None:
            recoveryVehicle = builder.CreateString(self.recoveryVehicle)
        if self.escortVehicle is not None:
            escortVehicle = builder.CreateString(self.escortVehicle)
        PersonnelRecoveryExecutionInfo_AbridgedStart(builder)
        if self.initialPoint is not None:
            PersonnelRecoveryExecutionInfo_AbridgedAddInitialPoint(builder, initialPoint)
        PersonnelRecoveryExecutionInfo_AbridgedAddIngress(builder, self.ingress)
        if self.objStrategy is not None:
            PersonnelRecoveryExecutionInfo_AbridgedAddObjStrategy(builder, objStrategy)
        if self.egressPoint is not None:
            PersonnelRecoveryExecutionInfo_AbridgedAddEgressPoint(builder, egressPoint)
        PersonnelRecoveryExecutionInfo_AbridgedAddEgress(builder, self.egress)
        if self.recoveryVehicle is not None:
            PersonnelRecoveryExecutionInfo_AbridgedAddRecoveryVehicle(builder, recoveryVehicle)
        if self.escortVehicle is not None:
            PersonnelRecoveryExecutionInfo_AbridgedAddEscortVehicle(builder, escortVehicle)
        personnelRecoveryExecutionInfoAbridged = PersonnelRecoveryExecutionInfo_AbridgedEnd(builder)
        return personnelRecoveryExecutionInfoAbridged
