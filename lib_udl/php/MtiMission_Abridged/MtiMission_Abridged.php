<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Information on the mission and flight plans, the type and configuration of the platform, and the reference time.
class MtiMission_Abridged extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return MtiMission_Abridged
     */
    public static function getRootAsMtiMission_Abridged(ByteBuffer $bb)
    {
        $obj = new MtiMission_Abridged();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function MtiMission_AbridgedIdentifier()
    {
        return "MTIM";
    }

    public static function MtiMission_AbridgedBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::MtiMission_AbridgedIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return MtiMission_Abridged
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// The mission plan id.
    /// Example: /// Example: M1-ID
    /// Constraints: Minimum length = 0, Maximum length = 64
    public function getM1()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Unique identification of the flight plan.
    /// Example: /// Example: M2-ID
    /// Constraints: Minimum length = 0, Maximum length = 64
    public function getM2()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Platform type that originated the data.
    /// Example: /// Example: PLATFORM
    /// Constraints: Minimum length = 0, Maximum length = 64
    public function getM3()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Identification of the platform variant, modifications, etc.
    /// Example: /// Example: IDENT
    /// Constraints: Minimum length = 0, Maximum length = 16
    public function getM4()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Mission origination date.
    /// Example: /// Example: 2018-01-01
    /// Constraints: No constraints specified.
    public function getMsnRefTs()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startMtiMission_Abridged(FlatBufferBuilder $builder)
    {
        $builder->StartObject(5);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return MtiMission_Abridged
     */
    public static function createMtiMission_Abridged(FlatBufferBuilder $builder, $m1, $m2, $m3, $m4, $msnRefTs)
    {
        $builder->startObject(5);
        self::addM1($builder, $m1);
        self::addM2($builder, $m2);
        self::addM3($builder, $m3);
        self::addM4($builder, $m4);
        self::addMsnRefTs($builder, $msnRefTs);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addM1(FlatBufferBuilder $builder, $m1)
    {
        $builder->addOffsetX(0, $m1, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addM2(FlatBufferBuilder $builder, $m2)
    {
        $builder->addOffsetX(1, $m2, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addM3(FlatBufferBuilder $builder, $m3)
    {
        $builder->addOffsetX(2, $m3, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addM4(FlatBufferBuilder $builder, $m4)
    {
        $builder->addOffsetX(3, $m4, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addMsnRefTs(FlatBufferBuilder $builder, $msnRefTs)
    {
        $builder->addOffsetX(4, $msnRefTs, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endMtiMission_Abridged(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishMtiMission_AbridgedBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "MTIM");
    }
}
