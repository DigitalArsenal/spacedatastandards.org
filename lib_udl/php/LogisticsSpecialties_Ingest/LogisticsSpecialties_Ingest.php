<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// The specialties required to implement this support item.
class LogisticsSpecialties_Ingest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return LogisticsSpecialties_Ingest
     */
    public static function getRootAsLogisticsSpecialties_Ingest(ByteBuffer $bb)
    {
        $obj = new LogisticsSpecialties_Ingest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function LogisticsSpecialties_IngestIdentifier()
    {
        return "LOGI";
    }

    public static function LogisticsSpecialties_IngestBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::LogisticsSpecialties_IngestIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return LogisticsSpecialties_Ingest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Indicates where the repairs will be performed, or which shop specialty has been assigned responsibility for correcting the discrepancy. Shop specialties are normally listed in abbreviated format.
    /// Example: /// Example: ELEN
    /// Constraints: Minimum length = 0, Maximum length = 4
    public function getSpecialty()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Skill level of the mission response team member.
    /// Example: /// Example: 3
    /// Constraints: No constraints specified.
    /**
     * @return int
     */
    public function getSkillLevel()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /// The first name of the specialist.
    /// Example: /// Example: JOHN
    /// Constraints: Minimum length = 0, Maximum length = 20
    public function getFirstName()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The last name of the specialist.
    /// Example: /// Example: SMITH
    /// Constraints: Minimum length = 0, Maximum length = 30
    public function getLastName()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Military service rank designation.
    /// Example: /// Example: MAJ
    /// Constraints: Minimum length = 0, Maximum length = 6
    public function getRankCode()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The last four digits of the specialist's social security number.
    /// Example: /// Example: 9999
    /// Constraints: Minimum length = 0, Maximum length = 4
    public function getLast4Ssn()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Type code that determines role of the mission response team member. TC - Team Chief, TM - Team Member.
    /// Example: /// Example: TC
    /// Constraints: Minimum length = 0, Maximum length = 2
    public function getRoleTypeCode()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startLogisticsSpecialties_Ingest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(7);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return LogisticsSpecialties_Ingest
     */
    public static function createLogisticsSpecialties_Ingest(FlatBufferBuilder $builder, $specialty, $skillLevel, $firstName, $lastName, $rankCode, $last4Ssn, $roleTypeCode)
    {
        $builder->startObject(7);
        self::addSpecialty($builder, $specialty);
        self::addSkillLevel($builder, $skillLevel);
        self::addFirstName($builder, $firstName);
        self::addLastName($builder, $lastName);
        self::addRankCode($builder, $rankCode);
        self::addLast4Ssn($builder, $last4Ssn);
        self::addRoleTypeCode($builder, $roleTypeCode);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addSpecialty(FlatBufferBuilder $builder, $specialty)
    {
        $builder->addOffsetX(0, $specialty, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addSkillLevel(FlatBufferBuilder $builder, $skillLevel)
    {
        $builder->addIntX(1, $skillLevel, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addFirstName(FlatBufferBuilder $builder, $firstName)
    {
        $builder->addOffsetX(2, $firstName, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLastName(FlatBufferBuilder $builder, $lastName)
    {
        $builder->addOffsetX(3, $lastName, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addRankCode(FlatBufferBuilder $builder, $rankCode)
    {
        $builder->addOffsetX(4, $rankCode, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLast4Ssn(FlatBufferBuilder $builder, $last4Ssn)
    {
        $builder->addOffsetX(5, $last4Ssn, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addRoleTypeCode(FlatBufferBuilder $builder, $roleTypeCode)
    {
        $builder->addOffsetX(6, $roleTypeCode, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endLogisticsSpecialties_Ingest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishLogisticsSpecialties_IngestBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "LOGI");
    }
}
