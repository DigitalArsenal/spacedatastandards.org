<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Information about the Point of Contact (POC) for this ISR Collection.
class ISRCollectionPOC_Full extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return ISRCollectionPOC_Full
     */
    public static function getRootAsISRCollectionPOC_Full(ByteBuffer $bb)
    {
        $obj = new ISRCollectionPOC_Full();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function ISRCollectionPOC_FullIdentifier()
    {
        return "ISRC";
    }

    public static function ISRCollectionPOC_FullBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::ISRCollectionPOC_FullIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return ISRCollectionPOC_Full
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Unique identifier of the collection requirement POC.
    /// Example: /// Example: ISRCOLLECTIONPOC-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    public function getId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Name of the POC.
    /// Example: /// Example: NAME
    /// Constraints: Minimum length = 0, Maximum length = 128
    public function getName()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Callsign of the POC.
    /// Example: /// Example: CALLSIGN
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getCallsign()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Unit the POC belongs to.
    /// Example: /// Example: UNIT
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getUnit()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Email address of the POC.
    /// Example: /// Example: EMAIL
    /// Constraints: Minimum length = 0, Maximum length = 128
    public function getEmail()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Phone number of the POC.
    /// Example: /// Example: PHONE
    /// Constraints: Minimum length = 0, Maximum length = 45
    public function getPhone()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Radio Frequency the POC is on.
    /// Example: /// Example: 123.23
    /// Constraints: No constraints specified.
    /**
     * @return double
     */
    public function getRadioFrequency()
    {
        $o = $this->__offset(16);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Chat system the POC is accessing.
    /// Example: /// Example: CHAT
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getChatSystem()
    {
        $o = $this->__offset(18);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Chat name of the POC.
    /// Example: /// Example: CHAT_NAME
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getChatName()
    {
        $o = $this->__offset(20);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Amplifying notes about the POC.
    /// Example: /// Example: NOTES
    /// Constraints: Minimum length = 0, Maximum length = 256
    public function getNotes()
    {
        $o = $this->__offset(22);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startISRCollectionPOC_Full(FlatBufferBuilder $builder)
    {
        $builder->StartObject(10);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return ISRCollectionPOC_Full
     */
    public static function createISRCollectionPOC_Full(FlatBufferBuilder $builder, $id, $name, $callsign, $unit, $email, $phone, $radioFrequency, $chatSystem, $chatName, $notes)
    {
        $builder->startObject(10);
        self::addId($builder, $id);
        self::addName($builder, $name);
        self::addCallsign($builder, $callsign);
        self::addUnit($builder, $unit);
        self::addEmail($builder, $email);
        self::addPhone($builder, $phone);
        self::addRadioFrequency($builder, $radioFrequency);
        self::addChatSystem($builder, $chatSystem);
        self::addChatName($builder, $chatName);
        self::addNotes($builder, $notes);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addOffsetX(0, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addName(FlatBufferBuilder $builder, $name)
    {
        $builder->addOffsetX(1, $name, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addCallsign(FlatBufferBuilder $builder, $callsign)
    {
        $builder->addOffsetX(2, $callsign, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUnit(FlatBufferBuilder $builder, $unit)
    {
        $builder->addOffsetX(3, $unit, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addEmail(FlatBufferBuilder $builder, $email)
    {
        $builder->addOffsetX(4, $email, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addPhone(FlatBufferBuilder $builder, $phone)
    {
        $builder->addOffsetX(5, $phone, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addRadioFrequency(FlatBufferBuilder $builder, $radioFrequency)
    {
        $builder->addDoubleX(6, $radioFrequency, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addChatSystem(FlatBufferBuilder $builder, $chatSystem)
    {
        $builder->addOffsetX(7, $chatSystem, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addChatName(FlatBufferBuilder $builder, $chatName)
    {
        $builder->addOffsetX(8, $chatName, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addNotes(FlatBufferBuilder $builder, $notes)
    {
        $builder->addOffsetX(9, $notes, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endISRCollectionPOC_Full(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishISRCollectionPOC_FullBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "ISRC");
    }
}
