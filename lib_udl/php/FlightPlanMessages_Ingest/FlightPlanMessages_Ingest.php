<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Collection of messages associated with this flight plan indicating the severity, the point where the message was generated, the path (Primary, Alternate, etc.), and the text of the message.
class FlightPlanMessages_Ingest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return FlightPlanMessages_Ingest
     */
    public static function getRootAsFlightPlanMessages_Ingest(ByteBuffer $bb)
    {
        $obj = new FlightPlanMessages_Ingest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function FlightPlanMessages_IngestIdentifier()
    {
        return "FLIG";
    }

    public static function FlightPlanMessages_IngestBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::FlightPlanMessages_IngestIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return FlightPlanMessages_Ingest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// The severity of the message.
    /// Example: /// Example: SEVERE
    /// Constraints: Minimum length = 0, Maximum length = 16
    public function getSeverity()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The waypoint number for which the message was generated, or enter "PLAN" for a message impacting the entire route.
    /// Example: /// Example: 20
    /// Constraints: Minimum length = 0, Maximum length = 8
    public function getWpNum()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The flight path that generated the message (PRIMARY, ALTERNATE, etc.).
    /// Example: /// Example: PRIMARY
    /// Constraints: Minimum length = 0, Maximum length = 16
    public function getRoutePath()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The text of the message.
    /// Example: /// Example: Message text
    /// Constraints: Minimum length = 0, Maximum length = 256
    public function getMsgText()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startFlightPlanMessages_Ingest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return FlightPlanMessages_Ingest
     */
    public static function createFlightPlanMessages_Ingest(FlatBufferBuilder $builder, $severity, $wpNum, $routePath, $msgText)
    {
        $builder->startObject(4);
        self::addSeverity($builder, $severity);
        self::addWpNum($builder, $wpNum);
        self::addRoutePath($builder, $routePath);
        self::addMsgText($builder, $msgText);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addSeverity(FlatBufferBuilder $builder, $severity)
    {
        $builder->addOffsetX(0, $severity, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addWpNum(FlatBufferBuilder $builder, $wpNum)
    {
        $builder->addOffsetX(1, $wpNum, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addRoutePath(FlatBufferBuilder $builder, $routePath)
    {
        $builder->addOffsetX(2, $routePath, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addMsgText(FlatBufferBuilder $builder, $msgText)
    {
        $builder->addOffsetX(3, $msgText, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endFlightPlanMessages_Ingest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishFlightPlanMessages_IngestBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "FLIG");
    }
}
