<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Collection of remarks associated with this Air Event.
class AirEventRemarks_Abridged extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return AirEventRemarks_Abridged
     */
    public static function getRootAsAirEventRemarks_Abridged(ByteBuffer $bb)
    {
        $obj = new AirEventRemarks_Abridged();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function AirEventRemarks_AbridgedIdentifier()
    {
        return "AIRE";
    }

    public static function AirEventRemarks_AbridgedBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::AirEventRemarks_AbridgedIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return AirEventRemarks_Abridged
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Optional remark ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.
    /// Example: /// Example: 23ea2877a6f74d7d8f309567a5896441
    /// Constraints: Minimum length = 0, Maximum length = 36
    public function getExternalRemarkId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Text of the remark.
    /// Example: /// Example: Example air event remarks.
    /// Constraints: Minimum length = 0, Maximum length = 1024
    public function getText()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Date the remark was published, in ISO 8601 UTC format, with millisecond precision.
    /// Example: /// Example: 2024-01-01T01:01:01.123Z
    /// Constraints: No constraints specified.
    public function getDate()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// User who published the remark.
    /// Example: /// Example: John Doe
    /// Constraints: Minimum length = 0, Maximum length = 20
    public function getUser()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startAirEventRemarks_Abridged(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return AirEventRemarks_Abridged
     */
    public static function createAirEventRemarks_Abridged(FlatBufferBuilder $builder, $externalRemarkId, $text, $date, $user)
    {
        $builder->startObject(4);
        self::addExternalRemarkId($builder, $externalRemarkId);
        self::addText($builder, $text);
        self::addDate($builder, $date);
        self::addUser($builder, $user);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addExternalRemarkId(FlatBufferBuilder $builder, $externalRemarkId)
    {
        $builder->addOffsetX(0, $externalRemarkId, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addText(FlatBufferBuilder $builder, $text)
    {
        $builder->addOffsetX(1, $text, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addDate(FlatBufferBuilder $builder, $date)
    {
        $builder->addOffsetX(2, $date, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUser(FlatBufferBuilder $builder, $user)
    {
        $builder->addOffsetX(3, $user, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endAirEventRemarks_Abridged(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishAirEventRemarks_AbridgedBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "AIRE");
    }
}
