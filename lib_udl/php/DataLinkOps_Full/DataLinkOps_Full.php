<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Collection of information describing the establishment and detailed operation of tactical data links. There can be 0 to many DataLinkOps collections within the datalink service.
class DataLinkOps_Full extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return DataLinkOps_Full
     */
    public static function getRootAsDataLinkOps_Full(ByteBuffer $bb)
    {
        $obj = new DataLinkOps_Full();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function DataLinkOps_FullIdentifier()
    {
        return "DATA";
    }

    public static function DataLinkOps_FullBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::DataLinkOps_FullIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return DataLinkOps_Full
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Name of the data link.
    /// Example: /// Example: Link-16
    /// Constraints: Minimum length = 0, Maximum length = 24
    public function getLinkName()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The start of the effective time period of the data link, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2024-01-07T13:55:43.123Z
    /// Constraints: No constraints specified.
    public function getLinkStartTime()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The end of the effective time period of the data link, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2024-01-08T13:55:43.123Z
    /// Constraints: No constraints specified.
    public function getLinkStopTime()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// A qualifier for the end of the effective time period of this data link, such as AFTER, ASOF, NLT, etc. Used with field linkStopTimeMod to indicate a relative time.
    /// Example: /// Example: AFTER
    /// Constraints: Minimum length = 0, Maximum length = 8
    public function getLinkStopTimeMod()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Detailed characteristics of the data link.
    /// Example: /// Example: Link details
    /// Constraints: Minimum length = 0, Maximum length = 3000
    public function getLinkDetails()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startDataLinkOps_Full(FlatBufferBuilder $builder)
    {
        $builder->StartObject(5);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return DataLinkOps_Full
     */
    public static function createDataLinkOps_Full(FlatBufferBuilder $builder, $linkName, $linkStartTime, $linkStopTime, $linkStopTimeMod, $linkDetails)
    {
        $builder->startObject(5);
        self::addLinkName($builder, $linkName);
        self::addLinkStartTime($builder, $linkStartTime);
        self::addLinkStopTime($builder, $linkStopTime);
        self::addLinkStopTimeMod($builder, $linkStopTimeMod);
        self::addLinkDetails($builder, $linkDetails);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLinkName(FlatBufferBuilder $builder, $linkName)
    {
        $builder->addOffsetX(0, $linkName, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLinkStartTime(FlatBufferBuilder $builder, $linkStartTime)
    {
        $builder->addOffsetX(1, $linkStartTime, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLinkStopTime(FlatBufferBuilder $builder, $linkStopTime)
    {
        $builder->addOffsetX(2, $linkStopTime, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLinkStopTimeMod(FlatBufferBuilder $builder, $linkStopTimeMod)
    {
        $builder->addOffsetX(3, $linkStopTimeMod, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLinkDetails(FlatBufferBuilder $builder, $linkDetails)
    {
        $builder->addOffsetX(4, $linkDetails, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endDataLinkOps_Full(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishDataLinkOps_FullBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "DATA");
    }
}
