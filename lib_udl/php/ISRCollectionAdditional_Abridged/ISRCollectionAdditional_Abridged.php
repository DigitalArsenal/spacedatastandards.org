<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Additional start and stop for the collection.
class ISRCollectionAdditional_Abridged extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return ISRCollectionAdditional_Abridged
     */
    public static function getRootAsISRCollectionAdditional_Abridged(ByteBuffer $bb)
    {
        $obj = new ISRCollectionAdditional_Abridged();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function ISRCollectionAdditional_AbridgedIdentifier()
    {
        return "ISRC";
    }

    public static function ISRCollectionAdditional_AbridgedBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::ISRCollectionAdditional_AbridgedIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return ISRCollectionAdditional_Abridged
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Unique Identifier of additional collection period.
    /// Example: /// Example: ISRCOLLECTIONADDITIONAL
    /// Constraints: Minimum length = 0, Maximum length = 36
    public function getId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Start time of collection, in ISO 8601 UTC format.
    /// Example: /// Example: 2021-01-19T01:01:15.001Z
    /// Constraints: No constraints specified.
    public function getStart()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Stop time of collection, in ISO 8601 UTC format.
    /// Example: /// Example: 2021-01-19T01:01:15.001Z
    /// Constraints: No constraints specified.
    public function getStop()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startISRCollectionAdditional_Abridged(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return ISRCollectionAdditional_Abridged
     */
    public static function createISRCollectionAdditional_Abridged(FlatBufferBuilder $builder, $id, $start, $stop)
    {
        $builder->startObject(3);
        self::addId($builder, $id);
        self::addStart($builder, $start);
        self::addStop($builder, $stop);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addOffsetX(0, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addStart(FlatBufferBuilder $builder, $start)
    {
        $builder->addOffsetX(1, $start, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addStop(FlatBufferBuilder $builder, $stop)
    {
        $builder->addOffsetX(2, $stop, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endISRCollectionAdditional_Abridged(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishISRCollectionAdditional_AbridgedBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "ISRC");
    }
}
