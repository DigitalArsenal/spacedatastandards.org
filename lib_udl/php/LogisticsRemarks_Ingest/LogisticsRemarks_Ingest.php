<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Remarks associated with this LogisticsSupport record.
class LogisticsRemarks_Ingest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return LogisticsRemarks_Ingest
     */
    public static function getRootAsLogisticsRemarks_Ingest(ByteBuffer $bb)
    {
        $obj = new LogisticsRemarks_Ingest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function LogisticsRemarks_IngestIdentifier()
    {
        return "LOGI";
    }

    public static function LogisticsRemarks_IngestBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::LogisticsRemarks_IngestIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return LogisticsRemarks_Ingest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// User who published the remark.
    /// Example: /// Example: JSMITH
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getUsername()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Text of the remark.
    /// Example: /// Example: EXAMPLE REMARK
    /// Constraints: Minimum length = 0, Maximum length = 4000
    public function getRemark()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Date the remark was published or updated, in ISO 8601 UTC format, with millisecond precision.
    /// Example: /// Example: 2023-07-17T10:30:00.123Z
    /// Constraints: No constraints specified.
    public function getLastChanged()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startLogisticsRemarks_Ingest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return LogisticsRemarks_Ingest
     */
    public static function createLogisticsRemarks_Ingest(FlatBufferBuilder $builder, $username, $remark, $lastChanged)
    {
        $builder->startObject(3);
        self::addUsername($builder, $username);
        self::addRemark($builder, $remark);
        self::addLastChanged($builder, $lastChanged);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addUsername(FlatBufferBuilder $builder, $username)
    {
        $builder->addOffsetX(0, $username, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addRemark(FlatBufferBuilder $builder, $remark)
    {
        $builder->addOffsetX(1, $remark, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLastChanged(FlatBufferBuilder $builder, $lastChanged)
    {
        $builder->addOffsetX(2, $lastChanged, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endLogisticsRemarks_Ingest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishLogisticsRemarks_IngestBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "LOGI");
    }
}
