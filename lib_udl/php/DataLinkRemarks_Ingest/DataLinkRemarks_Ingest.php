<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Collection of remarks associated with this data link message.
class DataLinkRemarks_Ingest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return DataLinkRemarks_Ingest
     */
    public static function getRootAsDataLinkRemarks_Ingest(ByteBuffer $bb)
    {
        $obj = new DataLinkRemarks_Ingest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function DataLinkRemarks_IngestIdentifier()
    {
        return "DATA";
    }

    public static function DataLinkRemarks_IngestBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::DataLinkRemarks_IngestIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return DataLinkRemarks_Ingest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Indicates the subject matter of the remark.
    /// Example: /// Example: CONTINGENCY PROCEDURES
    /// Constraints: Minimum length = 0, Maximum length = 64
    public function getType()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Text of the remark.
    /// Example: /// Example: Example data link remarks
    /// Constraints: Minimum length = 0, Maximum length = 128
    public function getText()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startDataLinkRemarks_Ingest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(2);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return DataLinkRemarks_Ingest
     */
    public static function createDataLinkRemarks_Ingest(FlatBufferBuilder $builder, $type, $text)
    {
        $builder->startObject(2);
        self::addType($builder, $type);
        self::addText($builder, $text);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addType(FlatBufferBuilder $builder, $type)
    {
        $builder->addOffsetX(0, $type, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addText(FlatBufferBuilder $builder, $text)
    {
        $builder->addOffsetX(1, $text, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endDataLinkRemarks_Ingest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishDataLinkRemarks_IngestBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "DATA");
    }
}
