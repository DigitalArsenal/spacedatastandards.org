<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Describes the E, F1, and F2 layers as parabolic-shape segments.
class IonoObservationDensityProfileParabolicItem_Full extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return IonoObservationDensityProfileParabolicItem_Full
     */
    public static function getRootAsIonoObservationDensityProfileParabolicItem_Full(ByteBuffer $bb)
    {
        $obj = new IonoObservationDensityProfileParabolicItem_Full();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function IonoObservationDensityProfileParabolicItem_FullIdentifier()
    {
        return "IONO";
    }

    public static function IonoObservationDensityProfileParabolicItem_FullBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::IonoObservationDensityProfileParabolicItem_FullIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return IonoObservationDensityProfileParabolicItem_Full
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Ionospheric plasma layer (E, F1, or F2).
    /// Example: /// Example: E
    /// Constraints: No constraints specified.
    public function getLayer()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Plasma frequency at the layer peak, in MHz.
    /// Example: /// Example: 3.621
    /// Constraints: No constraints specified.
    /**
     * @return double
     */
    public function getF()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Height of the layer peak, in kilometers.
    /// Example: /// Example: 110.2
    /// Constraints: No constraints specified.
    /**
     * @return double
     */
    public function getZ()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /// Half-thickness of the layer, in kilometers.
    /// Example: /// Example: 11.1
    /// Constraints: No constraints specified.
    /**
     * @return double
     */
    public function getY()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->bb->getDouble($o + $this->bb_pos) : 0.0;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startIonoObservationDensityProfileParabolicItem_Full(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return IonoObservationDensityProfileParabolicItem_Full
     */
    public static function createIonoObservationDensityProfileParabolicItem_Full(FlatBufferBuilder $builder, $layer, $f, $z, $y)
    {
        $builder->startObject(4);
        self::addLayer($builder, $layer);
        self::addF($builder, $f);
        self::addZ($builder, $z);
        self::addY($builder, $y);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addLayer(FlatBufferBuilder $builder, $layer)
    {
        $builder->addOffsetX(0, $layer, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addF(FlatBufferBuilder $builder, $f)
    {
        $builder->addDoubleX(1, $f, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addZ(FlatBufferBuilder $builder, $z)
    {
        $builder->addDoubleX(2, $z, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param double
     * @return void
     */
    public static function addY(FlatBufferBuilder $builder, $y)
    {
        $builder->addDoubleX(3, $y, 0.0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endIonoObservationDensityProfileParabolicItem_Full(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishIonoObservationDensityProfileParabolicItem_FullBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "IONO");
    }
}
