<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// What it is that is trying to be exploited.
class ISRCollectionExploitationRequirement_Full extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return ISRCollectionExploitationRequirement_Full
     */
    public static function getRootAsISRCollectionExploitationRequirement_Full(ByteBuffer $bb)
    {
        $obj = new ISRCollectionExploitationRequirement_Full();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function ISRCollectionExploitationRequirement_FullIdentifier()
    {
        return "ISRC";
    }

    public static function ISRCollectionExploitationRequirement_FullBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::ISRCollectionExploitationRequirement_FullIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return ISRCollectionExploitationRequirement_Full
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Exploitation requirement id.
    /// Example: /// Example: ISRCOLLECTIONEXPLOITATIONREQUIREMENT
    /// Constraints: Minimum length = 0, Maximum length = 36
    public function getId()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Amplifying data for the exploitation requirement.
    /// Example: /// Example: AMPLIFICATION
    /// Constraints: Minimum length = 0, Maximum length = 256
    public function getAmplification()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The reporting criteria of the collection requirement.
    /// Example: /// Example: CRITERIA
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getReportingCriteria()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// List of e-mails to disseminate collection verification information.
    /// Example: /// Example: EMAILS
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getDissemination()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Essential Elements of Information.
    /// Example: /// Example: ESSENTIAL_ELEMENTS
    /// Constraints: Minimum length = 0, Maximum length = 32
    public function getEei()
    {
        $o = $this->__offset(12);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// No description provided.
    /// Example: /// Example: No example provided.
    /// Constraints: No constraints specified.
    public function getPoc()
    {
        $o = $this->__offset(14);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startISRCollectionExploitationRequirement_Full(FlatBufferBuilder $builder)
    {
        $builder->StartObject(6);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return ISRCollectionExploitationRequirement_Full
     */
    public static function createISRCollectionExploitationRequirement_Full(FlatBufferBuilder $builder, $id, $amplification, $reportingCriteria, $dissemination, $eei, $poc)
    {
        $builder->startObject(6);
        self::addId($builder, $id);
        self::addAmplification($builder, $amplification);
        self::addReportingCriteria($builder, $reportingCriteria);
        self::addDissemination($builder, $dissemination);
        self::addEei($builder, $eei);
        self::addPoc($builder, $poc);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addId(FlatBufferBuilder $builder, $id)
    {
        $builder->addOffsetX(0, $id, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addAmplification(FlatBufferBuilder $builder, $amplification)
    {
        $builder->addOffsetX(1, $amplification, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addReportingCriteria(FlatBufferBuilder $builder, $reportingCriteria)
    {
        $builder->addOffsetX(2, $reportingCriteria, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addDissemination(FlatBufferBuilder $builder, $dissemination)
    {
        $builder->addOffsetX(3, $dissemination, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addEei(FlatBufferBuilder $builder, $eei)
    {
        $builder->addOffsetX(4, $eei, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addPoc(FlatBufferBuilder $builder, $poc)
    {
        $builder->addOffsetX(5, $poc, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endISRCollectionExploitationRequirement_Full(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishISRCollectionExploitationRequirement_FullBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "ISRC");
    }
}
