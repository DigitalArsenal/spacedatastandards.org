<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// Schema for the CotChatData to post.
class CotChatData_Ingest extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return CotChatData_Ingest
     */
    public static function getRootAsCotChatData_Ingest(ByteBuffer $bb)
    {
        $obj = new CotChatData_Ingest();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function CotChatData_IngestIdentifier()
    {
        return "COTC";
    }

    public static function CotChatData_IngestBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::CotChatData_IngestIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return CotChatData_Ingest
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// Chat room name to send chat message to.
    /// Example: /// Example: All Chat Rooms
    /// Constraints: No constraints specified.
    public function getChatRoom()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Callsign of chat sender.
    /// Example: /// Example: Pebble
    /// Constraints: No constraints specified.
    public function getChatSenderCallSign()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// Contents of a chat message.
    /// Example: /// Example: Mission is go
    /// Constraints: No constraints specified.
    public function getChatMsg()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startCotChatData_Ingest(FlatBufferBuilder $builder)
    {
        $builder->StartObject(3);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return CotChatData_Ingest
     */
    public static function createCotChatData_Ingest(FlatBufferBuilder $builder, $chatRoom, $chatSenderCallSign, $chatMsg)
    {
        $builder->startObject(3);
        self::addChatRoom($builder, $chatRoom);
        self::addChatSenderCallSign($builder, $chatSenderCallSign);
        self::addChatMsg($builder, $chatMsg);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addChatRoom(FlatBufferBuilder $builder, $chatRoom)
    {
        $builder->addOffsetX(0, $chatRoom, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addChatSenderCallSign(FlatBufferBuilder $builder, $chatSenderCallSign)
    {
        $builder->addOffsetX(1, $chatSenderCallSign, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addChatMsg(FlatBufferBuilder $builder, $chatMsg)
    {
        $builder->addOffsetX(2, $chatMsg, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endCotChatData_Ingest(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishCotChatData_IngestBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "COTC");
    }
}
