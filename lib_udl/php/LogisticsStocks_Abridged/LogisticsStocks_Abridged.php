<?php
// automatically generated by the FlatBuffers compiler, do not modify

use \Google\FlatBuffers\Struct;
use \Google\FlatBuffers\Table;
use \Google\FlatBuffers\ByteBuffer;
use \Google\FlatBuffers\FlatBufferBuilder;

/// /// The supply stocks for this support item.
class LogisticsStocks_Abridged extends Table
{
    /**
     * @param ByteBuffer $bb
     * @return LogisticsStocks_Abridged
     */
    public static function getRootAsLogisticsStocks_Abridged(ByteBuffer $bb)
    {
        $obj = new LogisticsStocks_Abridged();
        return ($obj->init($bb->getInt($bb->getPosition()) + $bb->getPosition(), $bb));
    }

    public static function LogisticsStocks_AbridgedIdentifier()
    {
        return "LOGI";
    }

    public static function LogisticsStocks_AbridgedBufferHasIdentifier(ByteBuffer $buf)
    {
        return self::__has_identifier($buf, self::LogisticsStocks_AbridgedIdentifier());
    }

    /**
     * @param int $_i offset
     * @param ByteBuffer $_bb
     * @return LogisticsStocks_Abridged
     **/
    public function init($_i, ByteBuffer $_bb)
    {
        $this->bb_pos = $_i;
        $this->bb = $_bb;
        return $this;
    }

    /// The ICAO code for the primary location with available parts.
    /// Example: /// Example: PHIK
    /// Constraints: Minimum length = 0, Maximum length = 4
    public function getSourceICAO()
    {
        $o = $this->__offset(4);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The quantity of available parts needed from sourceICAO.
    /// Example: /// Example: 4
    /// Constraints: No constraints specified.
    /**
     * @return int
     */
    public function getQuantity()
    {
        $o = $this->__offset(6);
        return $o != 0 ? $this->bb->getInt($o + $this->bb_pos) : 0;
    }

    /// The datetime when the parts were sourced, in ISO 8601 UTC format with millisecond precision.
    /// Example: /// Example: 2023-07-13T13:47:00.123Z
    /// Constraints: No constraints specified.
    public function getStockCheckTime()
    {
        $o = $this->__offset(8);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /// The point of contact at the sourced location.
    /// Example: /// Example: SMITH, JOHN J
    /// Constraints: Minimum length = 0, Maximum length = 68
    public function getStockPOC()
    {
        $o = $this->__offset(10);
        return $o != 0 ? $this->__string($o + $this->bb_pos) : null;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return void
     */
    public static function startLogisticsStocks_Abridged(FlatBufferBuilder $builder)
    {
        $builder->StartObject(4);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return LogisticsStocks_Abridged
     */
    public static function createLogisticsStocks_Abridged(FlatBufferBuilder $builder, $sourceICAO, $quantity, $stockCheckTime, $stockPOC)
    {
        $builder->startObject(4);
        self::addSourceICAO($builder, $sourceICAO);
        self::addQuantity($builder, $quantity);
        self::addStockCheckTime($builder, $stockCheckTime);
        self::addStockPOC($builder, $stockPOC);
        $o = $builder->endObject();
        return $o;
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addSourceICAO(FlatBufferBuilder $builder, $sourceICAO)
    {
        $builder->addOffsetX(0, $sourceICAO, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param int
     * @return void
     */
    public static function addQuantity(FlatBufferBuilder $builder, $quantity)
    {
        $builder->addIntX(1, $quantity, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addStockCheckTime(FlatBufferBuilder $builder, $stockCheckTime)
    {
        $builder->addOffsetX(2, $stockCheckTime, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @param StringOffset
     * @return void
     */
    public static function addStockPOC(FlatBufferBuilder $builder, $stockPOC)
    {
        $builder->addOffsetX(3, $stockPOC, 0);
    }

    /**
     * @param FlatBufferBuilder $builder
     * @return int table offset
     */
    public static function endLogisticsStocks_Abridged(FlatBufferBuilder $builder)
    {
        $o = $builder->endObject();
        return $o;
    }

    public static function finishLogisticsStocks_AbridgedBuffer(FlatBufferBuilder $builder, $offset)
    {
        $builder->finish($offset, "LOGI");
    }
}
