/// Detailed information for a spacecraft communication antenna. One antenna may have multiple AntennaDetails records, compiled by various sources.
table AntennaDetails_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: ANTENNADETAILS-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Unique identifier of the parent Antenna.
    /// Example: ANTENNA-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    idAntenna: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Type of antenna (e.g. Reflector, Double Reflector, Shaped Reflector, Horn, Parabolic, etc.).
    /// Example: Reflector
    /// Constraints: Minimum length = 0, Maximum length = 64
    type: string;
    /// Antenna position (e.g. Top, Nadir, Side).
    /// Example: Top
    /// Constraints: Minimum length = 0, Maximum length = 128
    position: string;
    /// Antenna mode (e.g. TX,RX).
    /// Example: TX
    /// Constraints: Minimum length = 0, Maximum length = 4
    mode: AntennaDetails_Ingest_mode_Enum;
    /// Boolean indicating if this antenna is steerable.
    /// Example: False
    /// Constraints: No constraints specified.
    steerable: bool;
    /// Boolean indicating if this is a beam forming antenna.
    /// Example: False
    /// Constraints: No constraints specified.
    beamForming: bool;
    /// ID of the organization that manufactures the antenna.
    /// Example: MANUFACTUREORG-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    manufacturerOrgId: string;
    /// Antenna diameter in meters.
    /// Example: 0.01
    /// Constraints: No constraints specified.
    diameter: double;
    /// Array with 1-2 values specifying the length and width (for rectangular) and just length for dipole antennas in meters.
    /// Example: [0.03, 0.05]
    /// Constraints: No constraints specified.
    size: [string];
    /// Antenna start of frequency range in Mhz.
    /// Example: 2.1
    /// Constraints: No constraints specified.
    startFrequency: double;
    /// Antenna end of frequency range in Mhz.
    /// Example: 3.3
    /// Constraints: No constraints specified.
    endFrequency: double;
    /// Array of angles between the half-power (-3 dB) points of the main lobe of the antenna, in degrees.
    /// Example: 14.1
    /// Constraints: No constraints specified.
    beamwidth: double;
    /// Antenna maximum gain in dBi.
    /// Example: 20.1
    /// Constraints: No constraints specified.
    gain: double;
    /// Antenna gain tolerance in dB.
    /// Example: 5.1
    /// Constraints: No constraints specified.
    gainTolerance: double;
    /// Antenna polarization in degrees.
    /// Example: 45.1
    /// Constraints: No constraints specified.
    polarization: double;
    /// Antenna description.
    /// Example: Description of antenna A
    /// Constraints: Minimum length = 0, Maximum length = 512
    description: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: AntennaDetails_Ingest_dataMode_Enum;
    /// Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
    /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
    /// Constraints: No constraints specified.
    tags: [string];
}
enum AntennaDetails_Ingest_mode_Enum : byte {
    /// No description available.
    TX,
    /// No description available.
    RX
}

enum AntennaDetails_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

