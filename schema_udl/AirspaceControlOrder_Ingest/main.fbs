/// Beta Version Airspace Control Order: Contains airspace coordination information and instructions that have been issued by an airspace control authority.
table AirspaceControlOrder_Ingest {
    /// Unique identifier of the record, auto-generated by the system if not provided on create operations.
    /// Example: c44b0a80-9fef-63d9-6267-79037fb93e4c
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.
    /// Example: EXAMPLE URI
    /// Constraints: Minimum length = 0, Maximum length = 256
    rawFileURI: string;
    /// Specifies the code name or nickname assigned to a joint exercise or plan to designate message traffic.
    /// Example: DESERT WIND
    /// Constraints: Minimum length = 1, Maximum length = 64
    opExName: string;
    /// The originator of this reference.
    /// Example: USCENTCOM
    /// Constraints: Minimum length = 1, Maximum length = 36
    originator: string;
    /// The start of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2024-01-07T13:55:43.123Z
    /// Constraints: No constraints specified.
    startTime: string;
    /// The end of the effective time period of this airspace control order, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2024-01-08T13:55:43.123Z
    /// Constraints: No constraints specified.
    stopTime: string;
    /// A qualifier for the end of the effective time period of this airspace control order, such as AFTER, ASOF, NLT, etc. Used with field stopTime to indicate a relative time.
    /// Example: AFTER
    /// Constraints: Minimum length = 0, Maximum length = 8
    stopQualifier: string;
    /// Supplementary name that can be used to further identify exercise nicknames, or to provide the primary nickname of the option or the alternative of an operational plan.
    /// Example: CONTROL
    /// Constraints: Minimum length = 0, Maximum length = 32
    opExInfo: string;
    /// The secondary supplementary nickname of the option or the alternative of the operational plan or order.
    /// Example: ORANGE
    /// Constraints: Minimum length = 0, Maximum length = 24
    opExInfoAlt: string;
    /// The official identifier of the military establishment responsible for the operation plan and the identification number assigned to this plan.
    /// Example: SACEUR 106
    /// Constraints: Minimum length = 0, Maximum length = 36
    planOrigNum: string;
    /// The unique message identifier sequentially assigned by the originator.
    /// Example: 1201003
    /// Constraints: Minimum length = 0, Maximum length = 16
    serialNum: string;
    /// The month in which the message originated.
    /// Example: OCT
    /// Constraints: Minimum length = 0, Maximum length = 12
    month: string;
    /// The qualifier which caveats the message status.
    /// Example: CHG
    /// Constraints: Minimum length = 0, Maximum length = 8
    qualifier: string;
    /// The serial number associated with the message qualifier.
    /// Example: 1
    /// Constraints: No constraints specified.
    qualSN: int32;
    /// Name of the area of the command for which the ACO is valid.
    /// Example: FORT BRAGG
    /// Constraints: Minimum length = 0, Maximum length = 32
    areaOfValidity: string;
    /// The serial number of this airspace control order.
    /// Example: 27B
    /// Constraints: Minimum length = 0, Maximum length = 8
    acoSerialNum: string;
    /// Specifies the geodetic datum by which the spatial coordinates of the controlled airspace are calculated.
    /// Example: EUR-T
    /// Constraints: Minimum length = 0, Maximum length = 8
    geoDatum: string;
    /// Free text information expressed in natural language.
    /// Example: CHOKE POINTS
    /// Constraints: Minimum length = 0, Maximum length = 128
    acoComments: string;
    /// The airspaceControlReferences set provides both USMTF and non-USMTF references for this airspace control order.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    airspaceControlOrderReferences: [string];
    /// Mandatory nested segment to report multiple airspace control means statuses within an ACOID.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    airspaceControlMeansStatus: [string];
    /// Collection of unique link 16 identifier that will be assigned to a future airspace control means.
    /// Example: ['A2467', 'A3466', 'AA232']
    /// Constraints: No constraints specified.
    undLnkTrk: [string];
    /// Markings defining the source material or the original classification authority for the ACO message.
    /// Example: ORIG:USJFCOM
    /// Constraints: Minimum length = 0, Maximum length = 64
    classSource: string;
    /// Mandatory if classSource uses the "IORIG" designator. Must be a REASON FOR CLASSIFICATION code.
    /// Example: ['15C', '10C']
    /// Constraints: No constraints specified.
    classReason: [string];
    /// Markings providing the literal guidance or date for downgrading or declassifying the airspace control order. Manditory if declassExemptionCode is nul.
    /// Example: ['NST:AT EXERCISE ENDEX', 'DATE:25NOV1997']
    /// Constraints: No constraints specified.
    downgradeInsDate: [string];
    /// Coded entries that provide justification for exemption from automatic downgrading or declassification of the airspace control order.
    /// Example: ['X1', 'X2']
    /// Constraints: No constraints specified.
    declassExemptionCode: [string];
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 0, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: AirspaceControlOrder_Ingest_dataMode_Enum;
}
enum AirspaceControlOrder_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

