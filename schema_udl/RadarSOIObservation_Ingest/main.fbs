/// A Radar SOI record contains observation information taken from a sensor about a Space Object.
table RadarSOIObservation_Ingest {
    /// Observation detection start time in ISO 8601 UTC format with microsecond precision.
    /// Example: 2018-01-01T16:00:00.888456Z
    /// Constraints: No constraints specified.
    obStartTime: string;
    /// Array of the times of validity in ISO 8601 UTC format with microsecond precision.
    /// Example: ['2018-01-01T16:00:00.888456Z', '2018-01-01T16:00:00.888456Z', '2018-01-01T16:00:00.888456Z']
    /// Constraints: No constraints specified.
    tovs: [string];
    /// Array of range sample spacing in meters. The 'tov' and 'rspace' arrays must match in size.
    /// Example: [0.006, 0.006, 0.006]
    /// Constraints: No constraints specified.
    rspaces: [string];
    /// Array of cross-range sample spacing in meters. The 'tov' and 'xspace' arrays must match in size.
    /// Example: [0.006, 0.006, 0.006]
    /// Constraints: No constraints specified.
    xspaces: [string];
    /// Array of conversion factors between Doppler in hertz and cross-range in meters. The 'tov' and 'doppler2XR' arrays must match in size.
    /// Example: [5644.27, 5644.27, 5644.27]
    /// Constraints: No constraints specified.
    doppler2XRs: [string];
    /// Array of average Interpulse spacing in seconds. The 'tov' and 'deltaTime' arrays must match in size.
    /// Example: [0.005, 0.005, 0.005]
    /// Constraints: No constraints specified.
    deltaTimes: [string];
    /// Array of the aspect angle at the center of the image in degrees.  The 'tov' and 'aspectAngle' arrays must match in size.
    /// Example: [4.278, 4.278, 4.278]
    /// Constraints: No constraints specified.
    aspectAngles: [string];
    /// Array of the component of target angular velocity observable by radar in radians per second.  The 'tov' and 'projAngVel' arrays must match in size.
    /// Example: [0.166, 0.166, 0.166]
    /// Constraints: No constraints specified.
    projAngVels: [string];
    /// Optional id of assumed StateVector of object being observed.
    /// Example: 99a0de63-b38f-4d81-b057
    /// Constraints: Minimum length = 0, Maximum length = 36
    idStateVector: string;
    /// Optional id of assumed AttitudeSet of object being observed.
    /// Example: 99a0de63-b38f-4d81-b057
    /// Constraints: Minimum length = 0, Maximum length = 36
    idAttitudeSet: string;
    /// Array of the range to target at image center in kilometers. The 'tov' and 'range' arrays must match in size.
    /// Example: [877.938, 877.938, 877.938]
    /// Constraints: No constraints specified.
    ranges: [string];
    /// Array of the azimuth angle to target at image center in degrees. The 'tov' and 'azimuth' arrays must match in size.
    /// Example: [278.27, 278.27, 278.27]
    /// Constraints: No constraints specified.
    azimuths: [string];
    /// Array of the elevation angle to target at image center in degrees. The 'tov' and 'elevation' arrays must match in size.
    /// Example: [70.85, 70.85, 70.85]
    /// Constraints: No constraints specified.
    elevations: [string];
    /// Array of the range rate of target at image center in kilometers per second. The 'tov' and 'rangeRate' arrays must match in size.
    /// Example: [0.317, 0.317, 0.317]
    /// Constraints: No constraints specified.
    rangeRates: [string];
    /// Array of the azimuth rate of target at image center in degrees per second. The 'tov' and 'azimuthRate' arrays must match in size.
    /// Example: [-1.481, -1.481, -1.481]
    /// Constraints: No constraints specified.
    azimuthRates: [string];
    /// Array of the elevation rate of target at image center in degrees per second. The 'tov' and 'elevationRate' arrays must match in size.
    /// Example: [-0.074, -0.074, -0.074]
    /// Constraints: No constraints specified.
    elevationRates: [string];
    /// Array of  sensor azimuth angle biases in degrees. The 'tov' and 'azimuthBias' arrays must match in size.
    /// Example: [45.23, 45.23, 45.23]
    /// Constraints: No constraints specified.
    azimuthBiases: [string];
    /// Array of sensor elevation biases in degrees. The 'tov' and 'elevationBias' arrays must match in size.
    /// Example: [1.23, 1.23, 1.23]
    /// Constraints: No constraints specified.
    elevationBiases: [string];
    /// Array of sensor range biases in kilometers. The 'tov' and 'rangeBias' arrays must match in size.
    /// Example: [1.23, 1.23, 1.23]
    /// Constraints: No constraints specified.
    rangeBiases: [string];
    /// Array of Integration angles in degrees. The 'tov' and 'integrationAngle' arrays must match in size.
    /// Example: [8.594, 8.594, 8.594]
    /// Constraints: No constraints specified.
    integrationAngles: [string];
    /// Array of cross-range resolutions (accounting for weighting function) in kilometers. The 'tov' and 'crossRangeRes' arrays must match in size.
    /// Example: [11.301, 11.301, 11.301]
    /// Constraints: No constraints specified.
    crossRangeRes: [string];
    /// Beta angle (between target and radar-image frame z axis) in degrees.
    /// Example: -89.97
    /// Constraints: No constraints specified.
    beta: double;
    /// Kappa angle (between radar-line-of-sight and target-frame x axis) in degrees.
    /// Example: 103.04
    /// Constraints: No constraints specified.
    kappa: double;
    /// Array of the peak pixel amplitude for each image in decibels. The 'tov' and 'peakAmplitude' arrays must match in size.
    /// Example: [33.1, 33.1, 33.1]
    /// Constraints: No constraints specified.
    peakAmplitudes: [string];
    /// Radar center frequency of the radar in hertz.
    /// Example: 160047.0625
    /// Constraints: No constraints specified.
    centerFrequency: double;
    /// Bandwidth of radar pulse in hertz.
    /// Example: 24094.12
    /// Constraints: No constraints specified.
    pulseBandwidth: double;
    /// Array of the cartesian X positions of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed. The 'tov' and 'xpos' arrays must match in size.
    /// Example: [-1118.577381, -1118.577381, -1118.577381]
    /// Constraints: No constraints specified.
    xpos: [string];
    /// Array of the cartesian Y positions of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed. The 'tov' and 'ypos' arrays must match in size.
    /// Example: [3026.231084, 3026.231084, 3026.231084]
    /// Constraints: No constraints specified.
    ypos: [string];
    /// Array of the cartesian Z positions of the target, in kilometers, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed. The 'tov' and 'zpos' arrays must match in size.
    /// Example: [6167.831808, 6167.831808, 6167.831808]
    /// Constraints: No constraints specified.
    zpos: [string];
    /// Array of the cartesian X velocities of target, in kilometers per second, in the specified referenceFrame. If referenceFrame is null then J2K should be assumed. The 'tov' and 'xvel' arrays must match in size.
    /// Example: [-4.25242784, -4.25242784, -4.25242784]
    /// Constraints: No constraints specified.
    xvel: [string];
    /// Array of the cartesian Y velocities of target, in kilometers per second, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed. The 'tov' and 'yvel' arrays must match in size.
    /// Example: [5.291107434, 5.291107434, 5.291107434]
    /// Constraints: No constraints specified.
    yvel: [string];
    /// Array of the cartesian Z velocities of target, in kilometers per second, in the specified referenceFrame.  If referenceFrame is null then J2K should be assumed. The 'tov' and 'zvel' arrays must match in size.
    /// Example: [-3.356493869, -3.356493869, -3.356493869]
    /// Constraints: No constraints specified.
    zvel: [string];
}
