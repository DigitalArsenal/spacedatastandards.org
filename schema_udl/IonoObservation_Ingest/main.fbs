/// These services provide operations for posting and querying ionospheric observation data. Characteristics are defined by the CHARS: URSI IIWG format for archiving monthly ionospheric characteristics, INAG Bulletin No. 62 specification. Qualifying and Descriptive letters are defined by the URSI Handbook for Ionogram Interpretation and reduction, Report UAG, No. 23A specification.
table IonoObservation_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: IONOOBSERVATION-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Unique identifier of the reporting sensor.
    /// Example: SENSOR-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idSensor: string;
    /// Optional identifier provided by observation source to indicate the sensor identifier which produced this observation. This may be an internal identifier and not necessarily a valid sensor ID.
    /// Example: ORIGSENSOR-ID
    /// Constraints: Minimum length = 0, Maximum length = 64
    origSensorId: string;
    /// Ionosonde hardware type or data collection type together with possible additional descriptors.
    /// Example: Example hardware type
    /// Constraints: Minimum length = 1, Maximum length = 64
    system: string;
    /// Name of the algorithm used for the electron density profile.
    /// Example: NH
    /// Constraints: Minimum length = 0, Maximum length = 64
    neProfileName: string;
    /// Version of the algorithm used for the electron density profile.
    /// Example: 4.32
    /// Constraints: No constraints specified.
    neProfileVersion: double;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    scalerInfo: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    densityProfile: string;
    /// URSI code for station or stations producing the ionosonde.
    /// Example: STATION-ID
    /// Constraints: Minimum length = 1, Maximum length = 64
    stationId: string;
    /// Sounding Start time in ISO8601 UTC format.
    /// Example: 2021-01-01T01:01:01.123456Z
    /// Constraints: No constraints specified.
    startTimeUTC: string;
    /// Names of settings.
    /// Example: Example settings
    /// Constraints: Minimum length = 1, Maximum length = 1024
    systemInfo: string;
    /// Details concerning the composition/intention/interpretation/audience/etc. of any data recorded here. This field may contain all of the intended information e.g. info on signal waveforms used, antenna setup, etc. OR may describe the data/settings to be provided in the “data” field.
    /// Example: Example notes
    /// Constraints: Minimum length = 0, Maximum length = 1024
    systemNotes: string;
    /// List of Geodetic Latitude, Longitude, and Altitude coordinates in km of the receiver. Coordinates List must always have 3 elements. Valid ranges are -90.0 to 90.0 for Latitude and -180.0 to 180.0 for Longitude. Altitude is in km and its value must be 0 or greater.
    /// Example: [[45.5, 179.3, 35.6], [-80.2, -20.5, 43.2]]
    /// Constraints: No constraints specified.
    transmitCoordinates: [string];
    /// Enums: Mobile, Static.
    /// Example: Mobile
    /// Constraints: Minimum length = 0, Maximum length = 16
    transmitSensorType: IonoObservation_Ingest_transmitSensorType_Enum;
    /// List of Geodetic Latitude, Longitude, and Altitude coordinates in km of the receiver. Coordinates List must always have 3 elements. Valid ranges are -90.0 to 90.0 for Latitude and -180.0 to 180.0 for Longitude. Altitude is in km and its value must be 0 or greater.
    /// Example: [[45.5, 179.3, 35.6], [-80.2, -20.5, 43.2]]
    /// Constraints: No constraints specified.
    receiveCoordinates: [string];
    /// Enums: Mobile, Static.
    /// Example: Mobile
    /// Constraints: Minimum length = 0, Maximum length = 16
    receiveSensorType: IonoObservation_Ingest_receiveSensorType_Enum;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    antennaElementPosition: string;
    /// Enums: J2000, ECR/ECEF, TEME, GCRF, WGS84 (GEODetic lat, long, alt), GEOCentric (lat, long, radii).
    /// Example: J2000
    /// Constraints: Minimum length = 0, Maximum length = 32
    antennaElementPositionCoordinateSystem: IonoObservation_Ingest_antennaElementPositionCoordinateSystem_Enum;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    power: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    range: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    frequency: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    polarization: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    azimuth: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    elevation: string;
    /// Array of restricted frequencies.
    /// Example: [12.5, 34.5, 45.3]
    /// Constraints: No constraints specified.
    restrictedFrequency: [string];
    /// Notes for the restrictedFrequency data.
    /// Example: Example notes
    /// Constraints: Minimum length = 0, Maximum length = 512
    restrictedFrequencyNotes: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    doppler: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    time: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    stokes: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    amplitude: string;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    phase: string;
    /// The ordinary wave critical frequency of the highest stratification in the F region, specified in MHz. URSI ID: 00.
    /// Example: 6.75
    /// Constraints: No constraints specified.
    foF2: double;
    /// The ordinary wave F1 critical frequency, in MHz. URSI ID: 10.
    /// Example: 8.2
    /// Constraints: No constraints specified.
    foF1: double;
    /// The extraordinary wave F2 critical frequency, in MHz. URSI ID: 01.
    /// Example: 4.5
    /// Constraints: No constraints specified.
    fxF2: double;
    /// The extraordinary wave F1 critical frequency, in MHz. URSI ID: 11.
    /// Example: 4.2
    /// Constraints: No constraints specified.
    fxF1: double;
    /// MUF(D)/foF2.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    md: double;
    /// Lowest usable frequency.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    luf: double;
    /// Maximum Usable Frequency for ground distance D in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    mufd: double;
    /// Lowest frequency at which echo traces are observed on the ionogram, in MHz. URSI ID: 42.
    /// Example: 2.025
    /// Constraints: No constraints specified.
    fmin: double;
    /// Highest ordinary wave frequency at which a mainly continuous Es trace is observed, in MHz. URSI ID: 30.
    /// Example: 2.35
    /// Constraints: No constraints specified.
    foEs: double;
    /// Minimum frequency of F layer echoes in MHz. URSI ID: 80.
    /// Example: 2.7
    /// Constraints: No constraints specified.
    fminF: double;
    /// Minimum frequency of E layer echoes in MHz. URSI ID: 81.
    /// Example: 2.025
    /// Constraints: No constraints specified.
    fminE: double;
    /// The ordinary wave critical frequency of the lowest thick layer which causes a discontinuity, in MHz. URSI ID: 20.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    foE: double;
    /// The extraordinary wave E critical frequency, in MHz. URSI ID: 21.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    fxE: double;
    /// The highest frequency of F-trace in MHz. Note: fxI is with capital i. URSI ID: 51.
    /// Example: 7.525
    /// Constraints: No constraints specified.
    fxI: double;
    /// The minimum virtual height of the ordinary wave trace taken as a whole, in km. URSI ID: 16.
    /// Example: 238.5
    /// Constraints: No constraints specified.
    hprimeF: double;
    /// The minimum virtual height of ordinary wave trace for the highest stable stratification in the F region in km. URSI ID: 4.
    /// Example: 238.5
    /// Constraints: No constraints specified.
    hprimeF2: double;
    /// The minimum virtual height of reflection at a point where the trace is horizontal in the F region in km. URSI ID: 14.
    /// Example: 230.1
    /// Constraints: No constraints specified.
    hprimeF1: double;
    /// The minimum virtual height of the normal E layer trace in km. URSI ID: 24.
    /// Example: 98.47
    /// Constraints: No constraints specified.
    hprimeE: double;
    /// The minimum height of the trace used to give foEs in km. URSI ID: 34.
    /// Example: 95
    /// Constraints: No constraints specified.
    hprimeEs: double;
    /// Peak height of E-layer in km. URSI ID: 90.
    /// Example: 91.744
    /// Constraints: No constraints specified.
    zmE: double;
    /// Parabolic E layer semi-thickness in km. URSI ID: 83.
    /// Example: 1.722
    /// Constraints: No constraints specified.
    yE: double;
    /// Average range spread of F layer in km. URSI ID: 84.
    /// Example: 1.83
    /// Constraints: No constraints specified.
    qf: double;
    /// Average range spread of E layer in km. URSI ID: 85.
    /// Example: 0.95
    /// Constraints: No constraints specified.
    qe: double;
    /// Lowering of F trace to the leading edge in km.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    downF: double;
    /// Lowering of E trace to the leading edge in km.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    downE: double;
    /// Lowering of Es trace to the leading edge in km.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    downEs: double;
    /// Frequency spread between fxF2 and FxI in MHz. URSI ID: 86.
    /// Example: 0.075
    /// Constraints: No constraints specified.
    ff: double;
    /// Frequency spread beyond foE in MHz. URSI ID: 87.
    /// Example: 1.23
    /// Constraints: No constraints specified.
    fe: double;
    /// Distance for MUF calculation in km.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    d: double;
    /// MUF/OblFactor in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    fmuf: double;
    /// Virtual height at MUF/OblFactor frequency in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    hprimefMUF: double;
    /// Adjustment to the scaled foF2 during profile inversion in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    deltafoF2: double;
    /// Predicted value of foE in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    foEp: double;
    /// The frequency at which hprimeF is measured in MHz. URSI ID: 61.
    /// Example: 2.5
    /// Constraints: No constraints specified.
    fhprimeF: double;
    /// The frequency at which hprimeF2 is measured in MHz. URSI ID: 60.
    /// Example: 2.5
    /// Constraints: No constraints specified.
    fhprimeF2: double;
    /// Predicted value of foF1 in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    foF1p: double;
    /// Predicted value of foF2 in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    foF2p: double;
    /// True height of the F2 peak in km. URSI ID: AE.
    /// Example: 240.498
    /// Constraints: No constraints specified.
    hmF2: double;
    /// True height of the F1 peak in km. URSI ID: BE.
    /// Example: 230.128
    /// Constraints: No constraints specified.
    hmF1: double;
    /// True height of the E peak in km. URSI ID: CE.
    /// Example: 215.643
    /// Constraints: No constraints specified.
    hmE: double;
    /// True height at half peak electron density in the F2 layer in km. URSI ID: 93.
    /// Example: 240.498
    /// Constraints: No constraints specified.
    zhalfNm: double;
    /// Minimum frequency of Es layer in MHz.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    fminEs: double;
    /// Parabolic F2 layer semi-thickness in km. URSI ID: 94.
    /// Example: 62.178
    /// Constraints: No constraints specified.
    yF2: double;
    /// Parabolic F1 layer semi-thickness in km. URSI ID: 95.
    /// Example: 55.645
    /// Constraints: No constraints specified.
    yF1: double;
    /// Total Ionospheric Electron Content *10^16e/m^2. 1 TEC Unit (TECU) = 10^16 electrons/m^2. URSI ID: 72.
    /// Example: 24.673
    /// Constraints: No constraints specified.
    tec: double;
    /// Effective scale height at hmF2 Titheridge method in km. URSI ID: 69.
    /// Example: 35.613
    /// Constraints: No constraints specified.
    scaleHeightF2Peak: double;
    /// IRI thickness parameter in km. URSI ID: D0.
    /// Example: 68.07
    /// Constraints: No constraints specified.
    b0: double;
    /// IRI profile shape parameter. URSI ID: D1.
    /// Example: 1.87
    /// Constraints: No constraints specified.
    b1: double;
    /// IRI profile shape parameter, F1 layer. URSI ID: D2.
    /// Example: 1.94
    /// Constraints: No constraints specified.
    d1: double;
    /// Critical frequency of night time auroral E layer in MHz. URSI ID: 23.
    /// Example: 45.764
    /// Constraints: No constraints specified.
    foEa: double;
    /// Minimum virtual height of night time auroral E layer trace in km. URSI ID: 27.
    /// Example: 102.6
    /// Constraints: No constraints specified.
    hprimeEa: double;
    /// Highest ordinary wave critical frequency of F region patch trace in MHz. URSI ID: 55.
    /// Example: 87.21
    /// Constraints: No constraints specified.
    foP: double;
    /// Minimum virtual height of the trace used to determine foP in km. URSI ID: 56.
    /// Example: 89.45
    /// Constraints: No constraints specified.
    hprimeP: double;
    /// The blanketing frequency of layer used to derive foEs in MHz. URSI ID: 32.
    /// Example: 34.867
    /// Constraints: No constraints specified.
    fbEs: double;
    /// Characterization of the shape of Es trace. URSI ID: 36.
    /// Example: Auroral
    /// Constraints: Minimum length = 0, Maximum length = 25
    typeEs: string;
    /// List of attributes that are associated with the specified characteristics. Characteristics are defined by the CHARS: URSI IIWG format for archiving monthly ionospheric characteristics, INAG Bulletin No. 62 specification. 
Qualifying and Descriptive letters are defined by the URSI Handbook for Ionogram Interpretation and reduction, Report UAG, No. 23A specification.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    charAtts: [string];
    /// Array of altitudes above station level for plasma frequency/density arrays in km (must match the size of the plasmaFrequency and electronDensity Arrays).
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    height: [string];
    /// Array of plasma frequencies in MHz (must match the size of the height and electronDensity arrays).
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    plasmaFrequency: [string];
    /// Uncertainty in specifying the electron plasma frequency at each height point of the profile (must match the size of the plasmaFrequency array).
    /// Example: [0.8, 0.2, 0.5]
    /// Constraints: No constraints specified.
    plasmaFrequencyUncertainty: [string];
    /// Array of electron densities in cm^-3 (must match the size of the height and plasmaFrequency arrays).
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    electronDensity: [string];
    /// Uncertainty in specifying the electron density at each height point of the profile (must match the size of the electronDensity array).
    /// Example: [0.8, 0.2, 0.5]
    /// Constraints: No constraints specified.
    electronDensityUncertainty: [string];
    /// Array of Legacy Artist Flags.
    /// Example: [1, 2, 3]
    /// Constraints: No constraints specified.
    artistFlags: [string];
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    traceGeneric: string;
    /// Array of speed in m/s at which the disturbance travels through the ionosphere.
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    tidPhaseSpeeds: [string];
    /// Array of degrees clockwise from true North of the TID.
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    tidAzimuth: [string];
    /// Array of 1/frequency of the TID wave.
    /// Example: [1.1, 2.1, 3.1]
    /// Constraints: No constraints specified.
    tidPeriods: [string];
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    datum: string;
    /// Equipment location.
    /// Example: Millstone Hill
    /// Constraints: Minimum length = 0, Maximum length = 512
    platformName: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    createdBy: string;
    /// Time the row was updated in the database, auto-populated by the system, example = 2018-01-01T16:00:00.123Z.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: IonoObservation_Ingest_dataMode_Enum;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
}
enum IonoObservation_Ingest_transmitSensorType_Enum : byte {
    /// No description available.
    Mobile,
    /// No description available.
    Static
}

enum IonoObservation_Ingest_receiveSensorType_Enum : byte {
    /// No description available.
    Mobile,
    /// No description available.
    Static
}

enum IonoObservation_Ingest_antennaElementPositionCoordinateSystem_Enum : byte {
    /// No description available.
    J2000,
    /// No description available.
    ECR/ECEF,
    /// No description available.
    TEME,
    /// No description available.
    GCRF,
    /// No description available.
    WGS84 (GEODetic lat, long, alt),
    /// No description available.
    GEOCentric (lat, long, radii)
}

enum IonoObservation_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

