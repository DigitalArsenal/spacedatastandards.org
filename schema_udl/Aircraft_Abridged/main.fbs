/// General aircraft designation, characteristics, and capabilities. The aircraft schema contains static data of specific aircraft, including tail number, cruise speed, max speed, and minimum required runway length, etc.
table Aircraft_Abridged {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: 0167f577-e06c-358e-85aa-0a07a730bdd0
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// ID of the parent entity for this aircraft.
    /// Example: 0167f577-e06c-358e-85aa-0a07a730bdd0
    /// Constraints: Minimum length = 0, Maximum length = 36
    idEntity: string;
    /// The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of this aircraft.  Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.
    /// Example: E-2C HAWKEYE
    /// Constraints: Minimum length = 1, Maximum length = 128
    aircraftMDS: string;
    /// The tail number of this aircraft.
    /// Example: N702JG
    /// Constraints: Minimum length = 0, Maximum length = 16
    tailNumber: string;
    /// Full serial number of the aircraft.
    /// Example: 7007187
    /// Constraints: Minimum length = 0, Maximum length = 32
    serialNumber: string;
    /// The wing or unit that owns the aircraft.
    /// Example: 437AW
    /// Constraints: Minimum length = 0, Maximum length = 32
    owner: string;
    /// The Air Force major command (MAJCOM) overseeing the aircraft.
    /// Example: HQACC
    /// Constraints: Minimum length = 0, Maximum length = 16
    command: string;
    /// The category of aircraft (e.g. M = Military, C = Commercial).
    /// Example: M
    /// Constraints: Minimum length = 0, Maximum length = 1
    category: string;
    /// Military data network data transfer device ID for this aircraft.
    /// Example: 005
    /// Constraints: Minimum length = 0, Maximum length = 16
    dtd: string;
    /// The cruise speed of the aircraft, in kilometers/hour.
    /// Example: 915
    /// Constraints: No constraints specified.
    cruiseSpeed: double;
    /// The maximum air speed of the aircraft, in kilometers/hour.
    /// Example: 2655.1
    /// Constraints: No constraints specified.
    maxSpeed: double;
    /// The minimum length of runway required to land this aircraft, in meters. Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.
    /// Example: 1000
    /// Constraints: No constraints specified.
    minReqRunwayM: int32;
    /// The minimum length of runway required to land this aircraft, in feet. Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.
    /// Example: 3000
    /// Constraints: No constraints specified.
    minReqRunwayFt: int32;
    /// The nominal turnaround time for this aircraft, in minutes.
    /// Example: 500
    /// Constraints: No constraints specified.
    nominalTATime: int32;
    /// Optional notes/comments for this aircraft.
    /// Example: Notes for this aircraft
    /// Constraints: Minimum length = 0, Maximum length = 1024
    notes: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 64
    dataMode: Aircraft_Abridged_dataMode_Enum;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
}
enum Aircraft_Abridged_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

