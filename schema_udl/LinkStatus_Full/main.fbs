/// Captures link status.
table LinkStatus_Full {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: LINKSTATUS-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Unique ID of the on-orbit satellite (Sat-1) forming the link.  A null value for idOnOrbit1 indicates that the link is formed over a LEO/MEO constellation.
    /// Example: REF-ONORBIT1-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idOnOrbit1: string;
    /// Unique ID of the on-orbit satellite (Sat-2) forming the link.  A null value for idOnOrbit2 indicates either a link employing only Sat-1 or a link formed over a LEO/MEO constellation.
    /// Example: REF-ONORBIT2-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idOnOrbit2: string;
    /// The link establishment time, or the time that the link becomes available for use, in ISO8601 UTC format.
    /// Example: 2021-01-01T01:01:01.123456Z
    /// Constraints: No constraints specified.
    linkStartTime: string;
    /// The link termination time, or the time that the link becomes unavailable for use, in ISO8601 UTC format.
    /// Example: 2021-01-01T01:01:01.123456Z
    /// Constraints: No constraints specified.
    linkStopTime: string;
    /// The constellation name if the link is established over a LEO/MEO constellation.  In this case, idOnOrbit1 and idOnOrbit2 will be null.
    /// Example: Fornax
    /// Constraints: Minimum length = 0, Maximum length = 128
    constellation: string;
    /// The name or description of the link.
    /// Example: Example description
    /// Constraints: Minimum length = 1, Maximum length = 64
    linkName: string;
    /// The type of the link.
    /// Example: Example link
    /// Constraints: Minimum length = 0, Maximum length = 64
    linkType: string;
    /// The RF band employed by the link (e.g. MIL-KA, COM-KA, X-BAND, C-BAND, etc.).
    /// Example: MIL-KA
    /// Constraints: Minimum length = 0, Maximum length = 24
    band: string;
    /// The ID of beam-1 forming the link.  In the case of two sat link, beam-1 corresponds to Sat-1.
    /// Example: REF-BEAM1-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idBeam1: string;
    /// The name or description of link endpoint-1, corresponding to beam-1.
    /// Example: Example endpoint
    /// Constraints: Minimum length = 1, Maximum length = 64
    endPoint1Name: string;
    /// Latitude of link endpoint-1, WGS-84 in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: 45.23
    /// Constraints: Minimum value = -90, Maximum value = 90
    endPoint1Lat: double;
    /// Longitude of link endpoint-1, WGS-84 longitude in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    /// Example: 80.23
    /// Constraints: Minimum value = -180, Maximum value = 180
    endPoint1Lon: double;
    /// The ID of beam-2 forming the link.  In the case of two sat link, beam-2 corresponds to Sat-2.
    /// Example: REF-BEAM2-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idBeam2: string;
    /// The name or description of link endpoint-2, corresponding to beam-2.
    /// Example: Example description
    /// Constraints: Minimum length = 1, Maximum length = 64
    endPoint2Name: string;
    /// Latitude of link endpoint-2, WGS-84 in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: 45.23
    /// Constraints: Minimum value = -90, Maximum value = 90
    endPoint2Lat: double;
    /// Longitude of link endpoint-2, WGS-84 longitude in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    /// Example: 80.23
    /// Constraints: Minimum value = -180, Maximum value = 180
    endPoint2Lon: double;
    /// The endpoint-1 to endpoint-2 data rate, in kbps.
    /// Example: 10.23
    /// Constraints: No constraints specified.
    dataRate1To2: double;
    /// The endpoint-2 to endpoint-1 data rate, in kbps.
    /// Example: 10.23
    /// Constraints: No constraints specified.
    dataRate2To1: double;
    /// The state of the link (e.g. OK, DEGRADED-WEATHER, DEGRADED-EMI, etc.).
    /// Example: DEGRADED-WEATHER
    /// Constraints: Minimum length = 0, Maximum length = 24
    linkState: string;
    /// The SYSCAP mission status of the system(s) forming the link.
    /// Example: Example status
    /// Constraints: Minimum length = 0, Maximum length = 24
    sysCap: string;
    /// The OPSCAP mission status of the system(s) forming the link.
    /// Example: Example status
    /// Constraints: Minimum length = 0, Maximum length = 24
    opsCap: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: LinkStatus_Full_dataMode_Enum;
    /// Satellite/catalog number of the target on-orbit primary object.
    /// Example: 1
    /// Constraints: No constraints specified.
    satNo1: int32;
    /// Satellite/catalog number of the target on-orbit secondary object.
    /// Example: 2
    /// Constraints: No constraints specified.
    satNo2: int32;
}
enum LinkStatus_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

