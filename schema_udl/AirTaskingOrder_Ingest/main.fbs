/// Beta Version Air Tasking Order: The ATO is used to task air missions, assign cross force tasking as well as intraservice tasking.
table AirTaskingOrder_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: POI-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.
    /// Example: Example URI
    /// Constraints: Minimum length = 0, Maximum length = 256
    rawFileURI: string;
    /// Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.
    /// Example: DESERT WIND
    /// Constraints: Minimum length = 1, Maximum length = 64
    opExerName: string;
    /// The identifier of the originator of the message.
    /// Example: USCENTCOM
    /// Constraints: Minimum length = 0, Maximum length = 36
    msgOriginator: string;
    /// The unique message identifier sequentially assigned by the originator.
    /// Example: ATO A
    /// Constraints: Minimum length = 0, Maximum length = 16
    msgSN: string;
    /// The month in which the message originated.
    /// Example: OCT
    /// Constraints: Minimum length = 0, Maximum length = 16
    msgMonth: string;
    /// The qualifier which caveats the message status.
    /// Example: CHG
    /// Constraints: Minimum length = 0, Maximum length = 8
    msgQualifier: string;
    /// The indicator specifying an affirmative or a negatice condition for this message.
    /// Example: YES
    /// Constraints: Minimum length = 0, Maximum length = 8
    ackReqInd: string;
    /// Specifies textual data amplifying the data contained in the acknowledgement requirement indicator (ackRedInd) field or the unit required to acknowledge.
    /// Example: INST:45TS
    /// Constraints: Minimum length = 0, Maximum length = 36
    ackUnitInstructions: string;
    /// The effective begin time for this ATO in ISO 8601 UTC format with millisecond precision.
    /// Example: 2023-10-25T12:00:00.123Z
    /// Constraints: No constraints specified.
    beginTs: string;
    /// The effective end time for this ATO in ISO 8601 UTC format with millisecond precision.
    /// Example: 2023-10-27T12:00:00.123Z
    /// Constraints: No constraints specified.
    endTs: string;
    /// A collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    genText: [string];
    /// A collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    acMsnTasking: [string];
    /// A collection that specifies the naval flight operations for this ATO.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    navalFltOps: [string];
    /// Time the row was created in the database.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 36
    source: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 0, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: AirTaskingOrder_Ingest_dataMode_Enum;
}
enum AirTaskingOrder_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

