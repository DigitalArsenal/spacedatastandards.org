/// Sensorlimits define 0 to many limits of a particular sensor in terms of observation coverage of on-orbit objects.
table Sensorlimits_Full {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: SENSORLIMITS-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    idSensorLimits: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
    /// Leftmost or minimum upper azimuth within this sensor limit. Interpreted according to site types as beginning upper azimuth limit, left-hand upper boundary limit. If the limit rectangle is parallel to the horizon, the upper and lower left azimuth limits would be equal. (in degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    upperLeftAzimuthLimit: double;
    /// Rightmost or maximum upper azimuth within this limit. Interpreted according to site types as 2nd azimuth limit elevation angle of axis of conical observation pattern. If the limit rectangle is parallel to the horizon, the upper and lower right azimuth limits would be equal. (degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    upperRightAzimuthLimit: double;
    /// Rightmost or maximum lower azimuth within this limit. Interpreted according to site types as 2nd lower azimuth limit elevation angle of axis of conical observation pattern. If the limit rectangle is parallel to the horizon, the upper and lower right azimuth limits would be equal. (degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    lowerRightAzimuthLimit: double;
    /// Leftmost or minimum lower azimuth within this limit. Interpreted according to site types as lower left azimuth limit elevation angle of axis of conical observation pattern. If the limit rectangle is parallel to the horizon, the upper and lower left azimuth limits would be equal. (degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    lowerLeftAzimuthLimit: double;
    /// Minimum or lower elevation within this limit. Interpreted according to site types as minimum elevation angle, constant elevation or fan beam centerline. (Degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    lowerLeftElevationLimit: double;
    /// Maximum or upper elevation within this limit. Interpreted according to site types as maximum elevation angle, half the apex of conical observation pattern or star. (Degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    upperLeftElevationLimit: double;
    /// Minimum or lower right elevation within this limit. Interpreted according to site types as minimum right elevation angle, constant elevation or fan beam centerline. If the limit rectangle is parallel to the horizon, the left and right lower elevation limits would be equal. (Degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    lowerRightElevationLimit: double;
    /// Maximum or upper right elevation within this limit. Interpreted according to site types as maximum rightmost elevation angle, half the apex of conical observation pattern or star. If the limit rectangle is parallel to the horizon, the left and right upper elevation limits would be equal. (Degrees).
    /// Example: 1.23
    /// Constraints: No constraints specified.
    upperRightElevationLimit: double;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: Sensorlimits_Full_dataMode_Enum;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was last updated in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// Unique identifier of the target sensor object.
    /// Example: SENSORLIMITS-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idSensor: string;
}
enum Sensorlimits_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

