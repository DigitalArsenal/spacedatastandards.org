/// Aircraft readiness and status data. Contains the dynamic data associated with the specific aircraft status, either in-flight or on-ground, including remaining fuel, mission readiness, and inventory, etc.
table AircraftStatus_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: 0167f577-e06c-358e-85aa-0a07a730bdd0
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Unique identifier of the aircraft.
    /// Example: 29232269-e4c2-45c9-aa21-039a33209340
    /// Constraints: Minimum length = 1, Maximum length = 36
    idAircraft: string;
    /// Alternate Aircraft Identifier provided by source.
    /// Example: ORIG-AIRCRAFT-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    altAircraftId: string;
    /// The current readiness state of the aircraft (e.g. AIRBORNE, ALERTCOCKED, AVAILABLE, BATTLESTATION, RUNWAY ALERT, SUITUP).
    /// Example: AVAILABLE
    /// Constraints: Minimum length = 0, Maximum length = 32
    currentState: string;
    /// If not airborne, the unique identifier of the installation currently hosting the aircraft.
    /// Example: b89430e3-97d9-408c-9c89-fd3840c4b84d
    /// Constraints: Minimum length = 0, Maximum length = 36
    idAirfield: string;
    /// US Air Force geographic location code of the airfield where the aircraft is located.
    /// Example: AJJY
    /// Constraints: Minimum length = 0, Maximum length = 16
    geoLoc: string;
    /// The International Civil Aviation Organization (ICAO) code at which this aircraft was previously located.
    /// Example: EGLL
    /// Constraints: Minimum length = 0, Maximum length = 4
    previousICAO: string;
    /// The International Civil Aviation Organization (ICAO) code at which this aircraft is currently located or has most recently departed, if airborne.
    /// Example: KCHS
    /// Constraints: Minimum length = 0, Maximum length = 4
    currentICAO: string;
    /// The International Civil Aviation Organization (ICAO) code of the next destination of this aircraft.
    /// Example: PHNL
    /// Constraints: Minimum length = 0, Maximum length = 4
    nextICAO: string;
    /// Current flight phase (e.g. AIR REFUELING, GROUND, LANDING, etc.) of the aircraft.
    /// Example: Landing
    /// Constraints: Minimum length = 0, Maximum length = 16
    flightPhase: string;
    /// The turnaround start time, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    taStartTime: string;
    /// The earliest time that turnaround of the aircraft may complete, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    earliestTAEndTime: string;
    /// The Operational Capability of the reported aircraft (ABLE, LOFUEL, UNABLE).
    /// Example: ABLE
    /// Constraints: Minimum length = 0, Maximum length = 16
    missionReadiness: string;
    /// The mass of fuel remaining on the aircraft, in kilograms.
    /// Example: 10
    /// Constraints: No constraints specified.
    fuel: int32;
    /// Used in conjunction with the fuel field to indicate either burnable or offload fuel.
    /// Example: Burn
    /// Constraints: Minimum length = 0, Maximum length = 8
    fuelFunction: string;
    /// Flag indicating that the aircraft is capable of making at least one gun pass.
    /// Example: True
    /// Constraints: No constraints specified.
    gunCapable: bool;
    /// The type of gun rounds available (e.g. 7.62 MM, 20 MM, 25 MM, etc.).
    /// Example: 7.62 MM
    /// Constraints: Minimum length = 0, Maximum length = 64
    gunRdsType: string;
    /// The lower bound of the estimated number of gun rounds available.
    /// Example: 150
    /// Constraints: No constraints specified.
    gunRdsMin: int32;
    /// The upper bound of the estimated number of gun rounds available.
    /// Example: 550
    /// Constraints: No constraints specified.
    gunRdsMax: int32;
    /// The status of the air-to-air weapon release system (OPERATIONAL, NON-OPERATIONAL, OFF).
    /// Example: OPERATIONAL
    /// Constraints: Minimum length = 0, Maximum length = 16
    airToAirStatus: AircraftStatus_Ingest_airToAirStatus_Enum;
    /// The status of the air-to-ground weapon release system (OPERATIONAL, NON-OPERATIONAL, OFF).
    /// Example: OPERATIONAL
    /// Constraints: Minimum length = 0, Maximum length = 16
    airToGroundStatus: AircraftStatus_Ingest_airToGroundStatus_Enum;
    /// Array of inventory item(s) for which estimate(s) are available (e.g. AIM-9 SIDEWINDER, AIM-120 AMRAAM, AIM-92 STINGER, CHAFF DECOY, FLARE TP 400, etc.).  Intended as, but not constrained to, MIL-STD-6016 environment dependent specific/store type designations.  This array must be the same length as inventoryMin and inventoryMax.
    /// Example: ['AIM-9 SIDEWINDER', 'AIM-120 AMRAAM']
    /// Constraints: No constraints specified.
    inventory: [string];
    /// Array of the lower bound quantity for each of the inventory items. The values in this array must correspond to position index in the inventory array. This array must be the same length as inventory and inventoryMax.
    /// Example: [1, 2]
    /// Constraints: No constraints specified.
    inventoryMin: [string];
    /// Array of the upper bound quantity for each of the inventory items. The values in this array must correspond to position index in the inventory array. This array must be the same length as inventory and inventoryMin.
    /// Example: [2, 2]
    /// Constraints: No constraints specified.
    inventoryMax: [string];
    /// List of unavailable systems that would normally be on this aircraft.
    /// Example: ['CMDS', 'AOC']
    /// Constraints: No constraints specified.
    unavailableSys: [string];
    /// List of additional operational systems on this aircraft beyond what is normally available.
    /// Example: ['ATOMS', 'TUDL', 'BLOS1']
    /// Constraints: No constraints specified.
    additionalSys: [string];
    /// Optional notes/comments concerning this aircraft status.
    /// Example: Some notes for aircraft A
    /// Constraints: Minimum length = 0, Maximum length = 1024
    notes: string;
    /// Maintenance pacing remarks assocociated with this aircraft.
    /// Example: COM2 INOP
    /// Constraints: Minimum length = 0, Maximum length = 1024
    mxRemark: string;
    /// The maintenance status of the aircraft.
    /// Example: maintenance status
    /// Constraints: Minimum length = 0, Maximum length = 24
    maintStatus: string;
    /// Indicates the maintenance discrepancy that drives the current maintenance status.
    /// Example: SCREW STUCK IN LEFT NLG TIRE
    /// Constraints: Minimum length = 0, Maximum length = 128
    maintStatusDriver: string;
    /// Indicates the priority of the maintenance effort.
    /// Example: 1
    /// Constraints: Minimum length = 0, Maximum length = 1
    maintPriority: string;
    /// Aircraft alpha status code that indicates the aircraft maintenance status estimated by the pilot.
    /// Example: A2
    /// Constraints: Minimum length = 0, Maximum length = 2
    alphaStatusCode: string;
    /// The time of the last maintenance status update, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    maintStatusUpdate: string;
    /// Date when the military aircraft inspection was last performed, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2024-09-09T16:00:00.123Z
    /// Constraints: No constraints specified.
    lastInspectionDate: string;
    /// Military aircraft maintenance point of contact for this aircraft.
    /// Example: PSUP NIGHT SHIFT 800-555-4412
    /// Constraints: Minimum length = 0, Maximum length = 32
    maintPoc: string;
    /// The ground status of the aircraft (e.g. ALERT, CREW READY, ENGINE START, HANGAR, etc.).
    /// Example: ALERT
    /// Constraints: Minimum length = 0, Maximum length = 24
    groundStatus: string;
    /// The contamination status of the aircraft (e.g. CLEAR, CONTAMINATED, DECONTAMINATED, UNKNOWN, etc.).
    /// Example: CLEAR
    /// Constraints: Minimum length = 0, Maximum length = 24
    contaminationStatus: string;
    /// The state of the aircraft fuel status (e.g. DELIVERED, DUMPED, EMPTY, FULL, OTHER, REQUESTED, etc.).
    /// Example: DELIVERED
    /// Constraints: Minimum length = 0, Maximum length = 24
    fuelStatus: string;
    /// The name or ID of the external user that updated this status.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 36
    lastUpdatedBy: string;
    /// Estimated Time for Completion (ETIC) of an aircraft issue, in ISO 8601 UTC format with millisecond precision. This is the estimated time when the course of action to resolve the issue will be determined.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    troubleshootEtic: string;
    /// The Expected Time in Commission (ETIC) for this aircraft, in ISO 8601 UTC format with millisecond precision. This is the estimated time when the issue will be resolved.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    etic: string;
    /// The parking location of this aircraft.
    /// Example: B1
    /// Constraints: Minimum length = 0, Maximum length = 24
    parkLocation: string;
    /// The system that designated the parking location (e.g. EMOC, GDSS, PEX, etc.).
    /// Example: GDSS
    /// Constraints: Minimum length = 0, Maximum length = 24
    parkLocationSystem: string;
    /// Unique identifier of the Point of Interest (POI) record related to this aircraft status. This will generally represent the location of an aircraft on the ground.
    /// Example: 0e52f081-a2e3-4b73-b822-88b882232691
    /// Constraints: Minimum length = 0, Maximum length = 36
    idPOI: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: AircraftStatus_Ingest_dataMode_Enum;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
}
enum AircraftStatus_Ingest_airToAirStatus_Enum : byte {
    /// No description available.
    OPERATIONAL,
    /// No description available.
    NON-OPERATIONAL,
    /// No description available.
    OFF
}

enum AircraftStatus_Ingest_airToGroundStatus_Enum : byte {
    /// No description available.
    OPERATIONAL,
    /// No description available.
    NON-OPERATIONAL,
    /// No description available.
    OFF
}

enum AircraftStatus_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

