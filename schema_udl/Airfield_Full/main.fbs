/// Properties and characteristics of an airfield, which includes location, airfield codes, suitability codes, and remarks.
table Airfield_Full {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: 3f28f60b-3a50-2aef-ac88-8e9d0e39912b
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// The ID of the parent site.
    /// Example: a150b3ee-884b-b9ac-60a0-6408b4b16088
    /// Constraints: Minimum length = 0, Maximum length = 36
    idSite: string;
    /// Alternate Airfield identifier provided by source.
    /// Example: 45301
    /// Constraints: Minimum length = 0, Maximum length = 36
    altAirfieldId: string;
    /// The airfield's World Area Code installation number (WAC-INNR).
    /// Example: 0409-00039
    /// Constraints: Minimum length = 0, Maximum length = 32
    wacINNR: string;
    /// Air Mobility Command (AMC) Zone availability Report identifier.
    /// Example: 231
    /// Constraints: Minimum length = 0, Maximum length = 32
    zarId: string;
    /// The International Civil Aviation Organization (ICAO) code of the airfield.
    /// Example: KCOS
    /// Constraints: Minimum length = 0, Maximum length = 4
    icao: string;
    /// The International Aviation Transport Association (IATA) code of the airfield.
    /// Example: AAA
    /// Constraints: Minimum length = 0, Maximum length = 3
    iata: string;
    /// The Federal Aviation Administration (FAA) location identifier of this airfield.
    /// Example: FAA1
    /// Constraints: Minimum length = 0, Maximum length = 5
    faa: string;
    /// The host nation code of this airfield, used for non-DoD/FAA locations.
    /// Example: ZPU
    /// Constraints: Minimum length = 0, Maximum length = 16
    hostNatCode: string;
    /// The name of the airfield.
    /// Example: USAF Academy AFLD
    /// Constraints: Minimum length = 1, Maximum length = 64
    name: string;
    /// The airfield activity use type (e.g. Commercial, Airport, Heliport, Gliderport, etc.).
    /// Example: Commercial
    /// Constraints: Minimum length = 1, Maximum length = 32
    type: string;
    /// WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: 45.23
    /// Constraints: Minimum value = -90, Maximum value = 90
    lat: double;
    /// WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    /// Example: 179.1
    /// Constraints: Minimum value = -180, Maximum value = 180
    lon: double;
    /// Elevation of the airfield above mean sea level, in feet.
Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.
    /// Example: 33.562
    /// Constraints: No constraints specified.
    elevFt: double;
    /// Elevation of the airfield above mean sea level, in meters.
Note: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.
    /// Example: 10.29
    /// Constraints: No constraints specified.
    elevM: double;
    /// The magnetic declination/variation of the airfield's location from true north, in degrees.  Positive values east of true north and negative values west of true north.
    /// Example: 7.35
    /// Constraints: No constraints specified.
    magDec: double;
    /// Region where the airfield resides.
    /// Example: North America
    /// Constraints: Minimum length = 0, Maximum length = 32
    regionName: string;
    /// The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDLâ€™s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.
    /// Example: US
    /// Constraints: Minimum length = 0, Maximum length = 4
    countryCode: string;
    /// Closest city to the airfield's location.
    /// Example: Colorado Springs
    /// Constraints: Minimum length = 0, Maximum length = 64
    city: string;
    /// State or province of the airfield's location.
    /// Example: Colorado
    /// Constraints: Minimum length = 0, Maximum length = 32
    state: string;
    /// Air Force geographic location code of the airfield.
    /// Example: XLSX
    /// Constraints: Minimum length = 0, Maximum length = 16
    geoloc: string;
    /// Time difference between the location of the airfield and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.
    /// Example: -4:30
    /// Constraints: Minimum length = 0, Maximum length = 6
    gmtOffset: string;
    /// Associated suitability codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.
    /// Example: ABCDEF
    /// Constraints: Minimum length = 0, Maximum length = 36
    suitabilityCodes: string;
    /// Applicable miscellaneous codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.
    /// Example: AMZ
    /// Constraints: Minimum length = 0, Maximum length = 36
    miscCodes: string;
    /// The number of runways at the site.
    /// Example: 5
    /// Constraints: No constraints specified.
    runways: int32;
    /// The length of the longest runway at this airfield in feet.
    /// Example: 1000
    /// Constraints: No constraints specified.
    maxRunwayLength: int32;
    /// The URL link to information about airfield.
    /// Example: URL Link to the Airfield
    /// Constraints: Minimum length = 0, Maximum length = 256
    infoURL: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was last updated in the database, auto-populated by the system.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: Airfield_Full_dataMode_Enum;
}
enum Airfield_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

