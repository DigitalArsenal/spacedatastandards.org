/// A Plan is used to aggregate two or more of the same type of record to a parent entity, with the planId (UUID) being included in all of the subordinate records, enabling resolution back to the parent.
table SensorPlan_Full {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: SENSORPLAN-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// The type of this sensor plan/schedule (PLAN, REQUEST, SCHEDULE).
    /// Example: PLAN
    /// Constraints: Minimum length = 1, Maximum length = 12
    type: string;
    /// The type of records that comprise this parent set (COLLECT, CONTACT).
    /// Example: COLLECT
    /// Constraints: Minimum length = 1, Maximum length = 12
    recType: string;
    /// The start time of the plan or schedule, in ISO 8601 UTC format.
    /// Example: 2018-01-01T16:00:00.123456Z
    /// Constraints: No constraints specified.
    startTime: string;
    /// The end time of the plan or schedule, in ISO 8601 UTC format.
    /// Example: 2018-01-01T16:00:00.123456Z
    /// Constraints: No constraints specified.
    endTime: string;
    /// Name associated with this plan or schedule.
    /// Example: EXAMPLE NAME
    /// Constraints: Minimum length = 0, Maximum length = 24
    name: string;
    /// Unique identifier of the requested/schedule/planned sensor associated with this request.
    /// Example: REF-SENSOR-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idSensor: string;
    /// Optional identifier provided by the source to indicate the sensor identifier requested/scheduled/planned for this request. This may be an internal identifier and not necessarily a valid sensor ID.
    /// Example: ORIGSENSOR-ID
    /// Constraints: Minimum length = 0, Maximum length = 64
    origSensorId: string;
    /// The purpose/description of this plan or schedule.
    /// Example: Example purpose
    /// Constraints: Minimum length = 0, Maximum length = 256
    purpose: string;
    /// The sensor or ground network associated with this plan or schedule.
    /// Example: NETWORK
    /// Constraints: Minimum length = 0, Maximum length = 24
    senNetwork: string;
    /// The total number of requests contained in this plan or schedule. Value of this field must match the size of collectRequest list if the list is provided and can be null or any value otherwise.
    /// Example: 2
    /// Constraints: No constraints specified.
    reqTotal: int32;
    /// The customer for this plan or schedule.
    /// Example: CUSTOMER
    /// Constraints: Minimum length = 0, Maximum length = 64
    customer: string;
    /// The status of this plan or schedule (ACCEPTED, APPROVED, COMPLETED, PROPOSED, REJECTED, REQUESTED, SCHEDULED).
    /// Example: ACCEPTED
    /// Constraints: Minimum length = 0, Maximum length = 24
    status: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was updated in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 36
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: SensorPlan_Full_dataMode_Enum;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 0, Maximum length = 32
    origNetwork: string;
    /// The list of collect requests belonging to the SensorPlan. Each collect request is associated with a parent SensorPlan via the IdPlan. If provided, the list must have the same size as reqTotal.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    collectRequests: [string];
    /// Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
    /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
    /// Constraints: No constraints specified.
    tags: [string];
}
enum SensorPlan_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

