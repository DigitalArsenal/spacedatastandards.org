/// Beta Version DataLink: Detailed instructions regarding the operations of data links.
table DataLink_Full {
    /// Unique identifier of the record, auto-generated by the system if not provided on create operations.
    /// Example: 026dd511-8ba5-47d3-9909-836149f87686
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.
    /// Example: DESERT WIND
    /// Constraints: Minimum length = 1, Maximum length = 64
    opExName: string;
    /// The identifier of the originator of this message.
    /// Example: USCENTCOM
    /// Constraints: Minimum length = 1, Maximum length = 36
    originator: string;
    /// The start of the effective time period of this data link message, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2024-01-07T13:55:43.123Z
    /// Constraints: No constraints specified.
    startTime: string;
    /// The end of the effective time period of this data link message, in ISO 8601 UTC format with millisecond precision. This may be a relative stop time if used with stopTimeMod.
    /// Example: 2024-01-08T13:55:43.123Z
    /// Constraints: No constraints specified.
    stopTime: string;
    /// A qualifier for the end of the effective time period of this data link message, such as AFTER, ASOF, NLT, etc. Used with field stopTime to indicate a relative time.
    /// Example: AFTER
    /// Constraints: Minimum length = 0, Maximum length = 8
    stopTimeMod: string;
    /// The official identifier of the military establishment responsible for the operation plan and the identification number assigned to this plan.
    /// Example: SACEUR 106
    /// Constraints: Minimum length = 0, Maximum length = 36
    planOrigNum: string;
    /// Provides an additional caveat further identifying the exercise or modifies the exercise nickname.
    /// Example: CONTROL
    /// Constraints: Minimum length = 0, Maximum length = 32
    opExInfo: string;
    /// The secondary nickname of the option or the alternative of the operational plan or order.
    /// Example: ORANGE
    /// Constraints: Minimum length = 0, Maximum length = 24
    opExInfoAlt: string;
    /// The unique message identifier assigned by the originator.
    /// Example: 1201003
    /// Constraints: Minimum length = 0, Maximum length = 16
    serialNum: string;
    /// The month in which this message originated.
    /// Example: OCT
    /// Constraints: Minimum length = 0, Maximum length = 12
    month: string;
    /// The qualifier which caveats the message status such as AMP (Amplification), CHG (Change), etc.
    /// Example: CHG
    /// Constraints: Minimum length = 0, Maximum length = 8
    qualifier: string;
    /// The serial number associated with the message qualifier.
    /// Example: 1
    /// Constraints: No constraints specified.
    qualSN: int32;
    /// Collection of reference information. There can be 0 to many DataLinkReferences collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    references: [string];
    /// The identifier for this data link message cancellation.
    /// Example: ABSTAT
    /// Constraints: Minimum length = 0, Maximum length = 20
    canxId: string;
    /// The originator of this data link message cancellation.
    /// Example: 505 AOC
    /// Constraints: Minimum length = 0, Maximum length = 30
    canxOriginator: string;
    /// Timestamp of the data link message cancellation, in ISO 8601 UTC format with millisecond precision.
    /// Example: 2024-01-07T13:55:43.123Z
    /// Constraints: No constraints specified.
    canxTs: string;
    /// Serial number assigned to this data link message cancellation.
    /// Example: ABC1234567
    /// Constraints: Minimum length = 0, Maximum length = 10
    canxSerialNum: string;
    /// Indicates any special actions, restrictions, guidance, or information relating to this data link message cancellation.
    /// Example: PASEP
    /// Constraints: Minimum length = 0, Maximum length = 5
    canxSpecialNotation: string;
    /// Array of NATO Subject Indicator Codes (SIC) or filing numbers of this data link message or document being cancelled.
    /// Example: ['RDU', 'X234BS']
    /// Constraints: No constraints specified.
    canxSICs: [string];
    /// The name of the point of contact for this data link message.
    /// Example: F. BURNS
    /// Constraints: Minimum length = 0, Maximum length = 32
    pocName: string;
    /// The rank or position of the point of contact for this data link message in a military or civilian organization.
    /// Example: MAJ
    /// Constraints: Minimum length = 0, Maximum length = 16
    pocRank: string;
    /// The unit identifier or call sign of the point of contact for this data link message.
    /// Example: 4077 MASH
    /// Constraints: Minimum length = 0, Maximum length = 38
    pocCallSign: string;
    /// The location name of the point of contact for this data link message.
    /// Example: CAMP SWAMPY
    /// Constraints: Minimum length = 0, Maximum length = 20
    pocLocName: string;
    /// WGS84 latitude of the point of contact for this data link message, in degrees. -90 to 90 degrees (negative values south of equator).
    /// Example: 45.23
    /// Constraints: No constraints specified.
    pocLat: double;
    /// WGS84 longitude of the point of contact for this data link message, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).
    /// Example: 179.1
    /// Constraints: No constraints specified.
    pocLon: double;
    /// Array of telephone numbers, radio frequency values, or email addresses of the point of contact for this data link message.
    /// Example: ['TEL:804-555-4142', 'TEL:804-867-5309']
    /// Constraints: No constraints specified.
    pocNums: [string];
    /// The code for the point of reference from which the coordinates and networks are computed.
    /// Example: EUR-T
    /// Constraints: Minimum length = 0, Maximum length = 5
    geoDatum: string;
    /// Collection that identifies points of reference used in the establishment of the data links. There can be 1 to many DataLinkRefPoints collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    refPoints: [string];
    /// Collection of information regarding the function, frequency, and priority of interface control and coordination nets for this data link message. There can be 1 to many DataLinkVoiceCoord collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    voiceCoord: [string];
    /// Indicates the data terminal settings the system defaults to, either automatic correlation/decorrelation (AUTO) or manual (MAN).
    /// Example: MAN
    /// Constraints: Minimum length = 0, Maximum length = 4
    sysDefaultCode: string;
    /// The correlation window size multiplier to stretch or reduce the window size. Required if sysDefaultCode field is "MAN". Allowable entries are 0.5 to 3.0 in increments of 0.1.
    /// Example: 2.1
    /// Constraints: Minimum value = 0.5, Maximum value = 3.0
    winSizeMult: double;
    /// Number added to the basic window calculated from track qualities to ensure that windows still allow valid correlations. Required if sysDefaultCode field is "MAN". Allowable entries are 0.0 to 2.0 in increments of 0.25.
    /// Example: 1.25
    /// Constraints: Minimum value = 0.0, Maximum value = 2.0
    winSizeMin: double;
    /// Track quality to prevent correlation windows from being unrealistically large. Required if sysDefaultCode field is "MAN". Allowable entries are integers from 3 to 7.
    /// Example: 6
    /// Constraints: Minimum value = 3, Maximum value = 7
    minTrackQual: int32;
    /// Track quality to prevent correlation windows from being unrealistically small. Required if sysDefaultCode field is "MAN". Allowable entries are integers from 8 to 15.
    /// Example: 12
    /// Constraints: Minimum value = 8, Maximum value = 15
    maxTrackQual: int32;
    /// Track quality to enter if too many duals involving low track quality tracks are occurring. Required if sysDefaultCode field is "MAN". Allowable entries are integers from 2 to 6.
    /// Example: 3
    /// Constraints: Minimum value = 2, Maximum value = 6
    resTrackQual: int32;
    /// Maximum difference between the reported course of the remote track and the calculated course of the local track. Required if sysDefaultCode field is "MAN". Allowable entries are 15 to 90 in increments of 15 degrees.
    /// Example: 60
    /// Constraints: Minimum value = 15, Maximum value = 90
    courseDiff: int32;
    /// Maximum percentage the faster track speed may differ from the slower track speed. Required if sysDefaultCode field is "MAN". Allowable entries are 10 to 100 in increments of 10.
    /// Example: 50
    /// Constraints: Minimum value = 10, Maximum value = 100
    speedDiff: int32;
    /// Maximum altitude difference between two air tracks, in thousands of feet. Required if sysDefaultCode field is "MAN". Allowable entires are 5 to 50 in increments of 5000 feet.
    /// Example: 20
    /// Constraints: Minimum value = 5, Maximum value = 50
    altDiff: int32;
    /// Number used for minimum geodetic position quality. Required if sysDefaultCode field is "MAN". Allowable entries are integers from 1 to 5.
    /// Example: 3
    /// Constraints: Minimum value = 1, Maximum value = 5
    minGeoPosQual: int32;
    /// Number used for maximum geodetic position quality. Required if sysDefaultCode field is "MAN". Allowable entires are integers from 1 to 15.
    /// Example: 12
    /// Constraints: Minimum value = 1, Maximum value = 15
    maxGeoPosQual: int32;
    /// Distance between the common and remote track is to exceed the applicable correlation window for the two tracks in order to be decorrelated. Required if sysDefaultCode field is "MAN". Allowable entries are 1.0 to 2.0 in increments of 0.1.
    /// Example: 1.7
    /// Constraints: Minimum value = 1.0, Maximum value = 2.0
    decorrWinMult: double;
    /// Number of consecutive remote track reports that must meet the decorrelation criteria before the decorrelation is executed. Required if sysDefaultCode field is "MAN". Allowable entries are integers from 1 to 5.
    /// Example: 3
    /// Constraints: Minimum value = 1, Maximum value = 5
    consecDecorr: int32;
    /// Collection of contact and identification information for designated multilink coordinator duty assignments. There can be 0 to many DataLinkMultiDuty collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    multiDuty: [string];
    /// Collection of information describing the establishment and detailed operation of tactical data links. There can be 0 to many DataLinkOps collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    ops: [string];
    /// Designator of the unit for Joint Range Extension (JRE).
    /// Example: CVN-72
    /// Constraints: Minimum length = 0, Maximum length = 30
    jreUnitDes: string;
    /// Call sign which identifies one or more communications facilities, commands, authorities, or activities for Joint Range Extension (JRE) units.
    /// Example: CHARLIE ONE
    /// Constraints: Minimum length = 0, Maximum length = 38
    jreCallSign: string;
    /// Link-16 octal track number assigned as the primary JTIDS unit address.
    /// Example: 71777
    /// Constraints: No constraints specified.
    jrePriAdd: int32;
    /// Link-16 octal track number assigned as the secondary JTIDS unit address.
    /// Example: 77771
    /// Constraints: No constraints specified.
    jreSecAdd: int32;
    /// Joint Range Extension (JRE) unit details.
    /// Example: JRE details
    /// Constraints: Minimum length = 0, Maximum length = 3000
    jreDetails: string;
    /// Collection of special track numbers used on the data links. There can be 0 to many DataLinkSpecTracks collections within the datalink service.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    specTracks: [string];
    /// Array of non-link specific data unit designators.
    /// Example: ['CS:GRAY GHOST', 'CS:WHITE WHALE']
    /// Constraints: No constraints specified.
    nonLinkUnitDes: [string];
    /// Array of Link-16 octal track numbers used as the lower limit of a track block.
    /// Example: [1234, 2345]
    /// Constraints: No constraints specified.
    trackNumBlockLLs: [string];
    /// Array of defined ranges of Link-11/11B track numbers assigned to a participating unit or reporting unit.
    /// Example: ['0200-0300', '0400-4412']
    /// Constraints: No constraints specified.
    trackNumBlocks: [string];
    /// Data link management code word.
    /// Example: VICTOR
    /// Constraints: Minimum length = 0, Maximum length = 15
    mgmtCode: string;
    /// Data link management code word meaning.
    /// Example: ORBIT AT POINT BRAVO
    /// Constraints: Minimum length = 0, Maximum length = 50
    mgmtCodeMeaning: string;
    /// Flag Indicating if formal acknowledgement is required for the particular data link message being sent.
    /// Example: True
    /// Constraints: No constraints specified.
    ackReq: bool;
    /// Array of instructions for acknowledging and the force or units required to acknowledge the data link message being sent.
    /// Example: ['AOC EXT 2345', '317 AW']
    /// Constraints: No constraints specified.
    ackInstUnits: [string];
    /// Markings that define the source material or the original classification authority for this data link message.
    /// Example: USJFCOM EXORD SOLID WASTE 98
    /// Constraints: Minimum length = 0, Maximum length = 55
    classSource: string;
    /// Array of codes that indicate the reasons material is classified.
    /// Example: ['15C', '15D']
    /// Constraints: No constraints specified.
    classReasons: [string];
    /// Array of markings that provide the literal guidance or dates for the downgrading or declassification of this data link message.
    /// Example: ['AT EXERCISE ENDEX', 'DATE:25NOV1997']
    /// Constraints: No constraints specified.
    decInstDates: [string];
    /// Array of codes that provide justification for exemption from automatic downgrading or declassification.
    /// Example: ['X1', 'X2']
    /// Constraints: No constraints specified.
    decExemptCodes: [string];
    /// Collection of remarks associated with this data link message.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    remarks: [string];
    /// Optional URI location in the document repository of the raw file parsed by the system to produce this record. To download the raw file, prepend https://udl-hostname/scs/download?id= to this value.
    /// Example: Example URI
    /// Constraints: Minimum length = 0, Maximum length = 256
    rawFileURI: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was updated in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.
    /// Example: AXE
    /// Constraints: Minimum length = 0, Maximum length = 64
    sourceDL: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 0, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: DataLink_Full_dataMode_Enum;
}
enum DataLink_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

