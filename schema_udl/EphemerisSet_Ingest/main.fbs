/// EphemerisSet represents a wrapper or collection of Ephemeris 'points' and meta data indicating the specifics of the propagation of an on-orbit object. Ephemeris is typically distributed in a flat file containing details of the ephemeris generation as well as a large collection of individual points at varying time steps. EphemerisSet is analogous to this flat file.
table EphemerisSet_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: EPHEMERISSET-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Unique identifier of the primary satellite on-orbit object.
    /// Example: ONORBIT-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idOnOrbit: string;
    /// Optional identifier provided by ephemeris source to indicate the target object of this ephemeris. This may be an internal identifier and not necessarily map to a valid satellite number.
    /// Example: ORIGOBJECT-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    origObjectId: string;
    /// Start time/first time point of the ephemeris, in ISO 8601 UTC format.
    /// Example: 2018-01-01T16:00:00.123456Z
    /// Constraints: No constraints specified.
    pointStartTime: string;
    /// Optional start time of the usable time span for the ephemeris data, in ISO 8601 UTC format with microsecond precision.
    /// Example: 2018-01-01T16:10:00.123456Z
    /// Constraints: No constraints specified.
    usableStartTime: string;
    /// End time/last time point of the ephemeris, in ISO 8601 UTC format.
    /// Example: 2018-01-01T16:00:00.123456Z
    /// Constraints: No constraints specified.
    pointEndTime: string;
    /// Optional end time of the usable time span for the ephemeris data, in ISO 8601 UTC format with microsecond precision.
    /// Example: 2018-01-01T20:50:00.123456Z
    /// Constraints: No constraints specified.
    usableEndTime: string;
    /// Ephemeris step size, in seconds.
    /// Example: 1
    /// Constraints: No constraints specified.
    stepSize: int32;
    /// Number of points contained in the ephemeris.
    /// Example: 1
    /// Constraints: No constraints specified.
    numPoints: int32;
    /// The type/purpose of the ephemeris (e.g., CALIBRATION, LAUNCH, MNVR_PLAN, ROUTINE, SCREENING).
    /// Example: LAUNCH
    /// Constraints: Minimum length = 1, Maximum length = 24
    type: string;
    /// The pedigree of the ephemeris or source data used for ephemeris generation (e.g.  GPS, SLR, RANGING, PROPAGATED, HYBRID).
    /// Example: PROPAGATED
    /// Constraints: Minimum length = 0, Maximum length = 24
    pedigree: string;
    /// The source category of the ephemeris (e.g. OWNER_OPERATOR, ANALYST, EXTERNAL).
    /// Example: ANALYST
    /// Constraints: Minimum length = 1, Maximum length = 24
    category: string;
    /// ID of the State Vector used to generate the ephemeris.
    /// Example: STATEVECTOR-ID
    /// Constraints: Minimum length = 0, Maximum length = 36
    idStateVector: string;
    /// Boolean indicating whether maneuver(s) are incorporated into the ephemeris.
    /// Example: False
    /// Constraints: No constraints specified.
    hasMnvr: bool;
    /// Array of the maneuver IDs of all maneuvers incorporated in the ephemeris.
    /// Example: ['EXAMPLE_ID1', 'EXAMPLE_ID2']
    /// Constraints: No constraints specified.
    idManeuvers: [string];
    /// Boolean indicating whether covariance data is provided with the ephemeris.
    /// Example: False
    /// Constraints: No constraints specified.
    hasCov: bool;
    /// Boolean indicating whether acceleration data is provided with the ephemeris.
    /// Example: False
    /// Constraints: No constraints specified.
    hasAccel: bool;
    /// The Central Body of the ephemeris.  Assumed to be Earth, unless otherwise indicated.
    /// Example: Earth
    /// Constraints: Minimum length = 0, Maximum length = 32
    centBody: string;
    /// Integrator used in ephemeris generation (e.g. RK7(8), RK8(9), COWELL, TWO-BODY).
    /// Example: COWELL
    /// Constraints: Minimum length = 0, Maximum length = 24
    integrator: string;
    /// Geopotential model used in ephemeris generation (e.g. EGM-96, WGS-84, WGS-72, JGM-2, GEM-T3), including mm degree zonals, nn degree/order tesserals (e.g. EGM-96 24Z,24T).
    /// Example: GEM-T3
    /// Constraints: Minimum length = 0, Maximum length = 32
    geopotentialModel: string;
    /// Drag model used in ephemeris generation (e.g. JAC70, MSIS90, NONE, etc.).
    /// Example: JAC70
    /// Constraints: Minimum length = 0, Maximum length = 32
    dragModel: string;
    /// Boolean indicating use of lunar/solar data in ephemeris generation.
    /// Example: False
    /// Constraints: No constraints specified.
    lunarSolar: bool;
    /// Boolean indicating use of solid earth tide data in ephemeris generation.
    /// Example: False
    /// Constraints: No constraints specified.
    solidEarthTides: bool;
    /// First derivative of ballistic coefficient (m^2/kg-s).
    /// Example: 1.1
    /// Constraints: No constraints specified.
    bDot: double;
    /// Model parameter value for energy dissipation rate (EDR), expressed in w/kg.
    /// Example: 1.1
    /// Constraints: No constraints specified.
    edr: double;
    /// The recommended interpolation method for the ephemeris data.
    /// Example: LINEAR
    /// Constraints: Minimum length = 0, Maximum length = 16
    interpolation: string;
    /// The recommended interpolation degree for the ephemeris data.
    /// Example: 5
    /// Constraints: No constraints specified.
    interpolationDegree: int32;
    /// Filename of the raw file used to provide the ephemeris data including filetype extension, if applicable. This file may be retrieved using the 'getFile' operation as specified in the 'EphemerisSet' OpenAPI docs.
    /// Example: Example file name
    /// Constraints: Minimum length = 0, Maximum length = 128
    filename: string;
    /// Additional source provided comments associated with the ephemeris.
    /// Example: Example notes
    /// Constraints: Minimum length = 0, Maximum length = 512
    comments: string;
    /// Notes/description of the provided ephemeris. A value of DSTOP signifies the ephemeris were generated using the last observation available.
    /// Example: Example notes
    /// Constraints: Minimum length = 0, Maximum length = 512
    description: string;
    /// Optional source-provided and searchable metadata or descriptor of the data.
    /// Example: Example descriptor
    /// Constraints: Minimum length = 0, Maximum length = 64
    descriptor: string;
    /// The reference frame of the cartesian orbital states. If the referenceFrame is null it is assumed to be J2000.
    /// Example: J2000
    /// Constraints: Minimum length = 0, Maximum length = 24
    referenceFrame: EphemerisSet_Ingest_referenceFrame_Enum;
    /// The reference frame of the covariance matrix elements. If the covReferenceFrame is null it is assumed to be J2000.
    /// Example: J2000
    /// Constraints: Minimum length = 0, Maximum length = 24
    covReferenceFrame: EphemerisSet_Ingest_covReferenceFrame_Enum;
    /// Time the row was created in the database, in UTC.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: EphemerisSet_Ingest_dataMode_Enum;
    /// Satellite/catalog number of the target on-orbit object.
    /// Example: 2
    /// Constraints: No constraints specified.
    satNo: int32;
    /// The list of ephemeris states belonging to the EphemerisSet. Each ephemeris point is associated with a parent Ephemeris Set via the EphemerisSet ID (esId).
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    ephemerisList: [string];
    /// Optional array of provider/source specific tags for this data, where each element is no longer than 32 characters, used for implementing data owner conditional access controls to restrict access to the data. Should be left null by data providers unless conditional access controls are coordinated with the UDL team.
    /// Example: ['PROVIDER_TAG1', 'PROVIDER_TAG2']
    /// Constraints: No constraints specified.
    tags: [string];
    /// Optional identifier to track a commercial or marketplace transaction executed to produce this data.
    /// Example: TRANSACTION-ID
    /// Constraints: Minimum length = 0, Maximum length = 64
    transactionId: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: ORIG
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
}
enum EphemerisSet_Ingest_referenceFrame_Enum : byte {
    /// No description available.
    J2000,
    /// No description available.
    EFG/TDR,
    /// No description available.
    ECR/ECEF,
    /// No description available.
    TEME,
    /// No description available.
    ITRF,
    /// No description available.
    GCRF
}

enum EphemerisSet_Ingest_covReferenceFrame_Enum : byte {
    /// No description available.
    J2000,
    /// No description available.
    UVW
}

enum EphemerisSet_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

