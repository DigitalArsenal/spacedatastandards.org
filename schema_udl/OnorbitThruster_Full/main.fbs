/// Read-only collection of thrusters (engines) on this on-orbit object.
table OnorbitThruster_Full {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: ONORBITTHRUSTER-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// ID of the on-orbit object.
    /// Example: ONORBIT-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    idOnOrbit: string;
    /// ID of the Engine.
    /// Example: ENGINE-ID
    /// Constraints: Minimum length = 1, Maximum length = 36
    idEngine: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// The type of thruster associated with this record (e.g. LAE, Hydrazine REA, etc.).
    /// Example: Hydrazine REA
    /// Constraints: Minimum length = 0, Maximum length = 32
    type: string;
    /// The number of engines/thrusters on the spacecraft of the type identified by idEngine.
    /// Example: 10
    /// Constraints: No constraints specified.
    quantity: int32;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was last updated in the database, auto-populated by the system.
    /// Example: 2018-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who updated the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: OnorbitThruster_Full_dataMode_Enum;
    /// No description provided.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    engine: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 1, Maximum length = 32
    origNetwork: string;
}
enum OnorbitThruster_Full_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

