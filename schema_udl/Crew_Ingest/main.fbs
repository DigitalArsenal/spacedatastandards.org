/// Crew Services.
table Crew_Ingest {
    /// Unique identifier of the record, auto-generated by the system.
    /// Example: bdad6945-c9e4-b829-f7be-1ad075541921
    /// Constraints: Minimum length = 1, Maximum length = 36
    id: string;
    /// Classification marking of the data in IC/CAPCO Portion-marked format.
    /// Example: U
    /// Constraints: Minimum length = 1, Maximum length = 128
    classificationMarking: string;
    /// Unique identifier of the formed crew provided by the originating source. Provided for systems that require tracking of an internal system generated ID.
    /// Example: JHJDHjhuu929o92
    /// Constraints: Minimum length = 1, Maximum length = 36
    origCrewId: string;
    /// Name of the formed crew.
    /// Example: falcon
    /// Constraints: Minimum length = 0, Maximum length = 36
    crewName: string;
    /// Crew Status (e.g. APPROVED, PENDING).
    /// Example: APPROVED
    /// Constraints: Minimum length = 0, Maximum length = 64
    status: string;
    /// Unique identifier of the Aircraft Sortie associated with this crew record.
    /// Example: 4ef3d1e8-ab08-ab70-498f-edc479734e5c
    /// Constraints: Minimum length = 0, Maximum length = 36
    idSortie: string;
    /// Time the crew is legal for alert, in ISO8601 UTC format, with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    legalAlertTime: string;
    /// Time the crew is legal for bravo, in ISO8601 UTC format, with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    legalBravoTime: string;
    /// Time the crew was alerted, in ISO8601 UTC format, with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    alertedTime: string;
    /// Scheduled return time, in ISO8601 UTC format, with millisecond precision.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    returnTime: string;
    /// Crew Flight Duty Period (FDP) eligibility type.
    /// Example: A
    /// Constraints: Minimum length = 0, Maximum length = 32
    fdpEligType: string;
    /// Flight Duty Period (FDP) type.
    /// Example: A
    /// Constraints: Minimum length = 0, Maximum length = 32
    fdpType: string;
    /// Crew type.
    /// Example: AIRLAND
    /// Constraints: Minimum length = 0, Maximum length = 32
    crewType: string;
    /// The crew's Aviation Resource Management System (ARMS) unit.  If multiple units exist, use the Aircraft Commander's Unit.
    /// Example: 00016ALSQ
    /// Constraints: Minimum length = 0, Maximum length = 32
    armsCrewUnit: string;
    /// CrewMembers Collection.
    /// Example: No example provided.
    /// Constraints: No constraints specified.
    crewMembers: [string];
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    createdAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 1, Maximum length = 64
    createdBy: string;
    /// Time the row was created in the database, auto-populated by the system.
    /// Example: 2022-01-01T16:00:00.123Z
    /// Constraints: No constraints specified.
    updatedAt: string;
    /// Application user who created the row in the database, auto-populated by the system.
    /// Example: some.user
    /// Constraints: Minimum length = 0, Maximum length = 64
    updatedBy: string;
    /// Source of the data.
    /// Example: Bluestaq
    /// Constraints: Minimum length = 1, Maximum length = 64
    source: string;
    /// Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.
    /// Example: THIRD_PARTY_DATASOURCE
    /// Constraints: Minimum length = 0, Maximum length = 64
    origin: string;
    /// The originating source network on which this record was created, auto-populated by the system.
    /// Example: OPS1
    /// Constraints: Minimum length = 0, Maximum length = 32
    origNetwork: string;
    /// Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data: EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data. REAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis. SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets. TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics. 
    /// Example: TEST
    /// Constraints: Minimum length = 1, Maximum length = 32
    dataMode: Crew_Ingest_dataMode_Enum;
}
enum Crew_Ingest_dataMode_Enum : byte {
    /// Data collected or produced that pertains to real-world objects, events, and analysis.
    REAL,
    /// Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.
    TEST,
    /// Synthetic data generated by a model to mimic real-world datasets.
    SIMULATED,
    /// Data pertaining to a government or military exercise. The data may include both real and simulated data.
    EXERCISE
}

