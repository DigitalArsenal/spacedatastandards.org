{"version":3,"file":"bundle.js","sources":["node_modules/svelte/internal/index.mjs","src/lib/global.js","node_modules/svelte/store/index.mjs","src/stores/Route.js","src/components/MonacoEditor/TokenProvider.js","src/components/MonacoEditor/MonacoEditor.svelte","src/components/Code/languages.js","src/components/Code/Code.svelte","node_modules/navaid/dist/navaid.mjs","node_modules/regexparam/dist/regexparam.mjs","src/App.svelte","src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","let _onload = [];\nconst onLoad = (f) => _onload.indexOf(f) === -1 ? _onload.push(f) : null\nglobalThis.onload = (...args) => {\n    _onload.map(f => f.apply(globalThis, args));\n}\n\nexport { onLoad };","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\n\nexport let routeparams = writable({});\nexport let currentDocument = writable({});\nexport let editorContents = writable({});","export default {\n  tokenizer: {\n    root: [\n      [\n        /\\b(root_type|table|struct|union|enum|namespace|id|deprecated|required|original_order|force_align|bit_flags|nested_flatbuffer|key|attribute|include|file_identifier|file_extension)\\b/,\n        \"keyword.control.flatbuffers\"\n      ],\n      [\n        /(\\.)?\\s*\\b(bool|byte|ubyte|short|ushort|int|uint|float|long|ulong|double|string)\\b/,\n        \"storage.type.flatbuffers\"\n      ] /*\n      [\n        /\\\\b(?!(enum|namespace|union|struct|table|include|true|false|bool|byte|ubyte|short|ushort|int|uint|float|long|ulong|double|string)\\\\W)([_a-zA-Z]\\\\w*)\\\\s*(?=\\\\.)/,\n        \"entity.name.section.flatbuffers\"\n      ],\n      [\n        /\\\\b(?!(enum|namespace|union|struct|table|include|true|false|bool|byte|ubyte|short|ushort|int|uint|float|long|ulong|double|string)\\W)([_a-zA-Z]\\w*)/,\n        \"entity.name.type.flatbuffers\"\n      ]*/\n    ]\n  }\n}","<script>\r\n  import { onLoad } from \"../../lib/global.js\";\r\n  import { onMount, onDestroy } from \"svelte\";\r\n  import { currentDocument, editorContents } from \"../../stores/Route\";\r\n  import tokenProvider from \"./TokenProvider.js\";\r\n  export let loaded;\r\n  let lang = \"flatbuffers\";\r\n\r\n  let editor;\r\n\r\n  const setC = () => {\r\n    if (editor) $editorContents = editor.getValue();\r\n  };\r\n\r\n  globalThis.createEditor = () => {\r\n    if (!editor && globalThis.monaco) {\r\n      monaco.languages.setMonarchTokensProvider(lang, tokenProvider);\r\n\r\n      monaco.editor.defineTheme(lang, {\r\n        base: \"vs\",\r\n        inherit: false,\r\n        rules: [\r\n          { token: \"keyword.control.flatbuffers\", foreground: \"9100ff\" },\r\n          { token: \"storage.type.flatbuffers\", foreground: \"2f45eb\" }\r\n        ]\r\n      });\r\n      monaco.languages.register({ id: lang });\r\n      editor = monaco.editor.create(document.getElementById(\"monacoeditor\"), {\r\n        value: $editorContents,\r\n        language: lang,\r\n        theme: lang,\r\n        automaticLayout: true\r\n      });\r\n      setC();\r\n      editor.onDidChangeModelContent(setC);\r\n      window.editor = editor;\r\n    }\r\n  };\r\n  onMount(() => {\r\n    loaded = true;\r\n    createEditor();\r\n  });\r\n  onLoad(createEditor);\r\n  onDestroy(() => (editor ? editor.dispose() : null));\r\n</script>\r\n\r\n<style>\r\n  #monacoeditor {\r\n    height: calc(99.99vh - var(--header-height));\r\n  }\r\n</style>\r\n\r\n<svelte:head>\r\n  <script type=\"module\">\r\n    import monaco from \"https://digitalarsenal.io/lib/monacoeditor.js\";\r\n    createEditor();\r\n  </script>\r\n</svelte:head>\r\n<div id=\"monacoeditor\" />\r\n","export let languages = [\n  [\"--cpp\", \"Generate a C++ header\", \"h\", \"include\"],\n  [\"--java\", \"Generate Java code\", \"java\", \"java\"],\n  [\"--kotlin\", \"Generate Kotlin code\", \"kt\", \"java\"],\n  [\"--csharp\", \"Generate C# code\", \"cs\", \"net\"],\n  [\"--go\", \"Generate Go code\", \"go\", \"go\"],\n  [\"--python\", \"Generate Python code\", \"py\", \"python\", \"text/x-script.python\"],\n  [\"--js\", \"Generate JavaScript code\", \"js\", \"js\", \"text/javascript\"],\n  [\"--ts\", \"Generate TypeScript code\", \"ts\", \"js\", \"text/javascript\"],\n  [\"--php\", \" Generate PHP code\", \"php\"]\n  /*,\n  [\"--grpc\", \" Generate RPC stub code for GRPC\", ''],\n  [\"--dart\", \" Generate Dart code\"],\n  [\"--lua\", \" Generate Lua code\"],\n  [\"--lobster\", \" Generate Lobster code\"],\n  [\"--rust, -r \", \" Generate Rust code\"],\n  [\"--swift\", \" Generate Swift code\"]\n */\n];","<script>\r\n  import { onMount } from \"svelte\";\r\n  import { currentDocument, editorContents } from \"../../stores/Route\";\r\n  import { languages } from \"./languages.js\";\r\n\r\n  export let loaded;\r\n  let result = {\r\n    fileName: \"\",\r\n    data: \"\"\r\n  };\r\n\r\n  $: resultHref = [\r\n    \"data:application/octet-stream\",\r\n    result.fileName,\r\n    \"charset=utf-8\",\r\n    `base64,${btoa(result)}`\r\n  ].join(\";\");\r\n  let currentLanguage = languages[0];\r\n  let createCode = async () => {\r\n    loaded = false;\r\n    result.data = \"\";\r\n    try {\r\n      let flatWorker = new Worker(\"./workers/worker.js\", { type: \"module\" });\r\n      flatWorker.postMessage({\r\n        currentLanguage,\r\n        currentDocument: $currentDocument,\r\n        editorContents: $editorContents,\r\n        loaded\r\n      });\r\n      flatWorker.onmessage = a => {\r\n        loaded = a.data.loaded;\r\n        result = a.data;\r\n      };\r\n    } catch (e) {\r\n      result = \"FAIL\"\r\n    }\r\n  };\r\n  globalThis.createCode = createCode;\r\n  onMount(() => {\r\n    loaded = true;\r\n    createCode();\r\n  });\r\n</script>\r\n\r\n<style>\r\n  textarea {\r\n    width: 100%;\r\n    height: calc(100vh - var(--header-height) - 25px);\r\n  }\r\n  a:link,\r\n  a:visited {\r\n    background-color: rgb(233, 0, 0);\r\n    color: white;\r\n    padding: 5px;\r\n    text-align: center;\r\n    text-decoration: none;\r\n    display: inline-block;\r\n  }\r\n\r\n  a:hover,\r\n  a:active {\r\n    background-color: rgb(233, 0, 0);\r\n  }\r\n</style>\r\n\r\n<div>\r\n  <select bind:value={currentLanguage} on:change={() => createCode()}>\r\n    {#each languages as language}\r\n      <option value={language}>{language[1]}</option>\r\n    {/each}\r\n  </select>\r\n  <a href={resultHref} download={result.fileName}>&darr; Code</a>\r\n  <a\r\n    target=\"_blank\"\r\n    href=\"https://github.com/google/flatbuffers/tree/master/{currentLanguage[3]}\">\r\n    &darr; Library\r\n  </a>\r\n</div>\r\n<textarea readonly value={result.data} />\r\n","import convert from \"regexparam\";\n\nexport default function Navaid(base, on404) {\n\tvar rgx,\n\t\troutes = [],\n\t\t$ = {};\n\n\tvar fmt = ($.format = function(uri) {\n\t\tif (!uri) return uri;\n\t\turi = \"/\" + uri.replace(/^\\/|\\/$/g, \"\");\n\t\treturn rgx.test(uri) && uri.replace(rgx, \"/\");\n\t});\n\n\tbase = \"/\" + (base || \"\").replace(/^\\/|\\/$/g, \"\");\n\trgx = base == \"/\" ? /^\\/+/ : new RegExp(\"^\\\\\" + base + \"(?=\\\\/|$)\\\\/?\", \"i\");\n\n\t$.route = function(uri, replace) {\n\t\tif (uri[0] == \"/\" && !rgx.test(uri)) uri = base + uri;\n\t\thistory[(replace ? \"replace\" : \"push\") + \"State\"](uri, null, uri);\n\t};\n\n\t$.on = function(pat, fn) {\n\t\t(pat = convert(pat)).fn = fn;\n\t\troutes.push(pat);\n\t\treturn $;\n\t};\n\n\t$.run = function(uri) {\n\t\tvar i = 0,\n\t\t\tparams = {},\n\t\t\tarr,\n\t\t\tobj;\n\t\tif ((uri = fmt(uri || location.href.replace(location.origin, \"\")))) {\n\t\t\t//uri = uri.match(/[^\\?#]*/)[0];\n\t\t\tfor (; i < routes.length; i++) {\n\t\t\t\turi = uri.indexOf(\"?\") > -1 ? uri.replace(location.search, \"\") : uri;\n\t\t\t\tif ((arr = (obj = routes[i]).pattern.exec(uri))) {\n\t\t\t\t\tfor (i = 0; i < obj.keys.length; ) {\n\t\t\t\t\t\tparams[obj.keys[i]] = arr[++i] || null;\n\t\t\t\t\t}\n\t\t\t\t\tobj.fn(params); // todo loop?\n\t\t\t\t\treturn $;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (on404) on404(uri);\n\t\t}\n\t\treturn $;\n\t};\n\n\t$.listen = function(u) {\n\t\twrap(\"push\");\n\t\twrap(\"replace\");\n\n\t\tfunction run(e) {\n\t\t\t$.run();\n\t\t}\n\n\t\tfunction click(e) {\n\t\t\tvar x = e.target.closest(\"a\"),\n\t\t\t\ty = x && x.getAttribute(\"href\");\n\t\t\tif (\n\t\t\t\te.ctrlKey ||\n\t\t\t\te.metaKey ||\n\t\t\t\te.altKey ||\n\t\t\t\te.shiftKey ||\n\t\t\t\te.button ||\n\t\t\t\te.defaultPrevented\n\t\t\t)\n\t\t\t\treturn;\n\t\t\tif (!y || x.target || x.host !== location.host) return;\n\t\t\tif (y[0] != \"/\" || rgx.test(y)) {\n\t\t\t\te.preventDefault();\n\t\t\t\t$.route(y);\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(\"popstate\", run);\n\t\taddEventListener(\"replacestate\", run);\n\t\taddEventListener(\"pushstate\", run);\n\t\taddEventListener(\"click\", click);\n\t\taddEventListener(\"hashChange\", run);\n\t\t$.unlisten = function() {\n\t\t\tremoveEventListener(\"popstate\", run);\n\t\t\tremoveEventListener(\"replacestate\", run);\n\t\t\tremoveEventListener(\"pushstate\", run);\n\t\t\tremoveEventListener(\"click\", click);\n\t\t\tremoveEventListener(\"hashChange\", run);\n\t\t};\n\n\t\treturn $.run(u);\n\t};\n\n\treturn $;\n}\n\nfunction wrap(type, fn) {\n\tif (history[type]) return;\n\thistory[type] = type;\n\tfn = history[(type += \"State\")];\n\thistory[type] = function(uri) {\n\t\tvar ev = new Event(type.toLowerCase());\n\t\tev.uri = uri;\n\t\tfn.apply(this, arguments);\n\t\treturn dispatchEvent(ev);\n\t};\n}\n","export default function (str, loose) {\n\tif (str instanceof RegExp) return { keys:false, pattern:str };\n\tvar c, o, tmp, ext, keys=[], pattern='', arr = str.split('/');\n\tarr[0] || arr.shift();\n\n\twhile (tmp = arr.shift()) {\n\t\tc = tmp[0];\n\t\tif (c === '*') {\n\t\t\tkeys.push('wild');\n\t\t\tpattern += '/(.*)';\n\t\t} else if (c === ':') {\n\t\t\to = tmp.indexOf('?', 1);\n\t\t\text = tmp.indexOf('.', 1);\n\t\t\tkeys.push( tmp.substring(1, !!~o ? o : !!~ext ? ext : tmp.length) );\n\t\t\tpattern += !!~o && !~ext ? '(?:/([^/]+?))?' : '/([^/]+?)';\n\t\t\tif (!!~ext) pattern += (!!~o ? '?' : '') + '\\\\' + tmp.substring(ext);\n\t\t} else {\n\t\t\tpattern += '/' + tmp;\n\t\t}\n\t}\n\n\treturn {\n\t\tkeys: keys,\n\t\tpattern: new RegExp('^' + pattern + (loose ? '(?=$|\\/)' : '\\/?$'), 'i')\n\t};\n}\n","<script>\n  import { onMount } from \"svelte\";\n  import { onLoad } from \"./lib/global.js\";\n  import Editor from \"./components/MonacoEditor/MonacoEditor.svelte\";\n  import Code from \"./components/Code/Code.svelte\";\n  import Loader from \"./Loader.svelte\";\n  import Navaid from \"navaid\";\n  import OMM_Text from \"./stores/OMM.fbs\";\n  import { routeparams, currentDocument, editorContents } from \"./stores/Route\";\n\n  let menuOpen;\n\n  let router = new Navaid(\"/\");\n  $currentDocument = \"502x0b2c1\";\n  $editorContents = OMM_Text;\n  const setRoute = (_params, _component) => {\n    $routeparams = _params;\n    activeComponent = _component;\n  };\n\n  let activeComponent = Editor;\n  router.on(\"/#/\", params => {\n    setRoute(params, Editor);\n  });\n\n  router.on(\"/#/code\", params => {\n    setRoute(params, Code);\n  }); /*\n  router.on(\"/#Docs\", params => {\n    setRoute(params, Docs);\n  });\n  router.on(\"/#Docs/Page/:link?/:sublink?/:subsection?\", params => {\n    setRoute(params, DocPage);\n  });*/\n  router.listen();\n\n  let loaded = false;\n  let flatc;\n  onLoad(() => {\n    loaded = true;\n    flatc = globalThis.flatc;\n  });\n</script>\n\n<style>\n  :root {\n    --font-size-sm: calc((2rem + 0.5 * ((100vw - 50rem) / 120)));\n    --celestrak-blue: #1e5cad;\n    --font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n      Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif;\n    --header-height: 50px;\n  }\n  :global(html, body) {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n  }\n\n  :global(body) {\n    /*overflow: hidden;*/\n    color: #333;\n    margin: 0;\n    box-sizing: border-box;\n    font-family: var(--font-family);\n  }\n\n  main {\n    margin: 0 auto;\n    display: grid;\n    grid-template-columns: 100vw;\n  }\n\n  header {\n    background: var(--celestrak-blue);\n    color: white;\n    padding: 6px;\n    box-sizing: border-box;\n    margin-bottom: 5px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  container {\n    display: grid;\n    grid-template-rows: var(--header-height) auto;\n    height: 100vh;\n    width: 100vw;\n    box-sizing: border-box;\n    overflow: hidden;\n  }\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n  #mainContainer {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  #links a {\n    color: #eee;\n    text-decoration: none;\n    cursor: pointer;\n    border: 1px #eee solid;\n    padding: 5px;\n  }\n  #links a:hover,\n  #links a.active {\n    background: #eee;\n    color: #333;\n  }\n</style>\n\n<svelte:head>\n  <link rel=\"modulepreload\" href=\"workers/worker.js\" />\n</svelte:head>\n\n<container>\n  <header>\n    <span style=\"font-size:2vw\">SPACEDATASTANDARDS.ORG</span>\n    <div id=\"links\">\n      <a target=\"_blank\" href=\"https://public.ccsds.org/Pubs/502x0b2c1.pdf\">\n        {$currentDocument}\n      </a>\n      <a href=\"#/\" class:active={activeComponent === Editor}>IDL</a>\n      <a href=\"#/code\" class:active={activeComponent === Code}>CODE</a>\n    </div>\n  </header>\n  <main>\n    {#if !loaded}\n      <Loader />\n    {/if}\n    <div id=\"mainContainer\">\n      <svelte:component this={activeComponent} bind:loaded />\n    </div>\n\n  </main>\n</container>\n","import App from \"./App.svelte\";\n\nconst app = new App({\n  target: document.body,\n  props: {}\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","set_store_value","ret","value","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","select_option","select","i","length","option","__value","selected","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","globals","window","global","bind","index","props","undefined","bound","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","_onload","onLoad","f","globalThis","onload","args","apply","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","routeparams","currentDocument","editorContents","tokenizer","root","lang","editor","loaded","setC","$editorContents","getValue","createEditor","monaco","languages","setMonarchTokensProvider","tokenProvider","defineTheme","base","inherit","rules","token","foreground","register","id","getElementById","language","theme","automaticLayout","onDidChangeModelContent","dispose","fileName","iterations","result","currentLanguage","createCode","flatWorker","Worker","postMessage","$currentDocument","onmessage","e","resultHref","btoa","join","selected_option","querySelector","Navaid","on404","rgx","routes","$","fmt","format","uri","replace","test","RegExp","route","history","on","pat","str","loose","keys","pattern","tmp","ext","arr","split","shift","substring","convert","obj","params","location","href","origin","search","exec","u","click","x","closest","y","ctrlKey","metaKey","altKey","shiftKey","button","defaultPrevented","host","preventDefault","wrap","unlisten","ev","Event","toLowerCase","arguments","dispatchEvent","key","important","style","setProperty","Editor","Code","router","setRoute","_params","_component","$routeparams","activeComponent","flatc","menuOpen","body"],"mappings":"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"}