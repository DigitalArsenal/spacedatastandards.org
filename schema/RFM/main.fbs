// Hash: 2490f0c065acae78588e68cee48d2529e2f1eaa4baedc79570756c6220d9a2b1
// Version: 4.0.8
// -----------------------------------END_HEADER
/// https://www.sanaregistry.org/r/celestial_body_reference_frames/
/// Celestial Reference Frames (SANA registry 1.3.112.4.57.2)
enum CelestialFrame : byte {
  /// OID: 1.3.112.4.57.2.9
  /// Inertial Earth-centered frame aligned with Earth's center of mass.
  GCRF,

  /// OID: 1.3.112.4.57.2.11
  /// International Celestial Reference Frame based on distant quasars.
  ICRF,

  /// OID: 1.3.112.4.57.2.14
  /// Classical J2000 inertial frame defined at epoch J2000.0.
  J2000,

  /// OID: 1.3.112.4.57.2.15
  /// Updated J2000 frame using IAU2000A precession-nutation models.
  J2000A,

  /// OID: 1.3.112.4.57.2.7
  /// Earth Mean Equator frame at epoch J2000 used in orbit determination.
  EME2000,

  /// OID: 1.3.112.4.57.2.25
  /// True Equator Mean Equinox of Date frame for satellite tracking.
  TEMEOFDATE,

  /// OID: 1.3.112.4.57.2.10
  /// Greenwich True of Date: Earth rotation relative to celestial reference.
  GTOD,

  /// OID: 1.3.112.4.57.2.4
  /// Celestial Intermediate Reference System based on CIP and CIO.
  CIRS,

  /// OID: 1.3.112.4.57.2.18
  /// Mean of Date (MOD) Earth frame using IAU1976 precession.
  MOD_EARTH,

  /// OID: 1.3.112.4.57.2.17
  /// Mean of Date (MOD) celestial body frame evaluated at each epoch.
  MOD_CB,

  /// OID: 1.3.112.4.57.2.19
  /// Mean of Date (MOD) Moon frame evaluated at each epoch.
  MOD_MOON,

  /// OID: 1.3.112.4.57.2.29
  /// True of Date (TOD) Earth frame with polar motion included.
  TOD_EARTH,

  /// OID: 1.3.112.4.57.2.28
  /// True of Date (TOD) celestial body frame.
  TOD_CB,

  /// OID: 1.3.112.4.57.2.30
  /// True of Date (TOD) Moon frame.
  TOD_MOON,

  /// OID: 1.3.112.4.57.2.32
  /// True of Epoch (TOE) Earth frame at specific epoch.
  TOE_EARTH,

  /// OID: 1.3.112.4.57.2.31
  /// True of Epoch (TOE) celestial body frame at specific epoch.
  TOE_CB,

  /// OID: 1.3.112.4.57.2.33
  /// True of Epoch (TOE) Moon frame at specific epoch.
  TOE_MOON,

  /// OID: 1.3.112.4.57.2.13
  /// International Terrestrial Reference Frame 2000 (Earth-fixed).
  ITRF2000,

  /// OID: 1.3.112.4.57.2.13
  /// International Terrestrial Reference Frame 1993 (Earth-fixed).
  ITRF93,

  /// OID: 1.3.112.4.57.2.13
  /// International Terrestrial Reference Frame 1997 (Earth-fixed).
  ITRF97,

  /// OID: 1.3.112.4.57.2.6
  /// Earth-Fixed Geocentric frame using geodetic coordinates.
  EFG,

  /// OID: 1.3.112.4.57.2.8
  /// Fixed frame of a celestial body.
  FIXED_CB,

  /// OID: 1.3.112.4.57.2.39
  /// Fixed Earth frame aligned with WGS84 ellipsoid.
  FIXED_EARTH,

  /// WGS84 Earth-fixed terrestrial system.
  WGS84,

  /// OID: 1.3.112.4.57.2.5
  /// Dynamic Terrestrial Reference Frame for a given year (DTRFYYYY).
  DTRFYYYY,

  /// OID: 1.3.112.4.57.2.2
  /// Mean Earth Equator and Equinox (ALIGN_EARTH) frame.
  ALIGN_EARTH,

  /// OID: 1.3.112.4.57.2.1
  /// Mean Central Body Equator and Equinox (ALIGN_CB) frame.
  ALIGN_CB,

  /// OID: 1.3.112.4.57.2.3
  /// Classical Besselian 1950 equator and equinox frame.
  B1950
}

/// https://sanaregistry.org/r/spacecraft_body_reference_frames/
/// Spacecraft Body Reference Frames (SANA registry 1.3.112.4.57.8)
enum SpacecraftFrame : byte {
  /// OID: 1.3.112.4.57.8.1
  /// Accelerometer instrument frame.
  ACC_i,

  /// OID: 1.3.112.4.57.8.2
  /// Actuator system frame.
  ACTUATOR_i,

  /// OID: 1.3.112.4.57.8.3
  /// Attitude Sensor Target frame.
  AST_i,

  /// OID: 1.3.112.4.57.8.4
  /// Coarse Sun Sensor frame.
  CSS_i,

  /// OID: 1.3.112.4.57.8.5
  /// Digital Sun Sensor frame.
  DSS_i,

  /// OID: 1.3.112.4.57.8.6
  /// Earth Sensor Assembly frame.
  ESA_i,

  /// OID: 1.3.112.4.57.8.7
  /// Gyroscope instrument frame.
  GYRO_FRAME_i,

  /// OID: 1.3.112.4.57.8.8
  /// Inertial Measurement Unit frame.
  IMU_FRAME_i,

  /// OID: 1.3.112.4.57.8.9
  /// Generic instrument mounting frame.
  INSTRUMENT_i,

  /// OID: 1.3.112.4.57.8.10
  /// Magnetic Torquer Assembly frame.
  MTA_i,

  /// OID: 1.3.112.4.57.8.11
  /// Reaction Wheel assembly frame.
  RW_i,

  /// OID: 1.3.112.4.57.8.12
  /// Solar Array frame.
  SA_i,

  /// OID: 1.3.112.4.57.8.13
  /// Spacecraft body fixed frame.
  SC_BODY_i,

  /// OID: 1.3.112.4.57.8.14
  /// Generic sensor assembly frame.
  SENSOR_i,

  /// OID: 1.3.112.4.57.8.15
  /// Star Tracker instrument frame.
  STARTRACKER_i,

  /// OID: 1.3.112.4.57.8.16
  /// Thermal Assembly Module frame.
  TAM_i
}

/// https://sanaregistry.org/r/orbit_relative_reference_frames/
/// Orbit-Relative Reference Frames (SANA registry 1.3.112.4.57.3)
enum OrbitFrame : byte {
  /// OID: 1.3.112.4.57.3.1
  /// Earth Equatorial Inertial frame aligned with J2000 epoch.
  EQW_INERTIAL,

  /// OID: 1.3.112.4.57.3.3
  /// Local Vertical Local Horizontal inertial frame.
  LVLH_INERTIAL,

  /// OID: 1.3.112.4.57.3.2
  /// Local Vertical Local Horizontal rotating frame.
  LVLH_ROTATING,

  /// OID: 1.3.112.4.57.3.5
  /// Normal along-track cross-track inertial frame.
  NSW_INERTIAL,

  /// OID: 1.3.112.4.57.3.4
  /// Normal along-track cross-track rotating frame.
  NSW_ROTATING,

  /// OID: 1.3.112.4.57.3.7
  /// Orbit normal Tangential cross-track inertial frame.
  NTW_INERTIAL,

  /// OID: 1.3.112.4.57.3.6
  /// Orbit normal Tangential cross-track rotating frame.
  NTW_ROTATING,

  /// OID: 1.3.112.4.57.3.8
  /// Perifocal frame aligned with orbit's perigee.
  PQW_INERTIAL,

  /// OID: 1.3.112.4.57.3.10
  /// Radial along-track cross-track inertial frame.
  RSW_INERTIAL,

  /// OID: 1.3.112.4.57.3.9
  /// Radial along-track cross-track rotating frame.
  RSW_ROTATING,

  /// OID: 1.3.112.4.57.3.14
  /// South-East-Zenith inertial (topocentric) frame.
  SEZ_INERTIAL,

  /// OID: 1.3.112.4.57.3.13
  /// South-East-Zenith rotating (topocentric) frame.
  SEZ_ROTATING,

  /// OID: 1.3.112.4.57.3.12
  /// Transverse normal cross-track inertial frame.
  TNW_INERTIAL,

  /// OID: 1.3.112.4.57.3.11
  /// Transverse normal cross-track rotating frame.
  TNW_ROTATING,

  /// OID: 1.3.112.4.57.3.16
  /// Velocity-normal co-normal inertial frame.
  VNC_INERTIAL,

  /// OID: 1.3.112.4.57.3.15
  /// Velocity-normal co-normal rotating frame.
  VNC_ROTATING
}

/// Non-registered or local use frames
enum CustomFrame : byte {
  /// Earth-Centered-Earth-Fixed: Rotates with Earth. X-axis at prime meridian, Y eastward, Z towards North Pole.
  ECEF,

  /// True Equator Mean Equinox of Date, same as TEMEOFDATE: Dynamic frame for SGP4 satellite tracking.
  TEME,

  /// True Equator Mean Equinox of Epoch: Static version of TEMEOFDATE at a given epoch.
  TEMEOFEPOCH,

  /// East-North-Up: Local tangent plane for surface points.
  ENU,

  /// North-East-Down: Aviation/navigation frame aligned with gravity.
  NED,

  /// North-East-Up: Local tangent plane variant with Up positive.
  NEU,

  /// Radial-Intrack-Cross-track: Spacecraft orientation aligned with orbit.
  RIC,

  /// Radial-Transverse-Normal: Orbit frame for spacecraft dynamics.
  RTN,

  /// Transverse-Velocity-Normal: Alternative orbit frame.
  TVN,

  /// Vehicle-Velocity-Local-Horizontal: Orbit frame aligned with velocity vector.
  VVLH,

  /// Radial-Tangential-Cross-track: Equivalent to LVLH/QSW.
  QSW,

  /// Local Tangent Plane: Surface-fixed frame centered on a point.
  LTP,

  /// Local Vertical-Local Horizontal: Z axis towards Earth center, X along velocity.
  LVLH,

  /// Polar-North-East: Surface coordinate frame.
  PNE,

  /// Body-Fixed Reference Frame: Fixed to a spacecraft or celestial object.
  BRF,

  /// Radial-Along-track-Cross-track: Same as RSW.
  RSW,

  /// Tangential-Normal-Cross-track: Same as TNW.
  TNW,

  /// Radial-UTF: Radial, Along-track, Cross-track variant.
  UVW
}

// wrapper tables for each enum
table CelestialFrameWrapper { frame: CelestialFrame; }
table SpacecraftFrameWrapper { frame: SpacecraftFrame; }
table OrbitFrameWrapper     { frame: OrbitFrame; }
table CustomFrameWrapper    { frame: CustomFrame; }

union RFMUnion {
  CelestialFrameWrapper,
  SpacecraftFrameWrapper,
  OrbitFrameWrapper,
  CustomFrameWrapper
}

table RFM {
  REFERENCE_FRAME: RFMUnion;
  INDEX: string;
}

root_type RFM;
file_identifier "$RFM";